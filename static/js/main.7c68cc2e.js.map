{"version":3,"file":"static/js/main.7c68cc2e.js","mappings":"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WAAY,IACZ,UAAW,EACX,QAAS,GACT,SAAU,IACV,SAAU,IACV,SAAU,GACV,SAAU,EACV,SAAU,IACV,WAAY,IACZ,WAAY,IACZ,QAAS,GACT,SAAU,IACV,SAAU,IACV,SAAU,GACV,SAAU,IACV,UAAW,IACX,QAAS,GACT,SAAU,IACV,SAAU,IACV,SAAU,GACV,SAAU,EACV,SAAU,EACV,SAAU,IACV,WAAY,IACZ,UAAW,EACX,QAAS,GACT,SAAU,IACV,SAAU,IACV,SAAU,GACV,SAAU,EACV,SAAU,EACV,SAAU,IACV,WAAY,IACZ,WAAY,IACZ,QAAS,GACT,SAAU,IACV,SAAU,IACV,SAAU,GACV,QAAS,GACT,SAAU,IACV,SAAU,IACV,SAAU,GACV,SAAU,EACV,SAAU,GACV,WAAY,GACZ,UAAW,GACX,WAAY,GACZ,UAAW,GACX,QAAS,GACT,SAAU,IACV,SAAU,IACV,SAAU,GACV,SAAU,EACV,UAAW,EACX,UAAW,EACX,SAAU,EACV,QAAS,GACT,SAAU,IACV,SAAU,IACV,SAAU,GACV,SAAU,EACV,SAAU,EACV,UAAW,EACX,UAAW,EACX,QAAS,GACT,SAAU,IACV,SAAU,IACV,SAAU,GACV,SAAU,EACV,SAAU,EACV,SAAU,EACV,SAAU,IACV,SAAU,IACV,QAAS,GACT,SAAU,IACV,SAAU,IACV,SAAU,GACV,SAAU,EACV,SAAU,IACV,UAAW,IACX,SAAU,IACV,QAAS,GACT,SAAU,IACV,SAAU,IACV,SAAU,GACV,SAAU,EACV,SAAU,EACV,UAAW,EACX,UAAW,EACX,UAAW,EACX,UAAW,EACX,SAAU,EACV,QAAS,GACT,SAAU,IACV,SAAU,IACV,SAAU,GACV,SAAU,GACV,SAAU,EACV,SAAU,EACV,QAAS,GACT,SAAU,IACV,SAAU,IACV,SAAU,GACV,SAAU,IACV,UAAW,IACX,QAAS,GACT,SAAU,IACV,SAAU,IACV,SAAU,GACV,SAAU,IACV,WAAY,IACZ,UAAW,EACX,QAAS,GACT,SAAU,IACV,SAAU,IACV,SAAU,GACV,SAAU,EACV,UAAW,IACX,UAAW,GACX,WAAY,IACZ,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","sources":["../3dmol/webpack/universalModuleDefinition","../3dmol/node_modules/iobuffer/lib-esm/IOBuffer.js","../3dmol/node_modules/iobuffer/lib-esm/text-encoding-polyfill.js","../3dmol/node_modules/iobuffer/lib-esm/text.browser.js","../3dmol/node_modules/netcdfjs/lib-esm/data.js","../3dmol/node_modules/netcdfjs/lib-esm/header.js","../3dmol/node_modules/netcdfjs/lib-esm/parser.js","../3dmol/node_modules/netcdfjs/lib-esm/toString.js","../3dmol/node_modules/netcdfjs/lib-esm/types.js","../3dmol/node_modules/netcdfjs/lib-esm/utils.js","../3dmol/src/WebGL/shaders/lib/basic/basic.frag","../3dmol/src/WebGL/shaders/lib/basic/basic.vert","../3dmol/src/WebGL/shaders/lib/blur/blur.frag","../3dmol/src/WebGL/shaders/lib/blur/blur.vert","../3dmol/src/WebGL/shaders/lib/instanced/instanced.frag","../3dmol/src/WebGL/shaders/lib/instanced/instanced.vert","../3dmol/src/WebGL/shaders/lib/lambert/lambert.frag","../3dmol/src/WebGL/shaders/lib/lambert/lambert.vert","../3dmol/src/WebGL/shaders/lib/lambertdouble/lambertdouble.frag","../3dmol/src/WebGL/shaders/lib/lambertdouble/lambertdouble.vert","../3dmol/src/WebGL/shaders/lib/outline/outline.frag","../3dmol/src/WebGL/shaders/lib/outline/outline.vert","../3dmol/src/WebGL/shaders/lib/screen/screen.frag","../3dmol/src/WebGL/shaders/lib/screen/screen.vert","../3dmol/src/WebGL/shaders/lib/screenaa/screenaa.frag","../3dmol/src/WebGL/shaders/lib/screenaa/screenaa.vert","../3dmol/src/WebGL/shaders/lib/sphereimposter/sphereimposter.frag","../3dmol/src/WebGL/shaders/lib/sphereimposter/sphereimposter.vert","../3dmol/src/WebGL/shaders/lib/sphereimposteroutline/sphereimposteroutline.frag","../3dmol/src/WebGL/shaders/lib/sphereimposteroutline/sphereimposteroutline.vert","../3dmol/src/WebGL/shaders/lib/sprite/sprite.frag","../3dmol/src/WebGL/shaders/lib/sprite/sprite.vert","../3dmol/src/WebGL/shaders/lib/ssao/ssao.frag","../3dmol/src/WebGL/shaders/lib/ssao/ssao.vert","../3dmol/src/WebGL/shaders/lib/stickimposter/stickimposter.partial.frag","../3dmol/src/WebGL/shaders/lib/stickimposter/stickimposter.vert","../3dmol/src/WebGL/shaders/lib/stickimposter/stickimposterFragmentShader.partial.frag","../3dmol/src/WebGL/shaders/lib/stickimposteroutline/stickimposteroutline.vert","../3dmol/src/WebGL/shaders/lib/volumetric/volumetric.frag","../3dmol/src/WebGL/shaders/lib/volumetric/volumetric.vert","../3dmol/src/GLDraw.ts","../3dmol/src/GLModel.ts","../3dmol/src/GLShape.ts","../3dmol/src/GLViewer.ts","../3dmol/src/Gradient.ts","../3dmol/src/Label.ts","../3dmol/src/ProteinSurface4.ts","../3dmol/src/VolumeData.ts","../3dmol/src/VolumetricRender.ts","../3dmol/src/WebGL/Camera.ts","../3dmol/src/WebGL/Fog.ts","../3dmol/src/WebGL/Renderer.ts","../3dmol/src/WebGL/SpritePlugin.ts","../3dmol/src/WebGL/constants/Coloring.ts","../3dmol/src/WebGL/constants/Shading.ts","../3dmol/src/WebGL/constants/Sides.ts","../3dmol/src/WebGL/constants/SpriteAlignment.ts","../3dmol/src/WebGL/constants/TextureConstants.ts","../3dmol/src/WebGL/constants/TextureOperations.ts","../3dmol/src/WebGL/core/EventDispatcher.ts","../3dmol/src/WebGL/core/Geometry.ts","../3dmol/src/WebGL/core/Object3D.ts","../3dmol/src/WebGL/core/Projector.ts","../3dmol/src/WebGL/core/Raycaster.ts","../3dmol/src/WebGL/core/Texture.ts","../3dmol/src/WebGL/core/UVMapping.ts","../3dmol/src/WebGL/materials/ImposterMaterial.ts","../3dmol/src/WebGL/materials/InstancedMaterial.ts","../3dmol/src/WebGL/materials/LineBasicMaterial.ts","../3dmol/src/WebGL/materials/Material.ts","../3dmol/src/WebGL/materials/MeshDoubleLambertMaterial.ts","../3dmol/src/WebGL/materials/MeshLambertMaterial.ts","../3dmol/src/WebGL/materials/MeshOutlineMaterial.ts","../3dmol/src/WebGL/materials/SphereImposterMaterial.ts","../3dmol/src/WebGL/materials/SphereImposterOutlineMaterial.ts","../3dmol/src/WebGL/materials/SpriteMaterial.ts","../3dmol/src/WebGL/materials/StickImposterMaterial.ts","../3dmol/src/WebGL/materials/StickImposterOutlineMaterial.ts","../3dmol/src/WebGL/materials/VolumetricMaterial.ts","../3dmol/src/WebGL/math/Quaternion.ts","../3dmol/src/WebGL/math/Vector2.ts","../3dmol/src/WebGL/math/math.ts","../3dmol/src/WebGL/math/utils/clamp.ts","../3dmol/src/WebGL/math/utils/conversionMatrix3.ts","../3dmol/src/WebGL/math/utils/degToRad.ts","../3dmol/src/WebGL/objects/Line.ts","../3dmol/src/WebGL/objects/Mesh.ts","../3dmol/src/WebGL/objects/Sprite.ts","../3dmol/src/WebGL/shaders/lib/basic/index.ts","../3dmol/src/WebGL/shaders/lib/basic/uniforms.ts","../3dmol/src/WebGL/shaders/lib/blur/index.ts","../3dmol/src/WebGL/shaders/lib/blur/uniforms.ts","../3dmol/src/WebGL/shaders/lib/index.ts","../3dmol/src/WebGL/shaders/lib/instanced/index.ts","../3dmol/src/WebGL/shaders/lib/instanced/uniforms.ts","../3dmol/src/WebGL/shaders/lib/lambert/index.ts","../3dmol/src/WebGL/shaders/lib/lambert/uniforms.ts","../3dmol/src/WebGL/shaders/lib/lambertdouble/index.ts","../3dmol/src/WebGL/shaders/lib/lambertdouble/uniforms.ts","../3dmol/src/WebGL/shaders/lib/outline/index.ts","../3dmol/src/WebGL/shaders/lib/outline/uniforms.ts","../3dmol/src/WebGL/shaders/lib/screen/index.ts","../3dmol/src/WebGL/shaders/lib/screen/uniforms.ts","../3dmol/src/WebGL/shaders/lib/screenaa/index.ts","../3dmol/src/WebGL/shaders/lib/screenaa/uniforms.ts","../3dmol/src/WebGL/shaders/lib/sphereimposter/index.ts","../3dmol/src/WebGL/shaders/lib/sphereimposter/uniforms.ts","../3dmol/src/WebGL/shaders/lib/sphereimposteroutline/index.ts","../3dmol/src/WebGL/shaders/lib/sphereimposteroutline/uniforms.ts","../3dmol/src/WebGL/shaders/lib/sprite/index.ts","../3dmol/src/WebGL/shaders/lib/sprite/uniforms.ts","../3dmol/src/WebGL/shaders/lib/ssao/index.ts","../3dmol/src/WebGL/shaders/lib/ssao/uniforms.ts","../3dmol/src/WebGL/shaders/lib/stickimposter/index.ts","../3dmol/src/WebGL/shaders/lib/stickimposter/uniforms.ts","../3dmol/src/WebGL/shaders/lib/stickimposteroutline/index.ts","../3dmol/src/WebGL/shaders/lib/stickimposteroutline/uniforms.ts","../3dmol/src/WebGL/shaders/lib/volumetric/index.ts","../3dmol/src/WebGL/shaders/lib/volumetric/uniforms.ts","../3dmol/src/WebGL/shaders/utils/clone.ts","../3dmol/src/WebGL/shaders/utils/index.ts","../3dmol/src/WebGL/shapes/Cylinder.ts","../3dmol/src/WebGL/shapes/Sphere.ts","../3dmol/src/WebGL/shapes/Triangle.ts","../3dmol/src/autoload.ts","../3dmol/src/colors.ts","../3dmol/src/glcartoon.ts","../3dmol/src/index.ts","../3dmol/src/parsers/BCIF.ts","../3dmol/src/parsers/CDJSON.ts","../3dmol/src/parsers/CIF.ts","../3dmol/src/parsers/CUBE.ts","../3dmol/src/parsers/GRO.ts","../3dmol/src/parsers/LAMMPSTRJ.ts","../3dmol/src/parsers/MMTF.ts","../3dmol/src/parsers/MOL2.ts","../3dmol/src/parsers/PDB.ts","../3dmol/src/parsers/PQR.ts","../3dmol/src/parsers/PRMTOP.ts","../3dmol/src/parsers/SDF.ts","../3dmol/src/parsers/VASP.ts","../3dmol/src/parsers/XYZ.ts","../3dmol/src/parsers/cifutils/category.ts","../3dmol/src/parsers/cifutils/decoder.ts","../3dmol/src/parsers/cifutils/encoding.ts","../3dmol/src/parsers/index.ts","../3dmol/src/parsers/utils/anumToSymbol.ts","../3dmol/src/parsers/utils/areConnected.ts","../3dmol/src/parsers/utils/assignBackboneHBonds.ts","../3dmol/src/parsers/utils/assignBonds.ts","../3dmol/src/parsers/utils/assignPDBBonds.ts","../3dmol/src/parsers/utils/atomNameToElem.ts","../3dmol/src/parsers/utils/bondLength.ts","../3dmol/src/parsers/utils/computeSecondaryStructure.ts","../3dmol/src/parsers/utils/getSinglePDB.ts","../3dmol/src/parsers/utils/isEmpty.ts","../3dmol/src/parsers/utils/processSymmetries.ts","../3dmol/src/parsers/utils/standardResidues.ts","../3dmol/src/parsers/utils/validateBonds.ts","../3dmol/src/partialCharges.ts","../3dmol/src/utilities.ts","../3dmol/node_modules/upng-js/UPNG.js","../3dmol/node_modules/upng-js/node_modules/pako/index.js","../3dmol/node_modules/upng-js/node_modules/pako/lib/deflate.js","../3dmol/node_modules/upng-js/node_modules/pako/lib/inflate.js","../3dmol/node_modules/upng-js/node_modules/pako/lib/utils/common.js","../3dmol/node_modules/upng-js/node_modules/pako/lib/utils/strings.js","../3dmol/node_modules/upng-js/node_modules/pako/lib/zlib/adler32.js","../3dmol/node_modules/upng-js/node_modules/pako/lib/zlib/constants.js","../3dmol/node_modules/upng-js/node_modules/pako/lib/zlib/crc32.js","../3dmol/node_modules/upng-js/node_modules/pako/lib/zlib/deflate.js","../3dmol/node_modules/upng-js/node_modules/pako/lib/zlib/gzheader.js","../3dmol/node_modules/upng-js/node_modules/pako/lib/zlib/inffast.js","../3dmol/node_modules/upng-js/node_modules/pako/lib/zlib/inflate.js","../3dmol/node_modules/upng-js/node_modules/pako/lib/zlib/inftrees.js","../3dmol/node_modules/upng-js/node_modules/pako/lib/zlib/messages.js","../3dmol/node_modules/upng-js/node_modules/pako/lib/zlib/trees.js","../3dmol/node_modules/upng-js/node_modules/pako/lib/zlib/zstream.js","../3dmol/src/SurfaceWorker.js","../3dmol/src/exporter.js","../3dmol/src/vendor/mmtf.js","../3dmol/node_modules/pako/dist/pako.esm.mjs","../3dmol/webpack/bootstrap","../3dmol/webpack/runtime/compat get default export","../3dmol/webpack/runtime/define property getters","../3dmol/webpack/runtime/hasOwnProperty shorthand","../3dmol/webpack/runtime/make namespace object","../3dmol/webpack/startup","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../webpack/bootstrap","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/publicPath","../webpack/runtime/jsonp chunk loading","App.js","reportWebVitals.ts","index.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"3Dmol\"] = factory();\n\telse\n\t\troot[\"3Dmol\"] = factory();\n})(this, () => {\nreturn ","import { decode, encode } from './text';\nconst defaultByteLength = 1024 * 8;\nconst hostBigEndian = (() => {\n    const array = new Uint8Array(4);\n    const view = new Uint32Array(array.buffer);\n    return !((view[0] = 1) & array[0]);\n})();\nconst typedArrays = {\n    int8: globalThis.Int8Array,\n    uint8: globalThis.Uint8Array,\n    int16: globalThis.Int16Array,\n    uint16: globalThis.Uint16Array,\n    int32: globalThis.Int32Array,\n    uint32: globalThis.Uint32Array,\n    uint64: globalThis.BigUint64Array,\n    int64: globalThis.BigInt64Array,\n    float32: globalThis.Float32Array,\n    float64: globalThis.Float64Array,\n};\nexport class IOBuffer {\n    /**\n     * @param data - The data to construct the IOBuffer with.\n     * If data is a number, it will be the new buffer's length<br>\n     * If data is `undefined`, the buffer will be initialized with a default length of 8Kb<br>\n     * If data is an ArrayBuffer, SharedArrayBuffer, an ArrayBufferView (Typed Array), an IOBuffer instance,\n     * or a Node.js Buffer, a view will be created over the underlying ArrayBuffer.\n     * @param options\n     */\n    constructor(data = defaultByteLength, options = {}) {\n        let dataIsGiven = false;\n        if (typeof data === 'number') {\n            data = new ArrayBuffer(data);\n        }\n        else {\n            dataIsGiven = true;\n            this.lastWrittenByte = data.byteLength;\n        }\n        const offset = options.offset ? options.offset >>> 0 : 0;\n        const byteLength = data.byteLength - offset;\n        let dvOffset = offset;\n        if (ArrayBuffer.isView(data) || data instanceof IOBuffer) {\n            if (data.byteLength !== data.buffer.byteLength) {\n                dvOffset = data.byteOffset + offset;\n            }\n            data = data.buffer;\n        }\n        if (dataIsGiven) {\n            this.lastWrittenByte = byteLength;\n        }\n        else {\n            this.lastWrittenByte = 0;\n        }\n        this.buffer = data;\n        this.length = byteLength;\n        this.byteLength = byteLength;\n        this.byteOffset = dvOffset;\n        this.offset = 0;\n        this.littleEndian = true;\n        this._data = new DataView(this.buffer, dvOffset, byteLength);\n        this._mark = 0;\n        this._marks = [];\n    }\n    /**\n     * Checks if the memory allocated to the buffer is sufficient to store more\n     * bytes after the offset.\n     * @param byteLength - The needed memory in bytes.\n     * @returns `true` if there is sufficient space and `false` otherwise.\n     */\n    available(byteLength = 1) {\n        return this.offset + byteLength <= this.length;\n    }\n    /**\n     * Check if little-endian mode is used for reading and writing multi-byte\n     * values.\n     * @returns `true` if little-endian mode is used, `false` otherwise.\n     */\n    isLittleEndian() {\n        return this.littleEndian;\n    }\n    /**\n     * Set little-endian mode for reading and writing multi-byte values.\n     */\n    setLittleEndian() {\n        this.littleEndian = true;\n        return this;\n    }\n    /**\n     * Check if big-endian mode is used for reading and writing multi-byte values.\n     * @returns `true` if big-endian mode is used, `false` otherwise.\n     */\n    isBigEndian() {\n        return !this.littleEndian;\n    }\n    /**\n     * Switches to big-endian mode for reading and writing multi-byte values.\n     */\n    setBigEndian() {\n        this.littleEndian = false;\n        return this;\n    }\n    /**\n     * Move the pointer n bytes forward.\n     * @param n - Number of bytes to skip.\n     */\n    skip(n = 1) {\n        this.offset += n;\n        return this;\n    }\n    /**\n     * Move the pointer n bytes backward.\n     * @param n - Number of bytes to move back.\n     */\n    back(n = 1) {\n        this.offset -= n;\n        return this;\n    }\n    /**\n     * Move the pointer to the given offset.\n     * @param offset\n     */\n    seek(offset) {\n        this.offset = offset;\n        return this;\n    }\n    /**\n     * Store the current pointer offset.\n     * @see {@link IOBuffer#reset}\n     */\n    mark() {\n        this._mark = this.offset;\n        return this;\n    }\n    /**\n     * Move the pointer back to the last pointer offset set by mark.\n     * @see {@link IOBuffer#mark}\n     */\n    reset() {\n        this.offset = this._mark;\n        return this;\n    }\n    /**\n     * Push the current pointer offset to the mark stack.\n     * @see {@link IOBuffer#popMark}\n     */\n    pushMark() {\n        this._marks.push(this.offset);\n        return this;\n    }\n    /**\n     * Pop the last pointer offset from the mark stack, and set the current\n     * pointer offset to the popped value.\n     * @see {@link IOBuffer#pushMark}\n     */\n    popMark() {\n        const offset = this._marks.pop();\n        if (offset === undefined) {\n            throw new Error('Mark stack empty');\n        }\n        this.seek(offset);\n        return this;\n    }\n    /**\n     * Move the pointer offset back to 0.\n     */\n    rewind() {\n        this.offset = 0;\n        return this;\n    }\n    /**\n     * Make sure the buffer has sufficient memory to write a given byteLength at\n     * the current pointer offset.\n     * If the buffer's memory is insufficient, this method will create a new\n     * buffer (a copy) with a length that is twice (byteLength + current offset).\n     * @param byteLength\n     */\n    ensureAvailable(byteLength = 1) {\n        if (!this.available(byteLength)) {\n            const lengthNeeded = this.offset + byteLength;\n            const newLength = lengthNeeded * 2;\n            const newArray = new Uint8Array(newLength);\n            newArray.set(new Uint8Array(this.buffer));\n            this.buffer = newArray.buffer;\n            this.length = this.byteLength = newLength;\n            this._data = new DataView(this.buffer);\n        }\n        return this;\n    }\n    /**\n     * Read a byte and return false if the byte's value is 0, or true otherwise.\n     * Moves pointer forward by one byte.\n     */\n    readBoolean() {\n        return this.readUint8() !== 0;\n    }\n    /**\n     * Read a signed 8-bit integer and move pointer forward by 1 byte.\n     */\n    readInt8() {\n        return this._data.getInt8(this.offset++);\n    }\n    /**\n     * Read an unsigned 8-bit integer and move pointer forward by 1 byte.\n     */\n    readUint8() {\n        return this._data.getUint8(this.offset++);\n    }\n    /**\n     * Alias for {@link IOBuffer#readUint8}.\n     */\n    readByte() {\n        return this.readUint8();\n    }\n    /**\n     * Read `n` bytes and move pointer forward by `n` bytes.\n     */\n    readBytes(n = 1) {\n        return this.readArray(n, 'uint8');\n    }\n    /**\n     * Creates an array of corresponding to the type `type` and size `size`.\n     * For example type `uint8` will create a `Uint8Array`.\n     * @param size - size of the resulting array\n     * @param type - number type of elements to read\n     */\n    readArray(size, type) {\n        const bytes = typedArrays[type].BYTES_PER_ELEMENT * size;\n        const offset = this.byteOffset + this.offset;\n        const slice = this.buffer.slice(offset, offset + bytes);\n        if (this.littleEndian === hostBigEndian &&\n            type !== 'uint8' &&\n            type !== 'int8') {\n            const slice = new Uint8Array(this.buffer.slice(offset, offset + bytes));\n            slice.reverse();\n            const returnArray = new typedArrays[type](slice.buffer);\n            this.offset += bytes;\n            returnArray.reverse();\n            return returnArray;\n        }\n        const returnArray = new typedArrays[type](slice);\n        this.offset += bytes;\n        return returnArray;\n    }\n    /**\n     * Read a 16-bit signed integer and move pointer forward by 2 bytes.\n     */\n    readInt16() {\n        const value = this._data.getInt16(this.offset, this.littleEndian);\n        this.offset += 2;\n        return value;\n    }\n    /**\n     * Read a 16-bit unsigned integer and move pointer forward by 2 bytes.\n     */\n    readUint16() {\n        const value = this._data.getUint16(this.offset, this.littleEndian);\n        this.offset += 2;\n        return value;\n    }\n    /**\n     * Read a 32-bit signed integer and move pointer forward by 4 bytes.\n     */\n    readInt32() {\n        const value = this._data.getInt32(this.offset, this.littleEndian);\n        this.offset += 4;\n        return value;\n    }\n    /**\n     * Read a 32-bit unsigned integer and move pointer forward by 4 bytes.\n     */\n    readUint32() {\n        const value = this._data.getUint32(this.offset, this.littleEndian);\n        this.offset += 4;\n        return value;\n    }\n    /**\n     * Read a 32-bit floating number and move pointer forward by 4 bytes.\n     */\n    readFloat32() {\n        const value = this._data.getFloat32(this.offset, this.littleEndian);\n        this.offset += 4;\n        return value;\n    }\n    /**\n     * Read a 64-bit floating number and move pointer forward by 8 bytes.\n     */\n    readFloat64() {\n        const value = this._data.getFloat64(this.offset, this.littleEndian);\n        this.offset += 8;\n        return value;\n    }\n    /**\n     * Read a 64-bit signed integer number and move pointer forward by 8 bytes.\n     */\n    readBigInt64() {\n        const value = this._data.getBigInt64(this.offset, this.littleEndian);\n        this.offset += 8;\n        return value;\n    }\n    /**\n     * Read a 64-bit unsigned integer number and move pointer forward by 8 bytes.\n     */\n    readBigUint64() {\n        const value = this._data.getBigUint64(this.offset, this.littleEndian);\n        this.offset += 8;\n        return value;\n    }\n    /**\n     * Read a 1-byte ASCII character and move pointer forward by 1 byte.\n     */\n    readChar() {\n        return String.fromCharCode(this.readInt8());\n    }\n    /**\n     * Read `n` 1-byte ASCII characters and move pointer forward by `n` bytes.\n     */\n    readChars(n = 1) {\n        let result = '';\n        for (let i = 0; i < n; i++) {\n            result += this.readChar();\n        }\n        return result;\n    }\n    /**\n     * Read the next `n` bytes, return a UTF-8 decoded string and move pointer\n     * forward by `n` bytes.\n     */\n    readUtf8(n = 1) {\n        return decode(this.readBytes(n));\n    }\n    /**\n     * Read the next `n` bytes, return a string decoded with `encoding` and move pointer\n     * forward by `n` bytes.\n     * If no encoding is passed, the function is equivalent to @see {@link IOBuffer#readUtf8}\n     */\n    decodeText(n = 1, encoding = 'utf-8') {\n        return decode(this.readBytes(n), encoding);\n    }\n    /**\n     * Write 0xff if the passed value is truthy, 0x00 otherwise and move pointer\n     * forward by 1 byte.\n     */\n    writeBoolean(value) {\n        this.writeUint8(value ? 0xff : 0x00);\n        return this;\n    }\n    /**\n     * Write `value` as an 8-bit signed integer and move pointer forward by 1 byte.\n     */\n    writeInt8(value) {\n        this.ensureAvailable(1);\n        this._data.setInt8(this.offset++, value);\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as an 8-bit unsigned integer and move pointer forward by 1\n     * byte.\n     */\n    writeUint8(value) {\n        this.ensureAvailable(1);\n        this._data.setUint8(this.offset++, value);\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * An alias for {@link IOBuffer#writeUint8}.\n     */\n    writeByte(value) {\n        return this.writeUint8(value);\n    }\n    /**\n     * Write all elements of `bytes` as uint8 values and move pointer forward by\n     * `bytes.length` bytes.\n     */\n    writeBytes(bytes) {\n        this.ensureAvailable(bytes.length);\n        for (let i = 0; i < bytes.length; i++) {\n            this._data.setUint8(this.offset++, bytes[i]);\n        }\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 16-bit signed integer and move pointer forward by 2\n     * bytes.\n     */\n    writeInt16(value) {\n        this.ensureAvailable(2);\n        this._data.setInt16(this.offset, value, this.littleEndian);\n        this.offset += 2;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 16-bit unsigned integer and move pointer forward by 2\n     * bytes.\n     */\n    writeUint16(value) {\n        this.ensureAvailable(2);\n        this._data.setUint16(this.offset, value, this.littleEndian);\n        this.offset += 2;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 32-bit signed integer and move pointer forward by 4\n     * bytes.\n     */\n    writeInt32(value) {\n        this.ensureAvailable(4);\n        this._data.setInt32(this.offset, value, this.littleEndian);\n        this.offset += 4;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 32-bit unsigned integer and move pointer forward by 4\n     * bytes.\n     */\n    writeUint32(value) {\n        this.ensureAvailable(4);\n        this._data.setUint32(this.offset, value, this.littleEndian);\n        this.offset += 4;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 32-bit floating number and move pointer forward by 4\n     * bytes.\n     */\n    writeFloat32(value) {\n        this.ensureAvailable(4);\n        this._data.setFloat32(this.offset, value, this.littleEndian);\n        this.offset += 4;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 64-bit floating number and move pointer forward by 8\n     * bytes.\n     */\n    writeFloat64(value) {\n        this.ensureAvailable(8);\n        this._data.setFloat64(this.offset, value, this.littleEndian);\n        this.offset += 8;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 64-bit signed bigint and move pointer forward by 8\n     * bytes.\n     */\n    writeBigInt64(value) {\n        this.ensureAvailable(8);\n        this._data.setBigInt64(this.offset, value, this.littleEndian);\n        this.offset += 8;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write `value` as a 64-bit unsigned bigint and move pointer forward by 8\n     * bytes.\n     */\n    writeBigUint64(value) {\n        this.ensureAvailable(8);\n        this._data.setBigUint64(this.offset, value, this.littleEndian);\n        this.offset += 8;\n        this._updateLastWrittenByte();\n        return this;\n    }\n    /**\n     * Write the charCode of `str`'s first character as an 8-bit unsigned integer\n     * and move pointer forward by 1 byte.\n     */\n    writeChar(str) {\n        return this.writeUint8(str.charCodeAt(0));\n    }\n    /**\n     * Write the charCodes of all `str`'s characters as 8-bit unsigned integers\n     * and move pointer forward by `str.length` bytes.\n     */\n    writeChars(str) {\n        for (let i = 0; i < str.length; i++) {\n            this.writeUint8(str.charCodeAt(i));\n        }\n        return this;\n    }\n    /**\n     * UTF-8 encode and write `str` to the current pointer offset and move pointer\n     * forward according to the encoded length.\n     */\n    writeUtf8(str) {\n        return this.writeBytes(encode(str));\n    }\n    /**\n     * Export a Uint8Array view of the internal buffer.\n     * The view starts at the byte offset and its length\n     * is calculated to stop at the last written byte or the original length.\n     */\n    toArray() {\n        return new Uint8Array(this.buffer, this.byteOffset, this.lastWrittenByte);\n    }\n    /**\n     * Update the last written byte offset\n     * @private\n     */\n    _updateLastWrittenByte() {\n        if (this.offset > this.lastWrittenByte) {\n            this.lastWrittenByte = this.offset;\n        }\n    }\n}\n//# sourceMappingURL=IOBuffer.js.map","\"use strict\";\n/*\n * Copyright 2017 Sam Thorogood. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n(function (scope) {\n    'use strict';\n    // fail early\n    if (scope['TextEncoder'] && scope['TextDecoder']) {\n        return false;\n    }\n    /**\n     * @constructor\n     * @param {string=} utfLabel\n     */\n    function FastTextEncoder(utfLabel = 'utf-8') {\n        if (utfLabel !== 'utf-8') {\n            throw new RangeError(`Failed to construct 'TextEncoder': The encoding label provided ('${utfLabel}') is invalid.`);\n        }\n    }\n    Object.defineProperty(FastTextEncoder.prototype, 'encoding', {\n        value: 'utf-8',\n    });\n    /**\n     * @param {string} string\n     * @param {{stream: boolean}=} options\n     * @return {!Uint8Array}\n     */\n    FastTextEncoder.prototype.encode = function (string, options = { stream: false }) {\n        if (options.stream) {\n            throw new Error(`Failed to encode: the 'stream' option is unsupported.`);\n        }\n        let pos = 0;\n        const len = string.length;\n        const out = [];\n        let at = 0; // output position\n        let tlen = Math.max(32, len + (len >> 1) + 7); // 1.5x size\n        let target = new Uint8Array((tlen >> 3) << 3); // ... but at 8 byte offset\n        while (pos < len) {\n            let value = string.charCodeAt(pos++);\n            if (value >= 0xd800 && value <= 0xdbff) {\n                // high surrogate\n                if (pos < len) {\n                    const extra = string.charCodeAt(pos);\n                    if ((extra & 0xfc00) === 0xdc00) {\n                        ++pos;\n                        value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                    }\n                }\n                if (value >= 0xd800 && value <= 0xdbff) {\n                    continue; // drop lone surrogate\n                }\n            }\n            // expand the buffer if we couldn't write 4 bytes\n            if (at + 4 > target.length) {\n                tlen += 8; // minimum extra\n                tlen *= 1.0 + (pos / string.length) * 2; // take 2x the remaining\n                tlen = (tlen >> 3) << 3; // 8 byte offset\n                const update = new Uint8Array(tlen);\n                update.set(target);\n                target = update;\n            }\n            if ((value & 0xffffff80) === 0) {\n                // 1-byte\n                target[at++] = value; // ASCII\n                continue;\n            }\n            else if ((value & 0xfffff800) === 0) {\n                // 2-byte\n                target[at++] = ((value >> 6) & 0x1f) | 0xc0;\n            }\n            else if ((value & 0xffff0000) === 0) {\n                // 3-byte\n                target[at++] = ((value >> 12) & 0x0f) | 0xe0;\n                target[at++] = ((value >> 6) & 0x3f) | 0x80;\n            }\n            else if ((value & 0xffe00000) === 0) {\n                // 4-byte\n                target[at++] = ((value >> 18) & 0x07) | 0xf0;\n                target[at++] = ((value >> 12) & 0x3f) | 0x80;\n                target[at++] = ((value >> 6) & 0x3f) | 0x80;\n            }\n            else {\n                // FIXME: do we care\n                continue;\n            }\n            target[at++] = (value & 0x3f) | 0x80;\n        }\n        return target.slice(0, at);\n    };\n    /**\n     * @constructor\n     * @param {string=} utfLabel\n     * @param {{fatal: boolean}=} options\n     */\n    function FastTextDecoder(utfLabel = 'utf-8', options = { fatal: false }) {\n        if (utfLabel !== 'utf-8') {\n            throw new RangeError(`Failed to construct 'TextDecoder': The encoding label provided ('${utfLabel}') is invalid.`);\n        }\n        if (options.fatal) {\n            throw new Error(`Failed to construct 'TextDecoder': the 'fatal' option is unsupported.`);\n        }\n    }\n    Object.defineProperty(FastTextDecoder.prototype, 'encoding', {\n        value: 'utf-8',\n    });\n    Object.defineProperty(FastTextDecoder.prototype, 'fatal', { value: false });\n    Object.defineProperty(FastTextDecoder.prototype, 'ignoreBOM', {\n        value: false,\n    });\n    /**\n     * @param {(!ArrayBuffer|!ArrayBufferView)} buffer\n     * @param {{stream: boolean}=} options\n     */\n    FastTextDecoder.prototype.decode = function (buffer, options = { stream: false }) {\n        if (options['stream']) {\n            throw new Error(`Failed to decode: the 'stream' option is unsupported.`);\n        }\n        const bytes = new Uint8Array(buffer);\n        let pos = 0;\n        const len = bytes.length;\n        const out = [];\n        while (pos < len) {\n            const byte1 = bytes[pos++];\n            if (byte1 === 0) {\n                break; // NULL\n            }\n            if ((byte1 & 0x80) === 0) {\n                // 1-byte\n                out.push(byte1);\n            }\n            else if ((byte1 & 0xe0) === 0xc0) {\n                // 2-byte\n                const byte2 = bytes[pos++] & 0x3f;\n                out.push(((byte1 & 0x1f) << 6) | byte2);\n            }\n            else if ((byte1 & 0xf0) === 0xe0) {\n                const byte2 = bytes[pos++] & 0x3f;\n                const byte3 = bytes[pos++] & 0x3f;\n                out.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n            }\n            else if ((byte1 & 0xf8) === 0xf0) {\n                const byte2 = bytes[pos++] & 0x3f;\n                const byte3 = bytes[pos++] & 0x3f;\n                const byte4 = bytes[pos++] & 0x3f;\n                // this can be > 0xffff, so possibly generate surrogates\n                let codepoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n                if (codepoint > 0xffff) {\n                    // codepoint &= ~0x10000;\n                    codepoint -= 0x10000;\n                    out.push(((codepoint >>> 10) & 0x3ff) | 0xd800);\n                    codepoint = 0xdc00 | (codepoint & 0x3ff);\n                }\n                out.push(codepoint);\n            }\n            else {\n                // FIXME: we're ignoring this\n            }\n        }\n        return String.fromCharCode.apply(null, out);\n    };\n    scope['TextEncoder'] = FastTextEncoder;\n    scope['TextDecoder'] = FastTextDecoder;\n})(typeof window !== 'undefined'\n    ? window\n    : typeof self !== 'undefined'\n        ? self\n        : this);\n//# sourceMappingURL=text-encoding-polyfill.js.map","// eslint-disable-next-line import/no-unassigned-import\nimport './text-encoding-polyfill';\nexport function decode(bytes, encoding = 'utf8') {\n    const decoder = new TextDecoder(encoding);\n    return decoder.decode(bytes);\n}\nconst encoder = new TextEncoder();\nexport function encode(str) {\n    return encoder.encode(str);\n}\n//# sourceMappingURL=text.browser.js.map","import { num2bytes, str2num, readType } from './types';\n// const STREAMING = 4294967295;\n/**\n * Read data for the given non-record variable\n * @param buffer - Buffer for the file data\n * @param variable - Variable metadata\n * @return - Data of the element\n */\nexport function nonRecord(buffer, variable) {\n    // variable type\n    const type = str2num(variable.type);\n    // size of the data\n    const size = variable.size / num2bytes(type);\n    // iterates over the data\n    const data = new Array(size);\n    for (let i = 0; i < size; i++) {\n        data[i] = readType(buffer, type, 1);\n    }\n    return data;\n}\n/**\n * Read data for the given record variable\n * @param buffer - Buffer for the file data\n * @param variable - Variable metadata\n * @param recordDimension - Record dimension metadata\n * @return - Data of the element\n */\nexport function record(buffer, variable, recordDimension) {\n    // variable type\n    const type = str2num(variable.type);\n    const width = variable.size ? variable.size / num2bytes(type) : 1;\n    // size of the data\n    // TODO streaming data\n    const size = recordDimension.length;\n    // iterates over the data\n    const data = new Array(size);\n    const step = recordDimension.recordStep;\n    if (step) {\n        for (let i = 0; i < size; i++) {\n            const currentOffset = buffer.offset;\n            data[i] = readType(buffer, type, width);\n            buffer.seek(currentOffset + step);\n        }\n    }\n    else {\n        throw new Error('recordDimension.recordStep is undefined');\n    }\n    return data;\n}\n//# sourceMappingURL=data.js.map","import { num2str, readType } from './types';\nimport { padding, notNetcdf, readName } from './utils';\n// Grammar constants\nconst ZERO = 0;\nconst NC_DIMENSION = 10;\nconst NC_VARIABLE = 11;\nconst NC_ATTRIBUTE = 12;\nconst NC_UNLIMITED = 0;\n/**\n * Reads the file header as @see {@link Header}\n * @param buffer - Buffer for the file data\n * @param version - Version of the file\n * @returns\n */\nexport function header(buffer, version) {\n    const header = { version };\n    const recordDimension = {\n        length: buffer.readUint32(),\n    };\n    const dimList = dimensionsList(buffer);\n    if (!Array.isArray(dimList)) {\n        recordDimension.id = dimList.recordId;\n        recordDimension.name = dimList.recordName;\n        header.dimensions = dimList.dimensions;\n    }\n    header.globalAttributes = attributesList(buffer);\n    const variables = variablesList(buffer, recordDimension?.id, version);\n    if (!Array.isArray(variables)) {\n        header.variables = variables.variables;\n        recordDimension.recordStep = variables.recordStep;\n    }\n    header.recordDimension = recordDimension;\n    return header;\n}\n/**\n * List of dimensions\n * @param buffer - Buffer for the file data\n * @return List of dimensions\n */\nfunction dimensionsList(buffer) {\n    const result = {};\n    let recordId, recordName;\n    const dimList = buffer.readUint32();\n    let dimensions;\n    if (dimList === ZERO) {\n        notNetcdf(buffer.readUint32() !== ZERO, 'wrong empty tag for list of dimensions');\n        return [];\n    }\n    else {\n        notNetcdf(dimList !== NC_DIMENSION, 'wrong tag for list of dimensions');\n        // Length of dimensions\n        const dimensionSize = buffer.readUint32();\n        dimensions = new Array(dimensionSize);\n        //populate `name` and `size` for each dimension\n        for (let dim = 0; dim < dimensionSize; dim++) {\n            // Read name\n            const name = readName(buffer);\n            // Read dimension size\n            const size = buffer.readUint32();\n            if (size === NC_UNLIMITED) {\n                // in netcdf 3 one field can be of size unlimited\n                recordId = dim;\n                recordName = name;\n            }\n            dimensions[dim] = {\n                name,\n                size,\n            };\n        }\n    }\n    if (recordId !== undefined) {\n        result.recordId = recordId;\n    }\n    if (recordName !== undefined) {\n        result.recordName = recordName;\n    }\n    result.dimensions = dimensions;\n    return result;\n}\n/**\n * List of attributes\n * @param buffer - Buffer for the file data\n * @return - List of attributes with:\n */\nfunction attributesList(buffer) {\n    const gAttList = buffer.readUint32();\n    let attributes;\n    if (gAttList === ZERO) {\n        notNetcdf(buffer.readUint32() !== ZERO, 'wrong empty tag for list of attributes');\n        return [];\n    }\n    else {\n        notNetcdf(gAttList !== NC_ATTRIBUTE, 'wrong tag for list of attributes');\n        // Length of attributes\n        const attributeSize = buffer.readUint32();\n        attributes = new Array(attributeSize);\n        // Populate `name`, `type` and `value` for each attribute\n        for (let gAtt = 0; gAtt < attributeSize; gAtt++) {\n            // Read name\n            const name = readName(buffer);\n            // Read type\n            const type = buffer.readUint32();\n            notNetcdf(type < 1 || type > 6, `non valid type ${type}`);\n            // Read attribute\n            const size = buffer.readUint32();\n            const value = readType(buffer, type, size);\n            // Apply padding\n            padding(buffer);\n            attributes[gAtt] = {\n                name,\n                type: num2str(type),\n                value,\n            };\n        }\n    }\n    return attributes;\n}\n/**\n * @param buffer - Buffer for the file data\n * @param recordId - Id of the unlimited dimension (also called record dimension)\n * This value may be undefined if there is no unlimited dimension\n * @param version - Version of the file\n * @return - Number of recordStep and list of variables @see {@link Variables}\n */\nfunction variablesList(buffer, recordId, version) {\n    const varList = buffer.readUint32();\n    let recordStep = 0;\n    let variables;\n    if (varList === ZERO) {\n        notNetcdf(buffer.readUint32() !== ZERO, 'wrong empty tag for list of variables');\n        return [];\n    }\n    else {\n        notNetcdf(varList !== NC_VARIABLE, 'wrong tag for list of variables');\n        // Length of variables\n        const variableSize = buffer.readUint32();\n        variables = new Array(variableSize);\n        for (let v = 0; v < variableSize; v++) {\n            // Read name\n            const name = readName(buffer);\n            // Read dimensionality of the variable\n            const dimensionality = buffer.readUint32();\n            // Index into the list of dimensions\n            const dimensionsIds = new Array(dimensionality);\n            for (let dim = 0; dim < dimensionality; dim++) {\n                dimensionsIds[dim] = buffer.readUint32();\n            }\n            // Read variables size\n            const attributes = attributesList(buffer);\n            // Read type\n            const type = buffer.readUint32();\n            notNetcdf(type < 1 && type > 6, `non valid type ${type}`);\n            // Read variable size\n            // The 32-bit varSize field is not large enough to contain the size of variables that require\n            // more than 2^32 - 4 bytes, so 2^32 - 1 is used in the varSize field for such variables.\n            const varSize = buffer.readUint32();\n            // Read offset\n            let offset = buffer.readUint32();\n            if (version === 2) {\n                notNetcdf(offset > 0, 'offsets larger than 4GB not supported');\n                offset = buffer.readUint32();\n            }\n            let record = false;\n            // Count amount of record variables\n            if (typeof recordId !== 'undefined' && dimensionsIds[0] === recordId) {\n                recordStep += varSize;\n                record = true;\n            }\n            variables[v] = {\n                name,\n                dimensions: dimensionsIds,\n                attributes,\n                type: num2str(type),\n                size: varSize,\n                offset,\n                record,\n            };\n        }\n    }\n    return {\n        variables,\n        recordStep,\n    };\n}\n//# sourceMappingURL=header.js.map","import { IOBuffer } from 'iobuffer';\nimport { record, nonRecord } from './data';\nimport { header } from './header';\nimport { toString } from './toString';\nimport { notNetcdf } from './utils';\n/**\n * Reads a NetCDF v3.x file\n * [See specification](https://www.unidata.ucar.edu/software/netcdf/docs/file_format_specifications.html)\n * @param data - ArrayBuffer or any Typed Array (including Node.js' Buffer from v4) with the data\n * @constructor\n */\nexport class NetCDFReader {\n    constructor(data) {\n        this.toString = toString;\n        const buffer = new IOBuffer(data);\n        buffer.setBigEndian();\n        // Validate that it's a NetCDF file\n        notNetcdf(buffer.readChars(3) !== 'CDF', 'should start with CDF');\n        // Check the NetCDF format\n        const version = buffer.readByte();\n        notNetcdf(version > 2, 'unknown version');\n        // Read the header\n        this.header = header(buffer, version);\n        this.buffer = buffer;\n    }\n    /**\n     * @return - Version for the NetCDF format\n     */\n    get version() {\n        if (this.header.version === 1) {\n            return 'classic format';\n        }\n        else {\n            return '64-bit offset format';\n        }\n    }\n    /**\n     * @return {object} - Metadata for the record dimension\n     *  * `length`: Number of elements in the record dimension\n     *  * `id`: Id number in the list of dimensions for the record dimension\n     *  * `name`: String with the name of the record dimension\n     *  * `recordStep`: Number with the record variables step size\n     */\n    get recordDimension() {\n        return this.header.recordDimension;\n    }\n    /**\n     * @return - Array - List of dimensions with:\n     *  * `name`: String with the name of the dimension\n     *  * `size`: Number with the size of the dimension\n     */\n    get dimensions() {\n        return this.header.dimensions;\n    }\n    /**\n     * @return - Array - List of global attributes with:\n     *  * `name`: String with the name of the attribute\n     *  * `type`: String with the type of the attribute\n     *  * `value`: A number or string with the value of the attribute\n     */\n    get globalAttributes() {\n        return this.header.globalAttributes;\n    }\n    /**\n     * Returns the value of an attribute\n     * @param - AttributeName\n     * @return - Value of the attributeName or null\n     */\n    getAttribute(attributeName) {\n        const attribute = this.globalAttributes.find((val) => val.name === attributeName);\n        if (attribute)\n            return attribute.value;\n        return null;\n    }\n    /**\n     * Returns the value of a variable as a string\n     * @param - variableName\n     * @return - Value of the variable as a string or null\n     */\n    getDataVariableAsString(variableName) {\n        const variable = this.getDataVariable(variableName);\n        if (variable)\n            return variable.join('');\n        return null;\n    }\n    get variables() {\n        return this.header.variables;\n    }\n    /**\n     * Retrieves the data for a given variable\n     * @param variableName - Name of the variable to search or variable object\n     * @return The variable values\n     */\n    getDataVariable(variableName) {\n        let variable;\n        if (typeof variableName === 'string') {\n            // search the variable\n            variable = this.header.variables.find((val) => {\n                return val.name === variableName;\n            });\n        }\n        else {\n            variable = variableName;\n        }\n        // throws if variable not found\n        if (variable === undefined) {\n            throw new Error('Not a valid NetCDF v3.x file: variable not found');\n        }\n        // go to the offset position\n        this.buffer.seek(variable.offset);\n        if (variable.record) {\n            // record variable case\n            return record(this.buffer, variable, this.header.recordDimension);\n        }\n        else {\n            // non-record variable case\n            return nonRecord(this.buffer, variable);\n        }\n    }\n    /**\n     * Check if a dataVariable exists\n     * @param variableName - Name of the variable to find\n     * @return boolean\n     */\n    dataVariableExists(variableName) {\n        const variable = this.header.variables.find((val) => {\n            return val.name === variableName;\n        });\n        return variable !== undefined;\n    }\n    /**\n     * Check if an attribute exists\n     * @param attributeName - Name of the attribute to find\n     * @return boolean\n     */\n    attributeExists(attributeName) {\n        const attribute = this.globalAttributes.find((val) => val.name === attributeName);\n        return attribute !== undefined;\n    }\n}\n//# sourceMappingURL=parser.js.map","export function toString() {\n    const result = [];\n    result.push('DIMENSIONS');\n    for (const dimension of this.dimensions) {\n        result.push(`  ${dimension.name.padEnd(30)} = size: ${dimension.size}`);\n    }\n    result.push('');\n    result.push('GLOBAL ATTRIBUTES');\n    for (const attribute of this.globalAttributes) {\n        result.push(`  ${attribute.name.padEnd(30)} = ${attribute.value}`);\n    }\n    const variables = JSON.parse(JSON.stringify(this.variables));\n    result.push('');\n    result.push('VARIABLES:');\n    for (const variable of variables) {\n        variable.value = this.getDataVariable(variable);\n        let stringify = JSON.stringify(variable.value);\n        if (stringify.length > 50)\n            stringify = stringify.substring(0, 50);\n        if (!isNaN(variable.value.length)) {\n            stringify += ` (length: ${variable.value.length})`;\n        }\n        result.push(`  ${variable.name.padEnd(30)} = ${stringify}`);\n    }\n    return result.join('\\n');\n}\n//# sourceMappingURL=toString.js.map","const types = {\n    BYTE: 1,\n    CHAR: 2,\n    SHORT: 3,\n    INT: 4,\n    FLOAT: 5,\n    DOUBLE: 6,\n};\n/**\n * Parse a number into their respective type\n * @param type - integer that represents the type\n * @return - parsed value of the type\n */\nexport function num2str(type) {\n    switch (Number(type)) {\n        case types.BYTE:\n            return 'byte';\n        case types.CHAR:\n            return 'char';\n        case types.SHORT:\n            return 'short';\n        case types.INT:\n            return 'int';\n        case types.FLOAT:\n            return 'float';\n        case types.DOUBLE:\n            return 'double';\n        default:\n            return 'undefined';\n    }\n}\n/**\n * Parse a number type identifier to his size in bytes\n * @param type - integer that represents the type\n * @return size of the type\n */\nexport function num2bytes(type) {\n    switch (Number(type)) {\n        case types.BYTE:\n            return 1;\n        case types.CHAR:\n            return 1;\n        case types.SHORT:\n            return 2;\n        case types.INT:\n            return 4;\n        case types.FLOAT:\n            return 4;\n        case types.DOUBLE:\n            return 8;\n        default:\n            return -1;\n    }\n}\n/**\n * Reverse search of num2str\n * @param type - string that represents the type\n * @return parsed value of the type\n */\nexport function str2num(type) {\n    switch (String(type)) {\n        case 'byte':\n            return types.BYTE;\n        case 'char':\n            return types.CHAR;\n        case 'short':\n            return types.SHORT;\n        case 'int':\n            return types.INT;\n        case 'float':\n            return types.FLOAT;\n        case 'double':\n            return types.DOUBLE;\n        /* istanbul ignore next */\n        default:\n            return -1;\n    }\n}\n/**\n * Auxiliary function to read numeric data\n * @param size - Size of the element to read\n * @param bufferReader - Function to read next value\n * @return\n */\nfunction readNumber(size, bufferReader) {\n    if (size !== 1) {\n        const numbers = new Array(size);\n        for (let i = 0; i < size; i++) {\n            numbers[i] = bufferReader();\n        }\n        return numbers;\n    }\n    else {\n        return bufferReader();\n    }\n}\n/**\n * Given a type and a size reads the next element\n * @param buffer - Buffer for the file data\n * @param type - Type of the data to read\n * @param size - Size of the element to read\n * @return\n */\nexport function readType(buffer, type, size) {\n    switch (type) {\n        case types.BYTE:\n            return Array.from(buffer.readBytes(size));\n        case types.CHAR:\n            return trimNull(buffer.readChars(size));\n        case types.SHORT:\n            return readNumber(size, buffer.readInt16.bind(buffer));\n        case types.INT:\n            return readNumber(size, buffer.readInt32.bind(buffer));\n        case types.FLOAT:\n            return readNumber(size, buffer.readFloat32.bind(buffer));\n        case types.DOUBLE:\n            return readNumber(size, buffer.readFloat64.bind(buffer));\n        default:\n            throw new Error(`non valid type ${type}`);\n    }\n}\n/**\n * Removes null terminate value\n * @param value - String to trim\n * @return - Trimmed string\n */\nfunction trimNull(value) {\n    if (value.charCodeAt(value.length - 1) === 0) {\n        return value.substring(0, value.length - 1);\n    }\n    return value;\n}\n//# sourceMappingURL=types.js.map","/**\n * Throws a non-valid NetCDF exception if the statement it's true\n * @ignore\n * @param statement - Throws if true\n * @param reason - Reason to throw\n */\nexport function notNetcdf(statement, reason) {\n    if (statement) {\n        throw new TypeError(`Not a valid NetCDF v3.x file: ${reason}`);\n    }\n}\n/**\n * Moves 1, 2, or 3 bytes to next 4-byte boundary\n * @param buffer - Buffer for the file data\n */\nexport function padding(buffer) {\n    if (buffer.offset % 4 !== 0) {\n        buffer.skip(4 - (buffer.offset % 4));\n    }\n}\n/**\n * Reads the name\n * @param buffer - Buffer for the file data\n * @return Name\n */\nexport function readName(buffer) {\n    // Read name\n    const nameLength = buffer.readUint32();\n    const name = buffer.readChars(nameLength);\n    // validate name\n    // TODO\n    // Apply padding\n    padding(buffer);\n    return name;\n}\n//# sourceMappingURL=utils.js.map","export default \"uniform mat4 viewMatrix;\\nuniform float opacity;\\nuniform vec3 fogColor;\\nuniform float fogNear;\\nuniform float fogFar;\\nvarying vec3 vColor;\\n//DEFINEFRAGCOLOR\\nvoid main() {\\n    gl_FragColor = vec4( vColor, opacity );\\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\\n    float fogFactor = smoothstep( fogNear, fogFar, depth );\\n    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n}\";","export default \"uniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat3 normalMatrix;\\n\\nattribute vec3 position;\\nattribute vec3 color;\\n\\nvarying vec3 vColor;\\n\\nvoid main() {\\n\\n    vColor = color;\\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n    gl_Position = projectionMatrix * mvPosition;\\n\\n}\";","export default \"const float INV_TOTAL_SAMPLES_FACTOR = 1.0 / 9.0;\\nuniform highp sampler2D inTex;\\nvarying highp vec2 vTexCoords;\\n    \\nvoid main() {\\n \\n vec2 texelSize = 1.0 / vec2(textureSize(inTex,0));\\n float blurred_visibility_factor = 0.0f;\\n for (int t = -1; t <= 1; ++t) {\\n  for (int s = -1; s <= 1; ++s) {\\n   vec2 offset = vec2(float(s), float(t)) * texelSize;\\n   blurred_visibility_factor += texture2D(inTex, vTexCoords + offset).r;\\n  }\\n }\\n    \\n gl_FragDepthEXT = blurred_visibility_factor * INV_TOTAL_SAMPLES_FACTOR;\\n \\n}\";","export default \"attribute vec2 vertexPosition;\\nvarying highp vec2 vTexCoords;\\nconst vec2 scale = vec2(0.5, 0.5);\\n\\nvoid main() {\\n   vTexCoords  = vertexPosition * scale + scale; // scale vertex attribute to [0,1] range\\n   gl_Position = vec4(vertexPosition, 0.0, 1.0);\\n}\\n        \";","export default \"uniform mat4 viewMatrix;\\nuniform float opacity;\\n\\nuniform vec3 fogColor;\\nuniform float fogNear;\\nuniform float fogFar;\\n#ifdef SHADED\\nuniform highp sampler2D shading;\\n#endif\\nvarying vec3 vLightFront;\\nvarying vec3 vColor;\\n//DEFINEFRAGCOLOR\\n\\nvoid main() {\\n\\n    gl_FragColor = vec4( vec3 ( 1.0 ), opacity );\\n\\n    #ifndef WIREFRAME\\n    gl_FragColor.xyz *= vLightFront;\\n    #endif\\n\\n#ifdef SHADED\\n    ivec2 dim = textureSize(shading,0);\\n    float shadowFactor = texture2D(shading,vec2(gl_FragCoord.x/float(dim.x),gl_FragCoord.y/float(dim.y))).r;\\n    vColor *= shadowFactor;\\n#endif\\n    gl_FragColor = gl_FragColor * vec4( vColor, opacity );\\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n    float fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n\\n}\\n\\n\\n\";","export default \"\\n\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat3 normalMatrix;\\nuniform vec3 directionalLightColor[ 1 ];\\nuniform vec3 directionalLightDirection[ 1 ];\\n\\nattribute vec3 offset;\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec3 color;\\nattribute float radius;\\n\\nvarying vec3 vColor;\\nvarying vec3 vLightFront;\\n\\nvoid main() {\\n\\n    vColor = color;\\n\\n    vec3 objectNormal = normal;\\n    vec3 transformedNormal = normalMatrix * objectNormal;\\n    vec4 mvPosition = modelViewMatrix * vec4( position * radius + offset, 1.0 );\\n\\n    vLightFront = vec3( 0.0 );\\n\\n    transformedNormal = normalize( transformedNormal );\\n\\n    vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ 0 ], 0.0 );\\n    vec3 dirVector = normalize( lDirection.xyz );\\n    float dotProduct = dot( transformedNormal, dirVector );\\n    vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n    vLightFront += directionalLightColor[ 0 ] * directionalLightWeighting;\\n\\n    gl_Position = projectionMatrix * mvPosition;\\n}\\n\\n\";","export default \"uniform mat4 viewMatrix;\\nuniform float opacity;\\n\\nuniform vec3 fogColor;\\nuniform float fogNear;\\nuniform float fogFar;\\n#ifdef SHADED\\nuniform highp sampler2D shading;\\n#endif\\nvarying vec3 vLightFront;\\nvarying vec3 vColor;\\n//DEFINEFRAGCOLOR\\n\\nvoid main() {\\n\\n    gl_FragColor = vec4( vec3 ( 1.0 ), opacity );\\n\\n    #ifndef WIREFRAME\\n    gl_FragColor.xyz *= vLightFront;\\n    #endif\\n#ifdef SHADED\\n    ivec2 dim = textureSize(shading,0);\\n    float shadowFactor = texture2D(shading,vec2(gl_FragCoord.x/float(dim.x),gl_FragCoord.y/float(dim.y))).r;\\n    vColor *= shadowFactor;\\n#endif\\n    gl_FragColor = gl_FragColor * vec4( vColor, opacity );\\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n    float fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n\\n}\";","export default \"\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat3 normalMatrix;\\nuniform vec3 directionalLightColor[ 1 ];\\nuniform vec3 directionalLightDirection[ 1 ];\\n\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec3 color;\\n\\nvarying vec3 vColor;\\nvarying vec3 vLightFront;\\n\\nvoid main() {\\n\\n    vColor = color;\\n\\n    vec3 objectNormal = normal;\\n    vec3 transformedNormal = normalMatrix * objectNormal;\\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\n    vLightFront = vec3( 0.0 );\\n\\n    transformedNormal = normalize( transformedNormal );\\n\\n    vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ 0 ], 0.0 );\\n    vec3 dirVector = normalize( lDirection.xyz );\\n    float dotProduct = dot( transformedNormal, dirVector );\\n    vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n    vLightFront += directionalLightColor[ 0 ] * directionalLightWeighting;\\n\\n    gl_Position = projectionMatrix * mvPosition;\\n}\";","export default \"\\n#ifdef SHADED\\nuniform highp sampler2D shading;\\n#endif\\n\\nuniform mat4 viewMatrix;\\nuniform float opacity;\\n\\nuniform vec3 fogColor;\\nuniform float fogNear;\\nuniform float fogFar;\\n\\nvarying vec3 vLightFront;\\nvarying vec3 vLightBack;\\n\\nvarying vec3 vColor;\\n\\n\\n//DEFINEFRAGCOLOR\\n\\nvoid main() {\\n\\n    gl_FragColor = vec4( vec3 ( 1.0 ), opacity );\\n\\n    #ifndef WIREFRAME\\n    if ( gl_FrontFacing )\\n       gl_FragColor.xyz *= vLightFront;\\n    else\\n       gl_FragColor.xyz *= vLightBack;\\n    #endif\\n\\n    vec3 color = vColor;\\n#ifdef SHADED\\n    ivec2 dim = textureSize(shading,0);\\n    float shadowFactor = texture2D(shading,vec2(gl_FragCoord.x/float(dim.x),gl_FragCoord.y/float(dim.y))).r;\\n    color *= shadowFactor;\\n#endif\\n    gl_FragColor = gl_FragColor * vec4( color, opacity );\\n    float depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n    float fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n\\n}\\n\\n\\n\";","export default \"\\n\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat3 normalMatrix;\\nuniform vec3 directionalLightColor[ 1 ];\\nuniform vec3 directionalLightDirection[ 1 ];\\n\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec3 color;\\n\\nvarying vec3 vColor;\\nvarying vec3 vLightFront;\\nvarying vec3 vLightBack;\\n\\nvoid main() {\\n\\n    vColor = color;\\n\\n    vec3 objectNormal = normal;\\n    vec3 transformedNormal = normalMatrix * objectNormal;\\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\n    vLightFront = vec3( 0.0 );\\n    vLightBack = vec3( 0.0 );\\n\\n    transformedNormal = normalize( transformedNormal );\\n\\n    vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ 0 ], 0.0 );\\n    vec3 dirVector = normalize( lDirection.xyz );\\n    float dotProduct = dot( transformedNormal, dirVector );\\n    vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n    vec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n    vLightFront += directionalLightColor[ 0 ] * directionalLightWeighting;\\n    vLightBack += directionalLightColor[ 0 ] * directionalLightWeightingBack;\\n\\n    gl_Position = projectionMatrix * mvPosition;\\n}\\n\\n\";","export default \"\\n\\nuniform float opacity;\\nuniform vec3 outlineColor;\\nuniform vec3 fogColor;\\nuniform float fogNear;\\nuniform float fogFar;\\n//DEFINEFRAGCOLOR\\n\\nvoid main() {\\n    gl_FragColor = vec4( outlineColor, 1 );\\n}\\n\\n\\n\";","export default \"\\n\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform float outlineWidth;\\nuniform float outlinePushback;\\n\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec3 color;\\n\\nvoid main() {\\n\\n    vec4 norm = modelViewMatrix*vec4(normalize(normal),0.0);\\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n    mvPosition.xy += norm.xy*outlineWidth;\\n    gl_Position = projectionMatrix * mvPosition;\\n    mvPosition.z -= outlinePushback; //go backwards in model space\\n    vec4 pushpos = projectionMatrix*mvPosition; //project to get z in projection space, I'm probably missing some simple math to do the same thing..\\n    gl_Position.z = gl_Position.w*pushpos.z/pushpos.w;\\n}\\n\\n\";","export default \"uniform sampler2D colormap;\\nvarying highp vec2 vTexCoords;\\nuniform vec2 dimensions;\\n//DEFINEFRAGCOLOR\\nvoid main (void) {\\n   gl_FragColor = texture2D(colormap, vTexCoords);\\n\\n   //gl_FragColor.g = gl_FragColor.b =  gl_FragColor.r; //debug shading \\n}\\n        \";","export default \"attribute vec2 vertexPosition;\\nvarying highp vec2 vTexCoords;\\nconst vec2 scale = vec2(0.5, 0.5);\\n\\nvoid main() {\\n   vTexCoords  = vertexPosition * scale + scale; // scale vertex attribute to [0,1] range\\n   gl_Position = vec4(vertexPosition, 0.0, 1.0);\\n}\\n        \";","export default \"uniform highp sampler2D colormap;\\nvarying highp vec2 vTexCoords;\\n\\n\\n// Basic FXAA implementation based on the code on geeks3d.com \\n#define FXAA_REDUCE_MIN (1.0/ 128.0)\\n#define FXAA_REDUCE_MUL (1.0 / 8.0)\\n#define FXAA_SPAN_MAX 8.0\\n\\n\\nvec4 applyFXAA(vec2 fragCoord, highp sampler2D tex)\\n{\\n    vec4 color;\\n    ivec2 dim = textureSize(tex,0);\\n    vec2 dimensions = vec2(float(dim.x),float(dim.y));\\n    vec2 inverseVP = vec2(1.0 / dimensions.x, 1.0 / dimensions.y);\\n    vec3 rgbNW = texture2D(tex, fragCoord + vec2(-1.0, -1.0) * inverseVP).xyz;\\n    vec3 rgbNE = texture2D(tex, fragCoord + vec2(1.0, -1.0) * inverseVP).xyz;\\n    vec3 rgbSW = texture2D(tex, fragCoord + vec2(-1.0, 1.0) * inverseVP).xyz;\\n    vec3 rgbSE = texture2D(tex, fragCoord + vec2(1.0, 1.0) * inverseVP).xyz;\\n    vec3 rgbM  = texture2D(tex, fragCoord  * inverseVP).xyz;\\n    vec3 luma = vec3(0.299, 0.587, 0.114);\\n    float lumaNW = dot(rgbNW, luma);\\n    float lumaNE = dot(rgbNE, luma);\\n    float lumaSW = dot(rgbSW, luma);\\n    float lumaSE = dot(rgbSE, luma);\\n    float lumaM  = dot(rgbM,  luma);\\n    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\\n    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\\n\\n    vec2 dir;\\n    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\\n    dir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\\n\\n    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) *\\n                        (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\\n\\n    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);\\n    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX),\\n            max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\\n            dir * rcpDirMin)) * inverseVP;\\n\\n    vec3 rgbA = 0.5 * (\\n        texture2D(tex, fragCoord + dir * (1.0 / 3.0 - 0.5)).xyz +\\n        texture2D(tex, fragCoord  + dir * (2.0 / 3.0 - 0.5)).xyz);\\n    vec3 rgbB = rgbA * 0.5 + 0.25 * (\\n        texture2D(tex, fragCoord  + dir * -0.5).xyz +\\n        texture2D(tex, fragCoord  + dir * 0.5).xyz);\\n\\n    float lumaB = dot(rgbB, luma);\\n    if ((lumaB < lumaMin) || (lumaB > lumaMax))\\n        color = vec4(rgbA, 1.0);\\n    else\\n        color = vec4(rgbB, 1.0);\\n    return color;\\n}\\n\\n\\n//DEFINEFRAGCOLOR\\nvoid main (void) {\\n    ivec2 dim = textureSize(colormap,0);\\n\\n  gl_FragColor = applyFXAA(vTexCoords, colormap);\\n}\\n        \";","export default \"attribute vec2 vertexPosition;\\nvarying highp vec2 vTexCoords;\\nconst vec2 scale = vec2(0.5, 0.5);\\n\\nvoid main() {\\n   vTexCoords  = vertexPosition * scale + scale; // scale vertex attribute to [0,1] range\\n   gl_Position = vec4(vertexPosition, 0.0, 1.0);\\n}\\n        \";","export default \"\\nuniform mat4 viewMatrix;\\nuniform float opacity;\\nuniform mat4 projectionMatrix;\\n\\nuniform vec3 fogColor;\\nuniform float fogNear;\\nuniform float fogFar;\\nuniform float uDepth;\\nuniform vec3 directionalLightColor[ 1 ];\\n\\nvarying vec3 vColor;\\nvarying vec2 mapping;\\nvarying float rval;\\nvarying vec3 vLight;\\nvarying vec3 center;\\n\\n#ifdef SHADED\\nuniform highp sampler2D shading;\\n#endif\\n\\n//DEFINEFRAGCOLOR\\n\\nvoid main() {\\n    float lensqr = dot(mapping,mapping);\\n    float rsqr = rval*rval;\\n    if(lensqr > rsqr)\\n       discard;\\n    float z = sqrt(rsqr-lensqr);\\n    vec3 cameraPos = center+ vec3(mapping.x,mapping.y,z);\\n    vec4 clipPos = projectionMatrix * vec4(cameraPos, 1.0);\\n    float ndcDepth = clipPos.z / clipPos.w;\\n    gl_FragDepthEXT = ((gl_DepthRange.diff * ndcDepth) + gl_DepthRange.near + gl_DepthRange.far) / 2.0;\\n    vec3 norm = normalize(vec3(mapping.x,mapping.y,z));\\n    float dotProduct = dot( norm, vLight );\\n    vec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n    vec3 vLight = directionalLightColor[ 0 ] * directionalLightWeighting;\\n    vec3 color = vLight*vColor;\\n#ifdef SHADED\\n    ivec2 dim = textureSize(shading,0);\\n    float shadowFactor = texture2D(shading,vec2(gl_FragCoord.x/float(dim.x),gl_FragCoord.y/float(dim.y))).r;\\n    color *= shadowFactor;\\n#endif    \\n    gl_FragColor = vec4(color, opacity*opacity );\\n    float fogFactor = smoothstep( fogNear, fogFar, gl_FragDepthEXT/gl_FragCoord.w );\\n    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n\\n\\n}\\n\\n\";","export default \"uniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat3 normalMatrix;\\nuniform vec3 directionalLightColor[ 1 ];\\nuniform vec3 directionalLightDirection[ 1 ];\\n\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec3 color;\\n\\nvarying vec2 mapping;\\nvarying vec3 vColor;\\nvarying float rval;\\nvarying vec3 vLight;\\nvarying vec3 center;\\n\\nvoid main() {\\n\\n    vColor = color;\\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n    center = mvPosition.xyz;\\n    vec4 projPosition = projectionMatrix * mvPosition;\\n    vec4 adjust = projectionMatrix* vec4(normal,0.0); adjust.z = 0.0; adjust.w = 0.0;\\n    vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ 0 ], 0.0 );\\n    vLight = normalize( lDirection.xyz );\\n    mapping = normal.xy;\\n    rval = abs(normal.x);\\n    gl_Position = projPosition+adjust;\\n\\n}\\n\";","export default \"\\n\\nuniform float opacity;\\nuniform vec3 outlineColor;\\nuniform vec3 fogColor;\\nuniform float fogNear;\\nuniform float fogFar;\\nuniform mat4 projectionMatrix;\\nvarying vec2 mapping;\\nvarying float rval;\\nvarying vec3 center;\\n\\nuniform float outlinePushback;\\n\\n//DEFINEFRAGCOLOR\\n\\nvoid main() {\\n    float lensqr = dot(mapping,mapping);\\n    float rsqr = rval*rval;\\n    if(lensqr > rsqr)\\n       discard;\\n    float z = sqrt(rsqr-lensqr);\\n    vec3 cameraPos = center+ vec3(mapping.x,mapping.y,z-outlinePushback);\\n    vec4 clipPos = projectionMatrix * vec4(cameraPos, 1.0);\\n    float ndcDepth = clipPos.z / clipPos.w;\\n    gl_FragDepthEXT = ((gl_DepthRange.diff * ndcDepth) + gl_DepthRange.near + gl_DepthRange.far) / 2.0;\\n    gl_FragColor = vec4(outlineColor, 1 );\\n}\\n\\n\\n\";","export default \"\\n\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform float outlineWidth;\\nuniform float outlinePushback;\\n\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec3 color;\\n\\nvarying vec2 mapping;\\nvarying float rval;\\nvarying vec3 center;\\n\\nvoid main() {\\n\\n    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n    center = mvPosition.xyz;\\n    vec4 projPosition = projectionMatrix * mvPosition;\\n    vec2 norm = normal.xy + vec2(sign(normal.x)*outlineWidth,sign(normal.y)*outlineWidth);\\n    vec4 adjust = projectionMatrix* vec4(norm,normal.z,0.0); adjust.z = 0.0; adjust.w = 0.0;\\n    mapping = norm.xy;\\n    rval = abs(norm.x);\\n    gl_Position = projPosition+adjust;\\n}\\n\\n\";","export default \"\\n\\nuniform vec3 color;\\nuniform sampler2D map;\\nuniform float opacity;\\n\\nuniform int fogType;\\nuniform vec3 fogColor;\\nuniform float fogDensity;\\nuniform float fogNear;\\nuniform float fogFar;\\nuniform float alphaTest;\\n\\nvarying vec2 vUV;\\n//DEFINEFRAGCOLOR\\n\\nvoid main() {\\n\\n    vec4 texture = texture2D(map, vUV);\\n\\n    if (texture.a <= alphaTest) discard;\\n\\n    gl_FragColor = vec4(color * texture.xyz, texture.a * opacity);\\n\\n    if (fogType > 0) {\\n\\n        float depth = gl_FragCoord.z / gl_FragCoord.w;\\n        float fogFactor = 0.0;\\n\\n        if (fogType == 1) {\\n            fogFactor = smoothstep(fogNear, fogFar, depth);\\n        }\\n\\n        else {\\n            const float LOG2 = 1.442695;\\n            float fogFactor = exp2(- fogDensity * fogDensity * depth * depth * LOG2);\\n            fogFactor = 1.0 - clamp(fogFactor, 0.0, 1.0);\\n        }\\n\\n        gl_FragColor = mix(gl_FragColor, vec4(fogColor, gl_FragColor.w), fogFactor);\\n\\n    }\\n}\\n\\n\";","export default \"\\n\\nuniform int useScreenCoordinates;\\nuniform vec3 screenPosition;\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform float rotation;\\nuniform vec2 scale;\\nuniform vec2 alignment;\\nuniform vec2 uvOffset;\\nuniform vec2 uvScale;\\n\\nattribute vec2 position;\\nattribute vec2 uv;\\n\\nvarying vec2 vUV;\\n\\nvoid main() {\\n\\n    vUV = uvOffset + uv * uvScale;\\n\\n    vec2 alignedPosition = position + alignment;\\n\\n    vec2 rotatedPosition;\\n    rotatedPosition.x = ( cos(rotation) * alignedPosition.x - sin(rotation) * alignedPosition.y ) * scale.x;\\n    rotatedPosition.y = ( sin(rotation) * alignedPosition.x + cos(rotation) * alignedPosition.y ) * scale.y;\\n\\n    vec4 finalPosition;\\n\\n    if(useScreenCoordinates != 0) {\\n        finalPosition = vec4(screenPosition.xy + rotatedPosition, screenPosition.z, 1.0);\\n    }\\n\\n    else {\\n        finalPosition = projectionMatrix * modelViewMatrix * vec4(0.0, 0.0, 0.0, 1.0); finalPosition /= finalPosition.w;\\n        finalPosition.xy += rotatedPosition; \\n    }\\n\\n    gl_Position = finalPosition;\\n\\n}\\n\\n\";","export default \"uniform sampler2D depthmap;\\nvarying highp vec2 vTexCoords;\\nuniform float vWidth;\\nuniform float vHeight;\\nuniform float total_strength;\\nuniform float radius;\\nuniform mat4 projinv;\\nuniform mat4 projectionMatrix;\\n\\n//code for pseudorandom vector from chatgpt\\nfloat hash(vec3 p) {\\n    p = fract(p * vec3(0.1031, 0.1030, 0.0973));\\n    p += dot(p, p.yzx + 33.33);\\n    return fract((p.x + p.y) * p.z);\\n}\\n\\n// Generate a pseudorandom vec3 from a seed vec3\\nvec3 pseudorandomVec3(vec3 seed) {\\n    vec3 randomVec;\\n    randomVec.x = hash(seed);\\n    randomVec.y = hash(seed + vec3(1.0, 0.0, 17.1));\\n    randomVec.z = hash(seed + vec3(0.0, 13.23, 0.0));\\n    return randomVec;\\n}\\n\\nvoid main(void)\\n{   \\n   const float base = 0.2;\\n   const float area = 0.75;\\n   const int cycles = 1;\\n\\n   const int samples = 64;\\n   vec3 sample_sphere[64] = vec3[](\\n      vec3(0.091258,-0.510164,0.000000),\\n      vec3(-0.204347,-0.872967,0.187199),\\n      vec3(0.009690,-0.263696,-0.110414),\\n      vec3(0.175208,-0.563987,0.228527),\\n      vec3(-0.001824,-0.003113,-0.000323),\\n      vec3(0.411134,-0.719869,-0.261530),\\n      vec3(-0.074272,-0.377368,0.276290),\\n      vec3(-0.147773,-0.381587,-0.284529),\\n      vec3(0.173317,-0.199635,0.063295),\\n      vec3(-0.186452,-0.199460,0.076965),\\n      vec3(0.143985,-0.308160,-0.307687),\\n      vec3(0.053194,-0.148286,0.169589),\\n      vec3(-0.547656,-0.486476,-0.317378),\\n      vec3(0.020804,-0.015092,-0.004574),\\n      vec3(-0.038006,-0.043165,0.054059),\\n      vec3(-0.094795,-0.443908,-0.731525),\\n      vec3(0.547552,-0.396466,0.461477),\\n      vec3(-0.176886,-0.089989,0.007315),\\n      vec3(0.074401,-0.048840,-0.074039),\\n      vec3(-0.008240,-0.075697,0.178197),\\n      vec3(-0.307880,-0.185053,-0.368943),\\n      vec3(0.309520,-0.108483,0.041646),\\n      vec3(-0.773478,-0.292946,0.538166),\\n      vec3(0.184487,-0.231594,-0.820065),\\n      vec3(0.207318,-0.100531,0.361797),\\n      vec3(-0.173306,-0.037737,-0.055289),\\n      vec3(0.548102,-0.105342,-0.253237),\\n      vec3(-0.119342,-0.043907,0.285162),\\n      vec3(-0.270247,-0.087861,-0.751357),\\n      vec3(0.449312,-0.039777,0.236146),\\n      vec3(-0.743773,-0.036095,0.196056),\\n      vec3(0.148819,-0.004300,-0.231448),\\n      vec3(0.008773,0.000809,0.051047),\\n      vec3(-0.461467,0.027390,-0.357386),\\n      vec3(0.169626,0.013338,-0.014053),\\n      vec3(-0.043786,0.007095,0.047331),\\n      vec3(0.004821,0.140371,-0.988260),\\n      vec3(0.092402,0.023994,0.101860),\\n      vec3(-0.295335,0.061530,-0.027372),\\n      vec3(0.024903,0.007537,-0.018901),\\n      vec3(-0.081463,0.125402,0.447794),\\n      vec3(-0.397119,0.231805,-0.631062),\\n      vec3(0.163853,0.059014,0.044905),\\n      vec3(-0.495220,0.214357,0.254139),\\n      vec3(0.306123,0.373687,-0.825715),\\n      vec3(0.021665,0.026737,0.053220),\\n      vec3(-0.208231,0.117129,-0.098685),\\n      vec3(0.139749,0.080968,-0.043086),\\n      vec3(-0.153599,0.182814,0.262090),\\n      vec3(-0.159673,0.496777,-0.743568),\\n      vec3(0.134797,0.117152,0.095753),\\n      vec3(-0.155626,0.120533,0.019395),\\n      vec3(0.042311,0.054462,-0.049709),\\n      vec3(0.001257,0.031288,0.034468),\\n      vec3(-0.002271,0.003199,-0.002304),\\n      vec3(0.662104,0.717307,0.033854),\\n      vec3(-0.373100,0.576021,0.308274),\\n      vec3(0.024233,0.231316,-0.173688),\\n      vec3(0.161311,0.420217,0.234273),\\n      vec3(-0.045248,0.078031,-0.010411),\\n      vec3(0.167453,0.376942,-0.094872),\\n      vec3(-0.056194,0.433247,0.173218),\\n      vec3(-0.016224,0.123149,-0.035569),\\n      vec3(0.067127,0.407641,0.028479)\\n   );\\n\\n   float depth = texture2D(depthmap, vTexCoords).r;\\n   if(depth == 1.0) {\\n      discard;\\n   }\\n\\n   vec4 screen_position = vec4(vTexCoords, depth,1.0);\\n   vec4 pos = projinv*screen_position;\\n   pos /= pos.w;\\n   vec3 position = pos.xyz;\\n\\n   //approximate the normal from the depth map; I find this simpler\\n   //than trying to recompute the exact normal within every possible object shader\\n\\n   //pixel offset positions in screen space\\n   ivec2 dim = textureSize(depthmap,0);\\n   vec2 offset1 = vec2(0.0,1.0/float(dim.y));\\n   vec2 offset2 = vec2(1.0/float(dim.x),0.0);\\n   float depth1 = texture2D(depthmap, vTexCoords + offset1).r;\\n   float depth2 = texture2D(depthmap, vTexCoords + offset2).r;\\n   \\n   vec3 p1 = vec3(screen_position.xy+offset1, depth1 - depth);\\n   vec3 p2 = vec3(screen_position.xy+offset2, depth2 - depth);\\n\\n   //convert to model space\\n   vec4 pos1 = projinv*vec4(p1,1);\\n   pos1 /= pos1.w;\\n   vec4 pos2 = projinv*vec4(p2,1);\\n   pos2 /= pos2.w;\\n\\n   vec3 normal = normalize(cross(pos1.xyz-position, pos2.xyz-position)); //model normal, important we normalize in model space\\n\\n   //pseudo random number\\n\\n   float occlusion = 0.0;\\n   for(int c = 0; c < cycles; c++) {\\n   vec3 random = normalize(pseudorandomVec3(position+float(c)));\\n   for(int i=0; i < samples; i++) {\\n\\n      vec3 ray = radius * reflect(sample_sphere[i],random);\\n      vec3 hemi_ray = position + sign(dot(ray,normal)) * ray; //model space\\n      vec4 hemi_screen = projectionMatrix*vec4(hemi_ray,1.0);\\n      hemi_screen /= hemi_screen.w;\\n      \\n      float occ_depth = texture2D(depthmap, clamp(hemi_screen.xy,0.0,1.0)).r;\\n      float difference = hemi_screen.z - occ_depth;\\n      \\n      occlusion += step(0.0, difference) * (1.0-smoothstep(0.0, area, difference));\\n   }\\n   }\\n   float ao = 1.0 - total_strength * occlusion * (1.0 / float(cycles*samples));\\n   gl_FragDepthEXT = clamp(ao+base,0.0,1.0);\\n\\n}\";","export default \"attribute vec2 vertexPosition;\\nvarying highp vec2 vTexCoords;\\nconst vec2 scale = vec2(0.5, 0.5);\\n\\nvoid main() {\\n   vTexCoords  = vertexPosition * scale + scale; // scale vertex attribute to [0,1] range\\n   gl_Position = vec4(vertexPosition, 0.0, 1.0);\\n}\\n        \";","export default \"    float dotProduct = dot( norm, vLight );\\n    vec3 light = vec3( max( dotProduct, 0.0 ) );\\n    color *= light;\\n#ifdef SHADED\\n    ivec2 dim = textureSize(shading,0);\\n    float shadowFactor = texture2D(shading,vec2(gl_FragCoord.x/float(dim.x),gl_FragCoord.y/float(dim.y))).r;\\n    color *= shadowFactor;\\n#endif    \\n    gl_FragColor = vec4(color, opacity*opacity );\\n    float fogFactor = smoothstep( fogNear, fogFar, depth );\\n    gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\\n}\";","export default \"\\n\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat3 normalMatrix;\\nuniform vec3 directionalLightColor[ 1 ];\\nuniform vec3 directionalLightDirection[ 1 ];\\n\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec3 color;\\nattribute float radius;\\n\\nvarying vec3 vColor;\\nvarying vec3 vLight;\\nvarying vec3 cposition;\\nvarying vec3 p1;\\nvarying vec3 p2;\\nvarying float r;\\n\\nvoid main() {\\n\\n    vColor = color; vColor.z = abs(vColor.z); //z indicates which vertex and so would vary\\n    r = abs(radius);\\n    vec4 to = modelViewMatrix*vec4(normal, 1.0); //normal is other point of cylinder\\n    vec4 pt = modelViewMatrix*vec4(position, 1.0);\\n    vec4 mvPosition = pt;\\n    p1 = pt.xyz; p2 = to.xyz;\\n    vec3 norm = to.xyz-pt.xyz;\\n    float mult = 1.1; //slop to account for perspective of sphere\\n    if(length(p1) > length(p2)) { //billboard at level of closest point\\n       mvPosition = to;\\n    }\\n    vec3 n = normalize(mvPosition.xyz);\\n//intersect with the plane defined by the camera looking at the billboard point\\n    if(color.z >= 0.0) { //p1\\n       if(projectionMatrix[3][3] == 0.0) { //perspective\\n         vec3 pnorm = normalize(p1);\\n         float t = dot(mvPosition.xyz-p1,n)/dot(pnorm,n);\\n         mvPosition.xyz = p1+t*pnorm; \\n       } else { //orthographic\\n         mvPosition.xyz = p1;\\n       }\\n    } else {\\n      if(projectionMatrix[3][3] == 0.0) { //perspective\\n         vec3 pnorm = normalize(p2);\\n         float t = dot(mvPosition.xyz-p2,n)/dot(pnorm,n);\\n         mvPosition.xyz = p2+t*pnorm;\\n       } else { //orthographic\\n         mvPosition.xyz = p2;\\n       } \\n       mult *= -1.0;\\n    }\\n    vec3 cr = normalize(cross(mvPosition.xyz,norm))*radius;\\n    vec3 doublecr = normalize(cross(mvPosition.xyz,cr))*radius;\\n    mvPosition.xyz +=  mult*(cr + doublecr).xyz;\\n    cposition = mvPosition.xyz;\\n    gl_Position = projectionMatrix * mvPosition;\\n    vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ 0 ], 0.0 );\\n    vLight = normalize( lDirection.xyz )*directionalLightColor[0]; //not really sure this is right, but color is always white so..\\n}\\n\\n\";","export default \"uniform float opacity;\\nuniform mat4 projectionMatrix;\\n\\nuniform vec3 fogColor;\\nuniform float fogNear;\\nuniform float fogFar;\\n\\nvarying vec3 vLight;\\nvarying vec3 vColor;\\nvarying vec3 cposition;\\nvarying vec3 p1;\\nvarying vec3 p2;\\nvarying float r;\\n\\n#ifdef SHADED\\nuniform highp sampler2D shading;\\n#endif\\n\\n//DEFINEFRAGCOLOR\\n\\n//cylinder-ray intersection testing taken from http://mrl.nyu.edu/~dzorin/cg05/lecture12.pdf\\n//also useful: http://stackoverflow.com/questions/9595300/cylinder-impostor-in-glsl\\n//with a bit more care (caps) this could be a general cylinder imposter (see also outline)\\nvoid main() {\\n    vec3 color = abs(vColor);\\n    vec3 pos = cposition;\\n    vec3 p = pos; //ray point\\n    vec3 v = vec3(0.0,0.0,-1.0); //ray normal - orthographic\\n    if(projectionMatrix[3][3] == 0.0) v = normalize(pos); //ray normal - perspective\\n    vec3 pa = p1; //cyl start\\n    vec3 va = normalize(p2-p1); //cyl norm\\n    vec3 tmp1 = v-(dot(v,va)*va);\\n    vec3 deltap = p-pa;\\n    float A = dot(tmp1,tmp1);\\n    if(A == 0.0) discard;\\n    vec3 tmp2 = deltap-(dot(deltap,va)*va);\\n    float B = 2.0*dot(tmp1, tmp2);\\n    float C = dot(tmp2,tmp2)-r*r;\\n//quadratic equation!\\n    float det = (B*B) - (4.0*A*C);\\n    if(det < 0.0) discard;\\n    float sqrtDet = sqrt(det);\\n    float posT = (-B+sqrtDet)/(2.0*A);\\n    float negT = (-B-sqrtDet)/(2.0*A);\\n    float intersectionT = min(posT,negT);\\n    vec3 qi = p+v*intersectionT;\\n    float dotp1 = dot(va,qi-p1);\\n    float dotp2 = dot(va,qi-p2);\\n    vec3 norm;\\n    if( dotp1 < 0.0 || dotp2 > 0.0) { //(p-c)^2 + 2(p-c)vt +v^2+t^2 - r^2 = 0\\n       vec3 cp;\\n       if( dotp1 < 0.0) {  \\n//        if(vColor.x < 0.0 ) discard; //color sign bit indicates if we should cap or not\\n        cp = p1;\\n       } else {\\n//          if(vColor.y < 0.0 ) discard;\\n          cp = p2;\\n       }\\n       vec3 diff = p-cp;\\n       A = dot(v,v);\\n       B = dot(diff,v)*2.0;\\n       C = dot(diff,diff)-r*r;\\n       det = (B*B) - (4.0*C);\\n       if(det < 0.0) discard;\\n       sqrtDet = sqrt(det);\\n       posT = (-B+sqrtDet)/(2.0);\\n       negT = (-B-sqrtDet)/(2.0);\\n       float t = min(posT,negT);\\n       qi = p+v*t; \\n       norm = normalize(qi-cp); \\n    } else {\\n       norm = normalize(qi-(dotp1*va + p1));\\n    }\\n    vec4 clipPos = projectionMatrix * vec4(qi, 1.0);\\n    float ndcDepth = clipPos.z / clipPos.w;\\n    float depth = ((gl_DepthRange.diff * ndcDepth) + gl_DepthRange.near + gl_DepthRange.far) / 2.0;\\n    gl_FragDepthEXT = depth;\";","export default \"\\n\\nuniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat4 viewMatrix;\\nuniform mat3 normalMatrix;\\nuniform vec3 directionalLightColor[ 1 ];\\nuniform vec3 directionalLightDirection[ 1 ];\\nuniform vec3 outlineColor;\\nuniform float outlineWidth;\\nuniform float outlinePushback;\\n\\n\\nattribute vec3 position;\\nattribute vec3 normal;\\nattribute vec3 color;\\nattribute float radius;\\n\\nvarying vec3 vColor;\\nvarying vec3 vLight;\\nvarying vec3 cposition;\\nvarying vec3 p1;\\nvarying vec3 p2;\\nvarying float r;\\n\\nvoid main() {\\n\\n    vColor = outlineColor;\\n    float rad = radius+sign(radius)*outlineWidth;\\n    r = abs(rad);\\n    vec4 to = modelViewMatrix*vec4(normal, 1.0); //normal is other point of cylinder\\n    vec4 pt = modelViewMatrix*vec4(position, 1.0);\\n//pushback\\n    to.xyz += normalize(to.xyz)*outlinePushback;\\n    pt.xyz += normalize(pt.xyz)*outlinePushback;\\n\\n    vec4 mvPosition = pt;\\n    p1 = pt.xyz; p2 = to.xyz;\\n    vec3 norm = to.xyz-pt.xyz;\\n    float mult = 1.1; //slop to account for perspective of sphere\\n    if(length(p1) > length(p2)) { //billboard at level of closest point\\n       mvPosition = to;\\n    }\\n    vec3 n = normalize(mvPosition.xyz);\\n//intersect with the plane defined by the camera looking at the billboard point\\n    if(color.z >= 0.0) { //p1\\n       vec3 pnorm = normalize(p1);\\n       float t = dot(mvPosition.xyz-p1,n)/dot(pnorm,n);\\n       mvPosition.xyz = p1+t*pnorm;\\n    } else {\\n       vec3 pnorm = normalize(p2);\\n       float t = dot(mvPosition.xyz-p2,n)/dot(pnorm,n);\\n       mvPosition.xyz = p2+t*pnorm;\\n       mult *= -1.0;\\n    }\\n    vec3 cr = normalize(cross(mvPosition.xyz,norm))*rad;\\n    vec3 doublecr = normalize(cross(mvPosition.xyz,cr))*rad;\\n    mvPosition.xy +=  mult*(cr + doublecr).xy;\\n    cposition = mvPosition.xyz;\\n    gl_Position = projectionMatrix * mvPosition;\\n    vLight = vec3(1.0,1.0,1.0);\\n}\\n\\n\";","export default \"\\nuniform highp sampler3D data;\\nuniform highp sampler2D colormap;\\nuniform highp sampler2D depthmap;\\n\\n\\nuniform mat4 textmat;\\nuniform mat4 projinv;\\nuniform mat4 projectionMatrix;\\n\\nuniform float step;\\nuniform float subsamples;\\nuniform float maxdepth;\\nuniform float transfermin;\\nuniform float transfermax;\\nin  vec4 mvPosition;\\nout vec4 color;\\nvoid main(void) {\\n\\n   vec4 pos = mvPosition;\\n   bool seengood = false;\\n   float i = 0.0;\\n   color = vec4(1,1,1,0);\\n   float increment = 1.0/subsamples;\\n   float maxsteps = (maxdepth*subsamples/step);\\n//there's probably a better way to do this..\\n//calculate farthest possible point in model coordinates\\n   vec4 maxpos = vec4(pos.x,pos.y,pos.z-maxdepth,1.0);\\n// convert to projection\\n   maxpos = projectionMatrix*maxpos;\\n   vec4 startp = projectionMatrix*pos;\\n// homogonize\\n   maxpos /= maxpos.w;\\n   startp /= startp.w;\\n//take x,y from start and z from max\\n   maxpos = vec4(startp.x,startp.y,maxpos.z,1.0);\\n//convert back to model space\\n   maxpos = projinv*maxpos;\\n   maxpos /= maxpos.w;\\n   float incr = step/subsamples;\\n//get depth from depthmap\\n//startp is apparently [-1,1]\\n   vec2 tpos = startp.xy/2.0+0.5;\\n   float depth = texture(depthmap, tpos).r;\\n//compute vector between start and end\\n   vec4 direction = maxpos-pos;\\n   for( i = 0.0; i <= maxsteps; i++) {\\n      vec4 pt = (pos+(i/maxsteps)*direction);\\n      vec4 ppt = projectionMatrix*pt;\\n      float ptdepth = ppt.z/ppt.w;\\n      ptdepth = ((gl_DepthRange.diff * ptdepth) + gl_DepthRange.near + gl_DepthRange.far) / 2.0;\\n      if(ptdepth > depth) break;\\n      pt = textmat*pt;\\n//       pt /= pt.w;\\n      if(pt.x >= -0.01 && pt.y >= -0.01 && pt.z >= -0.01 && pt.x <= 1.01 && pt.y <= 1.01 && pt.z <= 1.01) {\\n         seengood = true;\\n      } else if(seengood) {\\n         break;\\n      }\\n      if( pt.x < -0.01 || pt.x > 1.01 || pt.y < -0.01 || pt.y > 1.01 || pt.z < -0.01 || pt.z > 1.01  ){\\n          color.a = 0.0;\\n          continue;\\n      }\\n      else {\\n         float val = texture(data, pt.zyx).r;\\n         if(isinf(val)) continue; //masked out\\n         float cval = (val-transfermin)/(transfermax-transfermin); //scale to texture 0-1 range\\n         vec4 val_color = texture(colormap, vec2(cval,0.5));\\n         color.rgb = color.rgb*color.a + (1.0-color.a)*val_color.a*val_color.rgb;\\n         color.a += (1.0 - color.a) * val_color.a; \\n         if(color.a > 0.0) color.rgb /= color.a;\\n//          color = vec4(pt.x, pt.y, pt.z, 1.0);\\n      }\\n//       color = vec4(pt.x, pt.y, pt.z, 0.0)\\n    }\\n}\\n\\n        \";","export default \"uniform mat4 modelViewMatrix;\\nuniform mat4 projectionMatrix;\\nuniform mat4 viewMatrix;\\n\\nin vec3 position;\\nout vec4 mvPosition;\\nvoid main() {\\n\\n    mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n    gl_Position = projectionMatrix*mvPosition;\\n}\\n\";","import { Vector3 } from \"./WebGL/math\";\nimport { Geometry } from \"./WebGL\";\nimport { Color, Colored } from \"colors\";\n\n\n//define enum values\n/**\n * Enum for cylinder cap styles.\n * @readonly\n * @enum \n * @property NONE\n * @property FLAT\n * @property ROUND\n */\nexport enum CAP {\n    NONE = 0,\n    FLAT = 1,\n    ROUND = 2\n};\n\nexport interface Point {\n    x: number;\n    y: number;\n    z: number;\n}\n\n/**\n * Lower level utilities for creating WebGL shape geometries.\n * These are not intended for general consumption.\n * @namespace \n  */\nexport namespace GLDraw {\n\n    // Rotation matrix around z and x axis -\n    // according to y basis vector\n    // TODO: Try to optimize this (square roots?)\n    function getRotationMatrix(dx: number, dy: number, dz: number) {\n        var dxy = Math.hypot(dx, dy);\n        var dyz;\n\n        var sinA, cosA, sinB, cosB;\n\n        // about z axis - Phi\n        if (dxy < 0.0001) {\n            sinA = 0;\n            cosA = 1;\n        }\n\n        else {\n            sinA = -dx / dxy;\n            cosA = dy / dxy;\n        }\n\n        // recast dy in terms of new axes - z is the same\n\n        dy = -sinA * dx + cosA * dy;\n        dyz = Math.hypot(dy, dz);\n\n        // about new x axis - Theta\n\n        if (dyz < 0.0001) {\n            sinB = 0;\n            cosB = 1;\n        }\n\n        else {\n            sinB = dz / dyz;\n            cosB = dy / dyz;\n        }\n\n        var rot = new Float32Array(9);\n        rot[0] = cosA;\n        rot[1] = sinA;\n        rot[2] = 0;\n        rot[3] = -sinA * cosB;\n        rot[4] = cosA * cosB;\n        rot[5] = sinB;\n        rot[6] = sinA * sinB;\n        rot[7] = -cosA * sinB;\n        rot[8] = cosB;\n\n        return rot;\n\n    };\n\n\n    // memoize capped cylinder for given radius cylVertexCache\n    class CylVertexCache {\n\n        // memoize both rounded and flat caps (hemisphere and circle)\n        cache: any = {};\n\n\n        // Ortho normal vectors for cylinder radius/ sphere cap equator and cones\n        // Direction is j basis (0,1,0)\n        basisVectors: any;\n\n        constructor() {\n\n            //initialize basisVectors\n            let nvecs = [];\n\n            let subdivisions = 4; // including the initial 2, eg. 4 => 16 subintervals\n            let N = Math.pow(2, subdivisions);  // eg. 2**4 = 16 subintervals in total\n            let i = 2;  // start with 2 subdivisions already done\n            let M = Math.pow(2, i); // 4\n            let spacing = N / M;  // 16/4 = 4; if there were 5 subdivs, then 32/4 = 8.\n            let j: number;\n\n            nvecs[0] = new Vector3(-1, 0, 0);\n            nvecs[spacing] = new Vector3(0, 0, 1);\n            nvecs[spacing * 2] = new Vector3(1, 0, 0);\n            nvecs[spacing * 3] = new Vector3(0, 0, -1);\n\n            for (i = 3; i <= subdivisions; i++) {\n                // eg. i=3, we need to add 2**(3-1) = 4 new vecs. Call it M.\n                // their spacing is N/M, eg. N=16, M=4, N/M=4; M=8, N/M=2.\n                // they start off at half this spacing\n                // and are equal to the average of the two vectors on either side\n                M = Math.pow(2, (i - 1));\n                spacing = N / M;\n                for (j = 0; j < (M - 1); j++) {\n                    nvecs[spacing / 2 + j * spacing] = nvecs[j * spacing].clone().add(nvecs[(j + 1) * spacing]).normalize();\n                }\n                // treat the last one specially so it wraps around to zero\n                j = M - 1;\n                nvecs[spacing / 2 + j * spacing] = nvecs[j * spacing].clone().add(nvecs[0]).normalize();\n            }\n\n            this.basisVectors = nvecs;\n        };\n\n        getVerticesForRadius(radius: any, cap: CAP, capType: any) {\n            if (typeof (this.cache) !== \"undefined\" && this.cache[radius] !== undefined)\n                if (this.cache[radius][cap + capType] !== undefined)\n                    return this.cache[radius][cap + capType];\n\n            var w = this.basisVectors.length;\n            var nvecs = [], norms = [];\n            var n;\n\n            for (var i = 0; i < w; i++) {\n                // bottom\n                nvecs.push(this.basisVectors[i].clone().multiplyScalar(radius));\n                // top\n                nvecs.push(this.basisVectors[i].clone().multiplyScalar(radius));\n\n                // NOTE: this normal is used for constructing sphere caps -\n                // cylinder normals taken care of in drawCylinder\n                n = this.basisVectors[i].clone().normalize();\n                norms.push(n);\n                norms.push(n);\n            }\n\n            // norms[0]\n\n            var verticesRows = [];\n\n            // Require that heightSegments is even and >= 2\n            // Equator points at h/2 (theta = pi/2)\n            // (repeated) polar points at 0 and h (theta = 0 and pi)\n            var heightSegments = 10, widthSegments = w; // 16 or however many\n            // basis vectors for\n            // cylinder\n\n            if (heightSegments % 2 !== 0 || !heightSegments) {\n                console.error(\"heightSegments must be even\");\n                return null;\n            }\n\n            var phiStart = 0;\n            var phiLength = Math.PI * 2;\n\n            var thetaStart = 0;\n            var thetaLength = Math.PI;\n\n            var x: number, y:number;\n            var polar = false, equator = false;\n\n            for (y = 0; y <= heightSegments; y++) {\n\n                polar = (y === 0 || y === heightSegments) ? true : false;\n                equator = (y === heightSegments / 2) ? true : false;\n\n                var verticesRow = [], toRow = [];\n\n                for (x = 0; x <= widthSegments; x++) {\n\n                    // Two vertices rows for equator pointing to previously\n                    // constructed cyl points\n                    if (equator) {\n                        var xi = (x < widthSegments) ? 2 * x : 0;\n                        toRow.push(xi + 1);\n                        verticesRow.push(xi);\n\n                        continue;\n                    }\n\n                    var u = x / widthSegments;\n                    var v = y / heightSegments;\n\n                    // Only push first polar point\n\n                    if (!polar || x === 0) {\n\n                        if (x < widthSegments) {\n                            var vertex = new Vector3();\n                            vertex.x = -radius *\n                                Math.cos(phiStart + u * phiLength) *\n                                Math.sin(thetaStart + v * thetaLength);\n                            if (cap == 1)\n                                vertex.y = 0;\n                            else\n                                vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n\n                            vertex.z = radius *\n                                Math.sin(phiStart + u * phiLength) *\n                                Math.sin(thetaStart + v * thetaLength);\n\n                            if (Math.abs(vertex.x) < 1e-5)\n                                vertex.x = 0;\n                            if (Math.abs(vertex.y) < 1e-5)\n                                vertex.y = 0;\n                            if (Math.abs(vertex.z) < 1e-5)\n                                vertex.z = 0;\n\n                            if (cap == CAP.FLAT) {\n                                n = new Vector3(0, Math.cos(thetaStart + v * thetaLength), 0);\n                                n.normalize();\n                            }\n                            else {\n                                n = new Vector3(vertex.x, vertex.y, vertex.z);\n                                n.normalize();\n                            }\n\n                            nvecs.push(vertex);\n                            norms.push(n);\n\n                            verticesRow.push(nvecs.length - 1);\n                        }\n\n                        // last point is just the first point for this row\n                        else {\n                            verticesRow.push(nvecs.length - widthSegments);\n                        }\n\n                    }\n\n                    // x > 0; index to already added point\n                    else if (polar)\n                        verticesRow.push(nvecs.length - 1);\n\n                }\n\n                // extra equator row\n                if (equator)\n                    verticesRows.push(toRow);\n\n                verticesRows.push(verticesRow);\n\n            }\n\n            var obj = {\n                vertices: nvecs,\n                normals: norms,\n                verticesRows: verticesRows,\n                w: widthSegments,\n                h: heightSegments\n            };\n\n            if (!(radius in this.cache)) this.cache[radius] = {};\n            this.cache[radius][cap + capType] = obj;\n\n            return obj;\n\n        }\n    };\n\n    var cylVertexCache = new CylVertexCache();\n\n    /** \n     * Create a cylinder \n     * @memberof GLDraw \n     * @param {Geometry}\n     *            geo\n     * @param {Point}\n     *            from\n     * @param {Point}\n     *            to\n     * @param {number}\n     *            radius\n     * @param {Color}\n     *            color\n     * @param {CAP} fromCap - 0 for none, 1 for flat, 2 for round\n     * @param {CAP} toCap = 0 for none, 1 for flat, 2 for round\n     *            \n     * */\n    export function drawCylinder(geo: Geometry, from: any, to: any, radius: number, color: Color | Color[], fromCap:CAP|string = 0, toCap:CAP|string = 0) {\n        if (!from || !to)\n            return;\n\n        let getcap = function(c: CAP|string): CAP {\n            if(typeof c === \"string\") {\n                let s = <string>c;\n                if(s.toLowerCase() == 'flat') {\n                    return CAP.FLAT;\n                } else if(s.toLowerCase() == 'round') {\n                    return CAP.ROUND;\n                } else {\n                    return CAP.NONE;\n                }\n            } else {\n                return <CAP>c;\n            }\n        }\n        fromCap = getcap(fromCap);\n        toCap = getcap(toCap);\n        \n        // vertices\n        var drawcaps = toCap || fromCap;\n        color = color || ({ r: 0, g: 0, b: 0 } as Color);\n\n        var e = getRotationMatrix(to.x-from.x, to.y-from.y, to.z-from.z);\n        // get orthonormal vectors from cache\n        // TODO: Will have orient with model view matrix according to direction\n\n        var vobj = cylVertexCache.getVerticesForRadius(radius, toCap, \"to\");\n        // w (n) corresponds to the number of orthonormal vectors for cylinder\n        // (default 16)\n        var n = vobj.w, h = vobj.h;\n\n        // get orthonormal vector\n        var n_verts = (drawcaps) ? h * n + 2 : 2 * n;\n\n        var geoGroup = geo.updateGeoGroup(n_verts);\n\n        var vertices = vobj.vertices, normals = vobj.normals, verticesRows = vobj.verticesRows;\n        var toRow = verticesRows[h / 2], fromRow = verticesRows[h / 2 + 1];\n\n        var start = geoGroup.vertices;\n        var offset, faceoffset;\n        var i, x, y, z;\n\n        var vertexArray = geoGroup.vertexArray;\n        var normalArray = geoGroup.normalArray;\n        var colorArray = geoGroup.colorArray;\n        var faceArray = geoGroup.faceArray;\n        // add vertices, opposing vertices paired together\n        for (i = 0; i < n; ++i) {\n\n            var vi = 2 * i;\n\n            x = e[0] * vertices[vi].x + e[3] * vertices[vi].y + e[6] * vertices[vi].z;\n            y = e[1] * vertices[vi].x + e[4] * vertices[vi].y + e[7] * vertices[vi].z;\n            z = e[5] * vertices[vi].y + e[8] * vertices[vi].z;\n\n            // var xn = x/radius, yn = y/radius, zn = z/radius;\n\n            offset = 3 * (start + vi);\n            faceoffset = geoGroup.faceidx;\n\n            // from\n            vertexArray[offset] = x + from.x;\n            vertexArray[offset + 1] = y + from.y;\n            vertexArray[offset + 2] = z + from.z;\n            // to\n            vertexArray[offset + 3] = x + to.x;\n            vertexArray[offset + 4] = y + to.y;\n            vertexArray[offset + 5] = z + to.z;\n\n            // normals\n            normalArray[offset] = x;\n            normalArray[offset + 3] = x;\n            normalArray[offset + 1] = y;\n            normalArray[offset + 4] = y;\n            normalArray[offset + 2] = z;\n            normalArray[offset + 5] = z;\n\n            // colors\n            colorArray[offset] = (color as Color).r;\n            colorArray[offset + 3] = (color as Color).r;\n            colorArray[offset + 1] = (color as Color).g;\n            colorArray[offset + 4] = (color as Color).g;\n            colorArray[offset + 2] = (color as Color).b;\n            colorArray[offset + 5] = (color as Color).b;\n\n            // faces\n            // 0 - 2 - 1\n            faceArray[faceoffset] = fromRow[i] + start;\n            faceArray[faceoffset + 1] = fromRow[i + 1] + start;\n            faceArray[faceoffset + 2] = toRow[i] + start;\n            // 1 - 2 - 3\n            faceArray[faceoffset + 3] = toRow[i] + start;\n            faceArray[faceoffset + 4] = fromRow[i + 1] + start;\n            faceArray[faceoffset + 5] = toRow[i + 1] + start;\n\n            geoGroup.faceidx += 6;\n\n        }\n\n        // SPHERE CAPS\n        if (drawcaps) {\n            // h - sphere rows, verticesRows.length - 2\n\n            var ystart = (toCap) ? 0 : h / 2;\n            var yend = (fromCap) ? h + 1 : h / 2 + 1;\n            var v1, v2, v3, v4, x1, x2, x3, x4, y1, y2, y3, y4, z1, z2, z3, z4, nx1, nx2, nx3, nx4, ny1, ny2, ny3, ny4, nz1, nz2, nz3, nz4, v1offset, v2offset, v3offset, v4offset;\n\n            for (y = ystart; y < yend; y++) {\n                if (y === h / 2)\n                    continue;\n                // n number of points for each level (verticesRows[i].length -\n                // 1)\n                var cap = (y <= h / 2) ? to : from;\n                var toObj = cylVertexCache.getVerticesForRadius(radius, toCap, \"to\");\n                var fromObj = cylVertexCache.getVerticesForRadius(radius, fromCap, \"from\");\n                if (cap === to) {\n                    vertices = toObj.vertices;\n                    normals = toObj.normals;\n                    verticesRows = toObj.verticesRows;\n                } else if (cap == from) {\n                    vertices = fromObj.vertices;\n                    normals = fromObj.normals;\n                    verticesRows = fromObj.verticesRows;\n                }\n                for (x = 0; x < n; x++) {\n\n                    faceoffset = geoGroup.faceidx;\n\n                    v1 = verticesRows[y][x + 1];\n                    v1offset = (v1 + start) * 3;\n                    v2 = verticesRows[y][x];\n                    v2offset = (v2 + start) * 3;\n                    v3 = verticesRows[y + 1][x];\n                    v3offset = (v3 + start) * 3;\n                    v4 = verticesRows[y + 1][x + 1];\n                    v4offset = (v4 + start) * 3;\n\n                    // rotate sphere vectors\n                    x1 = e[0] * vertices[v1].x + e[3] * vertices[v1].y + e[6] * vertices[v1].z;\n                    x2 = e[0] * vertices[v2].x + e[3] * vertices[v2].y + e[6] * vertices[v2].z;\n                    x3 = e[0] * vertices[v3].x + e[3] * vertices[v3].y + e[6] * vertices[v3].z;\n                    x4 = e[0] * vertices[v4].x + e[3] * vertices[v4].y + e[6] * vertices[v4].z;\n\n                    y1 = e[1] * vertices[v1].x + e[4] * vertices[v1].y + e[7] * vertices[v1].z;\n                    y2 = e[1] * vertices[v2].x + e[4] * vertices[v2].y + e[7] * vertices[v2].z;\n                    y3 = e[1] * vertices[v3].x + e[4] * vertices[v3].y + e[7] * vertices[v3].z;\n                    y4 = e[1] * vertices[v4].x + e[4] * vertices[v4].y + e[7] * vertices[v4].z;\n\n                    z1 = e[5] * vertices[v1].y + e[8] * vertices[v1].z;\n                    z2 = e[5] * vertices[v2].y + e[8] * vertices[v2].z;\n                    z3 = e[5] * vertices[v3].y + e[8] * vertices[v3].z;\n                    z4 = e[5] * vertices[v4].y + e[8] * vertices[v4].z;\n\n                    vertexArray[v1offset] = x1 + cap.x;\n                    vertexArray[v2offset] = x2 + cap.x;\n                    vertexArray[v3offset] = x3 + cap.x;\n                    vertexArray[v4offset] = x4 + cap.x;\n\n                    vertexArray[v1offset + 1] = y1 + cap.y;\n                    vertexArray[v2offset + 1] = y2 + cap.y;\n                    vertexArray[v3offset + 1] = y3 + cap.y;\n                    vertexArray[v4offset + 1] = y4 + cap.y;\n\n                    vertexArray[v1offset + 2] = z1 + cap.z;\n                    vertexArray[v2offset + 2] = z2 + cap.z;\n                    vertexArray[v3offset + 2] = z3 + cap.z;\n                    vertexArray[v4offset + 2] = z4 + cap.z;\n\n                    colorArray[v1offset] = (color as Color).r;\n                    colorArray[v2offset] = (color as Color).r;\n                    colorArray[v3offset] = (color as Color).r;\n                    colorArray[v4offset] = (color as Color).r;\n\n                    colorArray[v1offset + 1] = (color as Color).g;\n                    colorArray[v2offset + 1] = (color as Color).g;\n                    colorArray[v3offset + 1] = (color as Color).g;\n                    colorArray[v4offset + 1] = (color as Color).g;\n\n                    colorArray[v1offset + 2] = (color as Color).b;\n                    colorArray[v2offset + 2] = (color as Color).b;\n                    colorArray[v3offset + 2] = (color as Color).b;\n                    colorArray[v4offset + 2] = (color as Color).b;\n\n                    nx1 = e[0] * normals[v1].x + e[3] * normals[v1].y + e[6] * normals[v1].z;\n                    nx2 = e[0] * normals[v2].x + e[3] * normals[v2].y + e[6] * normals[v2].z;\n                    nx3 = e[0] * normals[v3].x + e[3] * normals[v3].y + e[6] * normals[v3].z;\n                    nx4 = e[0] * normals[v4].x + e[3] * normals[v4].y + e[6] * normals[v4].z;\n\n                    ny1 = e[1] * normals[v1].x + e[4] * normals[v1].y + e[7] * normals[v1].z;\n                    ny2 = e[1] * normals[v2].x + e[4] * normals[v2].y + e[7] * normals[v2].z;\n                    ny3 = e[1] * normals[v3].x + e[4] * normals[v3].y + e[7] * normals[v3].z;\n                    ny4 = e[1] * normals[v4].x + e[4] * normals[v4].y + e[7] * normals[v4].z;\n\n                    nz1 = e[5] * normals[v1].y + e[8] * normals[v1].z;\n                    nz2 = e[5] * normals[v2].y + e[8] * normals[v2].z;\n                    nz3 = e[5] * normals[v3].y + e[8] * normals[v3].z;\n                    nz4 = e[5] * normals[v4].y + e[8] * normals[v4].z;\n\n                    // if (Math.abs(vobj.sphereVertices[v1].y) === radius) {\n\n                    if (y === 0) {//to center circle\n                        // face = [v1, v3, v4];\n                        // norm = [n1, n3, n4];\n\n                        normalArray[v1offset] = nx1;\n                        normalArray[v3offset] = nx3;\n                        normalArray[v4offset] = nx4;\n                        normalArray[v1offset + 1] = ny1;\n                        normalArray[v3offset + 1] = ny3;\n                        normalArray[v4offset + 1] = ny4;\n                        normalArray[v1offset + 2] = nz1;\n                        normalArray[v3offset + 2] = nz3;\n                        normalArray[v4offset + 2] = nz4;\n\n                        faceArray[faceoffset] = v1 + start;\n                        faceArray[faceoffset + 1] = v3 + start;\n                        faceArray[faceoffset + 2] = v4 + start;\n\n                        geoGroup.faceidx += 3;\n\n                    }\n\n                    // else if (Math.abs(vobj.sphereVertices[v3].y) === radius)\n                    // {\n                    else if (y === yend - 1) {//from end center circle\n                        // face = [v1, v2, v3];\n                        // norm = [n1, n2, n3];\n\n                        normalArray[v1offset] = nx1;\n                        normalArray[v2offset] = nx2;\n                        normalArray[v3offset] = nx3;\n                        normalArray[v1offset + 1] = ny1;\n                        normalArray[v2offset + 1] = ny2;\n                        normalArray[v3offset + 1] = ny3;\n                        normalArray[v1offset + 2] = nz1;\n                        normalArray[v2offset + 2] = nz2;\n                        normalArray[v3offset + 2] = nz3;\n\n                        faceArray[faceoffset] = v1 + start;\n                        faceArray[faceoffset + 1] = v2 + start;\n                        faceArray[faceoffset + 2] = v3 + start;\n\n                        geoGroup.faceidx += 3;\n\n                    }\n\n                    else { // the rest of the circles\n                        // face = [v1, v2, v3, v4];\n                        // norm = [n1, n2, n3, n4];\n\n                        normalArray[v1offset] = nx1;\n                        normalArray[v2offset] = nx2;\n                        normalArray[v4offset] = nx4;\n                        normalArray[v1offset + 1] = ny1;\n                        normalArray[v2offset + 1] = ny2;\n                        normalArray[v4offset + 1] = ny4;\n                        normalArray[v1offset + 2] = nz1;\n                        normalArray[v2offset + 2] = nz2;\n                        normalArray[v4offset + 2] = nz4;\n\n                        normalArray[v2offset] = nx2;\n                        normalArray[v3offset] = nx3;\n                        normalArray[v4offset] = nx4;\n                        normalArray[v2offset + 1] = ny2;\n                        normalArray[v3offset + 1] = ny3;\n                        normalArray[v4offset + 1] = ny4;\n                        normalArray[v2offset + 2] = nz2;\n                        normalArray[v3offset + 2] = nz3;\n                        normalArray[v4offset + 2] = nz4;\n\n                        faceArray[faceoffset] = v1 + start;\n                        faceArray[faceoffset + 1] = v2 + start;\n                        faceArray[faceoffset + 2] = v4 + start;\n\n                        faceArray[faceoffset + 3] = v2 + start;\n                        faceArray[faceoffset + 4] = v3 + start;\n                        faceArray[faceoffset + 5] = v4 + start;\n\n                        geoGroup.faceidx += 6;\n                    }\n\n                }\n            }\n\n        }\n\n        geoGroup.vertices += n_verts;\n    };\n\n\n    /** Create a cone \n     * @memberof GLDraw\n     * @param {Geometry}\n     *            geo\n     * @param {Point}\n     *            from\n     * @param {Point}\n     *            to\n     * @param {number}\n     *            radius\n     * @param {Color}\n     *            color\n     *            */\n    export function drawCone (geo: Geometry, from: any, to: any, radius: number, color?: Color) {\n        if (!from || !to)\n            return;\n\n        // TODO: check if from and to do not contain x,y,z and if  so generate a center based on the passed selections\n\n        color = color || ({ r: 0, g: 0, b: 0 } as Color);\n\n        let ndir = new Vector3(to.x-from.x, to.y-from.y, to.z-from.z);\n        var e = getRotationMatrix(ndir.x, ndir.y, ndir.z);\n        ndir = ndir.normalize();\n\n        // n vertices around bottom plust the two points\n        var n = cylVertexCache.basisVectors.length;\n        var basis = cylVertexCache.basisVectors;\n        var n_verts = n + 2;\n\n        //setup geo structures\n        var geoGroup = geo.updateGeoGroup(n_verts);\n        var start = geoGroup.vertices;\n        var offset, faceoffset;\n        var i, x, y, z;\n        var vertexArray = geoGroup.vertexArray;\n        var normalArray = geoGroup.normalArray;\n        var colorArray = geoGroup.colorArray;\n        var faceArray = geoGroup.faceArray;\n\n        offset = start * 3;\n        //base point first vertex\n        vertexArray[offset] = from.x;\n        vertexArray[offset + 1] = from.y;\n        vertexArray[offset + 2] = from.z;\n        normalArray[offset] = -ndir.x;\n        normalArray[offset + 1] = -ndir.y;\n        normalArray[offset + 2] = -ndir.z;\n        colorArray[offset] = color.r;\n        colorArray[offset + 1] = color.g;\n        colorArray[offset + 2] = color.b;\n\n        //second vertex top\n        vertexArray[offset + 3] = to.x;\n        vertexArray[offset + 4] = to.y;\n        vertexArray[offset + 5] = to.z;\n\n        normalArray[offset + 3] = ndir.x;\n        normalArray[offset + 4] = ndir.y;\n        normalArray[offset + 5] = ndir.z;\n        colorArray[offset + 3] = color.r;\n        colorArray[offset + 4] = color.g;\n        colorArray[offset + 5] = color.b;\n\n        offset += 6;\n\n        // add circle vertices\n        for (i = 0; i < n; ++i) {\n            var vec = basis[i].clone();\n            vec.multiplyScalar(radius);\n            x = e[0] * vec.x + e[3] * vec.y + e[6] * vec.z;\n            y = e[1] * vec.x + e[4] * vec.y + e[7] * vec.z;\n            z = e[5] * vec.y + e[8] * vec.z;\n\n            // from\n            vertexArray[offset] = x + from.x;\n            vertexArray[offset + 1] = y + from.y;\n            vertexArray[offset + 2] = z + from.z;\n\n            // normals\n            normalArray[offset] = x;\n            normalArray[offset + 1] = y;\n            normalArray[offset + 2] = z;\n\n            // colors\n            colorArray[offset] = color.r;\n            colorArray[offset + 1] = color.g;\n            colorArray[offset + 2] = color.b;\n\n            offset += 3;\n\n        }\n        geoGroup.vertices += (n + 2);\n        //faces\n        faceoffset = geoGroup.faceidx;\n        for (i = 0; i < n; i++) {\n            //two neighboring circle vertices\n            var v1 = start + 2 + i;\n            var v2 = start + 2 + ((i + 1) % n);\n\n            faceArray[faceoffset] = v1;\n            faceArray[faceoffset + 1] = v2;\n            faceArray[faceoffset + 2] = start;\n            faceoffset += 3;\n            faceArray[faceoffset] = v1;\n            faceArray[faceoffset + 1] = v2;\n            faceArray[faceoffset + 2] = start + 1;\n            faceoffset += 3;\n        }\n        geoGroup.faceidx += 6 * n;\n    };\n\n    interface MyObject {\n        vertices: any[];\n        verticesRows: any[][];\n        normals: any[];\n     }\n\n    // Sphere component sphereVertexCache\n    class  SphereVertexCache {\n        private cache = new Map<number, Map<number, any>>(); //sphereQuality then radius\n        constructor() {}\n\n        getVerticesForRadius(radius: number, sphereQuality: any) {\n            sphereQuality = sphereQuality || 2;\n\n            if (!this.cache.has(sphereQuality))  {\n                this.cache.set(sphereQuality, new Map<number,any>());\n            }\n            let radiusCache = this.cache.get(sphereQuality);\n            if (radiusCache.has(radius))\n                return radiusCache.get(radius);\n\n            var obj: MyObject = {\n                vertices: [],\n                verticesRows: [],\n                normals: []\n            };\n            // scale quality with radius heuristically\n            var widthSegments = 16 * sphereQuality;\n            var heightSegments = 10 * sphereQuality;\n            if (radius < 1) {\n                widthSegments = 10 * sphereQuality;\n                heightSegments = 8 * sphereQuality;\n            }\n\n            var phiStart = 0;\n            var phiLength = Math.PI * 2;\n\n            var thetaStart = 0;\n            var thetaLength = Math.PI;\n\n            var x, y;\n\n            for (y = 0; y <= heightSegments; y++) {\n\n                let verticesRow = [];\n                for (x = 0; x <= widthSegments; x++) {\n\n                    let u = x / widthSegments;\n                    let v = y / heightSegments;\n\n                    let vx = -radius * Math.cos(phiStart + u * phiLength) *\n                        Math.sin(thetaStart + v * thetaLength);\n                    let vy = radius * Math.cos(thetaStart + v * thetaLength);\n                    let vz = radius * Math.sin(phiStart + u * phiLength) *\n                        Math.sin(thetaStart + v * thetaLength);\n\n                    var n = new Vector3(vx, vy, vz);\n                    n.normalize();\n\n                    obj.vertices.push({x: vx, y: vy, z: vz});\n                    obj.normals.push(n);\n\n                    verticesRow.push(obj.vertices.length - 1);\n\n                }\n\n                obj.verticesRows.push(verticesRow);\n\n            }\n\n            radiusCache.set(radius, obj);\n            return obj;\n        }\n\n    };\n    var sphereVertexCache = new SphereVertexCache();\n\n    /** Create a sphere.\n     * @memberof GLDraw\n     * @param {Geometry}\n     *            geo\n     * @param {Point}\n     *            pos\n     * @param {number}\n     *            radius\n     * @param {Color}\n     *            color\n     * @param {number} \n     *            sphereQuality - Quality of sphere (default 2, higher increases number of triangles)\n     */\n    export function drawSphere(geo:Geometry, pos: any, radius: number, color: Colored, sphereQuality?: number) {\n\n        var vobj = sphereVertexCache.getVerticesForRadius(radius, sphereQuality);\n\n        var vertices = vobj.vertices;\n        var normals = vobj.normals;\n\n        var geoGroup = geo.updateGeoGroup(vertices.length);\n\n        var start = geoGroup.vertices;\n        var vertexArray = geoGroup.vertexArray;\n        var colorArray = geoGroup.colorArray;\n        var faceArray = geoGroup.faceArray;\n        var lineArray = geoGroup.lineArray;\n        var normalArray = geoGroup.normalArray;\n\n        for (let i = 0, il = vertices.length; i < il; ++i) {\n            let offset = 3 * (start + i);\n            let v = vertices[i];\n\n            vertexArray[offset] = (v.x + pos.x);\n            vertexArray[offset + 1] = (v.y + pos.y);\n            vertexArray[offset + 2] = (v.z + pos.z);\n\n            colorArray[offset] = (color as Colored).r;\n            colorArray[offset + 1] = (color as Colored).g;\n            colorArray[offset + 2] = (color as Colored).b;\n\n        }\n\n        geoGroup.vertices += vertices.length;\n\n        let verticesRows = vobj.verticesRows;\n        let h = verticesRows.length - 1;\n\n        for (let y = 0; y < h; y++) {\n            let w = verticesRows[y].length - 1;\n            for (let x = 0; x < w; x++) {\n\n                let faceoffset = geoGroup.faceidx, lineoffset = geoGroup.lineidx;\n\n                let v1 = verticesRows[y][x + 1] + start, v1offset = v1 * 3;\n                let v2 = verticesRows[y][x] + start, v2offset = v2 * 3;\n                let v3 = verticesRows[y + 1][x] + start, v3offset = v3 * 3;\n                let v4 = verticesRows[y + 1][x + 1] + start, v4offset = v4 * 3;\n\n                let n1 = normals[v1 - start];\n                let n2 = normals[v2 - start];\n                let n3 = normals[v3 - start];\n                let n4 = normals[v4 - start];\n\n                if (Math.abs(vertices[v1 - start].y) === radius) {\n                    // face = [v1, v3, v4];\n                    // norm = [n1, n3, n4];\n\n                    normalArray[v1offset] = n1.x;\n                    normalArray[v3offset] = n3.x;\n                    normalArray[v4offset] = n4.x;\n                    normalArray[v1offset + 1] = n1.y;\n                    normalArray[v3offset + 1] = n3.y;\n                    normalArray[v4offset + 1] = n4.y;\n                    normalArray[v1offset + 2] = n1.z;\n                    normalArray[v3offset + 2] = n3.z;\n                    normalArray[v4offset + 2] = n4.z;\n\n                    faceArray[faceoffset] = v1;\n                    faceArray[faceoffset + 1] = v3;\n                    faceArray[faceoffset + 2] = v4;\n\n                    lineArray[lineoffset] = v1;\n                    lineArray[lineoffset + 1] = v3;\n                    lineArray[lineoffset + 2] = v1;\n                    lineArray[lineoffset + 3] = v4;\n                    lineArray[lineoffset + 4] = v3;\n                    lineArray[lineoffset + 5] = v4;\n\n                    geoGroup.faceidx += 3;\n                    geoGroup.lineidx += 6;\n\n                } else if (Math.abs(vertices[v3 - start].y) === radius) {\n                    // face = [v1, v2, v3];\n                    // norm = [n1, n2, n3];\n\n                    normalArray[v1offset] = n1.x;\n                    normalArray[v2offset] = n2.x;\n                    normalArray[v3offset] = n3.x;\n                    normalArray[v1offset + 1] = n1.y;\n                    normalArray[v2offset + 1] = n2.y;\n                    normalArray[v3offset + 1] = n3.y;\n                    normalArray[v1offset + 2] = n1.z;\n                    normalArray[v2offset + 2] = n2.z;\n                    normalArray[v3offset + 2] = n3.z;\n\n                    faceArray[faceoffset] = v1;\n                    faceArray[faceoffset + 1] = v2;\n                    faceArray[faceoffset + 2] = v3;\n\n                    lineArray[lineoffset] = v1;\n                    lineArray[lineoffset + 1] = v2;\n                    lineArray[lineoffset + 2] = v1;\n                    lineArray[lineoffset + 3] = v3;\n                    lineArray[lineoffset + 4] = v2;\n                    lineArray[lineoffset + 5] = v3;\n\n                    geoGroup.faceidx += 3;\n                    geoGroup.lineidx += 6;\n\n                } else {\n                    // face = [v1, v2, v3, v4];\n                    // norm = [n1, n2, n3, n4];\n\n                    normalArray[v1offset] = n1.x;\n                    normalArray[v2offset] = n2.x;\n                    normalArray[v4offset] = n4.x;\n                    normalArray[v1offset + 1] = n1.y;\n                    normalArray[v2offset + 1] = n2.y;\n                    normalArray[v4offset + 1] = n4.y;\n                    normalArray[v1offset + 2] = n1.z;\n                    normalArray[v2offset + 2] = n2.z;\n                    normalArray[v4offset + 2] = n4.z;\n\n                    normalArray[v2offset] = n2.x;\n                    normalArray[v3offset] = n3.x;\n                    normalArray[v4offset] = n4.x;\n                    normalArray[v2offset + 1] = n2.y;\n                    normalArray[v3offset + 1] = n3.y;\n                    normalArray[v4offset + 1] = n4.y;\n                    normalArray[v2offset + 2] = n2.z;\n                    normalArray[v3offset + 2] = n3.z;\n                    normalArray[v4offset + 2] = n4.z;\n\n                    faceArray[faceoffset] = v1;\n                    faceArray[faceoffset + 1] = v2;\n                    faceArray[faceoffset + 2] = v4;\n\n                    faceArray[faceoffset + 3] = v2;\n                    faceArray[faceoffset + 4] = v3;\n                    faceArray[faceoffset + 5] = v4;\n\n                    lineArray[lineoffset] = v1;\n                    lineArray[lineoffset + 1] = v2;\n                    lineArray[lineoffset + 2] = v1;\n                    lineArray[lineoffset + 3] = v4;\n\n                    lineArray[lineoffset + 4] = v2;\n                    lineArray[lineoffset + 5] = v3;\n                    lineArray[lineoffset + 6] = v3;\n                    lineArray[lineoffset + 7] = v4;\n\n                    geoGroup.faceidx += 6;\n                    geoGroup.lineidx += 8;\n\n                }\n\n            }\n        }\n\n    };\n\n}\n","// A model is a collection of related atoms.  Bonds are only allowed between\n//atoms in the same model.  An atom is uniquely specified by its model id and\n//its serial number.\n//A glmodel knows how to apply the styles on each atom to create a gl object\nimport { Geometry, Material, StickImposterMaterial } from \"./WebGL\";\nimport { Sphere, Cylinder } from \"./WebGL/shapes\";\nimport { Vector3, Matrix4, conversionMatrix3, Matrix3, XYZ } from \"./WebGL/math\";\nimport { Color, CC, ColorschemeSpec, ColorSpec } from \"./colors\";\nimport { InstancedMaterial, SphereImposterMaterial, MeshLambertMaterial, Object3D, Mesh, LineBasicMaterial, Line, LineStyle } from \"./WebGL\";\nimport { CAP, GLDraw } from \"./GLDraw\"\nimport { CartoonStyleSpec, drawCartoon } from \"./glcartoon\";\nimport { elementColors } from \"./colors\";\nimport { get, deepCopy, extend, getExtent, getAtomProperty, makeFunction, getPropertyRange, specStringToObject, getbin, getColorFromStyle, inflateString } from \"./utilities\";\nimport { Gradient } from \"./Gradient\";\nimport { Parsers } from \"./parsers\";\nimport { NetCDFReader } from \"netcdfjs\"\nimport { AtomSelectionSpec, AtomSpec } from \"./specs\";\nimport { GLViewer } from \"GLViewer\";\nimport { ArrowSpec } from \"GLShape\";\nimport { ParserOptionsSpec } from \"./parsers/ParserOptionsSpec\";\nimport { LabelSpec } from \"Label\";\nimport { assignBonds } from \"./parsers/utils/assignBonds\";\n\n/**\n * GLModel represents a group of related atoms\n * @class\n */\nexport class GLModel {\n\n    // class variables go here\n    static defaultAtomStyle: AtomStyleSpec = {\n        line: {}\n    };\n\n    static defaultlineWidth = 1.0;\n\n    // Reference: A. Bondi, J. Phys. Chem., 1964, 68, 441.\n    // https://en.wikipedia.org/wiki/Van_der_Waals_radius\n    static vdwRadii = {\n        \"H\": 1.2,\n        \"He\": 1.4,\n        \"Li\": 1.82,\n        \"Be\": 1.53,\n        \"B\": 1.92,\n        \"C\": 1.7,\n        \"N\": 1.55,\n        \"O\": 1.52,\n        \"F\": 1.47,\n        \"Ne\": 1.54,\n        \"Na\": 2.27,\n        \"Mg\": 1.73,\n        \"Al\": 1.84,\n        \"Si\": 2.1,\n        \"P\": 1.8,\n        \"S\": 1.8,\n        \"Cl\": 1.75,\n        \"Ar\": 1.88,\n        \"K\": 2.75,\n        \"Ca\": 2.31,\n        \"Ni\": 1.63,\n        \"Cu\": 1.4,\n        \"Zn\": 1.39,\n        \"Ga\": 1.87,\n        \"Ge\": 2.11,\n        \"As\": 1.85,\n        \"Se\": 1.9,\n        \"Br\": 1.85,\n        \"Kr\": 2.02,\n        \"Rb\": 3.03,\n        \"Sr\": 2.49,\n        \"Pd\": 1.63,\n        \"Ag\": 1.72,\n        \"Cd\": 1.58,\n        \"In\": 1.93,\n        \"Sn\": 2.17,\n        \"Sb\": 2.06,\n        \"Te\": 2.06,\n        \"I\": 1.98,\n        \"Xe\": 2.16,\n        \"Cs\": 3.43,\n        \"Ba\": 2.68,\n        \"Pt\": 1.75,\n        \"Au\": 1.66,\n        \"Hg\": 1.55,\n        \"Tl\": 1.96,\n        \"Pb\": 2.02,\n        \"Bi\": 2.07,\n        \"Po\": 1.97,\n        \"At\": 2.02,\n        \"Rn\": 2.20,\n        \"Fr\": 3.48,\n        \"Ra\": 2.83,\n        \"U\": 1.86\n    };\n\n    // class functions\n    // return true if a and b represent the same style\n    static sameObj(a, b) {\n        if (a && b)\n            return JSON.stringify(a) == JSON.stringify(b);\n        else\n            return a == b;\n    };\n\n    public unitCellObjects: any;\n\n    // private variables\n    private atoms: AtomSpec[] = [];\n    private frames: any = [];\n    private box: any = null;\n    private atomdfs: any = null; //depth first search over connected components\n    private id = 0;\n    private hidden: any = false;\n    private molObj: any = null;\n    private renderedMolObj: any = null;\n    private lastColors: any = null;\n    private modelData: any = {};\n    private modelDatas: any = null; //if there is different modelData per frame\n    private idMatrix = new Matrix4();\n    private dontDuplicateAtoms = true;\n    private defaultColor = elementColors.defaultColor;\n\n    private options: any;\n    private ElementColors: any;\n\n\n    private readonly defaultSphereRadius: number;\n    private readonly defaultCartoonQuality: number;\n    // bonds as cylinders\n    private readonly defaultStickRadius = 0.25;\n\n    constructor(mid, options?) {\n\n        this.options = options || {};\n        this.ElementColors = (this.options.defaultcolors) ? this.options.defaultcolors : elementColors.defaultColors;\n\n        this.defaultSphereRadius = (this.options.defaultSphereRadius) ? this.options.defaultSphereRadius : 1.5;\n        this.defaultCartoonQuality = (this.options.cartoonQuality) ? this.options.cartoonQuality : 10;\n        this.id = mid;\n    }\n    // return proper radius for atom given style\n    /**\n     *\n     * @param {AtomSpec} atom\n     * @param {atomstyle} style\n     * @return {number}\n     *\n     */\n    private getRadiusFromStyle(atom: AtomSpec, style: SphereStyleSpec | ClickSphereStyleSpec | CrossStyleSpec) {\n        var r = this.defaultSphereRadius;\n        if (typeof (style.radius) != \"undefined\")\n            r = style.radius;\n        else if (GLModel.vdwRadii[atom.elem])\n            r = GLModel.vdwRadii[atom.elem];\n        else if (atom.elem.length > 1) { //see if adjusting case helps\n            let e: string = atom.elem;\n            e = e[0].toUpperCase() + e[1].toLowerCase();\n            if (GLModel.vdwRadii[e])\n                r = GLModel.vdwRadii[e];\n        }\n\n        if (typeof (style.scale) != \"undefined\")\n            r *= style.scale;\n        return r;\n    };\n\n    // cross drawing\n\n    /**\n     *\n     * @param {AtomSpec} atom\n     * @param {Record<number, Geometry>} geos\n     */\n    private drawAtomCross(atom: AtomSpec, geos: Record<number, Geometry>) {\n        if (!atom.style.cross)\n            return;\n        var style = atom.style.cross;\n        if (style.hidden)\n            return;\n        var linewidth = (style.linewidth || GLModel.defaultlineWidth);\n        if (!geos[linewidth])\n            geos[linewidth] = new Geometry();\n\n        var geoGroup = geos[linewidth].updateGeoGroup(6);\n\n        var delta = this.getRadiusFromStyle(atom, style);\n\n        var points = [[delta, 0, 0], [-delta, 0, 0], [0, delta, 0],\n        [0, -delta, 0], [0, 0, delta], [0, 0, -delta]];\n\n        var clickable = atom.clickable || atom.hoverable;\n        if (clickable && atom.intersectionShape === undefined)\n            atom.intersectionShape = { sphere: [], cylinder: [], line: [] };\n\n        var c = getColorFromStyle(atom, style);\n\n        var vertexArray = geoGroup.vertexArray;\n        var colorArray = geoGroup.colorArray;\n\n        for (var j = 0; j < 6; j++) {\n\n            var offset = geoGroup.vertices * 3;\n\n            geoGroup.vertices++;\n            vertexArray[offset] = atom.x + points[j][0];\n            vertexArray[offset + 1] = atom.y + points[j][1];\n            vertexArray[offset + 2] = atom.z + points[j][2];\n            colorArray[offset] = c.r;\n            colorArray[offset + 1] = c.g;\n            colorArray[offset + 2] = c.b;\n\n            if (clickable) {\n                var point = new Vector3(points[j][0], points[j][1], points[j][2]);\n\n                //decrease cross size for selection to prevent misselection from atom overlap\n                point.multiplyScalar(0.1);\n                point.set(point.x + atom.x, point.y + atom.y, point.z + atom.z);\n                atom.intersectionShape.line.push(point);\n            }\n\n        }\n\n    };\n\n    private getGoodCross(atom: AtomSpec, atom2: AtomSpec, p1, dir) {\n        // get vector 2 different neighboring atom\n        //find most divergent neighbor\n        var bestv = null;\n        var bestlen = -1;\n        for (var j = 0, n = atom.bonds.length; j < n; j++) {\n            if (atom.bonds[j] != atom2.index) {\n                let j2 = atom.bonds[j];\n                let atom3 = this.atoms[j2];\n                let p3 = new Vector3(atom3.x, atom3.y, atom3.z);\n\n                let dir2 = p3.clone();\n                dir2.sub(p1);\n\n                let v = dir2.clone();\n                v.cross(dir);\n                var l = v.lengthSq();\n                if (l > bestlen) {\n                    bestlen = l;\n                    bestv = v;\n                    if (bestlen > 0.1) {\n                        return bestv;\n                    }\n                }\n            }\n        }\n        return bestv;\n    };\n\n\n    //from atom, return a normalized vector v that is orthogonal and along which\n    //it is appropraite to draw multiple bonds\n    private getSideBondV(atom: AtomSpec, atom2: AtomSpec, i: number) {\n\n        var i2, j2, atom3, p3, dir2;\n        var p1 = new Vector3(atom.x, atom.y, atom.z);\n        var p2 = new Vector3(atom2.x, atom2.y, atom2.z);\n        var dir = p2.clone();\n        var v = null;\n        dir.sub(p1);\n\n\n        if (atom.bonds.length === 1) {\n            if (atom2.bonds.length === 1) {\n                v = dir.clone();\n                if (Math.abs(v.x) > 0.0001)\n                    v.y += 1;\n                else\n                    v.x += 1;\n            } else {\n                i2 = (i + 1) % atom2.bonds.length;\n                j2 = atom2.bonds[i2];\n                atom3 = this.atoms[j2];\n                if (atom3.index == atom.index) { // get distinct atom\n                    i2 = (i2 + 1) % atom2.bonds.length;\n                    j2 = atom2.bonds[i2];\n                    atom3 = this.atoms[j2];\n                }\n                p3 = new Vector3(atom3.x, atom3.y, atom3.z);\n\n                dir2 = p3.clone();\n                dir2.sub(p1);\n\n                v = dir2.clone();\n                v.cross(dir);\n            }\n        } else {\n            v = this.getGoodCross(atom, atom2, p1, dir);\n\n            if (v.lengthSq() < 0.01) {\n                var v2 = this.getGoodCross(atom2, atom, p1, dir);\n                if (v2 != null) v = v2; //can be null if no other neighbors\n            }\n        }\n\n        // especially for C#C (triple bond) dir and dir2\n        // may be opposites resulting in a zero v\n        if (v.lengthSq() < 0.01) {\n            v = dir.clone();\n            if (Math.abs(v.x) > 0.0001)\n                v.y += 1;\n            else\n                v.x += 1;\n        }\n\n        v.cross(dir);\n        v.normalize();\n\n        return v;\n    };\n\n    private addLine(vertexArray, colorArray, offset, p1: Vector3, p2: Vector3, c1: Color) {\n        //make line from p1 to p2, does not incremeant counts\n        vertexArray[offset] = p1.x; vertexArray[offset + 1] = p1.y; vertexArray[offset + 2] = p1.z;\n        colorArray[offset] = c1.r; colorArray[offset + 1] = c1.g; colorArray[offset + 2] = c1.b;\n        vertexArray[offset + 3] = p2.x; vertexArray[offset + 4] = p2.y; vertexArray[offset + 5] = p2.z;\n        colorArray[offset + 3] = c1.r; colorArray[offset + 4] = c1.g; colorArray[offset + 5] = c1.b;\n    };\n\n\n    // bonds - both atoms must match bond style\n    // standardize on only drawing for lowest to highest\n    /**\n     *\n     * @param {AtomSpec}\n     *            atom\n     * @param {AtomSpec[]} atoms\n     * @param {Record<number,Geometry>} geos\n     */\n    private drawBondLines(atom: AtomSpec, atoms: AtomSpec[], geos: Record<number, Geometry>) {\n        if (!atom.style.line)\n            return;\n        var style = atom.style.line;\n        if (style.hidden)\n            return;\n        var p1a, p1b, p2a, p2b;\n        // have a separate geometry for each linewidth\n        var linewidth = (style.linewidth || GLModel.defaultlineWidth);\n\n        if (!geos[linewidth])\n            geos[linewidth] = new Geometry();\n        /** @type {geometryGroup} */\n        var geoGroup = geos[linewidth].updateGeoGroup(6 * atom.bonds.length); //reserve enough space even for triple bonds\n\n        var vertexArray = geoGroup.vertexArray;\n        var colorArray = geoGroup.colorArray;\n\n        for (var i = 0; i < atom.bonds.length; i++) {\n            var j = atom.bonds[i]; // our neighbor\n\n            var atom2 = atoms[j];\n            if (!atom2.style.line)\n                continue; // don't sweat the details\n\n            if (atom.index >= atom2.index) // only draw if less, this way we can do multi bonds correctly\n                continue;\n            var p1 = new Vector3(atom.x, atom.y, atom.z);\n            var p2 = new Vector3(atom2.x, atom2.y, atom2.z);\n            var mp = p1.clone().add(p2).multiplyScalar(0.5);\n            var singleBond = false;\n\n            var atomneedsi = atom.clickable || atom.hoverable;\n            var atom2needsi = atom2.clickable || atom2.hoverable;\n\n            if (atomneedsi || atom2needsi) {\n                if (atomneedsi) {\n                    if (atom.intersectionShape === undefined)\n                        atom.intersectionShape = { sphere: [], cylinder: [], line: [], triangle: [] };\n                    atom.intersectionShape.line.push(p1);\n                    atom.intersectionShape.line.push(mp);\n                }\n                if (atom2needsi) {\n                    if (atom2.intersectionShape === undefined)\n                        atom2.intersectionShape = { sphere: [], cylinder: [], line: [], triangle: [] };\n                    atom2.intersectionShape.line.push(mp);\n                    atom2.intersectionShape.line.push(p2);\n                }\n            }\n            var c1 = getColorFromStyle(atom, atom.style.line);\n            var c2 = getColorFromStyle(atom2, atom2.style.line);\n\n            if (atom.bondStyles && atom.bondStyles[i]) {\n                var bstyle = atom.bondStyles[i];\n                if (!bstyle.iswire) {\n                    continue;\n                }\n                if (bstyle.singleBond) singleBond = true;\n                if (typeof (bstyle.color1) != \"undefined\") {\n                    c1 = CC.color(bstyle.color1) as Color;\n                }\n                if (typeof (bstyle.color2) != \"undefined\") {\n                    c2 = CC.color(bstyle.color2) as Color;\n                }\n            }\n\n            var offset = geoGroup.vertices * 3;\n            var mpa, mpb;\n\n            if (atom.bondOrder[i] > 1 && atom.bondOrder[i] < 4 && !singleBond) {\n                var v = this.getSideBondV(atom, atom2, i);\n                var dir = p2.clone();\n                dir.sub(p1);\n\n                if (atom.bondOrder[i] == 2) { //double\n\n                    v.multiplyScalar(0.1);\n                    p1a = p1.clone();\n                    p1a.add(v);\n                    p1b = p1.clone();\n                    p1b.sub(v);\n\n                    p2a = p1a.clone();\n                    p2a.add(dir);\n                    p2b = p1b.clone();\n                    p2b.add(dir);\n\n                    if (c1 == c2) {\n                        geoGroup.vertices += 4;\n                        this.addLine(vertexArray, colorArray, offset, p1a, p2a, c1);\n                        this.addLine(vertexArray, colorArray, offset + 6, p1b, p2b, c1);\n                    }\n                    else {\n                        geoGroup.vertices += 8;\n                        dir.multiplyScalar(0.5);\n                        mpa = p1a.clone();\n                        mpa.add(dir);\n                        mpb = p1b.clone();\n                        mpb.add(dir);\n\n                        this.addLine(vertexArray, colorArray, offset, p1a, mpa, c1);\n                        this.addLine(vertexArray, colorArray, offset + 6, mpa, p2a, c2);\n                        this.addLine(vertexArray, colorArray, offset + 12, p1b, mpb, c1);\n                        this.addLine(vertexArray, colorArray, offset + 18, mpb, p2b, c2);\n                    }\n                }\n                else if (atom.bondOrder[i] == 3) { //triple\n\n                    v.multiplyScalar(0.1);\n                    p1a = p1.clone();\n                    p1a.add(v);\n                    p1b = p1.clone();\n                    p1b.sub(v);\n\n                    p2a = p1a.clone();\n                    p2a.add(dir);\n                    p2b = p1b.clone();\n                    p2b.add(dir);\n\n                    if (c1 == c2) {\n                        geoGroup.vertices += 6;\n                        this.addLine(vertexArray, colorArray, offset, p1, p2, c1);\n                        this.addLine(vertexArray, colorArray, offset + 6, p1a, p2a, c1);\n                        this.addLine(vertexArray, colorArray, offset + 12, p1b, p2b, c1);\n                    }\n                    else {\n                        geoGroup.vertices += 12;\n                        dir.multiplyScalar(0.5);\n                        mpa = p1a.clone();\n                        mpa.add(dir);\n                        mpb = p1b.clone();\n                        mpb.add(dir);\n\n                        this.addLine(vertexArray, colorArray, offset, p1, mp, c1);\n                        this.addLine(vertexArray, colorArray, offset + 6, mp, p2, c2);\n                        this.addLine(vertexArray, colorArray, offset + 12, p1a, mpa, c1);\n                        this.addLine(vertexArray, colorArray, offset + 18, mpa, p2a, c2);\n                        this.addLine(vertexArray, colorArray, offset + 24, p1b, mpb, c1);\n                        this.addLine(vertexArray, colorArray, offset + 30, mpb, p2b, c2);\n                    }\n                }\n            }\n            else { //single bond\n                if (c1 == c2) {\n                    geoGroup.vertices += 2;\n                    this.addLine(vertexArray, colorArray, offset, p1, p2, c1);\n                } else {\n                    geoGroup.vertices += 4;\n                    this.addLine(vertexArray, colorArray, offset, p1, mp, c1);\n                    this.addLine(vertexArray, colorArray, offset + 6, mp, p2, c2);\n                }\n\n            }\n        }\n\n    };\n\n    //sphere drawing\n    //See also: drawCylinder\n    /**\n     *\n     * @param {AtomSpec} atom\n     * @param {Geometry} geo\n     */\n    private drawAtomSphere(atom: AtomSpec, geo: Geometry) {\n\n        if (!atom.style.sphere)\n            return;\n        var style = atom.style.sphere;\n        if (style.hidden)\n            return;\n\n        var C = getColorFromStyle(atom, style);\n\n        var radius = this.getRadiusFromStyle(atom, style);\n\n        if ((atom.clickable === true || atom.hoverable) && (atom.intersectionShape !== undefined)) {\n            var center = new Vector3(atom.x, atom.y, atom.z);\n            atom.intersectionShape.sphere.push(new Sphere(center, radius));\n        }\n\n        GLDraw.drawSphere(geo, atom, radius, C);\n    };\n\n    /** Register atom shaped click handlers */\n    private drawAtomClickSphere(atom: AtomSpec) {\n\n        if (!atom.style.clicksphere)\n            return;\n        var style = atom.style.clicksphere;\n        if (style.hidden)\n            return;\n\n        var radius = this.getRadiusFromStyle(atom, style);\n\n        if ((atom.clickable === true || atom.hoverable) && (atom.intersectionShape !== undefined)) {\n            var center = new Vector3(atom.x, atom.y, atom.z);\n            atom.intersectionShape.sphere.push(new Sphere(center, radius));\n        }\n    };\n\n    private drawAtomInstanced(atom: AtomSpec, geo: Geometry) {\n\n        if (!atom.style.sphere)\n            return;\n        var style = atom.style.sphere;\n        if (style.hidden)\n            return;\n\n        var radius = this.getRadiusFromStyle(atom, style);\n        var C = getColorFromStyle(atom, style);\n\n        var geoGroup = geo.updateGeoGroup(1);\n        var startv = geoGroup.vertices;\n        var start = startv * 3;\n        var vertexArray = geoGroup.vertexArray;\n        var colorArray = geoGroup.colorArray;\n        var radiusArray = geoGroup.radiusArray;\n\n        vertexArray[start] = atom.x;\n        vertexArray[start + 1] = atom.y;\n        vertexArray[start + 2] = atom.z;\n\n        colorArray[start] = C.r;\n        colorArray[start + 1] = C.g;\n        colorArray[start + 2] = C.b;\n\n        radiusArray[startv] = radius;\n\n        if ((atom.clickable === true || atom.hoverable) && (atom.intersectionShape !== undefined)) {\n            var center = new Vector3(atom.x, atom.y, atom.z);\n            atom.intersectionShape.sphere.push(new Sphere(center, radius));\n        }\n\n        geoGroup.vertices += 1;\n\n    };\n\n    private drawSphereImposter(geo: Geometry, center: XYZ, radius: number, C: Color) {\n        //create flat square\n        var geoGroup = geo.updateGeoGroup(4);\n        var i;\n        var startv = geoGroup.vertices;\n        var start = startv * 3;\n        var vertexArray = geoGroup.vertexArray;\n        var colorArray = geoGroup.colorArray;\n\n        //use center point for each vertex\n        for (i = 0; i < 4; i++) {\n            vertexArray[start + 3 * i] = center.x;\n            vertexArray[start + 3 * i + 1] = center.y;\n            vertexArray[start + 3 * i + 2] = center.z;\n        }\n\n\n        //same colors for all 4 vertices\n        var normalArray = geoGroup.normalArray;\n        for (i = 0; i < 4; i++) {\n            colorArray[start + 3 * i] = C.r;\n            colorArray[start + 3 * i + 1] = C.g;\n            colorArray[start + 3 * i + 2] = C.b;\n        }\n\n        normalArray[start + 0] = -radius;\n        normalArray[start + 1] = radius;\n        normalArray[start + 2] = 0;\n\n        normalArray[start + 3] = -radius;\n        normalArray[start + 4] = -radius;\n        normalArray[start + 5] = 0;\n\n        normalArray[start + 6] = radius;\n        normalArray[start + 7] = -radius;\n        normalArray[start + 8] = 0;\n\n        normalArray[start + 9] = radius;\n        normalArray[start + 10] = radius;\n        normalArray[start + 11] = 0;\n\n        geoGroup.vertices += 4;\n\n        //two faces\n        var faceArray = geoGroup.faceArray;\n        var faceoffset = geoGroup.faceidx; //not number faces, but index\n        faceArray[faceoffset + 0] = startv;\n        faceArray[faceoffset + 1] = startv + 1;\n        faceArray[faceoffset + 2] = startv + 2;\n        faceArray[faceoffset + 3] = startv + 2;\n        faceArray[faceoffset + 4] = startv + 3;\n        faceArray[faceoffset + 5] = startv;\n        geoGroup.faceidx += 6;\n    };\n\n    //dkoes -  code for sphere imposters\n    private drawAtomImposter(atom: AtomSpec, geo: Geometry) {\n\n        if (!atom.style.sphere)\n            return;\n        var style = atom.style.sphere;\n        if (style.hidden)\n            return;\n\n        var radius = this.getRadiusFromStyle(atom, style);\n        var C = getColorFromStyle(atom, style);\n\n        if ((atom.clickable === true || atom.hoverable) && (atom.intersectionShape !== undefined)) {\n            var center = new Vector3(atom.x, atom.y, atom.z);\n            atom.intersectionShape.sphere.push(new Sphere(center, radius));\n        }\n\n        this.drawSphereImposter(geo, atom as XYZ, radius, C);\n    };\n\n    private calculateDashes(from: XYZ, to: XYZ, radius: number, dashLength: number, gapLength: number) {\n        // Calculate the length of a cylinder defined by two points 'from' and 'to'.\n        var cylinderLength = Math.sqrt(\n            Math.pow((from.x - to.x), 2) +\n            Math.pow((from.y - to.y), 2) +\n            Math.pow((from.z - to.z), 2)\n        );\n\n        // Ensure non-negative values for radius, dashLength, and gapLength.\n        // Adjust gapLength to include the radius of the cylinder.\n        radius = Math.max(radius, 0);\n        gapLength = Math.max(gapLength, 0) + 2 * radius;\n        dashLength = Math.max(dashLength, 0.001);\n\n        // Handle cases where the combined length of dash and gap exceeds the cylinder's length.\n        // In such cases, use a single dash to represent the entire cylinder with no gaps.\n        if (dashLength + gapLength > cylinderLength) {\n            dashLength = cylinderLength;\n            gapLength = 0; // No gap as the dash fills the entire cylinder.\n        }\n\n        // Calculate the total number of dash-gap segments that can fit within the cylinder.\n        var totalSegments = Math.floor((cylinderLength - dashLength) / (dashLength + gapLength)) + 1;\n\n        // Compute the total length covered by dashes.\n        var totalDashLength = totalSegments * dashLength;\n\n        // Recalculate gap length to evenly distribute remaining space among gaps.\n        // This ensures dashes and gaps are evenly spaced within the cylinder.\n        gapLength = (cylinderLength - totalDashLength) / totalSegments;\n\n        var new_to;\n        var new_from = new Vector3(from.x, from.y, from.z);\n\n        var gapVector = new Vector3((to.x - from.x) / (cylinderLength / gapLength), (to.y - from.y) / (cylinderLength / gapLength), (to.z - from.z) / (cylinderLength / gapLength));\n        var dashVector = new Vector3((to.x - from.x) / (cylinderLength / dashLength), (to.y - from.y) / (cylinderLength / dashLength), (to.z - from.z) / (cylinderLength / dashLength));\n\n        var segments = [];\n        for (var place = 0; place < totalSegments; place++) {\n            new_to = new Vector3(new_from.x + dashVector.x, new_from.y + dashVector.y, new_from.z + dashVector.z);\n            segments.push({ from: new_from, to: new_to });\n            new_from = new Vector3(new_to.x + gapVector.x, new_to.y + gapVector.y, new_to.z + gapVector.z);\n        }\n\n        return segments;\n    }\n\n    static drawStickImposter(geo: Geometry, from: XYZ, to: XYZ, radius: number, color: Color, fromCap: CAP = 0, toCap: CAP = 0) {\n        //we need the four corners - two have from coord, two have to coord, the normal\n        //is the opposing point, from which we can get the normal and length\n        //also need the radius\n        var geoGroup = geo.updateGeoGroup(4);\n        var startv = geoGroup.vertices;\n        var start = startv * 3;\n        var vertexArray = geoGroup.vertexArray;\n        var colorArray = geoGroup.colorArray;\n        var radiusArray = geoGroup.radiusArray;\n        var normalArray = geoGroup.normalArray;\n        //encode extra bits of information in the color\n        var r = color.r;\n        var g = color.g;\n        var b = color.b;\n\n        var negateColor = function (c) {\n            //set sign bit\n            var n = -c;\n            if (n == 0) n = -0.0001;\n            return n;\n        };\n\n        /* for sticks, always draw caps, but we could in theory set caps in color */\n\n        //4 vertices, distinguish between p1 and p2 with neg blue\n        var pos = start;\n        for (var i = 0; i < 4; i++) {\n            vertexArray[pos] = from.x;\n            normalArray[pos] = to.x;\n            colorArray[pos] = r;\n            pos++;\n            vertexArray[pos] = from.y;\n            normalArray[pos] = to.y;\n            colorArray[pos] = g;\n            pos++;\n            vertexArray[pos] = from.z;\n            normalArray[pos] = to.z;\n            if (i < 2)\n                colorArray[pos] = b;\n            else\n                colorArray[pos] = negateColor(b);\n            pos++;\n        }\n\n        geoGroup.vertices += 4;\n\n        radiusArray[startv] = -radius;\n        radiusArray[startv + 1] = radius;\n        radiusArray[startv + 2] = -radius;\n        radiusArray[startv + 3] = radius;\n\n        //two faces\n        var faceArray = geoGroup.faceArray;\n        var faceoffset = geoGroup.faceidx; //not number faces, but index\n        faceArray[faceoffset + 0] = startv;\n        faceArray[faceoffset + 1] = startv + 1;\n        faceArray[faceoffset + 2] = startv + 2;\n        faceArray[faceoffset + 3] = startv + 2;\n        faceArray[faceoffset + 4] = startv + 3;\n        faceArray[faceoffset + 5] = startv;\n        geoGroup.faceidx += 6;\n    };\n\n    // draws cylinders and small spheres (at bond radius)\n    private drawBondSticks(atom: AtomSpec, atoms: AtomSpec[], geo: Geometry) {\n        if (!atom.style.stick)\n            return;\n        var style = atom.style.stick;\n        if (style.hidden)\n            return;\n\n        var atomBondR = style.radius || this.defaultStickRadius;\n        var doubleBondScale = style.doubleBondScaling || 0.4;\n        var tripleBondScale = style.tripleBondScaling || 0.25;\n\n        var bondDashLength = style.dashedBondConfig?.dashLength || 0.1;\n        var bondGapLength = style.dashedBondConfig?.gapLength || 0.25;\n\n        var bondR = atomBondR;\n        var atomSingleBond = style.singleBonds || false;\n        var atomDashedBonds = style.dashedBonds || false;\n        var fromCap = 0, toCap = 0;\n        var atomneedsi, atom2needsi, i, singleBond, bstyle;\n        var cylinder1a, cylinder1b, cylinder1c, cylinder2a, cylinder2b, cylinder2c;\n\n        var C1 = getColorFromStyle(atom, style);\n\n        var mp, mp2, mp3;\n\n        if (!atom.capDrawn && atom.bonds.length < 4)\n            fromCap = 2;\n\n        var selectCylDrawMethod = (bondOrder) => {\n            var drawMethod = geo.imposter ? GLModel.drawStickImposter : GLDraw.drawCylinder;\n\n            if (!atomDashedBonds && bondOrder >= 1) {\n                return drawMethod;\n            }\n\n            // draw dashes\n            return (geo, from, to, radius, color, fromCap = 0, toCap = 0, dashLength = 0.1, gapLength = 0.25) => {\n                var segments = this.calculateDashes(from, to, radius, dashLength, gapLength);\n                segments.forEach(segment => {\n                    drawMethod(geo, segment.from, segment.to, radius, color, fromCap, toCap);\n                });\n            };\n        };\n\n        for (i = 0; i < atom.bonds.length; i++) {\n            var drawCyl = selectCylDrawMethod(atom.bondOrder[i]);\n            var j = atom.bonds[i]; // our neighbor\n            var atom2 = atoms[j]; //parsePDB, etc should only add defined bonds\n            mp = mp2 = mp3 = null;\n            if (atom.index < atom2.index) {// only draw if less, this\n                // lets us combine\n                // cylinders of the same\n                // color\n                var style2 = atom2.style;\n                if (!style2.stick || style2.stick.hidden)\n                    continue; // don't sweat the details\n\n                var C2 = getColorFromStyle(atom2, style2.stick);\n\n                //support bond specific styles\n                bondR = atomBondR;\n                singleBond = atomSingleBond;\n                if (atom.bondStyles && atom.bondStyles[i]) {\n                    bstyle = atom.bondStyles[i];\n                    if (bstyle.iswire) {\n                        continue;\n                    }\n                    if (bstyle.radius) bondR = bstyle.radius;\n                    if (bstyle.singleBond) singleBond = true;\n                    if (typeof (bstyle.color1) != \"undefined\") {\n                        C1 = CC.color(bstyle.color1) as Color;\n                    }\n                    if (typeof (bstyle.color2) != \"undefined\") {\n                        C2 = CC.color(bstyle.color2) as Color;\n                    }\n                }\n                var p1 = new Vector3(atom.x, atom.y, atom.z);\n                var p2 = new Vector3(atom2.x, atom2.y, atom2.z);\n\n                // draw cylinders\n                if (atom.bondOrder[i] <= 1 || singleBond || atom.bondOrder[i] > 3) { //TODO: aromatics at 4\n\n                    if (atom.bondOrder[i] < 1) bondR *= atom.bondOrder[i];\n                    if (!atom2.capDrawn && atom2.bonds.length < 4)\n                        toCap = 2;\n\n                    if (C1 != C2) {\n                        mp = new Vector3().addVectors(p1, p2)\n                            .multiplyScalar(0.5);\n                        drawCyl(geo, p1, mp, bondR, C1, fromCap, 0, bondDashLength, bondGapLength);\n                        drawCyl(geo, mp, p2, bondR, C2, 0, toCap, bondDashLength, bondGapLength);\n                    } else {\n                        drawCyl(geo, p1, p2, bondR, C1, fromCap, toCap, bondDashLength, bondGapLength);\n                    }\n\n\n                    atomneedsi = atom.clickable || atom.hoverable;\n                    atom2needsi = atom2.clickable || atom2.hoverable;\n\n                    if (atomneedsi || atom2needsi) {\n                        if (!mp) mp = new Vector3().addVectors(p1, p2).multiplyScalar(0.5);\n                        if (atomneedsi) {\n                            var cylinder1 = new Cylinder(p1, mp, bondR);\n                            var sphere1 = new Sphere(p1, bondR);\n                            atom.intersectionShape.cylinder.push(cylinder1);\n                            atom.intersectionShape.sphere.push(sphere1);\n                        }\n                        if (atom2needsi) {\n                            var cylinder2 = new Cylinder(p2, mp, bondR);\n                            var sphere2 = new Sphere(p2, bondR);\n                            atom2.intersectionShape.cylinder.push(cylinder2);\n                            atom2.intersectionShape.sphere.push(sphere2);\n                        }\n                    }\n                }\n                else if (atom.bondOrder[i] > 1) {\n                    //multi bond caps\n                    var mfromCap = 0;\n                    var mtoCap = 0;\n\n                    if (bondR != atomBondR) {\n                        //assume jmol style multiple bonds - the radius doesn't fit within atom sphere\n                        mfromCap = 2;\n                        mtoCap = 2;\n                    }\n\n                    var dir = p2.clone();\n                    var v = null;\n                    dir.sub(p1);\n\n                    var r, p1a, p1b, p2a, p2b;\n                    v = this.getSideBondV(atom, atom2, i);\n\n                    if (atom.bondOrder[i] == 2) {\n                        r = bondR * doubleBondScale;\n\n                        v.multiplyScalar(r * 1.5);\n                        p1a = p1.clone();\n                        p1a.add(v);\n                        p1b = p1.clone();\n                        p1b.sub(v);\n\n                        p2a = p1a.clone();\n                        p2a.add(dir);\n                        p2b = p1b.clone();\n                        p2b.add(dir);\n\n                        if (C1 != C2) {\n                            mp = new Vector3().addVectors(p1a, p2a)\n                                .multiplyScalar(0.5);\n                            mp2 = new Vector3().addVectors(p1b, p2b)\n                                .multiplyScalar(0.5);\n                            drawCyl(geo, p1a, mp, r, C1, mfromCap, 0);\n                            drawCyl(geo, mp, p2a, r, C2, 0, mtoCap);\n                            drawCyl(geo, p1b, mp2, r, C1, mfromCap, 0);\n                            drawCyl(geo, mp2, p2b, r, C2, 0, mtoCap);\n                        } else {\n                            drawCyl(geo, p1a, p2a, r, C1, mfromCap, mtoCap);\n                            drawCyl(geo, p1b, p2b, r, C1, mfromCap, mtoCap);\n                        }\n\n                        atomneedsi = atom.clickable || atom.hoverable;\n                        atom2needsi = atom2.clickable || atom2.hoverable;\n\n                        if (atomneedsi || atom2needsi) {\n                            if (!mp) mp = new Vector3().addVectors(p1a, p2a)\n                                .multiplyScalar(0.5);\n                            if (!mp2) mp2 = new Vector3().addVectors(p1b, p2b)\n                                .multiplyScalar(0.5);\n                            if (atomneedsi) {\n                                cylinder1a = new Cylinder(p1a, mp, r);\n                                cylinder1b = new Cylinder(p1b, mp2, r);\n                                atom.intersectionShape.cylinder.push(cylinder1a);\n                                atom.intersectionShape.cylinder.push(cylinder1b);\n                            }\n                            if (atom2needsi) {\n                                cylinder2a = new Cylinder(p2a, mp, r);\n                                cylinder2b = new Cylinder(p2b, mp2, r);\n                                atom2.intersectionShape.cylinder.push(cylinder2a);\n                                atom2.intersectionShape.cylinder.push(cylinder2b);\n                            }\n                        }\n                    }\n                    else if (atom.bondOrder[i] == 3) {\n                        r = bondR * tripleBondScale;\n                        v.cross(dir);\n                        v.normalize();\n                        v.multiplyScalar(r * 3);\n\n                        p1a = p1.clone();\n                        p1a.add(v);\n                        p1b = p1.clone();\n                        p1b.sub(v);\n\n                        p2a = p1a.clone();\n                        p2a.add(dir);\n                        p2b = p1b.clone();\n                        p2b.add(dir);\n\n                        if (C1 != C2) {\n                            mp = new Vector3().addVectors(p1a, p2a)\n                                .multiplyScalar(0.5);\n                            mp2 = new Vector3().addVectors(p1b, p2b)\n                                .multiplyScalar(0.5);\n                            mp3 = new Vector3().addVectors(p1, p2)\n                                .multiplyScalar(0.5);\n                            drawCyl(geo, p1a, mp, r, C1, mfromCap, 0);\n                            drawCyl(geo, mp, p2a, r, C2, 0, mtoCap);\n                            drawCyl(geo, p1, mp3, r, C1, fromCap, 0);\n                            drawCyl(geo, mp3, p2, r, C2, 0, toCap);\n                            drawCyl(geo, p1b, mp2, r, C1, mfromCap, 0);\n                            drawCyl(geo, mp2, p2b, r, C2, 0, mtoCap);\n                        } else {\n                            drawCyl(geo, p1a, p2a, r, C1, mfromCap, mtoCap);\n                            drawCyl(geo, p1, p2, r, C1, fromCap, toCap);\n                            drawCyl(geo, p1b, p2b, r, C1, mfromCap, mtoCap);\n                        }\n\n                        atomneedsi = atom.clickable || atom.hoverable;\n                        atom2needsi = atom2.clickable || atom2.hoverable;\n\n                        if (atomneedsi || atom2needsi) {\n                            if (!mp) mp = new Vector3().addVectors(p1a, p2a)\n                                .multiplyScalar(0.5);\n                            if (!mp2) mp2 = new Vector3().addVectors(p1b, p2b)\n                                .multiplyScalar(0.5);\n                            if (!mp3) mp3 = new Vector3().addVectors(p1, p2)\n                                .multiplyScalar(0.5);\n\n                            if (atomneedsi) {\n                                cylinder1a = new Cylinder(p1a.clone(), mp.clone(), r);\n                                cylinder1b = new Cylinder(p1b.clone(), mp2.clone(), r);\n                                cylinder1c = new Cylinder(p1.clone(), mp3.clone(), r);\n                                atom.intersectionShape.cylinder.push(cylinder1a);\n                                atom.intersectionShape.cylinder.push(cylinder1b);\n                                atom.intersectionShape.cylinder.push(cylinder1c);\n                            }\n                            if (atom2needsi) {\n                                cylinder2a = new Cylinder(p2a.clone(), mp.clone(), r);\n                                cylinder2b = new Cylinder(p2b.clone(), mp2.clone(), r);\n                                cylinder2c = new Cylinder(p2.clone(), mp3.clone(), r);\n                                atom2.intersectionShape.cylinder.push(cylinder2a);\n                                atom2.intersectionShape.cylinder.push(cylinder2b);\n                                atom2.intersectionShape.cylinder.push(cylinder2c);\n                            }\n                        }\n                    }\n                }\n\n            }\n\n        }\n\n        // draw non bonded heteroatoms as spheres\n        var drawSphere = false;\n        var numsinglebonds = 0;\n        var differentradii = false;\n        //also, if any bonds were drawn as multiples, need sphere\n        for (i = 0; i < atom.bonds.length; i++) {\n            singleBond = atomSingleBond;\n            if (atom.bondStyles && atom.bondStyles[i]) {\n                bstyle = atom.bondStyles[i];\n                if (bstyle.singleBond) singleBond = true;\n                if (bstyle.radius && bstyle.radius != atomBondR) {\n                    differentradii = true;\n                }\n            }\n            if (singleBond || atom.bondOrder[i] == 1) {\n                numsinglebonds++;\n            }\n        }\n\n        if (differentradii) { //jmol style double/triple bonds - no sphere\n            if (numsinglebonds > 0) drawSphere = true; //unless needed as a cap\n        }\n        else if (numsinglebonds == 0 && (atom.bonds.length > 0 || style.showNonBonded)) {\n            drawSphere = true;\n        }\n\n        if (drawSphere) {\n            bondR = atomBondR;\n            //do not use bond style as this can be variable, particularly\n            //with jmol export of double/triple bonds\n            if (geo.imposter) {\n                this.drawSphereImposter(geo.sphereGeometry, atom as XYZ, bondR, C1);\n            }\n            else {\n                GLDraw.drawSphere(geo, atom, bondR, C1);\n            }\n        }\n\n    };\n\n\n\n    // go through all the atoms and regenerate their geometries\n    // we try to have one geometry for each style since this is much much\n    // faster\n    // at some point we should optimize this to avoid unnecessary\n    // recalculation\n    /** param {AtomSpec[]} atoms */\n    private createMolObj(atoms: AtomSpec[], options?) {\n\n        options = options || {};\n\n        var ret = new Object3D();\n        var cartoonAtoms = [];\n        var lineGeometries: Record<number, Geometry> = {};\n        var crossGeometries: Record<number, Geometry> = {};\n\n        var drawSphereFunc = this.drawAtomSphere;\n        var sphereGeometry: Geometry = null;\n        var stickGeometry: Geometry = null;\n        if (options.supportsImposters) {\n            drawSphereFunc = this.drawAtomImposter;\n            sphereGeometry = new Geometry(true);\n            sphereGeometry.imposter = true;\n            stickGeometry = new Geometry(true, true);\n            stickGeometry.imposter = true;\n            stickGeometry.sphereGeometry = new Geometry(true); //for caps\n            stickGeometry.sphereGeometry.imposter = true;\n            stickGeometry.drawnCaps = {};\n        }\n        else if (options.supportsAIA) {\n            drawSphereFunc = this.drawAtomInstanced;\n            sphereGeometry = new Geometry(false, true, true);\n            sphereGeometry.instanced = true;\n            stickGeometry = new Geometry(true); //don't actually have instanced sticks\n        } else {\n            sphereGeometry = new Geometry(true);\n            stickGeometry = new Geometry(true);\n        }\n\n        var i, j, n, testOpacities;\n        var opacities: any = {};\n        var range = [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY];\n        for (i = 0, n = atoms.length; i < n; i++) {\n            var atom = atoms[i];\n            // recreate gl info for each atom as necessary\n            // set up appropriate intersection spheres for clickable atoms\n\n            if (atom && atom.style) {\n\n                if ((atom.clickable || atom.hoverable) && atom.intersectionShape === undefined)\n                    atom.intersectionShape = { sphere: [], cylinder: [], line: [], triangle: [] };\n\n                testOpacities = { line: undefined, cross: undefined, stick: undefined, sphere: undefined };\n                for (j in testOpacities) {\n                    if (atom.style[j]) {\n                        if (atom.style[j].opacity)\n                            testOpacities[j] = parseFloat(atom.style[j].opacity);\n                        else\n                            testOpacities[j] = 1;\n\n                    } else testOpacities[j] = undefined;\n\n                    if (opacities[j]) {\n                        if (testOpacities[j] != undefined && opacities[j] != testOpacities[j]) {\n                            console.log(\"Warning: \" + j + \" opacity is ambiguous\");\n                            opacities[j] = 1;\n                        }\n\n                    } else opacities[j] = testOpacities[j];\n                }\n\n                drawSphereFunc.call(this, atom, sphereGeometry);\n                this.drawAtomClickSphere(atom);\n                this.drawAtomCross(atom, crossGeometries);\n                this.drawBondLines(atom, atoms, lineGeometries);\n                this.drawBondSticks(atom, atoms, stickGeometry);\n\n                if (typeof (atom.style.cartoon) !== \"undefined\" && !atom.style.cartoon.hidden) {\n                    //gradient color scheme range\n                    if (atom.style.cartoon.color === \"spectrum\" && typeof (atom.resi) === \"number\" && !atom.hetflag) {\n                        if (atom.resi < range[0])\n                            range[0] = atom.resi;\n                        if (atom.resi > range[1])\n                            range[1] = atom.resi;\n                    }\n\n                    cartoonAtoms.push(atom);\n                }\n            }\n        }\n        // create cartoon if needed - this is a whole model analysis\n        if (cartoonAtoms.length > 0) {\n            drawCartoon(ret, cartoonAtoms, range, this.defaultCartoonQuality);\n        }\n\n        // add sphere geometry\n        if (sphereGeometry && sphereGeometry.vertices > 0) {\n            //Initialize buffers in geometry\n            sphereGeometry.initTypedArrays();\n            var sphereMaterial = null;\n            var sphere = null;\n\n            //create appropriate material\n            if (sphereGeometry.imposter) {\n                sphereMaterial = new SphereImposterMaterial({\n                    ambient: 0x000000,\n                    vertexColors: true,\n                    reflectivity: 0\n                });\n            }\n            else if (sphereGeometry.instanced) {\n                sphere = new Geometry(true);\n                GLDraw.drawSphere(sphere, { x: 0, y: 0, z: 0 }, 1, new Color(0.5, 0.5, 0.5));\n                sphere.initTypedArrays();\n                sphereMaterial = new InstancedMaterial({\n                    sphereMaterial: new MeshLambertMaterial({\n                        ambient: 0x000000,\n                        vertexColors: true,\n                        reflectivity: 0,\n                    }),\n                    sphere: sphere\n                });\n            }\n            else { //regular mesh\n                sphereMaterial = new MeshLambertMaterial({\n                    ambient: 0x000000,\n                    vertexColors: true,\n                    reflectivity: 0,\n                });\n            }\n            if (opacities.sphere < 1 && opacities.sphere >= 0) {\n                sphereMaterial.transparent = true;\n                sphereMaterial.opacity = opacities.sphere;\n            }\n\n            sphere = new Mesh(sphereGeometry, sphereMaterial);\n            ret.add(sphere);\n        }\n\n        // add stick geometry\n        if (stickGeometry.vertices > 0) {\n\n            var stickMaterial = null;\n            var ballMaterial = null;\n            var balls = stickGeometry.sphereGeometry;\n            if (!balls || typeof (balls.vertices) === 'undefined' || balls.vertices == 0) balls = null; //no balls\n\n            //Initialize buffers in geometry\n            stickGeometry.initTypedArrays();\n            if (balls) balls.initTypedArrays();\n\n            //create material\n            var matvals = { ambient: 0x000000, vertexColors: true, reflectivity: 0 };\n\n            if (stickGeometry.imposter) {\n                stickMaterial = new StickImposterMaterial(matvals);\n                ballMaterial = new SphereImposterMaterial(matvals);\n            } else {\n                stickMaterial = new MeshLambertMaterial(matvals);\n                ballMaterial = new MeshLambertMaterial(matvals);\n\n                if (stickMaterial.wireframe) {\n                    stickGeometry.setUpWireframe();\n                    if (balls) balls.setUpWireframe();\n                }\n            }\n\n            if (opacities.stick < 1 && opacities.stick >= 0) {\n                stickMaterial.transparent = true;\n                stickMaterial.opacity = opacities.stick;\n                ballMaterial.transparent = true;\n                ballMaterial.opacity = opacities.stick;\n            }\n            var sticks = new Mesh(stickGeometry, stickMaterial);\n            ret.add(sticks);\n\n            if (balls) {\n                var stickspheres = new Mesh(balls, ballMaterial);\n                ret.add(stickspheres);\n            }\n        }\n\n        //var linewidth;\n        // add any line geometries, distinguished by line width\n        var linewidth;\n        for (i in lineGeometries) {\n            if (lineGeometries.hasOwnProperty(i)) {\n                linewidth = i;\n                var lineMaterial = new LineBasicMaterial({\n                    linewidth: linewidth,\n                    vertexColors: true\n                });\n                if (opacities.line < 1 && opacities.line >= 0) {\n                    lineMaterial.transparent = true;\n                    lineMaterial.opacity = opacities.line;\n                }\n\n                lineGeometries[i].initTypedArrays();\n\n                var line = new Line(lineGeometries[i], lineMaterial as Material, LineStyle.LinePieces);\n\n                ret.add(line);\n            }\n        }\n\n        // add any cross geometries\n        for (i in crossGeometries) {\n            if (crossGeometries.hasOwnProperty(i)) {\n                linewidth = i;\n                var crossMaterial = new LineBasicMaterial({\n                    linewidth: linewidth,\n                    vertexColors: true\n                });\n                if (opacities.cross < 1 && opacities.cross >= 0) {\n                    crossMaterial.transparent = true;\n                    crossMaterial.opacity = opacities.cross;\n                }\n\n                crossGeometries[i].initTypedArrays();\n\n                var cross = new Line(crossGeometries[i], crossMaterial as Material, LineStyle.LinePieces);\n\n                ret.add(cross);\n            }\n        }\n\n\n        //for BIOMT assembly\n        if (this.dontDuplicateAtoms && this.modelData.symmetries && this.modelData.symmetries.length > 0) {\n            var finalRet = new Object3D();\n            var t;\n            for (t = 0; t < this.modelData.symmetries.length; t++) {\n                var transformedRet = new Object3D();\n                transformedRet = ret.clone();\n                transformedRet.matrix.copy(this.modelData.symmetries[t]);\n                transformedRet.matrixAutoUpdate = false;\n                finalRet.add(transformedRet);\n            }\n            return finalRet;\n        }\n\n        return ret;\n    };\n\n\n\n    /**\n     * Return object representing internal state of\n     * the model appropriate for passing to setInternalState\n     *\n    */\n    public getInternalState() {\n        return {\n            'atoms': this.atoms,\n            'frames': this.frames\n        };\n    };\n\n    /**\n     * Overwrite the internal model state with the passed state.\n     *\n    */\n    public setInternalState(state) {\n        this.atoms = state.atoms;\n        this.frames = state.frames;\n        this.molObj = null;\n    };\n\n    /**\n     * Returns crystallographic information if present.\n     *\n     *\n     */\n    public getCrystData() {\n        if (this.modelData.cryst) {\n            // add the matrix if it is missing\n            if (!this.modelData.cryst.matrix) {\n                const cryst = this.modelData.cryst;\n                this.modelData.cryst.matrix = conversionMatrix3(\n                    cryst.a, cryst.b, cryst.c,\n                    cryst.alpha, cryst.beta, cryst.gamma\n                );\n            }\n            return this.modelData.cryst;\n        } else {\n            return null;\n        }\n    };\n\n    /**\n     * Set crystallographic information using three angles and three lengths\n     *\n     * @param {number} a - length of unit cell side\n     * @param {number} b - length of unit cell side\n     * @param {number} c - length of unit cell side\n     * @param {number} alpha - unit cell angle in degrees (default 90)\n     * @param {number} beta - unit cell angle in degrees (default 90)\n     * @param {number} gamma - unit cell angle in degrees (default 90)\n\n     */\n    public setCrystData(a?: number, b?: number, c?: number, alpha?: number, beta?: number, gamma?: number) {\n        //I am assuming these\n        a = a || 1.0;\n        b = b || 1.0;\n        c = c || 1.0;\n        alpha = alpha || 90;\n        beta = beta || 90;\n        gamma = gamma || 90;\n\n        const matrix = conversionMatrix3(a, b, c, alpha, beta, gamma);\n        this.modelData.cryst = {\n            'a': a, 'b': b, 'c': c,\n            'alpha': alpha, 'beta': beta, 'gamma': gamma,\n            'matrix': matrix\n        };\n    };\n\n    /**\n     * Set the crystallographic matrix to the given matrix.\n     *\n     * This function removes `a`, `b`, `c`, `alpha`, `beta`, `gamma` from\n     * the crystal data.\n     *\n     * @param {Matrix3} matrix - unit cell matrix\n     */\n    public setCrystMatrix(matrix: Matrix3) {\n        matrix = matrix || new Matrix3(\n            1, 0, 0,\n            0, 1, 0,\n            0, 0, 1\n        );\n\n        this.modelData.cryst = {\n            'matrix': matrix\n        };\n    };\n\n    /**\n     * Returns list of rotational/translational matrices if there is BIOMT data\n     * Otherwise returns a list of just the ID matrix\n     *\n     * @return {Array<Matrix4>}\n     *\n     */\n    public getSymmetries() {\n\n        if (typeof (this.modelData.symmetries) == 'undefined') {\n            this.modelData.symmetries = [this.idMatrix];\n        }\n        return this.modelData.symmetries;\n    };\n\n    /**\n     * Sets symmetries based on specified matrices in list\n     *\n     * @param {Array<Matrix4>} list\n     *\n     */\n    public setSymmetries(list) {\n        if (typeof (list) == \"undefined\") { //delete sym data\n            this.modelData.symmetries = [this.idMatrix];\n        }\n        else {\n            this.modelData.symmetries = list;\n        }\n    };\n\n    /**\n     * Returns model id number\n     *\n     * @return {number} Model ID\n     */\n    public getID() {\n        return this.id;\n    };\n\n    /**\n     * Returns model's frames property, a list of atom lists\n     *\n     * @return {number}\n     */\n    public getNumFrames() {\n        return (this.frames.numFrames != undefined) ? this.frames.numFrames : this.frames.length;\n    };\n\n    private adjustCoord(x1: number, x2: number, margin: number, adjust: number) {\n        //return new value of x2 that isn't more than margin away\n        var dist = x2 - x1;\n        if (dist < -margin) {\n            return x2 + adjust;\n        } else if (dist > margin) {\n            return x2 - adjust;\n        }\n        return x2;\n    };\n    //go over current atoms in depth first order and ensure that connected\n    //attoms aren't split across the box\n    private adjustCoordinatesToBox() {\n        if (!this.box) return;\n        if (!this.atomdfs) return;\n        var bx = this.box[0];\n        var by = this.box[1];\n        var bz = this.box[2];\n        var mx = bx * 0.9;\n        var my = by * 0.9;\n        var mz = bz * 0.9;\n\n        for (var c = 0; c < this.atomdfs.length; c++) {\n            //for each connected component\n            var component = this.atomdfs[c];\n            for (var i = 1; i < component.length; i++) {\n                //compare each atom to its previous and prevent coordinates from wrapping\n                var atom = this.atoms[component[i][0]];\n                var prev = this.atoms[component[i][1]];\n                atom.x = this.adjustCoord(prev.x, atom.x, mx, bx);\n                atom.y = this.adjustCoord(prev.y, atom.y, my, by);\n                atom.z = this.adjustCoord(prev.z, atom.z, mz, bz);\n            }\n        }\n    };\n\n    /**\n     * Sets model's atomlist to specified frame\n     * Sets to last frame if framenum out of range\n     *\n     * @param {number} framenum - model's atoms are set to this index in frames list\n     * @return {Promise}\n     */\n    public setFrame(framenum: number, viewer?: GLViewer) { //viewer only passed internally for unit cell\n        var numFrames = this.getNumFrames();\n        let model = this;\n        return new Promise<void>(function (resolve, reject) {\n            if (numFrames == 0) {\n                //return;\n                resolve();\n            }\n            if (framenum < 0 || framenum >= numFrames) {\n                framenum = numFrames - 1;\n            }\n            if (model.frames.url != undefined) {\n                var url = model.frames.url;\n                getbin(url + \"/traj/frame/\" + framenum + \"/\" + model.frames.path, undefined, 'POST', undefined).then(function (buffer) {\n                    var values = new Float32Array(buffer, 44);\n                    var count = 0;\n                    for (var i = 0; i < model.atoms.length; i++) {\n                        model.atoms[i].x = values[count++];\n                        model.atoms[i].y = values[count++];\n                        model.atoms[i].z = values[count++];\n                    }\n                    //if a box was provided, check to see if we need to wrap connected components\n                    if (model.box && model.atomdfs) {\n                        model.adjustCoordinatesToBox();\n                    }\n                    resolve();\n                }).catch(reject);\n            }\n            else {\n                model.atoms = model.frames[framenum];\n                resolve();\n            }\n            model.molObj = null;\n            if (model.modelDatas && framenum < model.modelDatas.length) {\n                model.modelData = model.modelDatas[framenum];\n                if (model.unitCellObjects && viewer) {\n                    viewer.removeUnitCell(model);\n                    viewer.addUnitCell(model);\n                }\n            }\n        });\n    };\n\n    /**\n     * Add atoms as frames of model\n     *\n     * @param {AtomSpec[]} atoms - atoms to be added\n     */\n    public addFrame(atoms: AtomSpec[]) {\n        this.frames.push(atoms);\n    };\n\n\n    /**\n     * If model atoms have dx, dy, dz properties (in some xyz files), vibrate populates the model's frame property based on parameters.\n     * Model can then be animated\n     *\n     * @param {number} numFrames - number of frames to be created, default to 10\n     * @param {number} amplitude - amplitude of distortion, default to 1 (full)\n     * @param {boolean} bothWays - if true, extend both in positive and negative directions by numFrames\n     * @param {GLViewer} viewer - required if arrowSpec is provided\n     * @param {ArrowSpec} arrowSpec - specification for drawing animated arrows. If color isn't specified, atom color (sphere, stick, line preference) is used.\n     *@example\n\n      $3Dmol.download(\"pdb:4UAA\",viewer,{},function(){\n        viewer.setStyle({},{stick:{}});\n        viewer.vibrate(10, 1);\n        viewer.animate({loop: \"forward\",reps: 1});\n\n        viewer.zoomTo();\n              viewer.render();\n          });\n     */\n    public vibrate(numFrames: number = 10, amplitude: number = 1, bothWays: boolean = false, viewer?: GLViewer, arrowSpec?: ArrowSpec) {\n        var start = 0;\n        var end = numFrames;\n        if (bothWays) {\n            start = -numFrames;\n            end = numFrames;\n        }\n\n        //to enable multiple setting of vibrate with bothWays, must record original position\n        if (this.frames !== undefined && this.frames.origIndex !== undefined) {\n            this.setFrame(this.frames.origIndex);\n        } else {\n            this.setFrame(0);\n        }\n\n        if (start < end) this.frames = []; //clear\n        if (bothWays) this.frames.origIndex = numFrames;\n\n        for (var i = start; i < end; i++) {\n            var newAtoms = [];\n            var currframe = this.frames.length;\n            if (i == 0 && !arrowSpec) { //still need to calculate if drawing arrows\n                this.frames.push(this.atoms);\n                continue;\n            }\n            for (var j = 0; j < this.atoms.length; j++) {\n                var dx = getAtomProperty(this.atoms[j], 'dx');\n                var dy = getAtomProperty(this.atoms[j], 'dy');\n                var dz = getAtomProperty(this.atoms[j], 'dz');\n                var newVector = new Vector3(dx, dy, dz);\n                var starting = new Vector3(this.atoms[j].x, this.atoms[j].y, this.atoms[j].z);\n                var mult = (i * amplitude) / numFrames;\n                newVector.multiplyScalar(mult);\n                starting.add(newVector);\n                var newAtom: any = {};\n                for (var k in this.atoms[j]) {\n                    newAtom[k] = this.atoms[j][k];\n                }\n                newAtom.x = starting.x;\n                newAtom.y = starting.y;\n                newAtom.z = starting.z;\n                newAtoms.push(newAtom);\n                if (viewer && arrowSpec) {\n                    var spec = extend({}, arrowSpec);\n                    var arrowend = new Vector3(dx, dy, dz);\n                    arrowend.multiplyScalar(amplitude);\n                    arrowend.add(starting);\n\n                    spec.start = starting;\n                    spec.end = arrowend;\n                    spec.frame = currframe;\n                    if (!spec.color) {\n                        var s = newAtom.style.sphere;\n                        if (!s) s = newAtom.style.stick;\n                        if (!s) s = newAtom.style.line;\n                        spec.color = getColorFromStyle(newAtom, s);\n                    }\n                    viewer.addArrow(spec);\n                }\n            }\n            this.frames.push(newAtoms);\n        }\n    };\n\n    // set default style and colors for atoms\n    public setAtomDefaults(atoms: AtomSpec[]) {\n        for (let i = 0; i < atoms.length; i++) {\n            let atom = atoms[i];\n            if (atom) {\n                atom.style = atom.style || deepCopy(GLModel.defaultAtomStyle);\n                atom.color = atom.color || this.ElementColors[atom.elem] || this.defaultColor;\n                atom.model = this.id;\n                if (atom.clickable || atom.hoverable)\n                    atom.intersectionShape = { sphere: [], cylinder: [], line: [], triangle: [] };\n            }\n        }\n    };\n\n    /** add atoms to this model from molecular data string\n     *\n     * @param {string|ArrayBuffer} data - atom structure file input data string, for gzipped input use ArrayBuffer\n     * @param {string} format - input file string format (e.g 'pdb', 'sdf', 'sdf.gz', etc.)\n     * @param {ParserOptionsSpec} options - format dependent options. Attributes depend on the input format\n     */\n    public addMolData(data: string | ArrayBuffer, format: string, options: ParserOptionsSpec = {}) {\n        var parsedAtoms = GLModel.parseMolData(data, format, options);\n        this.dontDuplicateAtoms = !options.duplicateAssemblyAtoms;\n        var mData = parsedAtoms.modelData;\n        if (mData) {\n            if (Array.isArray(mData)) {\n                this.modelData = mData[0];\n                if (options.frames) {\n                    this.modelDatas = mData;\n                }\n            } else {\n                this.modelData = mData;\n            }\n        }\n\n        if (parsedAtoms.box) {\n            this.box = parsedAtoms.box;\n        } else {\n            this.box = null;\n        }\n\n        if (this.frames.length == 0) { //first call\n            for (let i = 0; i < parsedAtoms.length; i++) {\n                if (parsedAtoms[i].length != 0)\n                    this.frames.push(parsedAtoms[i]);\n            }\n            if (this.frames[0])\n                this.atoms = this.frames[0];\n        }\n\n        else { //subsequent calls\n            if (options.frames) { //add to new frame\n                for (let i = 0; i < parsedAtoms.length; i++) {\n                    this.frames.push(parsedAtoms[i]);\n                }\n            }\n            else { //add atoms to current frame\n                for (var i = 0; i < parsedAtoms.length; i++) {\n                    this.addAtoms(parsedAtoms[i]);\n                }\n            }\n        }\n\n        for (let i = 0; i < this.frames.length; i++) {\n            this.setAtomDefaults(this.frames[i]);\n        }\n\n        if (options.vibrate && options.vibrate.frames && options.vibrate.amplitude) {\n            //fill in vibrational modes\n            this.vibrate(options.vibrate.frames, options.vibrate.amplitude);\n        }\n\n        if (options.style) {\n            this.setStyle({}, options.style);\n        }\n    };\n\n    public setDontDuplicateAtoms(dup: boolean) {\n        this.dontDuplicateAtoms = dup;\n    };\n\n    public setModelData(mData) {\n        this.modelData = mData;\n    };\n\n    //return true if atom value matches property val\n    private propertyMatches(atomval, val) {\n        if (atomval == val) {\n            return true;\n        } else if (typeof (val) == 'string' && typeof (atomval) == 'number') {\n            //support numerical integer ranges, e.g. resi: 3-7\n            var match = val.match(/(-?\\d+)\\s*-\\s*(-?\\d+)/);\n            if (match) {\n                var lo = parseInt(match[1]);\n                var hi = parseInt(match[2]);\n                if (match && atomval >= lo && atomval <= hi) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n\n    // make a deep copy of a selection object and create caches of expensive\n    // selections.  We create a copy so caches are not attached to user\n    // supplied objects where the user might change them invalidating the cache.\n    // This does not support arbitrary\n    // javascript objects, but support enough for eveything that is\n    // used in selections: number, string, boolean, functions; as well\n    // as arrays and nested objects with values of the aformentioned\n    // types.\n    private static deepCopyAndCache(selobject, model) {\n        if (typeof selobject != 'object' || selobject == null) return selobject;\n        if (selobject.__cache_created) return selobject; //already done\n        const copy: any = {};\n        for (const key in selobject) {\n            const item = selobject[key];\n            if (Array.isArray(item)) {\n                // handle array separatly from other typeof == \"object\"\n                // elements\n                copy[key] = [];\n                for (let i = 0; i < item.length; i++) {\n                    copy[key].push(GLModel.deepCopyAndCache(item[i], model));\n                }\n            } else if (typeof item === \"object\" && key != \"properties\" && key != \"model\") {\n                copy[key] = GLModel.deepCopyAndCache(item, model);\n            } else {\n                copy[key] = item;\n            }\n\n            //create caches of expensive selection types - the cache\n            //stores the atoms matching the selection type\n            if (key == \"and\" || key == \"or\") {\n                // create a list of sets of matching atoms indexes for\n                // each sub-selection\n                const results = [];\n                for (const subSelection of copy[key]) {\n                    const set = new Set();\n                    for (const match of model.selectedAtoms(subSelection)) {\n                        set.add(match.index);\n                    }\n                    results.push(set);\n                }\n\n                if (key == \"and\") {\n                    // get the intersection of two sets\n                    const intersect = function (first, other) {\n                        const result = new Set();\n                        for (const elem of other) {\n                            if (first.has(elem)) {\n                                result.add(elem);\n                            }\n                        }\n                        return result;\n                    };\n\n                    let intersection = new Set(results[0]);\n                    for (const set of results.splice(1)) {\n                        intersection = intersect(intersection, set);\n                    }\n                    copy[key].__cached_results = intersection;\n\n                } else if (key == \"or\") {\n                    const union = new Set();\n                    for (const set of results) {\n                        for (const elem of set) {\n                            union.add(elem);\n                        }\n                    }\n\n                    copy[key].__cached_results = union;\n                }\n            }\n\n        }\n        copy.__cache_created = true;\n        return copy;\n    };\n\n    private static readonly ignoredKeys = new Set<string>([\"props\", \"invert\", \"model\", \"frame\", \"byres\", \"expand\", \"within\", \"and\", \"or\", \"not\"]);\n\n    /** given a selection specification, return true if atom is selected.\n     * Does not support context-aware selectors like expand/within/byres.\n     *\n     * @param {AtomSpec} atom\n     * @param {AtomSelectionSpec} sel\n     * @return {boolean}\n     */\n    public atomIsSelected(atom: AtomSpec, sel?: AtomSelectionSpec) {\n        if (typeof (sel) === \"undefined\")\n            return true; // undef gets all\n        var invert = !!sel.invert;\n        var ret = true;\n        for (var key in sel) {\n            if (key == \"and\" || key == \"or\" || key == \"not\") {  //boolean operators\n                if (key == \"not\") {\n                    if (this.atomIsSelected(atom, sel[key])) {\n                        ret = false;\n                        break;\n                    }\n                } else { //\"or\" and \"and\"\n                    // these selections are expensive so when called via\n                    //selectedAtoms shoudl be cached - but if atomIsSelected\n                    //is called directly create the cache\n                    if (sel[key].__cached_results === undefined) {\n                        sel = GLModel.deepCopyAndCache(sel, this);\n                    }\n\n                    ret = sel[key].__cached_results.has(atom.index);\n                    if (!ret) {\n                        break;\n                    }\n                }\n\n            } else if (key === 'predicate') { //a user supplied function for evaluating atoms\n                if (!sel.predicate(atom)) {\n                    ret = false;\n                    break;\n                }\n            }\n            else if (key == \"properties\" && atom[key]) {\n                for (var propkey in sel.properties) {\n                    if (propkey.startsWith(\"__cache\")) continue;\n                    if (typeof (atom.properties[propkey]) === 'undefined') {\n                        ret = false;\n                        break;\n                    }\n                    if (atom.properties[propkey] != sel.properties[propkey]) {\n                        ret = false;\n                        break;\n                    }\n                }\n            }\n            else if (sel.hasOwnProperty(key) && !GLModel.ignoredKeys.has(key) && !key.startsWith('__cache')) {\n\n                // if something is in sel, atom must have it\n                if (typeof (atom[key]) === \"undefined\") {\n                    ret = false;\n                    break;\n                }\n                var isokay = false;\n                if (key === \"bonds\") {\n                    //special case counting number of bonds, for selecting nonbonded mostly\n                    var val = sel[key];\n                    if (val != atom.bonds.length) {\n                        ret = false;\n                        break;\n                    }\n                }\n                else if (Array.isArray(sel[key])) {\n                    // can be any of the listed values\n                    var valarr = sel[key];\n                    var atomval = atom[key];\n                    for (let i = 0; i < valarr.length; i++) {\n                        if (this.propertyMatches(atomval, valarr[i])) {\n                            isokay = true;\n                            break;\n                        }\n                    }\n                    if (!isokay) {\n                        ret = false;\n                        break;\n                    }\n                } else { // single match\n                    let val = sel[key];\n                    if (!this.propertyMatches(atom[key], val)) {\n                        ret = false;\n                        break;\n                    }\n                }\n            }\n        }\n\n        return invert ? !ret : ret;\n    };\n\n\n    private static squaredDistance(atom1: XYZ | AtomSpec, atom2: XYZ | AtomSpec) {\n        var xd = atom2.x - atom1.x;\n        var yd = atom2.y - atom1.y;\n        var zd = atom2.z - atom1.z;\n        return xd * xd + yd * yd + zd * zd;\n    };\n\n    /** returns a list of atoms in the expanded bounding box, but not in the current one\n     *\n     *  Bounding box:\n     *\n     *    [ [ xmin, ymin, zmin ],\n     *      [ xmax, ymax, zmax ],\n     *      [ xctr, yctr, zctr ] ]\n     *\n     **/\n    private expandAtomList(atomList: AtomSpec[], amt: number) {\n\n        if (amt <= 0) return atomList;\n\n        var pb = getExtent(atomList, undefined); // previous bounding box\n        var nb = [[], [], []]; // expanded bounding box\n\n        for (var i = 0; i < 3; i++) {\n            nb[0][i] = pb[0][i] - amt;\n            nb[1][i] = pb[1][i] + amt;\n            nb[2][i] = pb[2][i];\n        }\n\n        // look in added box \"shell\" for new atoms\n        var expand = [];\n        for (let i = 0; i < this.atoms.length; i++) {\n\n            var x = this.atoms[i].x;\n            var y = this.atoms[i].y;\n            var z = this.atoms[i].z;\n\n            if (x >= nb[0][0] && x <= nb[1][0] && y >= nb[0][1] && y <= nb[1][1] && z >= nb[0][2] && z <= nb[1][2]) {\n                if (!(x >= pb[0][0] && x <= pb[1][0] && y >= pb[0][1] && y <= pb[1][1] && z >= pb[0][2] && z <= pb[1][2])) {\n                    expand.push(this.atoms[i]);\n                }\n            }\n        }\n        return expand;\n    };\n\n\n\n    private static getFloat(val: string | number): number {\n        if (typeof (val) === 'number')\n            return val;\n        else\n            return parseFloat(val);\n    }\n    /** return list of atoms selected by sel, this is specific to glmodel\n     *\n     * @param {AtomSelectionSpec} sel\n     * @return {Object[]}\n     * @example\n     $3Dmol.download(\"pdb:4wwy\",viewer,{},function(){\n              var atoms = viewer.selectedAtoms({chain:'A'});\n              for(var i = 0, n = atoms.length; i < n; i++) {\n                 atoms[i].b = 0.0;\n              }\n              viewer.setStyle({cartoon:{colorscheme:{prop:'b',gradient: 'roygb',min:0,max:30}}});\n              viewer.render();\n          });\n     */\n    public selectedAtoms(sel: AtomSelectionSpec, from?: AtomSpec[]): AtomSpec[] {\n        var ret = [];\n\n        // make a copy of the selection to allow caching results without\n        // the possibility for the user to change the selection and this\n        // code not noticing the changes\n        sel = GLModel.deepCopyAndCache(sel || {}, this);\n\n        if (!from) from = this.atoms;\n        var aLength = from.length;\n        for (var i = 0; i < aLength; i++) {\n            var atom = from[i];\n            if (atom) {\n                if (this.atomIsSelected(atom, sel))\n                    ret.push(atom);\n            }\n        }\n\n        // expand selection by some distance\n        if (sel.hasOwnProperty(\"expand\")) {\n            // get atoms in expanded bounding box\n            const exdist: number = GLModel.getFloat(sel.expand);\n            let expand = this.expandAtomList(ret, exdist);\n            let retlen = ret.length;\n            const thresh = exdist * exdist;\n            for (let i = 0; i < expand.length; i++) {\n                for (let j = 0; j < retlen; j++) {\n\n                    var dist = GLModel.squaredDistance(expand[i], ret[j]);\n                    if (dist < thresh && dist > 0) {\n                        ret.push(expand[i]);\n                    }\n                }\n            }\n        }\n\n        // selection within distance of sub-selection\n        if (sel.hasOwnProperty(\"within\") && sel.within.hasOwnProperty(\"sel\") &&\n            sel.within.hasOwnProperty(\"distance\")) {\n\n            // get atoms in second selection\n            var sel2 = this.selectedAtoms(sel.within.sel, this.atoms);\n            var within = {};\n            const dist = GLModel.getFloat(sel.within.distance);\n            const thresh = dist * dist;\n            for (let i = 0; i < sel2.length; i++) {\n                for (let j = 0; j < ret.length; j++) {\n\n                    let dist = GLModel.squaredDistance(sel2[i], ret[j]);\n                    if (dist < thresh && dist > 0) {\n                        within[j] = 1;\n                    }\n                }\n            }\n            var newret = [];\n            if (sel.within.invert) {\n                for (let j = 0; j < ret.length; j++) {\n                    if (!within[j]) newret.push(ret[j]);\n                }\n            } else {\n                for (let j in within) {\n                    newret.push(ret[j]);\n                }\n            }\n            ret = newret;\n        }\n\n        // byres selection flag\n        if (sel.hasOwnProperty(\"byres\")) {\n\n            // Keep track of visited residues, visited atoms, and atom stack\n            var vResis = {};\n            var vAtoms = [];\n            var stack = [];\n\n            for (let i = 0; i < ret.length; i++) {\n\n                // Check if atom is part of a residue, and that the residue hasn't been traversed yet\n                let atom = ret[i];\n                var c = atom.chain;\n                var r = atom.resi;\n                if (vResis[c] === undefined) vResis[c] = {};\n                if (atom.hasOwnProperty(\"resi\") && vResis[c][r] === undefined) {\n\n                    // Perform a depth-first search of atoms with the same resi\n                    vResis[c][r] = true;\n                    stack.push(atom);\n                    while (stack.length > 0) {\n                        atom = stack.pop();\n                        c = atom.chain;\n                        r = atom.resi;\n                        if (vAtoms[atom.index] === undefined) {\n                            vAtoms[atom.index] = true;\n                            for (var j = 0; j < atom.bonds.length; j++) {\n                                var atom2 = this.atoms[atom.bonds[j]];\n                                if (vAtoms[atom2.index] === undefined && atom2.hasOwnProperty(\"resi\") && atom2.chain == c && atom2.resi == r) {\n                                    stack.push(atom2);\n                                    ret.push(atom2);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return ret;\n    };\n\n\n    /** Add list of new atoms to model.  Adjusts bonds appropriately.\n     *\n     * @param {AtomSpec[]} newatoms\n     * @example\n     * var atoms = [{elem: 'C', x: 0, y: 0, z: 0, bonds: [1,2], bondOrder: [1,2]}, {elem: 'O', x: -1.5, y: 0, z: 0, bonds: [0]},{elem: 'O', x: 1.5, y: 0, z: 0, bonds: [0], bondOrder: [2]}];\n\n        viewer.setBackgroundColor(0xffffffff);\n        var m = viewer.addModel();\n        m.addAtoms(atoms);\n        m.setStyle({},{stick:{}});\n        viewer.zoomTo();\n        viewer.render();\n     */\n    public addAtoms(newatoms: AtomSpec[]) {\n        this.molObj = null;\n        var start = this.atoms.length;\n        var indexmap = [];\n        // mapping from old index to new index\n        var i;\n        for (i = 0; i < newatoms.length; i++) {\n            if (typeof (newatoms[i].index) == \"undefined\")\n                newatoms[i].index = i;\n            if (typeof (newatoms[i].serial) == \"undefined\")\n                newatoms[i].serial = i;\n            indexmap[newatoms[i].index] = start + i;\n        }\n\n        // copy and push newatoms onto atoms\n        for (i = 0; i < newatoms.length; i++) {\n            var olda = newatoms[i];\n            var nindex = indexmap[olda.index];\n            var a = extend({}, olda);\n            a.index = nindex;\n            a.bonds = [];\n            a.bondOrder = [];\n            a.model = this.id;\n            a.style = a.style || deepCopy(GLModel.defaultAtomStyle);\n            if (typeof (a.color) == \"undefined\")\n                a.color = this.ElementColors[a.elem] || this.defaultColor;\n            // copy over all bonds contained in selection,\n            // updating indices appropriately\n            var nbonds = olda.bonds ? olda.bonds.length : 0;\n            for (var j = 0; j < nbonds; j++) {\n                var neigh = indexmap[olda.bonds[j]];\n                if (typeof (neigh) != \"undefined\") {\n                    a.bonds.push(neigh);\n                    a.bondOrder.push(olda.bondOrder ? olda.bondOrder[j] : 1);\n                }\n            }\n            this.atoms.push(a);\n        }\n    };\n\n    /** Assign bonds based on atomic coordinates.\n     *  This currently uses a primitive distance-based algorithm that does not\n     * consider valence constraints and will only create single bonds.\n     */\n    public assignBonds() {\n        assignBonds(this.atoms, { assignBonds: true });\n    }\n\n    /** Remove specified atoms from model\n     *\n     * @param {AtomSpec[]} badatoms - list of atoms\n     */\n    public removeAtoms(badatoms: AtomSpec[]) {\n        this.molObj = null;\n        // make map of all baddies\n        var baddies = [];\n        var i;\n        for (i = 0; i < badatoms.length; i++) {\n            baddies[badatoms[i].index] = true;\n        }\n\n        // create list of good atoms\n        var newatoms = [];\n        for (i = 0; i < this.atoms.length; i++) {\n            var a = this.atoms[i];\n            if (!baddies[a.index])\n                newatoms.push(a);\n        }\n\n        // clear it all out\n        this.atoms = [];\n        // and add back in to get updated bonds\n        this.addAtoms(newatoms);\n    };\n\n\n    /** Set atom style of selected atoms\n     *\n     * @param {AtomSelectionSpec} sel\n     * @param {AtomStyleSpec} style\n     * @param {boolean} add - if true, add to current style, don't replace\n     @example\n    $3Dmol.download(\"pdb:4UB9\",viewer,{},function(){\n              viewer.setBackgroundColor(0xffffffff);\n\n              viewer.setStyle({chain:'A'},{line:{hidden:true,colorscheme:{prop:'b',gradient: new $3Dmol.Gradient.Sinebow($3Dmol.getPropertyRange(viewer.selectedAtoms(),'b'))}}});\n              viewer.setStyle({chain:'B'},{line:{colorscheme:{prop:'b',gradient: new $3Dmol.Gradient.Sinebow($3Dmol.getPropertyRange(viewer.selectedAtoms(),'b'))}}});\n              viewer.setStyle({chain:'C'},{cross:{hidden:true,colorscheme:{prop:'b',gradient: new $3Dmol.Gradient.Sinebow($3Dmol.getPropertyRange(viewer.selectedAtoms(),'b'))}}});\n              viewer.setStyle({chain:'D'},{cross:{colorscheme:{prop:'b',gradient: new $3Dmol.Gradient.RWB($3Dmol.getPropertyRange(viewer.selectedAtoms(),'b'))}}});\n              viewer.setStyle({chain:'E'},{cross:{radius:2.0,colorscheme:{prop:'b',gradient: new $3Dmol.Gradient.RWB($3Dmol.getPropertyRange(viewer.selectedAtoms(),'b'))}}});\n              viewer.setStyle({chain:'F'},{stick:{hidden:true,colorscheme:{prop:'b',gradient: new $3Dmol.Gradient.RWB($3Dmol.getPropertyRange(viewer.selectedAtoms(),'b'))}}});\n              viewer.setStyle({chain:'G'},{stick:{radius:0.8,colorscheme:{prop:'b',gradient: new $3Dmol.Gradient.ROYGB($3Dmol.getPropertyRange(viewer.selectedAtoms(),'b'))}}});\n              viewer.setStyle({chain:'H'},{stick:{singleBonds:true,colorscheme:{prop:'b',gradient: new $3Dmol.Gradient.ROYGB($3Dmol.getPropertyRange(viewer.selectedAtoms(),'b'))}}});\n              viewer.render();\n          });\n     */\n    public setStyle(sel: AtomSelectionSpec | AtomStyleSpec | string, style?: AtomStyleSpec | string, add?) {\n\n        if (typeof (style) === 'undefined' && typeof (add) == 'undefined') {\n            //if a single argument is provided, assume it is a style and select all\n            style = sel as AtomStyleSpec | string;\n            sel = {};\n        }\n        sel = sel as AtomSelectionSpec;\n        //if type is just a string, promote it to an object\n        if (typeof (style) === 'string') {\n            style = specStringToObject(style);\n        }\n\n        var changedAtoms = false;\n        // somethings we only calculate if there is a change in a certain\n        // style, although these checks will only catch cases where both\n        // are either null or undefined\n        var that = this;\n        var setStyleHelper = function (atomArr) {\n            var selected = that.selectedAtoms(sel as AtomSelectionSpec, atomArr);\n            for (let i = 0; i < atomArr.length; i++) {\n                if (atomArr[i]) atomArr[i].capDrawn = false; //reset for proper stick render\n            }\n\n            for (let i = 0; i < selected.length; i++) {\n                changedAtoms = true;\n                if (selected[i].clickable || selected[i].hoverable)\n                    selected[i].intersectionShape = { sphere: [], cylinder: [], line: [], triangle: [] };\n\n\n                if (!add) selected[i].style = {};\n                for (let s in style as AtomStyleSpec) {\n                    if (style.hasOwnProperty(s)) {\n                        selected[i].style[s] = selected[i].style[s] || {}; //create distinct object for each atom\n                        Object.assign(selected[i].style[s], style[s]);\n                    }\n                }\n            }\n        };\n\n        if (sel.frame !== undefined && sel.frame < this.frames.length) { //set specific frame only\n            let frame = sel.frame;\n            if (frame < 0) frame = this.frames.length + frame;\n            setStyleHelper(this.frames[frame]);\n        } else {\n            setStyleHelper(this.atoms);\n            for (var i = 0; i < this.frames.length; i++) {\n                if (this.frames[i] !== this.atoms) setStyleHelper(this.frames[i]);\n            }\n        }\n        if (changedAtoms)\n            this.molObj = null; //force rebuild\n\n    };\n\n    /** Set clickable and callback of selected atoms\n     *\n     * @param {AtomSelectionSpec} sel - atom selection to apply clickable settings to\n     * @param {boolean} clickable - whether click-handling is enabled for the selection\n     * @param {function} callback - function called when an atom in the selection is clicked\n\n     */\n    public setClickable(sel: AtomSelectionSpec, clickable: boolean, callback) {\n\n        // make sure clickable is a boolean\n        clickable = !!clickable;\n        callback = makeFunction(callback);\n        if (callback === null) {\n            console.log(\"Callback is not a function\");\n            return;\n        }\n\n        var selected = this.selectedAtoms(sel, this.atoms);\n        var len = selected.length;\n        for (let i = 0; i < len; i++) {\n\n            selected[i].intersectionShape = { sphere: [], cylinder: [], line: [], triangle: [] };\n            selected[i].clickable = clickable;\n            if (callback) selected[i].callback = callback;\n\n        }\n\n        if (len > 0) this.molObj = null; // force rebuild to get correct intersection shapes\n    };\n\n    /** Set hoverable and callback of selected atoms\n    *\n    * @param {AtomSelectionSpec} sel - atom selection to apply hoverable settings to\n    * @param {boolean} hoverable - whether hover-handling is enabled for the selection\n    * @param {function} hover_callback - function called when an atom in the selection is hovered over\n    * @param {function} unhover_callback - function called when the mouse moves out of the hover area\n    */\n    public setHoverable(sel: AtomSelectionSpec, hoverable: boolean, hover_callback, unhover_callback) {\n\n        // make sure hoverable is a boolean\n        hoverable = !!hoverable;\n        hover_callback = makeFunction(hover_callback);\n        unhover_callback = makeFunction(unhover_callback);\n\n        // report to console if hover_callback is not a valid function\n        if (hover_callback === null) {\n            console.log(\"Hover_callback is not a function\");\n            return;\n        }\n        // report to console if unhover_callback is not a valid function\n        if (unhover_callback === null) {\n            console.log(\"Unhover_callback is not a function\");\n            return;\n        }\n\n        var selected = this.selectedAtoms(sel, this.atoms);\n        var len = selected.length;\n        for (let i = 0; i < len; i++) {\n\n            selected[i].intersectionShape = { sphere: [], cylinder: [], line: [], triangle: [] };\n            selected[i].hoverable = hoverable;\n            if (hover_callback) selected[i].hover_callback = hover_callback;\n            if (unhover_callback) selected[i].unhover_callback = unhover_callback;\n\n        }\n\n        if (len > 0) this.molObj = null; // force rebuild to get correct intersection shapes\n    };\n\n    /** enable context menu of selected atoms\n     *\n     * @param {AtomSelectionSpec} sel - atom selection to apply hoverable settings to\n     * @param {boolean} contextMenuEnabled - whether contextMenu-handling is enabled for the selection\n     */\n    public enableContextMenu(sel: AtomSelectionSpec, contextMenuEnabled) {\n        // make sure contextMenuEnabled is a boolean\n        contextMenuEnabled = !!contextMenuEnabled;\n\n        var i;\n        var selected = this.selectedAtoms(sel, this.atoms);\n        var len = selected.length;\n        for (i = 0; i < len; i++) {\n\n            selected[i].intersectionShape = { sphere: [], cylinder: [], line: [], triangle: [] };\n            selected[i].contextMenuEnabled = contextMenuEnabled;\n        }\n\n        if (len > 0) this.molObj = null; // force rebuild to get correct intersection shapes\n    };\n\n    /** given a mapping from element to color, set atom colors\n     *\n     * @param {AtomSelectionSpec} sel\n     * @param {object} colors\n     */\n    public setColorByElement(sel: AtomSelectionSpec, colors) {\n\n        if (this.molObj !== null && GLModel.sameObj(colors, this.lastColors))\n            return; // don't recompute\n        this.lastColors = colors;\n        var atoms = this.selectedAtoms(sel, atoms);\n        if (atoms.length > 0)\n            this.molObj = null; // force rebuild\n        for (var i = 0; i < atoms.length; i++) {\n            var a = atoms[i];\n            if (typeof (colors[a.elem]) !== \"undefined\") {\n                a.color = colors[a.elem];\n            }\n        }\n    };\n\n    /**\n     * @param {AtomSelectionSpec} sel\n     * @param {string} prop\n     * @param {Gradient|string} scheme\n     */\n    public setColorByProperty(sel: AtomSelectionSpec, prop: string, scheme: Gradient | string, range?) {\n        var i, a;\n        var atoms = this.selectedAtoms(sel, atoms);\n        this.lastColors = null; // don't bother memoizing\n        if (atoms.length > 0)\n            this.molObj = null; // force rebuild\n\n        if (typeof scheme === 'string' && typeof (Gradient.builtinGradients[scheme]) != \"undefined\") {\n            scheme = new Gradient.builtinGradients[scheme]();\n        }\n        scheme = scheme as Gradient;\n        if (!range) { //no explicit range, get from scheme\n            range = scheme.range();\n        }\n\n        if (!range) { //no range in scheme, compute the range for this model\n            range = getPropertyRange(atoms, prop);\n        }\n        // now apply colors using scheme\n        for (i = 0; i < atoms.length; i++) {\n            a = atoms[i];\n            var val = getAtomProperty(a, prop);\n            if (val != null) {\n                a.color = scheme.valueToHex(parseFloat(a.properties[prop]), range);\n            }\n        }\n    };\n\n    /**\n     * @deprecated use setStyle and colorfunc attribute\n     * @param {AtomSelectionSpec} sel - selection object\n     * @param {function} func - function to be used to set the color\n     @example\n      $3Dmol.download(\"pdb:4UAA\",viewer,{},function(){\n              viewer.setBackgroundColor(0xffffffff);\n              var colorAsSnake = function(atom) {\n                return atom.resi % 2 ? 'white': 'green'\n              };\n\n              viewer.setStyle( {}, { cartoon: {colorfunc: colorAsSnake }});\n\n              viewer.render();\n          });\n\n     */\n    public setColorByFunction(sel: AtomSelectionSpec, colorfun) {\n        var atoms = this.selectedAtoms(sel, atoms);\n        if (typeof (colorfun) !== 'function')\n            return;\n        this.lastColors = null; // don't bother memoizing\n        if (atoms.length > 0)\n            this.molObj = null; // force rebuild\n\n        // now apply colorfun\n        for (let i = 0; i < atoms.length; i++) {\n            let a = atoms[i];\n            a.color = colorfun(a);\n        }\n    };\n\n    /** Convert the model into an object in the format of a ChemDoodle JSON model.\n     *\n     * @param {boolean} whether or not to include style information. Defaults to false.\n     * @return {Object}\n     */\n    public toCDObject(includeStyles: boolean = false) {\n        var out: any = { a: [], b: [] };\n        if (includeStyles) {\n            out.s = [];\n        }\n        for (let i = 0; i < this.atoms.length; i++) {\n            let atomJSON: any = {};\n            let atom = this.atoms[i];\n            atomJSON.x = atom.x;\n            atomJSON.y = atom.y;\n            atomJSON.z = atom.z;\n            if (atom.elem != \"C\") {\n                atomJSON.l = atom.elem;\n            }\n            if (includeStyles) {\n                var s = 0;\n                while (s < out.s.length &&\n                    (JSON.stringify(atom.style) !== JSON.stringify(out.s[s]))) {\n                    s++;\n                }\n                if (s === out.s.length) {\n                    out.s.push(atom.style);\n                }\n                if (s !== 0) {\n                    atomJSON.s = s;\n                }\n            }\n\n            out.a.push(atomJSON);\n\n            for (let b = 0; b < atom.bonds.length; b++) {\n                let firstAtom = i;\n                let secondAtom = atom.bonds[b];\n                if (firstAtom >= secondAtom)\n                    continue;\n                let bond: any = {\n                    b: firstAtom,\n                    e: secondAtom\n                };\n                let bondOrder = atom.bondOrder[b];\n                if (bondOrder != 1) {\n                    bond.o = bondOrder;\n                }\n                out.b.push(bond);\n            }\n        }\n        return out;\n    };\n\n\n    /** manage the globj for this model in the possed modelGroup - if it has to be regenerated, remove and add\n     *\n     * @param {Object3D} group\n     * @param Object options\n     */\n    public globj(group, options) {\n        if (this.molObj === null || options.regen) { // have to regenerate\n            this.molObj = this.createMolObj(this.atoms, options);\n            if (this.renderedMolObj) { // previously rendered, remove\n                group.remove(this.renderedMolObj);\n                this.renderedMolObj = null;\n            }\n            this.renderedMolObj = this.molObj.clone();\n            if (this.hidden) {\n                this.renderedMolObj.setVisible(false);\n                this.molObj.setVisible(false);\n            }\n            group.add(this.renderedMolObj);\n        }\n    };\n\n    /** return a VRML string representation of the model.  Does not include VRML header information\n     * @return VRML\n     */\n    public exportVRML() {\n        //todo: export spheres and cylinder objects instead of all mesh\n        var tmpobj = this.createMolObj(this.atoms, { supportsImposters: false, supportsAIA: false });\n        return tmpobj.vrml();\n    };\n\n    /** Remove any renderable mol object from scene\n     *\n     * @param {Object3D} group\n     */\n    public removegl(group) {\n        if (this.renderedMolObj) {\n            //dispose of geos and materials\n            if (this.renderedMolObj.geometry !== undefined) this.renderedMolObj.geometry.dispose();\n            if (this.renderedMolObj.material !== undefined) this.renderedMolObj.material.dispose();\n            group.remove(this.renderedMolObj);\n            this.renderedMolObj = null;\n        }\n        this.molObj = null;\n    };\n\n    /**\n     * Don't show this model in future renderings. Keep all styles and state\n     * so it can be efficiencly shown again.\n     *\n     * * @see GLModel#show\n\n     * @example\n        $3Dmol.download(\"pdb:3ucr\",viewer,{},function(){\n        viewer.setStyle({},{stick:{}});\n        viewer.getModel().hide();\n        viewer.render();\n        });\n     */\n    public hide() {\n        this.hidden = true;\n        if (this.renderedMolObj) this.renderedMolObj.setVisible(false);\n        if (this.molObj) this.molObj.setVisible(false);\n    };\n\n    /**\n     * Unhide a hidden model\n     * @see GLModel#hide\n     * @example\n        $3Dmol.download(\"pdb:3ucr\",viewer,{},function(){\n        viewer.setStyle({},{stick:{}});\n        viewer.getModel().hide();\n        viewer.render(  )\n        viewer.getModel().show()\n        viewer.render();\n        });\n     */\n    public show() {\n        this.hidden = false;\n        if (this.renderedMolObj) this.renderedMolObj.setVisible(true);\n        if (this.molObj) this.molObj.setVisible(true);\n    };\n\n\n    /** Create labels for atoms that show the value of the passed property.\n     *\n     * @param {String} prop - property name\n     * @param {AtomSelectionSpec} sel\n     * @param {GLViewer} viewer\n     * @param {LabelSpec} options\n     */\n    public addPropertyLabels(prop: string, sel: AtomSelectionSpec, viewer: GLViewer, style: LabelSpec) {\n        var atoms = this.selectedAtoms(sel, atoms);\n        var mystyle = deepCopy(style);\n        for (var i = 0; i < atoms.length; i++) {\n            var a = atoms[i];\n            var label = null;\n            if (typeof (a[prop]) != 'undefined') {\n                label = String(a[prop]);\n            } else if (typeof (a.properties[prop]) != 'undefined') {\n                label = String(a.properties[prop]);\n            }\n\n            if (label != null) {\n                mystyle.position = a;\n                viewer.addLabel(label, mystyle);\n            }\n        }\n    };\n\n\n    /** Create labels for residues of selected atoms.\n     * Will create a single label at the center of mass of all atoms\n     * with the same chain,resn, and resi.\n     *\n     * @param {AtomSelectionSpec} sel\n     * @param {GLViewer} viewer\n     * @param {LabelSpec} options\n     * @param {boolean} byframe - if true, create labels for every individual frame, not just current; frames must be loaded already\n     */\n    public addResLabels(sel: AtomSelectionSpec, viewer: GLViewer, style: LabelSpec, byframe: boolean = false) {\n\n        var created_labels = [];\n        var helper = function (model, framenum?) {\n            var atoms = model.selectedAtoms(sel, atoms);\n            var bylabel = {};\n            //collect by chain:resn:resi\n            for (var i = 0; i < atoms.length; i++) {\n                var a = atoms[i];\n                var c = a.chain;\n                var resn = a.resn;\n                var resi = a.resi;\n                var label = resn + '' + resi;\n                if (!bylabel[c]) bylabel[c] = {};\n                if (!bylabel[c][label]) bylabel[c][label] = [];\n                bylabel[c][label].push(a);\n            }\n\n            var mystyle = deepCopy(style);\n            //now compute centers of mass\n            for (let c in bylabel) {\n                if (bylabel.hasOwnProperty(c)) {\n                    var labels = bylabel[c];\n                    for (let label in labels) {\n                        if (labels.hasOwnProperty(label)) {\n                            let atoms = labels[label];\n                            let sum = new Vector3(0, 0, 0);\n                            for (let i = 0; i < atoms.length; i++) {\n                                let a = atoms[i];\n                                sum.x += a.x;\n                                sum.y += a.y;\n                                sum.z += a.z;\n                            }\n                            sum.divideScalar(atoms.length);\n                            mystyle.position = sum;\n                            mystyle.frame = framenum;\n                            let l = viewer.addLabel(label, mystyle, undefined, true);\n                            created_labels.push(l);\n                        }\n                    }\n                }\n            }\n        };\n\n        if (byframe) {\n            var n = this.getNumFrames();\n            let savedatoms = this.atoms;\n            for (let i = 0; i < n; i++) {\n                if (this.frames[i]) {\n                    this.atoms = this.frames[i];\n                    helper(this, i);\n                }\n            }\n            this.atoms = savedatoms;\n        } else {\n            helper(this);\n        }\n        return created_labels;\n    };\n\n\n    //recurse over the current atoms to establish a depth first order\n    private setupDFS() {\n        this.atomdfs = [];\n        var self = this;\n        var visited = new Int8Array(this.atoms.length);\n        visited.fill(0);\n\n        var search = function (i, prev, component) {\n            //add i to component and recursive explore connected atoms\n            component.push([i, prev]);\n            var atom = self.atoms[i];\n            visited[i] = 1;\n            for (var b = 0; b < atom.bonds.length; b++) {\n                var nexti = atom.bonds[b];\n                if (self.atoms[nexti] && !visited[nexti]) {\n                    search(nexti, i, component);\n                }\n            }\n        };\n\n        for (var i = 0; i < this.atoms.length; i++) {\n            var atom = this.atoms[i];\n            if (atom && !visited[i]) {\n                var component = [];\n                search(i, -1, component);\n                this.atomdfs.push(component);\n            }\n        }\n    };\n\n    /**\n    * Set coordinates from remote trajectory file.\n    * @param {string} url - contains the url where mdsrv has been hosted\n    * @param {string} path - contains the path of the file (<root>/filename)\n    * @return {Promise}\n    */\n    public setCoordinatesFromURL(url: string, path: string) {\n        this.frames = [];\n        var self = this;\n        if (this.box) this.setupDFS();\n        if (!url.startsWith('http'))\n            url = 'http://' + url;\n        return get(url + \"/traj/numframes/\" + path, function (numFrames) {\n            if (!isNaN(parseInt(numFrames))) {\n                self.frames.push(self.atoms);\n                self.frames.numFrames = numFrames;\n                self.frames.url = url;\n                self.frames.path = path;\n                return self.setFrame(0);\n            }\n        });\n    };\n\n\n    /**\n    * Set coordinates for the atoms from provided trajectory file.\n    * @param {string|ArrayBuffer} str - contains the data of the file\n    * @param {string} format - contains the format of the file (mdcrd, inpcrd, pdb, netcdf, or array).  Arrays should be TxNx3 where T is the number of timesteps and N the number of atoms.\n      @example\n         let m = viewer.addModel()  //create an empty model\n         m.addAtoms([{x:0,y:0,z:0,elem:'C'},{x:2,y:0,z:0,elem:'C'}]) //provide a list of dictionaries representing the atoms\n         viewer.setStyle({'sphere':{}})\n         m.setCoordinates([[[0.0, 0.0, 0.0], [2.0, 0.0, 0.0]], [[0.0, 0.0, 0.0], [2.8888888359069824, 0.0, 0.0]], [[0.0, 0.0, 0.0], [3.777777671813965, 0.0, 0.0]], [[0.0, 0.0, 0.0], [4.666666507720947, 0.0, 0.0]], [[0.0, 0.0, 0.0], [5.55555534362793, 0.0, 0.0]], [[0.0, 0.0, 0.0], [6.44444465637207, 0.0, 0.0]], [[0.0, 0.0, 0.0], [7.333333492279053, 0.0, 0.0]], [[0.0, 0.0, 0.0], [8.222222328186035, 0.0, 0.0]], [[0.0, 0.0, 0.0], [9.11111068725586, 0.0, 0.0]], [[0.0, 0.0, 0.0], [10.0, 0.0, 0.0]]],'array');\n         viewer.animate({loop: \"forward\",reps: 1});\n         viewer.zoomTo();\n         viewer.zoom(0.5);\n         viewer.render();\n    */\n\n    public setCoordinates(str: string | ArrayBuffer, format: string) {\n        format = format || \"\";\n        if (!str)\n            return []; // leave an empty model\n\n        if (/\\.gz$/.test(format)) {\n            // unzip gzipped files\n            format = format.replace(/\\.gz$/, '');\n            try {\n                str = inflateString(str)\n            } catch (err) {\n                console.log(err);\n            }\n        }\n        var supportedFormats = { \"mdcrd\": \"\", \"inpcrd\": \"\", \"pdb\": \"\", \"netcdf\": \"\", \"array\": \"\" };\n        if (supportedFormats.hasOwnProperty(format)) {\n            this.frames = [];\n            var atomCount = this.atoms.length;\n            var values = GLModel.parseCrd(str, format);\n            var count = 0;\n            while (count < values.length) {\n                var temp = [];\n                for (var i = 0; i < atomCount; i++) {\n                    var newAtom = {};\n                    for (var k in this.atoms[i]) {\n                        newAtom[k] = this.atoms[i][k];\n                    }\n                    temp[i] = newAtom;\n                    temp[i].x = values[count++];\n                    temp[i].y = values[count++];\n                    temp[i].z = values[count++];\n                }\n\n                this.frames.push(temp);\n            }\n            this.atoms = this.frames[0];\n            return this.frames;\n        }\n        return [];\n    };\n\n    /**\n     * add atomSpecs to validAtomSelectionSpecs\n     * @deprecated\n     * @param {Array} customAtomSpecs - array of strings that can be used as atomSelectionSpecs\n     * this is to prevent the 'Unknown Selector x' message on the console for the strings passed.\n     * These messages are no longer generated as, in theory, typescript will catch problems at compile time.\n     * In practice, there may still be issues at run-time but we don't check for them...\n     *\n     * What we should do is use something like https://github.com/woutervh-/typescript-is to do runtime\n     * type checking, but it currently doesn't work with our types...\n     */\n\n    public addAtomSpecs(customAtomSpecs) {\n\n    };\n\n    static parseCrd(data, format: string) {\n        var values = []; // this will contain the all the float values in the\n        // file.\n        var counter = 0;\n        if (format == \"pdb\") {\n            var index = data.indexOf(\"\\nATOM\");\n            while (index != -1) {\n                while (data.slice(index, index + 5) == \"\\nATOM\" ||\n                    data.slice(index, index + 7) == \"\\nHETATM\") {\n                    values[counter++] = parseFloat(data.slice(index + 31,\n                        index + 39));\n                    values[counter++] = parseFloat(data.slice(index + 39,\n                        index + 47));\n                    values[counter++] = parseFloat(data.slice(index + 47,\n                        index + 55));\n                    index = data.indexOf(\"\\n\", index + 54);\n                    if (data.slice(index, index + 4) == \"\\nTER\")\n                        index = data.indexOf(\"\\n\", index + 5);\n                }\n                index = data.indexOf(\"\\nATOM\", index);\n            }\n\n        } else if (format == \"netcdf\") {\n            var reader = new NetCDFReader(data);\n            values = [].concat.apply([], reader.getDataVariable('coordinates'));\n\n        } else if (format == \"array\" || Array.isArray(data)) {\n            return data.flat(2);\n        } else {\n            let index = data.indexOf(\"\\n\"); // remove the first line containing title\n            if (format == 'inpcrd') {\n                index = data.indexOf(\"\\n\", index + 1); //remove second line w/#atoms\n            }\n\n            data = data.slice(index + 1);\n            values = data.match(/\\S+/g).map(parseFloat);\n        }\n        return values;\n    };\n\n    static parseMolData(data?: string | ArrayBuffer, format: string = \"\", options?: ParserOptionsSpec) {\n        if (!data)\n            return []; //leave an empty model\n\n        if (/\\.gz$/.test(format)) {\n            //unzip gzipped files\n            format = format.replace(/\\.gz$/, '');\n            try {\n                if (format.match(/bcif/i)) {\n                    data = inflateString(data, false);\n                } else {\n                    data = inflateString(data);\n                }\n            } catch (err) {\n                console.log(err);\n            }\n        }\n\n        if (typeof (Parsers[format]) == \"undefined\") {\n            // let someone provide a file name and get format from extension\n            format = format.split('.').pop();\n            if (typeof (Parsers[format]) == \"undefined\") {\n                console.log(\"Unknown format: \" + format);\n                // try to guess correct format from data contents\n                if (data instanceof Uint8Array) {\n                    format = \"bcif\"; //mmtf deprecated so go with bcif\n                } else if ((data as string).match(/^@<TRIPOS>MOLECULE/gm)) {\n                    format = \"mol2\";\n                } else if ((data as string).match(/^data_/gm) && (data as string).match(/^loop_/gm)) {\n                    format = \"cif\";\n                } else if ((data as string).match(/^HETATM/gm) || (data as string).match(/^ATOM/gm)) {\n                    format = \"pdb\";\n                } else if ((data as string).match(/ITEM: TIMESTEP/gm)) {\n                    format = \"lammpstrj\";\n                } else if ((data as string).match(/^.*\\n.*\\n.\\s*(\\d+)\\s+(\\d+)/gm)) {\n                    format = \"sdf\"; // could look at line 3\n                } else if ((data as string).match(/^%VERSION\\s+VERSION_STAMP/gm)) {\n                    format = \"prmtop\";\n                } else {\n                    format = \"xyz\";\n                }\n                console.log(\"Best guess: \" + format);\n            }\n        }\n        var parse = Parsers[format];\n        var parsedAtoms = parse((data as string), options);\n\n        return parsedAtoms;\n    };\n\n}\n\n/** Atom style specification */\nexport interface AtomStyleSpec {\n    /** draw bonds as lines */\n    line?: LineStyleSpec;\n    /** draw atoms as crossed lines (aka stars) */\n    cross?: CrossStyleSpec;\n    /** draw bonds as capped cylinders */\n    stick?: StickStyleSpec;\n    /** draw atoms as spheres */\n    sphere?: SphereStyleSpec;\n    /** draw cartoon representation of secondary structure */\n    cartoon?: CartoonStyleSpec;\n    /** invisible style for click handling only */\n    clicksphere?: ClickSphereStyleSpec;\n};\n\n/** Line style specification\n */\nexport interface LineStyleSpec {\n    /** do not show line */\n    hidden?: boolean;\n    /** *deprecated due to vanishing browser support*  */\n    linewidth?: number;\n    /** colorscheme to use on atoms; overrides color */\n    colorscheme?: ColorschemeSpec;\n    /** fixed coloring */\n    color?: ColorSpec;\n    /**  Allows the user to provide a function for setting the colorschemes. */\n    colorfunc?: Function;\n    /** opacity (zero to one), must be the same for all atoms in a model */\n    opacity?: number;\n    /** wireframe style */\n    wireframe?: boolean;\n\n}\n\n/** Cross style specification\n */\nexport interface CrossStyleSpec {\n    /** do not show line */\n    hidden?: boolean;\n    /** *deprecated due to vanishing browser support*  */\n    linewidth?: number;\n    /** radius of cross */\n    radius?: number;\n    /** scale VDW radius by specified amount */\n    scale?: number;\n    /** colorscheme to use on atoms; overrides color */\n    colorscheme?: ColorschemeSpec;\n    /** fixed coloring */\n    color?: ColorSpec;\n    /**  Allows the user to provide a function for setting the colorschemes. */\n    colorfunc?: Function;\n    /** opacity (zero to one), must be the same for all atoms in a model */\n    opacity?: number;\n}\n\n/** Dashed Bond style specification\n */\nexport interface DashedBondSpec {\n    /** length of dash (default 0.1) */\n    dashLength?: number;\n    /** length of gap (default 0.25) */\n    gapLength?: number;\n}\n\n/** Stick (cylinder) style specification\n */\nexport interface StickStyleSpec {\n    /** do not show sticks */\n    hidden?: boolean;\n    /** radius of stick */\n    radius?: number;\n    /** radius scaling factor for drawing double bonds (default 0.4) */\n    doubleBondScaling?: number;\n    /** radius scaling factor for drawing triple bonds (default 0.25) */\n    tripleBondScaling?: number;\n    /** dashed bond properties */\n    dashedBondConfig?: DashedBondSpec;\n    /** draw all bonds as dashed bonds */\n    dashedBonds?: boolean;\n    /** draw all bonds as single bonds */\n    singleBonds?: boolean;\n    /** colorscheme to use on atoms; overrides color */\n    colorscheme?: ColorschemeSpec;\n    /** fixed coloring */\n    color?: ColorSpec;\n    /**  Allows the user to provide a function for setting the colorschemes. */\n    colorfunc?: Function;\n    /** opacity (zero to one), must be the same for all atoms in a model */\n    opacity?: number;\n    /** display nonbonded atoms as spheres */\n    showNonBonded?: boolean;\n}\n\n\n/** Sphere (spacefill) style specification\n */\nexport interface SphereStyleSpec {\n    /** do not show sticks */\n    hidden?: boolean;\n    /** fixed radius of sphere */\n    radius?: number;\n    /** scale VDW radius by specified amount */\n    scale?: number;\n    /** colorscheme to use on atoms; overrides color */\n    colorscheme?: ColorschemeSpec;\n    /** fixed coloring */\n    color?: ColorSpec;\n    /**  Allows the user to provide a function for setting the colorschemes. */\n    colorfunc?: Function;\n    /** opacity (zero to one), must be the same for all atoms in a model */\n    opacity?: number;\n}\n\n/** Invisible click sphere style specification.  This lets you set\n * larger (or smaller) click targets on atoms then the default radii or\n * have clickable atoms even if they aren't being rendered visibly.\n */\nexport interface ClickSphereStyleSpec {\n    /** do not show sticks */\n    hidden?: boolean;\n    /** fixed radius of sphere */\n    radius?: number;\n    /** scale VDW radius by specified amount */\n    scale?: number;\n}\n\n/** Style for individual bond. */\nexport interface BondStyle {\n    iswire?: boolean;\n    /**  */\n    singleBond?: boolean;\n    /**  */\n    radius?: number;\n    /**  */\n    color1?: ColorSpec;\n    /**  */\n    color2?: ColorSpec;\n}\n","import { Geometry, Material } from \"./WebGL\";\nimport { Sphere, Cylinder, Triangle } from \"./WebGL/shapes\";\nimport { Vector3, XYZ } from \"./WebGL/math\";\nimport { clamp } from \"./WebGL/math\";\nimport { DoubleSide } from \"./WebGL\";\nimport { Color, CC, ColorSpec, Colored } from \"./colors\";\nimport { MarchingCube } from \"./ProteinSurface4\";\nimport { VolumeData } from \"./VolumeData\";\nimport { MeshDoubleLambertMaterial, MeshLambertMaterial, Object3D, Coloring, Mesh, LineBasicMaterial, Line, LineStyle } from \"./WebGL\";\nimport { CAP, GLDraw } from \"./GLDraw\"\nimport { subdivide_spline } from \"./glcartoon\";\nimport { adjustVolumeStyle, extend, Func, makeFunction } from \"./utilities\";\nimport { GradientType } from \"./Gradient\";\nimport { AtomSelectionSpec } from \"specs\";\nimport { GLViewer } from \"GLViewer\";\n\n\n/**\n * A GLShape is a collection of user specified shapes.\n * \n * @class\n * @extends {ShapeSpec}\n * @param {number} sid - Unique identifier\n * @param {ShapeSpec} stylespec - shape style specification\n */\nexport class GLShape {\n\n    // Marching cube, to match with protein surface generation\n    private static ISDONE = 2;\n\n    private static finalizeGeo(geo) {\n        //to avoid creating a bunch of geometries, we leave geoGroup untruncated\n        //until render is called, at which point we truncate; \n        //successive called up updateGeo will return a new geometry\n        var geoGroup = geo.updateGeoGroup(0);\n        if (geoGroup.vertices > 0) {\n            geoGroup.truncateArrayBuffers(true, true);\n        }\n    };\n\n    /* \n     * \n     * @param {Geometry}\n     *            geo\n     * @param {Color | colorlike} color\n     */\n    static updateColor(geo: Geometry, color) {\n\n        color = color || CC.color(color);\n        geo.colorsNeedUpdate = true;\n\n        var r, g, b;\n        if (color.constructor !== Array) {\n            r = color.r;\n            g = color.g;\n            b = color.b;\n        }\n\n\n        for (let gg in geo.geometryGroups) {\n\n            let geoGroup = geo.geometryGroups[gg];\n            let colorArr = geoGroup.colorArray;\n\n            for (let i = 0, il = geoGroup.vertices; i < il; ++i) {\n\n                if (color.constructor === Array) {\n                    let c = color[i];\n                    r = c.r;\n                    g = c.g;\n                    b = c.b;\n                }\n\n                colorArr[i * 3] = r;\n                colorArr[i * 3 + 1] = g;\n                colorArr[i * 3 + 2] = b;\n            }\n        }\n    };\n\n\n    /*\n     * @param {GLShape}\n     *            shape\n     * @param {geometryGroup}\n     *            geoGroup\n     * @param {ArrowSpec}\n     *            spec\n     */\n    static drawArrow(shape: GLShape, geo: Geometry, spec: ArrowSpec) {\n\n        var from = spec.start, end = spec.end, radius = spec.radius,\n            radiusRatio = spec.radiusRatio, mid = spec.mid, midoffset = spec.midpos;\n\n        if (!(from && end))\n            return;\n\n        var geoGroup = geo.updateGeoGroup(51);\n\n        // vertices\n\n        var dir = new Vector3(end.x, end.y, end.z).sub(from);\n        if (midoffset) { //absolute offset, convert to relative\n            let length = dir.length();\n            if (midoffset > 0) mid = midoffset / length;\n            else mid = (length + midoffset) / length;\n        }\n\n        dir.multiplyScalar(mid);\n\n        var to = new Vector3(from.x, from.y, from.z).add(dir);\n        var negDir = dir.clone().negate();\n\n        let fromv = new Vector3(from.x, from.y, from.z);\n        shape.intersectionShape.cylinder.push(new Cylinder(fromv, to.clone(), radius));\n        shape.intersectionShape.sphere.push(new Sphere(fromv, radius));\n\n        // get orthonormal vector\n        var nvecs = [];\n        nvecs[0] = dir.clone();\n        if (Math.abs(nvecs[0].x) > 0.0001)\n            nvecs[0].y += 1;\n        else\n            nvecs[0].x += 1;\n        nvecs[0].cross(dir);\n        nvecs[0].normalize();\n\n        // another orth vector\n        nvecs[4] = nvecs[0].clone();\n        nvecs[4].crossVectors(nvecs[0], dir);\n        nvecs[4].normalize();\n        nvecs[8] = nvecs[0].clone().negate();\n        nvecs[12] = nvecs[4].clone().negate();\n\n        // now quarter positions\n        nvecs[2] = nvecs[0].clone().add(nvecs[4]).normalize();\n        nvecs[6] = nvecs[4].clone().add(nvecs[8]).normalize();\n        nvecs[10] = nvecs[8].clone().add(nvecs[12]).normalize();\n        nvecs[14] = nvecs[12].clone().add(nvecs[0]).normalize();\n\n        // eights\n        nvecs[1] = nvecs[0].clone().add(nvecs[2]).normalize();\n        nvecs[3] = nvecs[2].clone().add(nvecs[4]).normalize();\n        nvecs[5] = nvecs[4].clone().add(nvecs[6]).normalize();\n        nvecs[7] = nvecs[6].clone().add(nvecs[8]).normalize();\n        nvecs[9] = nvecs[8].clone().add(nvecs[10]).normalize();\n        nvecs[11] = nvecs[10].clone().add(nvecs[12]).normalize();\n        nvecs[13] = nvecs[12].clone().add(nvecs[14]).normalize();\n        nvecs[15] = nvecs[14].clone().add(nvecs[0]).normalize();\n\n        var start = geoGroup.vertices;\n        var vertexArray = geoGroup.vertexArray;\n        var faceArray = geoGroup.faceArray;\n        var normalArray = geoGroup.normalArray;\n        var lineArray = geoGroup.lineArray;\n\n        var offset, i, n;\n        // add vertices, opposing vertices paired together\n        for (i = 0, n = nvecs.length; i < n; ++i) {\n            offset = 3 * (start + 3 * i);\n            var bottom = nvecs[i].clone().multiplyScalar(radius).add(from);\n            var top = nvecs[i].clone().multiplyScalar(radius).add(to);\n            var conebase = nvecs[i].clone()\n                .multiplyScalar(radius * radiusRatio).add(to);\n\n            vertexArray[offset] = bottom.x;\n            vertexArray[offset + 1] = bottom.y;\n            vertexArray[offset + 2] = bottom.z;\n\n            vertexArray[offset + 3] = top.x;\n            vertexArray[offset + 4] = top.y;\n            vertexArray[offset + 5] = top.z;\n\n            vertexArray[offset + 6] = conebase.x;\n            vertexArray[offset + 7] = conebase.y;\n            vertexArray[offset + 8] = conebase.z;\n\n            if (i > 0) {\n                var prev_x = vertexArray[offset - 3];\n                var prev_y = vertexArray[offset - 2];\n                var prev_z = vertexArray[offset - 1];\n\n                var c = new Vector3(prev_x, prev_y, prev_z);\n                var b = new Vector3(end.x, end.y, end.z), b2 = to.clone();\n                var a = new Vector3(conebase.x, conebase.y, conebase.z);\n\n                shape.intersectionShape.triangle.push(new Triangle(a, b, c));\n                shape.intersectionShape.triangle.push(new Triangle(c.clone(), b2, a.clone()));\n            }\n        }\n\n        geoGroup.vertices += 48;\n        offset = geoGroup.vertices * 3;\n\n        // caps\n        vertexArray[offset] = from.x;\n        vertexArray[offset + 1] = from.y;\n        vertexArray[offset + 2] = from.z;\n\n        vertexArray[offset + 3] = to.x;\n        vertexArray[offset + 4] = to.y;\n        vertexArray[offset + 5] = to.z;\n\n        vertexArray[offset + 6] = end.x;\n        vertexArray[offset + 7] = end.y;\n        vertexArray[offset + 8] = end.z;\n\n        geoGroup.vertices += 3;\n\n        // now faces\n        var face, faceoffset, lineoffset;\n        var t1, t2, t2b, t3, t3b, t4, t1offset, t2offset, t2boffset, t3offset, t3boffset, t4offset;\n        var n1, n2, n3, n4;\n        var fromi = geoGroup.vertices - 3, toi = geoGroup.vertices - 2, endi = geoGroup.vertices - 1;\n        var fromoffset = fromi * 3, tooffset = toi * 3, endoffset = endi * 3;\n        for (i = 0, n = nvecs.length - 1; i < n; ++i) {\n\n            var ti = start + 3 * i;\n            offset = ti * 3;\n            faceoffset = geoGroup.faceidx;\n            lineoffset = geoGroup.lineidx;\n\n            t1 = ti;\n            t1offset = t1 * 3;\n            t2 = ti + 1;\n            t2offset = t2 * 3;\n            t2b = ti + 2;\n            t2boffset = t2b * 3;\n            t3 = ti + 4;\n            t3offset = t3 * 3;\n            t3b = ti + 5;\n            t3boffset = t3b * 3;\n            t4 = ti + 3;\n            t4offset = t4 * 3;\n\n            // face = [t1, t2, t4], [t2, t3, t4];\n            // face = [t1, t2, t3, t4];\n\n            //   norm = [nvecs[i], nvecs[i], nvecs[i + 1], nvecs[i + 1]];\n\n            n1 = n2 = nvecs[i];\n            n3 = n4 = nvecs[i + 1];\n\n            normalArray[t1offset] = n1.x;\n            normalArray[t2offset] = n2.x;\n            normalArray[t4offset] = n4.x;\n            normalArray[t1offset + 1] = n1.y;\n            normalArray[t2offset + 1] = n2.y;\n            normalArray[t4offset + 1] = n4.y;\n            normalArray[t1offset + 2] = n1.z;\n            normalArray[t2offset + 2] = n2.z;\n            normalArray[t4offset + 2] = n4.z;\n\n            normalArray[t2offset] = n2.x;\n            normalArray[t3offset] = n3.x;\n            normalArray[t4offset] = n4.x;\n            normalArray[t2offset + 1] = n2.y;\n            normalArray[t3offset + 1] = n3.y;\n            normalArray[t4offset + 1] = n4.y;\n            normalArray[t2offset + 2] = n2.z;\n            normalArray[t3offset + 2] = n3.z;\n            normalArray[t4offset + 2] = n4.z;\n\n            normalArray[t2boffset] = n2.x;\n            normalArray[t3boffset] = n3.x;\n            normalArray[t2boffset + 1] = n2.y;\n            normalArray[t3boffset + 1] = n3.y;\n            normalArray[t2boffset + 2] = n2.z;\n            normalArray[t3boffset + 2] = n3.z;\n\n            // sides\n            faceArray[faceoffset] = t1;\n            faceArray[faceoffset + 1] = t2;\n            faceArray[faceoffset + 2] = t4;\n            faceArray[faceoffset + 3] = t2;\n            faceArray[faceoffset + 4] = t3;\n            faceArray[faceoffset + 5] = t4;\n            // caps\n            faceArray[faceoffset + 6] = t1;\n            faceArray[faceoffset + 7] = t4;\n            faceArray[faceoffset + 8] = fromi;\n            faceArray[faceoffset + 9] = t2b;\n            faceArray[faceoffset + 10] = toi;\n            faceArray[faceoffset + 11] = t3b;\n            // arrowhead\n            faceArray[faceoffset + 12] = t2b;\n            faceArray[faceoffset + 13] = endi;\n            faceArray[faceoffset + 14] = t3b;\n\n            // sides\n            lineArray[lineoffset] = t1;\n            lineArray[lineoffset + 1] = t2;\n            lineArray[lineoffset + 2] = t1;\n            lineArray[lineoffset + 3] = t4;\n            // lineArray[lineoffset+4] = t2, lineArray[lineoffset+5] = t3;\n            lineArray[lineoffset + 4] = t3;\n            lineArray[lineoffset + 5] = t4;\n            // caps\n            lineArray[lineoffset + 6] = t1;\n            lineArray[lineoffset + 7] = t4;\n            // lineArray[lineoffset+10] = t1, lineArray[lineoffset+11] = fromi;\n            // lineArray[lineoffset+12] = t4, lineArray[lineoffset+13] = fromi;\n\n            lineArray[lineoffset + 8] = t2b;\n            lineArray[lineoffset + 9] = t2; // toi\n            lineArray[lineoffset + 10] = t2b;\n            lineArray[lineoffset + 11] = t3b;\n            lineArray[lineoffset + 12] = t3;\n            lineArray[lineoffset + 13] = t3b; // toi\n            // arrowhead\n            lineArray[lineoffset + 14] = t2b;\n            lineArray[lineoffset + 15] = endi;\n            lineArray[lineoffset + 16] = t2b;\n            lineArray[lineoffset + 17] = t3b;\n            lineArray[lineoffset + 18] = endi;\n            lineArray[lineoffset + 19] = t3b;\n\n            geoGroup.faceidx += 15;\n            geoGroup.lineidx += 20;\n\n        }\n        // final face\n\n        face = [start + 45, start + 46, start + 1, start, start + 47,\n        start + 2];\n        //norm = [nvecs[15], nvecs[15], nvecs[0], nvecs[0]];\n\n        faceoffset = geoGroup.faceidx;\n        lineoffset = geoGroup.lineidx;\n\n        t1 = face[0];\n        t1offset = t1 * 3;\n        t2 = face[1];\n        t2offset = t2 * 3;\n        t2b = face[4];\n        t2boffset = t2b * 3;\n        t3 = face[2];\n        t3offset = t3 * 3;\n        t3b = face[5];\n        t3boffset = t3b * 3;\n        t4 = face[3];\n        t4offset = t4 * 3;\n\n        n1 = n2 = nvecs[15];\n        n3 = n4 = nvecs[0];\n\n        normalArray[t1offset] = n1.x;\n        normalArray[t2offset] = n2.x;\n        normalArray[t4offset] = n4.x;\n        normalArray[t1offset + 1] = n1.y;\n        normalArray[t2offset + 1] = n2.y;\n        normalArray[t4offset + 1] = n4.y;\n        normalArray[t1offset + 2] = n1.z;\n        normalArray[t2offset + 2] = n2.z;\n        normalArray[t4offset + 2] = n4.z;\n\n        normalArray[t2offset] = n2.x;\n        normalArray[t3offset] = n3.x;\n        normalArray[t4offset] = n4.x;\n        normalArray[t2offset + 1] = n2.y;\n        normalArray[t3offset + 1] = n3.y;\n        normalArray[t4offset + 1] = n4.y;\n        normalArray[t2offset + 2] = n2.z;\n        normalArray[t3offset + 2] = n3.z;\n        normalArray[t4offset + 2] = n4.z;\n\n        normalArray[t2boffset] = n2.x;\n        normalArray[t3boffset] = n3.x;\n        normalArray[t2boffset + 1] = n2.y;\n        normalArray[t3boffset + 1] = n3.y;\n        normalArray[t2boffset + 2] = n2.z;\n        normalArray[t3boffset + 2] = n3.z;\n\n        // Cap normals\n        dir.normalize();\n        negDir.normalize();\n        normalArray[fromoffset] = negDir.x;\n        normalArray[tooffset] = normalArray[endoffset] = dir.x;\n        normalArray[fromoffset + 1] = negDir.y;\n        normalArray[tooffset + 1] = normalArray[endoffset + 1] = dir.y;\n        normalArray[fromoffset + 2] = negDir.z;\n        normalArray[tooffset + 2] = normalArray[endoffset + 2] = dir.z;\n\n        // Final side\n        faceArray[faceoffset] = t1;\n        faceArray[faceoffset + 1] = t2;\n        faceArray[faceoffset + 2] = t4;\n        faceArray[faceoffset + 3] = t2;\n        faceArray[faceoffset + 4] = t3;\n        faceArray[faceoffset + 5] = t4;\n        // final caps\n        faceArray[faceoffset + 6] = t1;\n        faceArray[faceoffset + 7] = t4;\n        faceArray[faceoffset + 8] = fromi;\n        faceArray[faceoffset + 9] = t2b;\n        faceArray[faceoffset + 10] = toi;\n        faceArray[faceoffset + 11] = t3b;\n        // final arrowhead\n        faceArray[faceoffset + 12] = t2b;\n        faceArray[faceoffset + 13] = endi;\n        faceArray[faceoffset + 14] = t3b;\n\n        // sides\n        lineArray[lineoffset] = t1;\n        lineArray[lineoffset + 1] = t2;\n        lineArray[lineoffset + 2] = t1;\n        lineArray[lineoffset + 3] = t4;\n        // lineArray[lineoffset+4] = t2, lineArray[lineoffset+5] = t3;\n        lineArray[lineoffset + 4] = t3;\n        lineArray[lineoffset + 5] = t4;\n        // caps\n        lineArray[lineoffset + 6] = t1;\n        lineArray[lineoffset + 7] = t4;\n        // lineArray[lineoffset+10] = t1, lineArray[lineoffset+11] = fromi;\n        // lineArray[lineoffset+12] = t4, lineArray[lineoffset+13] = fromi;\n\n        lineArray[lineoffset + 8] = t2b;\n        lineArray[lineoffset + 9] = t2; // toi\n        lineArray[lineoffset + 10] = t2b;\n        lineArray[lineoffset + 11] = t3b;\n        lineArray[lineoffset + 12] = t3;\n        lineArray[lineoffset + 13] = t3b; // toi\n        // arrowhead\n        lineArray[lineoffset + 14] = t2b;\n        lineArray[lineoffset + 15] = endi;\n        lineArray[lineoffset + 16] = t2b;\n        lineArray[lineoffset + 17] = t3b;\n        lineArray[lineoffset + 18] = endi;\n        lineArray[lineoffset + 19] = t3b;\n\n        geoGroup.faceidx += 15;\n        geoGroup.lineidx += 20;\n\n    };\n\n    // Update a bounding sphere's position and radius\n    // from list of centroids and new points\n    /*\n     * @param {Sphere}\n     *            sphere\n     * @param {Object}\n     *            components, centroid of all objects in shape\n     * @param {Array}\n     *            points, flat array of all points in shape\n     * @param {int} numPoints, number of valid poitns in points\n     */\n    static updateBoundingFromPoints(sphere: Sphere, components, points, numPoints: number) {\n\n        sphere.center.set(0, 0, 0);\n\n        //previously I weighted each component's center equally, but I think\n        //it is better to use all points\n        let xmin = Infinity, ymin = Infinity, zmin = Infinity;\n        let xmax = -Infinity, ymax = -Infinity, zmax = -Infinity;\n        if (sphere.box) {\n            xmin = sphere.box.min.x;\n            xmax = sphere.box.max.x;\n            ymin = sphere.box.min.y;\n            ymax = sphere.box.max.y;\n            zmin = sphere.box.min.z;\n            zmax = sphere.box.max.z;\n        }\n\n        for (let i = 0, il = numPoints; i < il; i++) {\n            var x = points[i * 3], y = points[i * 3 + 1], z = points[i * 3 + 2];\n            if (x < xmin) xmin = x;\n            if (y < ymin) ymin = y;\n            if (z < zmin) zmin = z;\n            if (x > xmax) xmax = x;\n            if (y > ymax) ymax = y;\n            if (z > zmax) zmax = z;\n        }\n\n        sphere.center.set((xmax + xmin) / 2, (ymax + ymin) / 2, (zmax + zmin) / 2);\n        sphere.radius = sphere.center.distanceTo({ x: xmax, y: ymax, z: zmax });\n        sphere.box = { min: { x: xmin, y: ymin, z: zmin }, max: { x: xmax, y: ymax, z: zmax } };\n    };\n\n    //helper function for adding an appropriately sized mesh\n    private static addCustomGeo(shape: GLShape, geo: Geometry, mesh, color, clickable) {\n        var geoGroup = geo.addGeoGroup();\n        var vertexArr = mesh.vertexArr, normalArr = mesh.normalArr,\n            faceArr = mesh.faceArr;\n\n        geoGroup.vertices = vertexArr.length;\n        geoGroup.faceidx = faceArr.length;\n\n        var offset, v, a, b, c, i, il, r, g;\n        var vertexArray = geoGroup.vertexArray;\n        var colorArray = geoGroup.colorArray;\n\n        if (color.constructor !== Array) {\n            r = color.r;\n            g = color.g;\n            b = color.b;\n        }\n        for (i = 0, il = geoGroup.vertices; i < il; ++i) {\n            offset = i * 3;\n            v = vertexArr[i];\n            vertexArray[offset] = v.x;\n            vertexArray[offset + 1] = v.y;\n            vertexArray[offset + 2] = v.z;\n\n            if (color.constructor === Array) {\n                c = color[i];\n                r = c.r;\n                g = c.g;\n                b = c.b;\n            }\n\n            colorArray[offset] = r;\n            colorArray[offset + 1] = g;\n            colorArray[offset + 2] = b;\n        }\n\n        if (clickable) {\n            for (i = 0, il = geoGroup.faceidx / 3; i < il; ++i) {\n                offset = i * 3;\n                a = faceArr[offset];\n                b = faceArr[offset + 1];\n                c = faceArr[offset + 2];\n                var vA = new Vector3(), vB = new Vector3(), vC = new Vector3();\n                shape.intersectionShape.triangle.push(new Triangle(vA.copy(vertexArr[a]),\n                    vB.copy(vertexArr[b]), vC.copy(vertexArr[c])));\n            }\n        }\n\n        if (clickable) {\n\n            var center = new Vector3(0, 0, 0);\n            var cnt = 0;\n            for (let g = 0; g < geo.geometryGroups.length; g++) {\n                center.add(geo.geometryGroups[g].getCentroid());\n                cnt++;\n            }\n            center.divideScalar(cnt);\n\n\n            GLShape.updateBoundingFromPoints(shape.boundingSphere, { centroid: center }, vertexArray, geoGroup.vertices);\n        }\n\n        geoGroup.faceArray = new Uint16Array(faceArr);\n\n        geoGroup.truncateArrayBuffers(true, true);\n\n        if (normalArr.length < geoGroup.vertices)\n            geoGroup.setNormals();\n        else {\n\n            var normalArray = geoGroup.normalArray = new Float32Array(geoGroup.vertices * 3);\n            var n;\n            for (i = 0, il = geoGroup.vertices; i < il; ++i) {\n                offset = i * 3;\n                n = normalArr[i];\n                normalArray[offset] = n.x;\n                normalArray[offset + 1] = n.y;\n                normalArray[offset + 2] = n.z;\n            }\n        }\n\n        geoGroup.setLineIndices();\n        geoGroup.lineidx = geoGroup.lineArray.length;\n    };\n\n\n\n    // handles custom shape generation from user supplied arrays\n    // May need to generate normal and/or line indices\n    /*\n     * @param {$3Dmol.GLShape}\n     *            shape\n     * @param {geometry}\n     *            geo\n     * @param {CustomShapeSpec}\n     *            customSpec\n     */\n    static drawCustom = function (shape: GLShape, geo: Geometry, customSpec: CustomShapeSpec) {\n        var mesh = customSpec;\n        var vertexArr = mesh.vertexArr;\n        var faceArr = mesh.faceArr;\n        if (vertexArr.length === 0 || faceArr.length === 0) {\n            console\n                .warn(\"Error adding custom shape component: No vertices and/or face indices supplied!\");\n        }\n\n        var color = customSpec.color;\n        if (typeof (color) == 'undefined') {\n            color = shape.color;\n        }\n        color = CC.color(color);\n\n        //var firstgeo = geo.geometryGroups.length;\n        var splits = splitMesh(mesh);\n        for (var i = 0, n = splits.length; i < n; i++) {\n            GLShape.addCustomGeo(shape, geo, splits[i], splits[i].colorArr ? splits[i].colorArr : color, customSpec.clickable);\n        }\n    };\n\n\n    /*\n     * \n     * @param {$3Dmol.GLShape}\n     *            shape\n     * @param {ShapeSpec}\n     *            stylespec\n     * @returns {undefined}\n     */\n    static updateFromStyle(shape: GLShape, stylespec: ShapeSpec) {\n        if (typeof (stylespec.color) != 'undefined') {\n            shape.color = stylespec.color || new Color();\n            if (!(stylespec.color instanceof Color))\n                shape.color = CC.color(stylespec.color);\n        } else {\n            shape.color = CC.color(0);\n        }\n        shape.wireframe = stylespec.wireframe ? true : false;\n        //opacity is the preferred nomenclature, support alpha for backwards compat\n        shape.opacity = stylespec.alpha ? clamp(stylespec.alpha, 0.0,\n            1.0) : 1.0;\n        if (typeof (stylespec.opacity) != 'undefined') {\n            shape.opacity = clamp(stylespec.opacity, 0.0, 1.0);\n        }\n        shape.side = (stylespec.side !== undefined) ? stylespec.side : DoubleSide;\n        shape.linewidth = typeof (stylespec.linewidth) == 'undefined' ? 1 : stylespec.linewidth;\n        // Click handling\n        shape.clickable = stylespec.clickable ? true : false;\n        shape.callback = makeFunction(stylespec.callback);\n        shape.hoverable = stylespec.hoverable ? true : false;\n        shape.hover_callback = makeFunction(stylespec.hover_callback);\n        shape.unhover_callback = makeFunction(stylespec.unhover_callback);\n        shape.contextMenuEnabled = !!stylespec.contextMenuEnabled;\n\n        shape.hidden = stylespec.hidden;\n        shape.frame = stylespec.frame;\n    };\n\n    boundingSphere: Sphere;\n    intersectionShape: any;\n    color: any = 0xffffff;\n    hidden = false;\n    wireframe = false;\n    opacity = 1;\n    linewidth = 1;\n    clickable = false;\n    callback: Func;\n    hoverable = false;\n    hover_callback: Func;\n    unhover_callback: Func;\n    contextMenuEnabled: boolean = false;\n    frame: any;\n    side = DoubleSide;\n    shapePosition: any;\n\n    private geo: Geometry;\n    private linegeo: Geometry;\n    private stylespec: any;\n    private components: any;\n    private shapeObj: any;\n    private renderedShapeObj: any;\n    /**\n     * Custom renderable shape\n     * \n     * @constructor \n     * \n     * @param {ShapeSpec} stylespec\n     */\n    constructor(stylespec: ShapeSpec) {\n\n        this.stylespec = stylespec || {};\n\n        this.boundingSphere = new Sphere();\n        /** @type {IntersectionShapes} */\n        this.intersectionShape = {\n            sphere: [],\n            cylinder: [],\n            line: [],\n            triangle: []\n        };\n\n        GLShape.updateFromStyle(this, this.stylespec);\n\n        // Keep track of shape components and their centroids\n        this.components = [];\n        this.shapeObj = null;\n        this.renderedShapeObj = null;\n\n        this.geo = new Geometry(true);\n        this.linegeo = new Geometry(true);\n    };\n\n    /** Update shape with new style specification\n     * @param {ShapeSpec} newspec\n       @example \n        let sphere = viewer.addSphere({center:{x:0,y:0,z:0},radius:10.0,color:'red'});\n        sphere.updateStyle({color:'yellow',opacity:0.5});\n        viewer.render();\n     */\n    updateStyle(newspec: ShapeSpec) {\n\n        for (var prop in newspec) {\n            this.stylespec[prop] = newspec[prop];\n        }\n\n        GLShape.updateFromStyle(this, this.stylespec);\n\n        if (newspec.voldata && newspec.volscheme) {\n            adjustVolumeStyle(newspec);\n\n            //convert volumetric data into colors\n            const scheme = newspec.volscheme;\n            const voldata = newspec.voldata;\n            const cc = CC;\n            const range = scheme.range() || [-1, 1];\n            this.geo.setColors(function (x, y, z) {\n                let val = voldata.getVal(x, y, z);\n                let col = cc.color(scheme.valueToHex(val, range));\n                return col;\n            });\n            delete this.color;\n        }\n    };\n\n    /**\n     * Creates a custom shape from supplied vertex and face arrays\n     * @param {CustomShapeSpec} customSpec     \n     */\n    public addCustom(customSpec: CustomShapeSpec) {\n\n        customSpec.vertexArr = customSpec.vertexArr || [];\n        customSpec.faceArr = customSpec.faceArr || [];\n        customSpec.normalArr = customSpec.normalArr || [];\n\n        // will split mesh as needed\n        GLShape.drawCustom(this, this.geo, customSpec);\n    };\n\n    /**\n     * Creates a sphere shape\n     * @param {SphereSpec} sphereSpec\n     @example \n     viewer.addSphere({center:{x:0,y:0,z:0},radius:10.0,color:'red'});\n     \n     viewer.render();\n     */\n    public addSphere(sphereSpec: SphereSpec) {\n\n        if (!sphereSpec.center) {\n            sphereSpec.center = new Vector3(0, 0, 0);\n        }\n\n        sphereSpec.radius = sphereSpec.radius ? clamp(sphereSpec.radius, 0, Infinity) : 1.5;\n        sphereSpec.color = CC.color(sphereSpec.color);\n\n        this.intersectionShape.sphere.push(new Sphere(sphereSpec.center, sphereSpec.radius));\n \n         GLDraw.drawSphere(this.geo, sphereSpec.center,\n           sphereSpec.radius, sphereSpec.color as Colored, sphereSpec.quality);\n\n        this.components.push({\n            centroid: new Vector3(sphereSpec.center.x,\n                sphereSpec.center.y, sphereSpec.center.z)\n        });\n        var geoGroup = this.geo.updateGeoGroup(0);\n\n        GLShape.updateBoundingFromPoints(this.boundingSphere, this.components,\n            geoGroup.vertexArray, geoGroup.vertices);\n    };\n\n\n    /**\n     * Creates a box\n     * @param {BoxSpec} boxSpec\n     @example \n     var shape = viewer.addShape({color:'red'});\n     shape.addBox({corner: {x:1,y:2,z:0}, dimensions: {w: 4, h: 2, d: 6}});\n     shape.addBox({corner: {x:-5,y:-3,z:0},\n                   dimensions: { w: {x:1,y:1,z:0},\n                                 h: {x:-1,y:1,z:0},\n                                 d: {x:0,y:0,z:1} }});\n     viewer.zoomTo();\n     viewer.rotate(30);\n     viewer.render();\n     */\n    public addBox(boxSpec: BoxSpec) {\n\n        var dim = boxSpec.dimensions || { w: 1, h: 1, d: 1 };\n\n        //dimensions may be scalar or vector quantities\n        var w: XYZ;\n        if (typeof (dim.w) == \"number\") {\n            w = { x: dim.w, y: 0, z: 0 };\n        } else {\n            w = dim.w;\n        }\n        var h: XYZ;\n        if (typeof (dim.h) == \"number\") {\n            h = { x: 0, y: dim.h, z: 0 };\n        } else {\n            h = dim.h;\n        }\n        var d: XYZ;\n        if (typeof (dim.d) == \"number\") {\n            d = { x: 0, y: 0, z: dim.d };\n        } else {\n            d = dim.d;\n        }\n\n        //can position using corner OR center\n        var c = boxSpec.corner;\n        if (c == undefined) {\n            if (boxSpec.center !== undefined) {\n\n                c = {\n                    x: boxSpec.center.x - 0.5 * (w.x + h.x + d.x),\n                    y: boxSpec.center.y - 0.5 * (w.y + h.y + d.y),\n                    z: boxSpec.center.z - 0.5 * (w.z + h.z + d.z)\n                };\n            } else { // default to origin\n                c = { x: 0, y: 0, z: 0 };\n            }\n        }\n\n        //8 vertices\n        var uv =\n            [{ x: c.x, y: c.y, z: c.z },\n            { x: c.x + w.x, y: c.y + w.y, z: c.z + w.z },\n            { x: c.x + h.x, y: c.y + h.y, z: c.z + h.z },\n            { x: c.x + w.x + h.x, y: c.y + w.y + h.y, z: c.z + w.z + h.z },\n            { x: c.x + d.x, y: c.y + d.y, z: c.z + d.z },\n            { x: c.x + w.x + d.x, y: c.y + w.y + d.y, z: c.z + w.z + d.z },\n            { x: c.x + h.x + d.x, y: c.y + h.y + d.y, z: c.z + h.z + d.z },\n            { x: c.x + w.x + h.x + d.x, y: c.y + w.y + h.y + d.y, z: c.z + w.z + h.z + d.z }];\n\n        //but.. so that we can have sharp issues, we want a unique normal\n        //for each face - since normals are associated with vertices, need to duplicate \n\n        //bottom\n        // 0 1\n        // 2 3\n        //top\n        // 4 5\n        // 6 7\n        var verts = [];\n        var faces = [];\n        //bottom\n        verts.splice(verts.length, 0, uv[0], uv[1], uv[2], uv[3]);\n        faces.splice(faces.length, 0, 0, 2, 1, 1, 2, 3);\n        var foff = 4;\n        //front\n        verts.splice(verts.length, 0, uv[2], uv[3], uv[6], uv[7]);\n        faces.splice(faces.length, 0, foff + 0, foff + 2, foff + 1, foff + 1, foff + 2, foff + 3);\n        foff += 4;\n        //back\n        verts.splice(verts.length, 0, uv[4], uv[5], uv[0], uv[1]);\n        faces.splice(faces.length, 0, foff + 0, foff + 2, foff + 1, foff + 1, foff + 2, foff + 3);\n        foff += 4;\n        //top\n        verts.splice(verts.length, 0, uv[6], uv[7], uv[4], uv[5]);\n        faces.splice(faces.length, 0, foff + 0, foff + 2, foff + 1, foff + 1, foff + 2, foff + 3);\n        foff += 4;\n        //right\n        verts.splice(verts.length, 0, uv[3], uv[1], uv[7], uv[5]);\n        faces.splice(faces.length, 0, foff + 0, foff + 2, foff + 1, foff + 1, foff + 2, foff + 3);\n        foff += 4;\n        //left\n        verts.splice(verts.length, 0, uv[2], uv[6], uv[0], uv[4]); // fix: was 2 0 6 4 , was flipped! will this ruin anything?\n        // and is this the reason for having double sided lambert shading? the box had a flipped face\n        faces.splice(faces.length, 0, foff + 0, foff + 2, foff + 1, foff + 1, foff + 2, foff + 3);\n        foff += 4;\n\n        var spec = extend({}, boxSpec);\n        spec.vertexArr = verts;\n        spec.faceArr = faces;\n        spec.normalArr = [];\n        GLShape.drawCustom(this, this.geo, spec);\n\n        var centroid = new Vector3();\n        this.components.push({\n            centroid: centroid.addVectors(uv[0], uv[7]).multiplyScalar(0.5)\n        });\n        var geoGroup = this.geo.updateGeoGroup(0);\n        GLShape.updateBoundingFromPoints(this.boundingSphere, this.components, geoGroup.vertexArray, geoGroup.vertices);\n    };\n\n    /**\n     * Creates a cylinder shape\n     * @param {CylinderSpec} cylinderSpec\n     @example\n          viewer.addCylinder({start:{x:0.0,y:0.0,z:0.0},\n                              end:{x:10.0,y:0.0,z:0.0},\n                              radius:1.0,\n                              fromCap:1,\n                              toCap:2,\n                              color:'red',\n                              hoverable:true,\n                              clickable:true,\n                              callback:function(){ this.color.setHex(0x00FFFF00);viewer.render( );},\n                              hover_callback: function(){ viewer.render( );},\n                              unhover_callback: function(){ this.color.setHex(0xFF000000);viewer.render( );}\n                             });\n          viewer.addCylinder({start:{x:0.0,y:2.0,z:0.0},\n                              end:{x:0.0,y:10.0,z:0.0},\n                              radius:0.5,\n                              fromCap:false,\n                              toCap:true,\n                              color:'teal'});\n          viewer.addCylinder({start:{x:15.0,y:0.0,z:0.0},\n                              end:{x:20.0,y:0.0,z:0.0},\n                              radius:1.0,\n                              color:'black',\n                              fromCap:false,\n                              toCap:false});\n          viewer.render();\n     */\n    public addCylinder(cylinderSpec: CylinderSpec) {\n\n        var start: Vector3;\n        var end: Vector3;\n        if (!cylinderSpec.start) {\n            start = new Vector3(0, 0, 0);\n        } else {\n            start = new Vector3(cylinderSpec.start.x || 0,\n                cylinderSpec.start.y || 0, cylinderSpec.start.z || 0);\n        }\n\n        if (!cylinderSpec.end) {\n            end = new Vector3(0, 0, 0);\n        } else {\n            end = new Vector3(cylinderSpec.end.x,\n                cylinderSpec.end.y || 0, cylinderSpec.end.z || 0);\n            if (typeof (end.x) == 'undefined') end.x = 3; //show something even if undefined\n        }\n        var radius = cylinderSpec.radius || 0.1;\n        var color = CC.color(cylinderSpec.color);\n\n        this.intersectionShape.cylinder.push(new Cylinder(start, end, radius));\n\n        GLDraw.drawCylinder(this.geo, start, end, radius, color, cylinderSpec.fromCap, cylinderSpec.toCap);\n\n        var centroid = new Vector3();\n        this.components.push({\n            centroid: centroid.addVectors(start, end).multiplyScalar(0.5)\n        });\n        var geoGroup = this.geo.updateGeoGroup(0);\n        GLShape.updateBoundingFromPoints(this.boundingSphere, this.components,\n            geoGroup.vertexArray, geoGroup.vertices);\n\n    };\n\n    /**\n     * Creates a dashed cylinder shape\n     * @param {CylinderSpec} cylinderSpec\n     */\n    public addDashedCylinder(cylinderSpec: CylinderSpec) {\n  \n        cylinderSpec.dashLength = cylinderSpec.dashLength || 0.25;\n        cylinderSpec.gapLength = cylinderSpec.gapLength || 0.25;\n\n        var start: Vector3;\n        if (!cylinderSpec.start) start = new Vector3(0, 0, 0);\n        else {\n            start = new Vector3(cylinderSpec.start.x || 0,\n                cylinderSpec.start.y || 0, cylinderSpec.start.z || 0);\n        }\n\n        var end: Vector3;\n        if (!cylinderSpec.end) end = new Vector3(3, 0, 0);\n        else {\n            end = new Vector3(cylinderSpec.end.x,\n                cylinderSpec.end.y || 0, cylinderSpec.end.z || 0);\n            if (typeof (end.x) == 'undefined') end.x = 3; //show something even if undefined\n        }\n\n        var radius = cylinderSpec.radius || 0.1;\n        var color = CC.color(cylinderSpec.color);\n\n        var cylinderLength = Math.sqrt(Math.pow((start.x - end.x), 2) + Math.pow((start.y - end.y), 2) + Math.pow((start.z - end.z), 2));\n\n        var count = cylinderLength / (cylinderSpec.gapLength + cylinderSpec.dashLength);\n\n        var new_start = new Vector3(cylinderSpec.start.x || 0,\n            cylinderSpec.start.y || 0, cylinderSpec.start.z || 0);\n        var new_end = new Vector3(cylinderSpec.end.x,\n            cylinderSpec.end.y || 0, cylinderSpec.end.z || 0);\n\n        var gapVector = new Vector3((end.x - start.x) / (cylinderLength / cylinderSpec.gapLength), (end.y - start.y) / (cylinderLength / cylinderSpec.gapLength), (end.z - start.z) / (cylinderLength / cylinderSpec.gapLength));\n        var dashVector = new Vector3((end.x - start.x) / (cylinderLength / cylinderSpec.dashLength), (end.y - start.y) / (cylinderLength / cylinderSpec.dashLength), (end.z - start.z) / (cylinderLength / cylinderSpec.dashLength));\n\n        for (var place = 0; place < count; place++) {\n            new_end = new Vector3(new_start.x + dashVector.x, new_start.y + dashVector.y, new_start.z + dashVector.z);\n\n            this.intersectionShape.cylinder.push(new Cylinder(new_start, new_end, radius));\n\n            GLDraw.drawCylinder(this.geo, new_start, new_end, radius, color, cylinderSpec.fromCap, cylinderSpec.toCap);\n\n            new_start = new Vector3(new_end.x + gapVector.x, new_end.y + gapVector.y, new_end.z + gapVector.z);\n\n        }\n        var centroid = new Vector3();\n        this.components.push({\n            centroid: centroid.addVectors(start, end).multiplyScalar(0.5)\n        });\n        var geoGroup = this.geo.updateGeoGroup(0);\n        GLShape.updateBoundingFromPoints(this.boundingSphere, this.components,\n            geoGroup.vertexArray, geoGroup.vertices);\n    };\n\n    /**\n     * Creates a curved shape\n     * @param {CurveSpec} curveSpec\n     */\n    public addCurve(curveSpec: CurveSpec) {\n\n        curveSpec.points = curveSpec.points || [];\n        curveSpec.smooth = curveSpec.smooth || 10;\n        if (typeof (curveSpec.fromCap) == \"undefined\") curveSpec.fromCap = 2;\n        if (typeof (curveSpec.toCap) == \"undefined\") curveSpec.toCap = 2;\n\n        //subdivide into smoothed spline points\n        var points = subdivide_spline(curveSpec.points, curveSpec.smooth);\n\n        if (points.length < 3) {\n            console.log(\"Too few points in addCurve\");\n            return;\n        }\n\n        var radius = curveSpec.radius || 0.1;\n        var color = CC.color(curveSpec.color);\n        //TODO TODO - this is very inefficient, should create our\n        //own water tight model with proper normals...\n\n\n        //if arrows are requested, peel off enough points to fit\n        //at least 2*r of arrowness\n        var start = 0;\n        var end = points.length - 1;\n        var segmentlen = points[0].distanceTo(points[1]);\n        var npts = Math.ceil(2 * radius / segmentlen);\n        if (curveSpec.toArrow) {\n            end -= npts;\n            let arrowspec = {\n                start: points[end],\n                end: points[points.length - 1],\n                radius: radius,\n                color: color as ColorSpec,\n                mid: 0.0001\n            };\n            this.addArrow(arrowspec);\n        }\n        if (curveSpec.fromArrow) {\n            start += npts;\n            let arrowspec = {\n                start: points[start],\n                end: points[0],\n                radius: radius,\n                color: color as ColorSpec,\n                mid: 0.0001\n            };\n            this.addArrow(arrowspec);\n        }\n\n        var midway = Math.ceil(points.length / 2);\n        var middleSpec: any = { radius: radius, color: color, fromCap: 2, toCap: 2 };\n        for (var i = start; i < end; i++) {\n            middleSpec.start = points[i];\n            middleSpec.end = points[i + 1];\n            middleSpec.fromCap = 2;\n            middleSpec.toCap = 2;\n            if (i < midway) {\n                middleSpec.fromCap = 2;\n                middleSpec.toCap = 0;\n            } else if (i > midway) {\n                middleSpec.fromCap = 0;\n                middleSpec.toCap = 2;\n            } else {\n                middleSpec.fromCap = 2;\n                middleSpec.toCap = 2;\n            }\n\n            this.addCylinder(middleSpec);\n        }\n\n    };\n\n    /**\n     * Creates a line shape\n     * @param {LineSpec} lineSpec\n     @example\n     $3Dmol.download(\"pdb:2ABJ\",viewer,{},function(){\n              viewer.addLine({dashed:true,start:{x:0,y:0,z:0},end:{x:100,y:100,z:100}});\n              viewer.render(callback);\n          });\n    \n     */\n    public addLine(lineSpec: LineSpec) {\n\n        var start: Vector3;\n        var end: Vector3;\n        if (!lineSpec.start) {\n            start = new Vector3(0, 0, 0);\n        } else {\n            start = new Vector3(lineSpec.start.x || 0,\n                lineSpec.start.y || 0, lineSpec.start.z || 0);\n        }\n        if (!lineSpec.end) {\n            end = new Vector3(3, 0, 0);\n        } else {\n            end = new Vector3(lineSpec.end.x,\n                lineSpec.end.y || 0, lineSpec.end.z || 0);\n            if (typeof (end.x) == 'undefined') end.x = 3; //show something even if undefined\n        }\n\n        var geoGroup = this.geo.updateGeoGroup(2);\n\n        //make line from start to end\n        //for consistency with rest of shapes, uses vertices and lines rather\n        //than a separate line geometry\n        var vstart = geoGroup.vertices;\n        var i = vstart * 3;\n        var vertexArray = geoGroup.vertexArray;\n        vertexArray[i] = start.x;\n        vertexArray[i + 1] = start.y;\n        vertexArray[i + 2] = start.z;\n        vertexArray[i + 3] = end.x;\n        vertexArray[i + 4] = end.y;\n        vertexArray[i + 5] = end.z;\n        geoGroup.vertices += 2;\n\n        var lineArray = geoGroup.lineArray;\n        var li = geoGroup.lineidx;\n        lineArray[li] = vstart;\n        lineArray[li + 1] = vstart + 1;\n        geoGroup.lineidx += 2;\n\n        var centroid = new Vector3();\n        this.components.push({\n            centroid: centroid.addVectors(start, end).multiplyScalar(0.5)\n        });\n        geoGroup = this.geo.updateGeoGroup(0);\n        GLShape.updateBoundingFromPoints(this.boundingSphere, this.components,\n            geoGroup.vertexArray, geoGroup.vertices);\n    };\n\n\n    /**\n     * Creates an arrow shape\n     * @param {ArrowSpec} arrowSpec\n     @example\n      $3Dmol.download(\"pdb:4DM7\",viewer,{},function(){\n              viewer.setBackgroundColor(0xffffffff);\n              viewer.addArrow({\n                  start: {x:-10.0, y:0.0, z:0.0},\n                  end: {x:0.0, y:-10.0, z:0.0},\n                  radius: 1.0,\n                  radiusRadio:1.0,\n                  mid:1.0,\n                  clickable:true,\n                  callback:function(){\n                      this.color.setHex(0xFF0000FF);\n                      viewer.render( );\n                  }\n              });\n              viewer.render();\n            });\n     */\n    public addArrow(arrowSpec: ArrowSpec) {\n\n        if (!arrowSpec.start) {\n            arrowSpec.start = new Vector3(0, 0, 0);\n        } else {\n            arrowSpec.start = new Vector3(arrowSpec.start.x || 0,\n                arrowSpec.start.y || 0, arrowSpec.start.z || 0);\n        }\n\n        if (arrowSpec.dir instanceof Vector3 && typeof (arrowSpec.length) === 'number') {\n            var end = arrowSpec.dir.clone().multiplyScalar(arrowSpec.length).add(\n                arrowSpec.start);\n            arrowSpec.end = end;\n        }\n        else if (!arrowSpec.end) {\n            arrowSpec.end = new Vector3(3, 0, 0);\n        } else {\n            arrowSpec.end = new Vector3(arrowSpec.end.x,\n                arrowSpec.end.y || 0, arrowSpec.end.z || 0);\n            if (typeof (arrowSpec.end.x) == 'undefined') arrowSpec.end.x = 3; //show something even if undefined\n        }\n\n        arrowSpec.radius = arrowSpec.radius || 0.1;\n\n        arrowSpec.radiusRatio = arrowSpec.radiusRatio || 1.618034;\n\n        arrowSpec.mid = (0 < arrowSpec.mid && arrowSpec.mid < 1) ? arrowSpec.mid\n            : 0.618034;\n\n        GLShape.drawArrow(this, this.geo, arrowSpec);\n\n        var centroid = new Vector3();\n        this.components.push({\n            centroid: centroid.addVectors(arrowSpec.start, arrowSpec.end)\n                .multiplyScalar(0.5)\n        });\n        var geoGroup = this.geo.updateGeoGroup(0);\n        GLShape.updateBoundingFromPoints(this.boundingSphere, this.components,\n            geoGroup.vertexArray, geoGroup.vertices);\n    };\n\n\n    static distance_from(c1: XYZ, c2: XYZ) {\n        return Math.sqrt(Math.pow((c1.x - c2.x), 2) + Math.pow((c1.y - c2.y), 2) + Math.pow((c1.z - c2.z), 2));\n    };\n\n    static inSelectedRegion(coordinate: XYZ, selectedRegion, radius: number) {\n\n        for (var i = 0; i < selectedRegion.length; i++) {\n            if (GLShape.distance_from(selectedRegion[i], coordinate) <= radius)\n                return true;\n        }\n        return false;\n    };\n\n    /**\n     * Create isosurface from volumetric data.\n     * @param {VolumeData} data - volumetric input data\n     * @param {IsoSurfaceSpec} isoSpec - volumetric data shape specification\n     * @example //the user can specify a selected region for the isosurface \n     $.get('../test_structs/benzene-homo.cube', function(data){\n              var voldata = new $3Dmol.VolumeData(data, \"cube\");\n              viewer.addIsosurface(voldata, {isoval: 0.01,\n                                             color: \"blue\",\n                                             alpha: 0.5,\n                                             smoothness: 10});\n              viewer.addIsosurface(voldata, {isoval: -0.01,\n                                             color: \"red\",\n                                             smoothness: 5,\n                                             opacity:0.5,\n                                             wireframe:true,\n                                             clickable:true,\n                                             callback:\n                                             function() {\n                                                 this.opacity = 0.0;\n                                                 viewer.render( );\n                                             }});\n              viewer.setStyle({}, {stick:{}});\n              viewer.zoomTo();\n              viewer.render();\n            });\n     */\n    addIsosurface(data, volSpec:IsoSurfaceSpec, callback?, viewer?: GLViewer) {//may want to cache the arrays generated when selectedRegion ==true\n\n        var isoval = (volSpec.isoval !== undefined && typeof (volSpec.isoval) === \"number\") ? volSpec.isoval\n            : 0.0;\n        var voxel = (volSpec.voxel) ? true : false;\n        var smoothness = (volSpec.smoothness === undefined) ? 1 : volSpec.smoothness;\n\n        var nX = data.size.x;\n        var nY = data.size.y;\n        var nZ = data.size.z;\n        var vertnums = new Int16Array(nX * nY * nZ);\n        var vals = data.data;\n\n        var i, il;\n\n        for (i = 0, il = vertnums.length; i < il; ++i)\n            vertnums[i] = -1;\n\n        var bitdata = new Uint8Array(nX * nY * nZ);\n\n        //mark locations partitioned by isoval\n        for (i = 0, il = vals.length; i < il; ++i) {\n            var val = (isoval >= 0) ? vals[i] - isoval : isoval - vals[i];\n            if (val > 0)\n                bitdata[i] |= GLShape.ISDONE;\n\n        }\n\n        var verts = [], faces = [];\n        MarchingCube.march(bitdata, verts, faces, {\n            fulltable: true,\n            voxel: voxel,\n            unitCube: data.unit,\n            origin: data.origin,\n            matrix: data.matrix,\n            nX: nX,\n            nY: nY,\n            nZ: nZ\n        });\n\n        if (!voxel && smoothness > 0)\n            MarchingCube.laplacianSmooth(smoothness, verts, faces);\n        var vertexmapping = [];\n        var newvertices = [];\n        var newfaces = [];\n\n        if (volSpec.selectedRegion && volSpec.coords === undefined) {\n            volSpec.coords = volSpec.selectedRegion; //backwards compat for incorrectly documented feature\n        }\n        if (volSpec.coords === undefined && volSpec.selection !== undefined) {\n            if(!viewer) {\n                console.log(\"addIsosurface needs viewer is selection provided.\");\n            } else {\n                volSpec.coords = viewer.selectedAtoms(volSpec.selection) as XYZ[];\n            }\n        }\n        if (volSpec.coords !== undefined) {\n\n            var xmax = volSpec.coords[0].x,\n                ymax = volSpec.coords[0].y,\n                zmax = volSpec.coords[0].z,\n                xmin = volSpec.coords[0].x,\n                ymin = volSpec.coords[0].y,\n                zmin = volSpec.coords[0].z;\n\n            for (let i = 0; i < volSpec.coords.length; i++) {\n                if (volSpec.coords[i].x > xmax)\n                    xmax = volSpec.coords[i].x;\n                else if (volSpec.coords[i].x < xmin)\n                    xmin = volSpec.coords[i].x;\n                if (volSpec.coords[i].y > ymax)\n                    ymax = volSpec.coords[i].y;\n                else if (volSpec.coords[i].y < ymin)\n                    ymin = volSpec.coords[i].y;\n                if (volSpec.coords[i].z > zmax)\n                    zmax = volSpec.coords[i].z;\n                else if (volSpec.coords[i].z < zmin)\n                    zmin = volSpec.coords[i].z;\n            }\n\n            var rad = 2;\n            if (volSpec.radius !== undefined) {\n                rad = volSpec.radius; //backwards compat\n            }\n            if (volSpec.selectedOffset !== undefined) { //backwards compat\n                rad = volSpec.selectedOffset;\n            }\n            if (volSpec.seldist !== undefined) {\n                rad = volSpec.seldist;\n            }\n\n            xmin -= rad;\n            xmax += rad;\n            ymin -= rad;\n            ymax += rad;\n            zmin -= rad;\n            zmax += rad;\n\n            // accounts for radius\n            for (let i = 0; i < verts.length; i++) {\n                if (verts[i].x > xmin &&\n                    verts[i].x < xmax &&\n                    verts[i].y > ymin &&\n                    verts[i].y < ymax &&\n                    verts[i].z > zmin &&\n                    verts[i].z < zmax &&\n                    GLShape.inSelectedRegion(verts[i],\n                        volSpec.coords, rad)) {\n                    vertexmapping.push(newvertices.length);\n                    newvertices.push(verts[i]);\n\n                } else {\n                    vertexmapping.push(-1);\n                }\n\n            }\n            for (let i = 0; i + 2 < faces.length; i += 3) {\n                if (vertexmapping[faces[i]] !== -1 &&\n                    vertexmapping[faces[i + 1]] !== -1 &&\n                    vertexmapping[faces[i + 2]] !== -1) {\n                    newfaces.push(faces[i] - (faces[i] - vertexmapping[faces[i]]));\n                    newfaces.push(faces[i + 1] - (faces[i + 1] - vertexmapping[faces[i + 1]]));\n                    newfaces.push(faces[i + 2] - (faces[i + 2] - vertexmapping[faces[i + 2]]));\n                }\n            }\n            verts = newvertices;\n            faces = newfaces;\n        }\n\n        GLShape.drawCustom(this, this.geo, {\n            vertexArr: verts,\n            faceArr: faces,\n            normalArr: [],\n            clickable: volSpec.clickable,\n            hoverable: volSpec.hoverable\n        });\n\n        this.updateStyle(volSpec);\n\n        //computing bounding sphere from vertices\n        var origin = new Vector3(data.origin.x, data.origin.y, data.origin.z);\n        var size = new Vector3(data.size.x * data.unit.x, data.size.y * data.unit.y, data.size.z * data.unit.z);\n\n        var total = new Vector3(0, 0, 0);\n        var maxv = origin.clone();\n        var minv = origin.clone().add(size);\n        for (let i = 0; i < verts.length; i++) {\n            total.add(verts[i]);\n            maxv.max(verts[i]);\n            minv.min(verts[i]);\n        }\n        total.divideScalar(verts.length);\n        var len1 = total.distanceTo(minv);\n        var len2 = total.distanceTo(maxv);\n        this.boundingSphere.center = total;\n        this.boundingSphere.radius = Math.max(len1, len2);\n        if (typeof callback == \"function\")\n            callback();\n    };\n\n    /** \n     * @deprecated Use addIsosurface instead\n     * Creates custom shape from volumetric data \n     * @param {string} data - Volumetric input data \n     * @param {string} fmt - Input data format (e.g. 'cube' for cube file format)\n     * @param {IsoSurfaceSpec} isoSpec - Volumetric data shape specification\n     */\n    public addVolumetricData(data, fmt, volSpec: IsoSurfaceSpec) {\n        data = new VolumeData(data, fmt);\n        this.addIsosurface(data, volSpec);\n    };\n\n    //for internal use, truncate buffers to save memory\n    finalize() {\n        GLShape.finalizeGeo(this.geo);\n        this.geo.initTypedArrays();\n        return this.geo;\n    };\n\n    /*\n     * Initialize webgl objects for rendering\n     * @param {$3Dmol.Object3D} group\n     * \n     */\n    globj(group) {\n\n        if (this.renderedShapeObj) {\n            group.remove(this.renderedShapeObj);\n            this.renderedShapeObj = null;\n        }\n\n        if (this.hidden)\n            return;\n        GLShape.finalizeGeo(this.geo);\n        this.geo.initTypedArrays();\n\n        if (this.wireframe) {\n            this.geo.setUpWireframe();\n        }\n\n        if (typeof (this.color) != 'undefined')\n            GLShape.updateColor(this.geo, this.color);\n\n        this.shapeObj = new Object3D();\n        var material = null;\n\n        if (this.side == DoubleSide) {\n            material = new MeshDoubleLambertMaterial({\n                wireframe: this.wireframe,\n                side: this.side,\n                transparent: (this.opacity < 1) ? true : false,\n                opacity: this.opacity,\n                wireframeLinewidth: this.linewidth,\n                vertexColors: Coloring.VertexColors\n            });\n        } else {\n            material = new MeshLambertMaterial({\n                wireframe: this.wireframe,\n                side: this.side,\n                transparent: (this.opacity < 1) ? true : false,\n                opacity: this.opacity,\n                wireframeLinewidth: this.linewidth,\n                vertexColors: Coloring.VertexColors\n            });\n        }\n\n        var mesh = new Mesh(this.geo, material);\n\n        this.shapeObj.add(mesh);\n\n        if(this.linegeo && this.linegeo.vertices > 0) {\n            var lineMaterial = new LineBasicMaterial({\n                linewidth: this.linewidth,\n                color: this.color\n            });\n            var line = new Line(this.linegeo, lineMaterial as Material, LineStyle.LinePieces);\n            this.shapeObj.add(line);\n        }\n\n        this.renderedShapeObj = this.shapeObj.clone();\n        group.add(this.renderedShapeObj);\n\n    };\n\n    removegl(group) {\n        if (this.renderedShapeObj) {\n            // dispose of geos and materials\n            if (this.renderedShapeObj.geometry !== undefined)\n                this.renderedShapeObj.geometry.dispose();\n            if (this.renderedShapeObj.material !== undefined)\n                this.renderedShapeObj.material.dispose();\n            group.remove(this.renderedShapeObj);\n            this.renderedShapeObj = null;\n        }\n        this.shapeObj = null;\n    };\n\n    get position() {\n        return this.boundingSphere.center;\n    }\n\n    get x() {\n        return this.boundingSphere.center.x;\n    }\n    get y() {\n        return this.boundingSphere.center.y;\n    }\n    get z() {\n        return this.boundingSphere.center.z;\n    }\n};\n\n\n\nexport function splitMesh(mesh) {\n    var MAXVERT = 64000; //webgl only supports 2^16 elements, leave a little breathing room (require at least 2)\n    //peel off 64k vertices rsvh into their own mesh\n    //duplicating vertices and normals as necessary to preserve faces and lines\n\n    if (mesh.vertexArr.length < MAXVERT) return [mesh]; //typical case\n\n    var slices: any = [{ vertexArr: [], normalArr: [], faceArr: [] }];\n    if (mesh.colorArr) slices.colorArr = [];\n    var vertSlice = []; //indexed by original vertex to get current slice\n    var vertIndex = []; //indexed by original vertex to get index within slice\n    var currentSlice = 0;\n\n    //for each face, make sure all three vertices (or copies) are in the same slice\n    var faces = mesh.faceArr;\n    for (let i = 0, nf = faces.length; i < nf; i += 3) {\n        let slice = slices[currentSlice];\n        for (let j = 0; j < 3; j++) {\n            //process each vertex to make sure it is assigned a slice\n            //all vertices of a face must belong to the same slice\n            var v = faces[i + j];\n            if (vertSlice[v] !== currentSlice) { //true if undefined\n                vertSlice[v] = currentSlice;\n                vertIndex[v] = slice.vertexArr.length;\n                slice.vertexArr.push(mesh.vertexArr[v]);\n                if (mesh.normalArr && mesh.normalArr[v]) slice.normalArr.push(mesh.normalArr[v]);\n                if (mesh.colorArr && mesh.colorArr[v]) slice.colorArr.push(mesh.colorArr[v]);\n            }\n            slice.faceArr.push(vertIndex[v]);\n        }\n\n        if (slice.vertexArr.length >= MAXVERT) {\n            //new slice\n            slices.push({ vertexArr: [], normalArr: [], faceArr: [] });\n            if (mesh.colorArr) slices.colorArr = [];\n            currentSlice++;\n        }\n    }\n    return slices;\n};\n\n/**\n * GLShape style specification\n */\nexport interface ShapeSpec {\n    /** Either a single color for the whole object or an array specifying the color at each vertex ({@link CustomShapeSpec}). */\n    color?: ColorSpec | ColorSpec[];\n    alpha?: number; //prefer opacity\n    /** transparency, between 0 (invisible) and 1 (opaque) */\n    opacity?: number;\n    /** draw as wireframe, not surface */\n    wireframe?: boolean;\n    /** if true, do not display object */\n    hidden?: boolean;\n    /** width of line for wireframe rendering **No longer supported by most browsers** */\n    linewidth?: number;\n    /** if true, user can click on object to trigger callback */\n    clickable?: boolean;\n    /** function to call on click */\n    callback?: Func;\n    /** if true, user can hover on object to trigger callback */\n    hoverable?: boolean;\n    /** hover callback */\n    hover_callback?: Func;\n    /** unhover callback */\n    unhover_callback?: Func;\n    /** if true, user can right-click or long press to trigger callback */\n    contextMenuEnabled?: boolean;\n    /** if set, only display in this frame of an animation */\n    frame?: number;\n    side?: number;\n    voldata?: VolumeData;\n    volscheme?: GradientType\n};\n\n\n/**\n * Isosurface style specification\n * @extends ShapeSpec\n */\nexport interface IsoSurfaceSpec extends ShapeSpec {\n    /** specifies the isovalue to draw surface at */\n    isoval?: number;\n    /** if true uses voxel style rendering */\n    voxel?: boolean;\n    /** amount to smooth surface (default 1) */\n    smoothness?: number;\n    /** coordinates around which to include data; use viewer.selectedAtoms() to convert an AtomSelectionSpec to coordinates */\n    coords?: XYZ[];\n    /** selection around which to include data (alternative to coords) */\n    selection?: AtomSelectionSpec;\n    /** distance around coords to include data [default = 2.0] */\n    seldist?: number;\n    /** volumetric data for vertex coloring, can be VolumeData object or raw data if volformat is specified */\n    voldata?: VolumeData;\n    /** coloring scheme for mapping volumetric data to vertex color, if not a Gradient object, show describe a builtin gradient one by providing an object with gradient, min, max, and (optionally) mid fields. */\n    volscheme?: GradientType;\n    /** format of voldata if not a $3Dmol.VolumeData object */\n    volformat?: string;\n\n    selectedRegion?: XYZ[]; //deprecated\n    selectedOffset?: number; //deprecated\n    radius?: number; //also deprecated\n};\n\n\n\n/**\n * Arrow shape specification.  \n  * @extends ShapeSpec\n */\nexport interface ArrowSpec extends ShapeSpec {\n    /** starting position */\n    start?: XYZ;\n    /** ending position */\n    end?: XYZ;\n    /** direction to extend from start (instead of specifying end) */\n    dir?: XYZ;\n    /** length to extend in dir direction from start (instead of specifying end) */\n    length?: number;\n    /** radius (default 0.1A) */\n    radius?: number;\n    /** color */\n    color?: ColorSpec;\n    /** hidden */\n    hidden?: boolean;\n    /** ratio of arrow base to cylinder (1.618034 default) */\n    radiusRatio?: number;\n    /** relative position of arrow base (0.618034 default) */\n    mid?: number;\n    /** position of arrow base in length units, if negative positioned from end instead of start.  Overrides mid. */\n    midpos?: number;\n};\n\n/**\n * Cylinder shape specification.  \n * @extends ShapeSpec\n * \n */\nexport interface CylinderSpec extends ShapeSpec {\n    /** starting vector */\n    start?: XYZ;\n    /** ending position */\n    end?: XYZ;\n    /** radius */\n    radius?: number;\n    /** Place a cap at the start (none, flat or round) */\n    fromCap?: CAP | string;\n    /** Place a cap at the end (none, flat or round) */\n    toCap?: CAP | string;\n    /** Make the cylinder dashed. */\n    dashed?: boolean;\n    /** Length of dashes (default 0.25) */\n    dashLength?: number;\n    /** Length of gaps (default 0.25) */\n    gapLength?: number;\n};\n\n/**\n * Curve shape specification.  \n * @extends ShapeSpec\n */\nexport interface CurveSpec extends ShapeSpec {\n    /** Sequence of points to draw curve through */\n    points?: XYZ[];\n    /** amount of interpolation */\n    smooth?: number;\n    /** radius of curve */\n    radius?: number;\n    /** if an arrow should be drawn at the start */\n    fromArrow?: boolean;\n    /** if an arrow should be drawn at the end */\n    toArrow?: boolean;\n    /** have cap at start */\n    fromCap?: CAP;\n    /** have cap at end */\n    toCap?: CAP;\n};\n\n/**\n * Line shape specification.  Default to wireframe.\n * @extends ShapeSpec\n */\nexport interface LineSpec extends ShapeSpec {\n    /** Starting position */\n    start?: XYZ;\n    /** Ending position */\n    end?: XYZ;\n    /** make dashed */\n    dashed?: boolean;\n};\n\n/**\n * Box shape specification. \n * @extends ShapeSpec\n */\nexport interface BoxSpec extends ShapeSpec {\n    /** bottom corner of box */\n    corner?: XYZ;\n    /** center of box */\n    center?: XYZ;\n    /** width, height, depth of box */\n    dimensions?: {\n        w: number | XYZ;\n        h: number | XYZ;\n        d: number | XYZ;\n    };\n};\n\n\n/**\n * Specification for adding custom shape. \n * @extends ShapeSpec\n */\nexport interface CustomShapeSpec extends ShapeSpec {\n    /** List of vertex positions */\n    vertexArr?: XYZ[];\n    /** List of normal vectors for each vertex */\n    normalArr?: XYZ[];\n    /** List of triangles to build the custom shape. Each triangle is defined by the indices of 3 vertices in vertexArr, so the array length should be 3 times the number of faces. */\n    faceArr?: number[];\n};\n\n/**\n * Sphere shape specification. Extends {@link ShapeSpec}.\n */\nexport interface SphereSpec extends ShapeSpec {\n    /** center of sphere */\n    center?: XYZ;\n    /** radius of sphere */\n    radius?: number;\n    /** quality metric, higher uses more triangles (default 2) */\n    quality?: number;\n};\n\n","//a molecular viewer based on GLMol\n\nimport { Geometry, Renderer, Camera, Raycaster, Projector, Light, Fog, Scene, Coloring, FrontSide, Material, MeshDoubleLambertMaterial } from \"./WebGL\";\nimport { Vector3, Matrix4, Matrix3, Quaternion, XYZ } from \"./WebGL/math\";\nimport { MeshLambertMaterial, Object3D, Mesh, LineBasicMaterial, Line } from \"./WebGL\";\nimport { elementColors, CC, ColorSpec, ColorschemeSpec } from \"./colors\";\nimport { extend, getExtent, makeFunction, getPropertyRange, isEmptyObject, adjustVolumeStyle, mergeGeos, PausableTimer, getColorFromStyle, getElement } from \"./utilities\";\nimport { getGradient, Gradient } from \"./Gradient\";\nimport { AtomStyleSpec, GLModel, LineStyleSpec } from \"./GLModel\";\nimport { Label, LabelSpec } from \"./Label\";\nimport { ArrowSpec, BoxSpec, CurveSpec, CustomShapeSpec, CylinderSpec, GLShape, IsoSurfaceSpec, LineSpec, ShapeSpec, SphereSpec, splitMesh } from \"./GLShape\";\nimport { VolumeData } from \"./VolumeData\";\nimport { ProteinSurface, SurfaceType, syncSurface } from \"./ProteinSurface4\";\nimport { GLVolumetricRender, VolumetricRendererSpec } from \"./VolumetricRender\";\nimport { AtomSelectionSpec, AtomSpec } from \"./specs\";\nimport { decode, toRGBA8, encode } from 'upng-js'\n\nexport const CONTEXTS_PER_VIEWPORT = 16;\n\n/**\n * WebGL-based 3Dmol.js viewer\n * Note: The preferred method of instantiating a GLViewer is through {@link createViewer}\n *\n * @class\n*/\nexport class GLViewer {\n    // private class variables\n    private static numWorkers = 4; // number of threads for surface generation\n    private static maxVolume = 64000; // how much to break up surface calculations\n\n    private callback: any;\n    private defaultcolors: any;\n    private config: ViewerSpec;\n    private nomouse = false;\n    private bgColor: any;\n    private camerax: number;\n    private _viewer: GLViewer;\n    private glDOM: HTMLCanvasElement | null = null;\n\n    private models: GLModel[] = []; // atomistic molecular models\n    private surfaces: any = {};\n    private shapes = []; // Generic shapes\n    private labels: Label[] = [];\n    private clickables = []; //things you can click on\n    private hoverables = []; //things you can hover over\n    private contextMenuEnabledObjects = []; // atoms and shapes with context menu\n    private current_hover: any = null;\n    private hoverDuration = 500;\n    private longTouchDuration = 1000;\n    private viewer_frame = 0;\n    private WIDTH: number;\n    private HEIGHT: number;\n    private viewChangeCallback: any = null;\n    private stateChangeCallback: any = null;\n\n    private NEAR = 1;\n    private FAR = 800;\n    private CAMERA_Z = 150;\n    private fov = 20;\n\n    private linkedViewers = [];\n    private renderer: Renderer | null = null;\n\n    private row: number;\n    private col: number;\n    private cols: number;\n    private rows: number;\n    private viewers: any;\n    private control_all = false;\n\n    private ASPECT: any;\n    private camera: Camera;\n    private lookingAt: Vector3;\n\n    private raycaster: Raycaster;\n    private projector: Projector;\n\n    private scene: any = null;\n    private rotationGroup: any = null; // which contains modelGroup\n    private modelGroup: any = null;\n\n    private fogStart = 0.4;\n    private slabNear = -50; // relative to the center of rotationGroup\n    private slabFar = 50;\n\n    public container: HTMLElement | null;\n\n    static readonly surfaceTypeMap = {\n        \"VDW\": SurfaceType.VDW,\n        \"MS\": SurfaceType.MS,\n        \"SAS\": SurfaceType.SAS,\n        \"SES\": SurfaceType.SES\n    };\n\n    private cq = new Quaternion(0, 0, 0, 1);\n    private dq = new Quaternion(0, 0, 0, 1);\n    private animated = 0;\n    private animationTimers = new Set<PausableTimer>();\n    private isDragging = false;\n    private mouseStartX = 0;\n    private mouseStartY = 0;\n    private touchDistanceStart = 0;\n    private touchHold = false;\n    private currentModelPos = 0;\n    private cz = 0;\n    private cslabNear = 0;\n    private cslabFar = 0;\n\n    private mouseButton: any;\n    private hoverTimeout: any;\n    private longTouchTimeout: any;\n\n    private divwatcher: any;\n    private intwatcher: any;\n    private spinInterval: any;\n\n\n    private getWidth() {\n        let div = this.container;\n        //offsetwidth accounts for scaling\n        let w = div.offsetWidth;\n        if (w == 0 && div.style.display === 'none') {\n            let oldpos = div.style.position;\n            let oldvis = div.style.visibility;\n            div.style.display = 'block';\n            div.style.visibility = 'hidden';\n            div.style.position = 'absolute';\n            w = div.offsetWidth;\n            div.style.display = 'none';\n            div.style.visibility = oldvis;\n            div.style.position = oldpos;\n        }\n        return w;\n    };\n\n    private getHeight() {\n        let div = this.container;\n        let h = div.offsetHeight;\n        if (h == 0 && div.style.display === 'none') {\n            let oldpos = div.style.position;\n            let oldvis = div.style.visibility;\n            div.style.display = 'block';\n            div.style.visibility = 'hidden';\n            div.style.position = 'absolute';\n            h = div.offsetHeight;\n            div.style.display = 'none';\n            div.style.visibility = oldvis;\n            div.style.position = oldpos;\n        }\n        return h;\n    };\n\n    private setupRenderer() {\n\n        this.renderer = new Renderer({\n            antialias: this.config.antialias,\n            preserveDrawingBuffer: true, //so we can export images\n            premultipliedAlpha: false,/* more traditional compositing with background */\n            id: this.config.id,\n            row: this.config.row,\n            col: this.config.col,\n            rows: this.config.rows,\n            cols: this.config.cols,\n            canvas: this.config.canvas,\n            //cannot initialize with zero size - render will start out lost\n            containerWidth: this.WIDTH,\n            containerHeight: this.HEIGHT,\n            ambientOcclusion: this.config.ambientOcclusion,\n            outline: this.config.outline\n        });\n        this.renderer.domElement.style.width = \"100%\";\n        this.renderer.domElement.style.height = \"100%\";\n        this.renderer.domElement.style.padding = \"0\";\n        this.renderer.domElement.style.position = \"absolute\"; //TODO: get rid of this\n        this.renderer.domElement.style.top = \"0px\";\n        this.renderer.domElement.style.left = \"0px\";\n        this.renderer.domElement.style.zIndex = \"0\";\n    }\n\n    private initializeScene() {\n\n        this.scene = new Scene();\n        this.scene.fog = new Fog(this.bgColor, 100, 200);\n\n        this.modelGroup = new Object3D();\n        this.rotationGroup = new Object3D();\n        this.rotationGroup.useQuaternion = true;\n        this.rotationGroup.quaternion = new Quaternion(0, 0, 0, 1);\n        this.rotationGroup.add(this.modelGroup);\n\n        this.scene.add(this.rotationGroup);\n\n        // setup lights\n        var directionalLight = new Light(0xFFFFFF);\n        directionalLight.position = new Vector3(0.2, 0.2, 1)\n            .normalize();\n        directionalLight.intensity = 1.0;\n        this.scene.add(directionalLight);\n    };\n\n    private _handleLostContext(event) {\n\n        //when contexts go missing, try to regenerate any that are visible on screen\n        //but no more than CONTEXTS_PER_VIEWPORT (if this is set higher than the\n        //browser limit there will be an infinity loop of refreshing contexts of\n        //too many are on screen)\n        const isVisible = function (cont) {\n            const rect = cont.getBoundingClientRect();\n            return !(\n                rect.right < 0 ||\n                rect.bottom < 0 ||\n                rect.top > (window.innerHeight || document.documentElement.clientHeight) ||\n                rect.left > (window.innerWidth || document.documentElement.clientWidth)\n            );\n        };\n\n        if (isVisible(this.container)) {\n            let restored = 0;\n            for(let c of document.getElementsByTagName('canvas')) {\n                if( isVisible(c) && (c as any)._3dmol_viewer != undefined) {\n                    (c as any)._3dmol_viewer.resize();\n                    restored += 1;\n                    if(restored >= CONTEXTS_PER_VIEWPORT) break;\n                }\n            }\n        }\n    }\n\n    private initContainer(element) {\n        this.container = element;\n        this.WIDTH = this.getWidth();\n        this.HEIGHT = this.getHeight();\n        this.ASPECT = this.renderer.getAspect(this.WIDTH, this.HEIGHT);\n        this.renderer.setSize(this.WIDTH, this.HEIGHT);\n        this.container.append(this.renderer.domElement);\n        this.glDOM = this.renderer.domElement;\n\n        (this.glDOM as any)._3dmol_viewer = this;\n        this.glDOM.addEventListener(\"webglcontextlost\", this._handleLostContext.bind(this));\n\n        if (!this.nomouse) {\n            // user can request that the mouse handlers not be installed\n            this.glDOM.addEventListener('mousedown', this._handleMouseDown.bind(this), { passive: false });\n            this.glDOM.addEventListener('touchstart', this._handleMouseDown.bind(this), { passive: false });\n            this.glDOM.addEventListener('wheel', this._handleMouseScroll.bind(this), { passive: false });\n            this.glDOM.addEventListener('mousemove', this._handleMouseMove.bind(this), { passive: false });\n            this.glDOM.addEventListener('touchmove', this._handleMouseMove.bind(this), { passive: false });\n            this.glDOM.addEventListener(\"contextmenu\", this._handleContextMenu.bind(this), { passive: false });\n        }\n\n    };\n\n    private decAnim() {\n        //decrement the number of animations currently\n        this.animated--;\n        if (this.animated < 0) this.animated = 0;\n    };\n\n    private incAnim() {\n        this.animated++;\n    };\n\n    private nextSurfID() {\n        //compute the next highest surface id directly from surfaces\n        //this is necessary to support linking of model data\n        var max = 0;\n        for (let i in this.surfaces) { // this is an object with possible holes\n            if (!this.surfaces.hasOwnProperty(i)) continue;\n            var val = parseInt(i);\n            if (!isNaN(val)) {\n                if (val > max)\n                    max = val;\n            }\n        }\n        return max + 1;\n    };\n\n    private setSlabAndFog() {\n\n        let center = this.camera.position.z - this.rotationGroup.position.z;\n        if (center < 1)\n            center = 1;\n        this.camera.near = center + this.slabNear;\n        if (this.camera.near < 1)\n            this.camera.near = 1;\n        this.camera.far = center + this.slabFar;\n        if (this.camera.near + 1 > this.camera.far)\n            this.camera.far = this.camera.near + 1;\n\n        this.camera.fov = this.fov;\n        this.camera.right = center * Math.tan(Math.PI / 180 * this.fov);\n        this.camera.left = -this.camera.right;\n        this.camera.top = this.camera.right / this.ASPECT;\n        this.camera.bottom = -this.camera.top;\n\n        this.camera.updateProjectionMatrix();\n\n        this.scene.fog.near = this.camera.near + this.fogStart * (this.camera.far - this.camera.near);\n        // if (scene.fog.near > center) scene.fog.near = center;\n        this.scene.fog.far = this.camera.far;\n\n        if (this.config.disableFog) {\n            this.scene.fog.near = this.scene.fog.far;\n        }\n    };\n\n    // display scene\n    //if nolink is set/true, don't propagate changes to linked viewers\n    private show(nolink?) {\n        this.renderer.setViewport();\n        if (!this.scene)\n            return;\n        // var time = new Date();\n        this.setSlabAndFog();\n        this.renderer.render(this.scene, this.camera);\n        // console.log(\"rendered in \" + (+new Date() - time) + \"ms\");\n\n        //have any scene change trigger a callback\n        if (this.viewChangeCallback) this.viewChangeCallback(this._viewer.getView());\n\n        if (!nolink && this.linkedViewers.length > 0) {\n            var view = this._viewer.getView();\n            for (var i = 0; i < this.linkedViewers.length; i++) {\n                var other = this.linkedViewers[i];\n                other.setView(view, true);\n            }\n        }\n    };\n\n\n    //regenerate the list of clickables\n    //also updates hoverables\n    private updateClickables() {\n        this.clickables.splice(0, this.clickables.length);\n        this.hoverables.splice(0, this.hoverables.length);\n        this.contextMenuEnabledObjects.splice(0, this.contextMenuEnabledObjects.length);\n\n        for (let i = 0, il = this.models.length; i < il; i++) {\n            let model = this.models[i];\n            if (model) {\n                let atoms = model.selectedAtoms({\n                    clickable: true\n                });\n\n                let hoverable_atoms = model.selectedAtoms({\n                    hoverable: true\n                });\n\n                let contextMenuEnabled_atom = model.selectedAtoms({ contextMenuEnabled: true });\n                // Array.prototype.push.apply(hoverables,hoverable_atoms);\n                for (let n = 0; n < hoverable_atoms.length; n++) {\n                    this.hoverables.push(hoverable_atoms[n]);\n                }\n\n                // Array.prototype.push.apply(clickables, atoms); //add atoms into clickables\n                for (let m = 0; m < atoms.length; m++) {\n                    this.clickables.push(atoms[m]);\n                }\n\n                // add atoms into contextMenuEnabledObjects\n                for (let m = 0; m < contextMenuEnabled_atom.length; m++) {\n                    this.contextMenuEnabledObjects.push(contextMenuEnabled_atom[m]);\n                }\n\n            }\n        }\n        for (let i = 0, il = this.shapes.length; i < il; i++) {\n\n            let shape = this.shapes[i];\n            if (shape && shape.clickable) {\n                this.clickables.push(shape);\n            }\n            if (shape && shape.hoverable) {\n                this.hoverables.push(shape);\n            }\n            if (shape && shape.contextMenuEnabled) {\n                this.contextMenuEnabledObjects.push(shape);\n            }\n        }\n    };\n\n    // Checks for selection intersects on mousedown\n    private handleClickSelection(mouseX: number, mouseY: number, event) {\n        let intersects = this.targetedObjects(mouseX, mouseY, this.clickables);\n        // console.log('handleClickSelection', mouseX, mouseY, intersects);\n        if (intersects.length) {\n            var selected = intersects[0].clickable;\n            if (selected.callback !== undefined) {\n                if (typeof (selected.callback) != \"function\") {\n                    selected.callback = makeFunction(selected.callback);\n                }\n                if (typeof (selected.callback) === \"function\") {\n                    // Suppress click callbacks when context menu will be invoked.\n                    // This only applies to clicks from \"mouseup\" events after right-click.\n                    // Clicks from \"touchend\" after longtouch contextmenu are suppressed\n                    // in _handleContextMenu.\n                    const isContextMenu = this.mouseButton === 3\n                        && this.contextMenuEnabledObjects.includes(selected)\n                        && this.userContextMenuHandler;\n                    if (!isContextMenu) {\n                        selected.callback(selected, this._viewer, event, this.container, intersects);\n                    }\n                }\n            }\n        }\n    };\n\n\n    //return offset of container\n    private canvasOffset() {\n        let canvas = this.glDOM;\n        let rect = canvas.getBoundingClientRect();\n        let doc = canvas.ownerDocument;\n        let docElem = doc.documentElement;\n        let win = doc.defaultView;\n        return {\n            top: rect.top + win.pageYOffset - docElem.clientTop,\n            left: rect.left + win.pageXOffset - docElem.clientLeft\n        };\n    };\n\n    //set current_hover to sel (which can be null), calling appropraite callbacks\n    private setHover(selected, event?, intersects?) {\n        if (this.current_hover == selected) return;\n        if (this.current_hover) {\n            if (typeof (this.current_hover.unhover_callback) != \"function\") {\n                this.current_hover.unhover_callback = makeFunction(this.current_hover.unhover_callback);\n            }\n            this.current_hover.unhover_callback(this.current_hover, this._viewer, event, this.container, intersects);\n        }\n        this.current_hover = selected;\n\n        if (selected && selected.hover_callback !== undefined) {\n            if (typeof (selected.hover_callback) != \"function\") {\n                selected.hover_callback = makeFunction(selected.hover_callback);\n            }\n            if (typeof (selected.hover_callback) === \"function\") {\n                selected.hover_callback(selected, this._viewer, event, this.container, intersects);\n            }\n        }\n\n    };\n\n    //checks for selection intersects on hover\n    private handleHoverSelection(mouseX, mouseY, event) {\n        if (this.hoverables.length == 0) return;\n        let intersects = this.targetedObjects(mouseX, mouseY, this.hoverables);\n        if (intersects.length) {\n            var selected = intersects[0].clickable;\n            this.setHover(selected, event, intersects);\n            this.current_hover = selected;\n        }\n        else {\n            this.setHover(null);\n        }\n    };\n\n    //sees if the mouse is still on the object that invoked a hover event and if not then the unhover callback is called\n    private handleHoverContinue(mouseX: number, mouseY: number) {\n        let intersects = this.targetedObjects(mouseX, mouseY, this.hoverables);\n        if (intersects.length == 0 || intersects[0] === undefined) {\n            this.setHover(null);\n        }\n        if (intersects[0] !== undefined && intersects[0].clickable !== this.current_hover) {\n            this.setHover(null);\n        }\n    };\n\n    /**\n     * Determine if a positioned event is \"close enough\" to mouseStart to be considered a click.\n     * With a mouse, the position should be exact, but allow a slight delta for a touch interface.\n     * @param {Event} event\n     * @param {{ allowTolerance, tolerance: number }} options\n     */\n    private closeEnoughForClick(event, { allowTolerance = event.targetTouches, tolerance = 5 } = {}) {\n        const x = this.getX(event);\n        const y = this.getY(event);\n        if (allowTolerance) {\n            const deltaX = Math.abs(x - this.mouseStartX);\n            const deltaY = Math.abs(y - this.mouseStartY);\n            return deltaX <= tolerance && deltaY <= tolerance;\n        } else {\n            return x === this.mouseStartX && y === this.mouseStartY;\n        }\n    }\n\n    private calcTouchDistance(ev) { // distance between first two\n        // fingers\n        var xdiff = ev.targetTouches[0].pageX -\n            ev.targetTouches[1].pageX;\n        var ydiff = ev.targetTouches[0].pageY -\n            ev.targetTouches[1].pageY;\n        return Math.hypot(xdiff, ydiff);\n    };\n\n    //check targetTouches as well\n    private getX(ev) {\n        var x = ev.pageX;\n        if (x == undefined) x = ev.pageX; //firefox\n        if (ev.targetTouches &&\n            ev.targetTouches[0]) {\n            x = ev.targetTouches[0].pageX;\n        }\n        else if (ev.changedTouches &&\n            ev.changedTouches[0]) {\n            x = ev.changedTouches[0].pageX;\n        }\n        return x;\n    };\n\n    private getY(ev) {\n        var y = ev.pageY;\n        if (y == undefined) y = ev.pageY;\n        if (ev.targetTouches &&\n            ev.targetTouches[0]) {\n            y = ev.targetTouches[0].pageY;\n        }\n        else if (ev.changedTouches &&\n            ev.changedTouches[0]) {\n            y = ev.changedTouches[0].pageY;\n        }\n        return y;\n    };\n\n    //for grid viewers, return true if point is in this viewer\n    private isInViewer(x: number, y: number) {\n        if (this.viewers != undefined) {\n            var width = this.WIDTH / this.cols;\n            var height = this.HEIGHT / this.rows;\n            var offset = this.canvasOffset();\n            var relx = (x - offset.left);\n            var rely = (y - offset.top);\n\n            var r = this.rows - Math.floor(rely / height) - 1;\n            var c = Math.floor(relx / width);\n\n            if (r != this.row || c != this.col)\n                return false;\n        }\n        return true;\n    };\n\n    //if the user has specify zoom limits, readjust to fit within them\n    //also, make sure we don't go past CAMERA_Z\n    private adjustZoomToLimits(z: number) {\n        //a lower limit of 0 is at CAMERA_Z\n        if (this.config.lowerZoomLimit && this.config.lowerZoomLimit > 0) {\n            let lower = this.CAMERA_Z - this.config.lowerZoomLimit;\n            if (z > lower) z = lower;\n        }\n\n        if (this.config.upperZoomLimit && this.config.upperZoomLimit > 0) {\n            let upper = this.CAMERA_Z - this.config.upperZoomLimit;\n            if (z < upper) z = upper;\n        }\n\n        if (z > this.CAMERA_Z - 1) {\n            z = this.CAMERA_Z - 1; //avoid getting stuck\n        }\n\n        return z;\n    };\n    //interpolate between two normalized quaternions (t between 0 and 1)\n    //https://en.wikipedia.org/wiki/Slerp\n    private static slerp(v0: Quaternion, v1: Quaternion, t: number) {\n        // Compute the cosine of the angle between the two vectors.\n        //dot product\n        if (t == 1) return v1.clone();\n        else if (t == 0) return v0.clone();\n        let dot = v0.x * v1.x + v0.y * v1.y + v0.z * v1.z + v0.w * v1.w;\n        if (dot > 0.9995) {\n            // If the inputs are too close for comfort, linearly interpolate\n            // and normalize the result.\n            let result = new Quaternion(\n                v0.x + t * (v1.x - v0.x),\n                v0.y + t * (v1.y - v0.y),\n                v0.z + t * (v1.z - v0.z),\n                v0.w + t * (v1.w - v0.w));\n\n            result.normalize();\n            return result;\n        }\n\n        // If the dot product is negative, the quaternions\n        // have opposite handed-ness and slerp won't take\n        // the shorted path. Fix by reversing one quaternion.\n        if (dot < 0.0) {\n            v1 = v1.clone().multiplyScalar(-1);\n            dot = -dot;\n        }\n\n        if (dot > 1) dot = 1.0;\n        else if (dot < -1) dot = -1.0;\n\n        var theta_0 = Math.acos(dot);  // theta_0 = angle between input vectors\n        var theta = theta_0 * t;    // theta = angle between v0 and result\n\n        var v2 = v1.clone();\n        v2.sub(v0.clone().multiplyScalar(dot));\n        v2.normalize();              // { v0, v2 } is now an orthonormal basis\n\n        var c = Math.cos(theta);\n        var s = Math.sin(theta);\n        var ret = new Quaternion(\n            v0.x * c + v2.x * s,\n            v0.y * c + v2.y * s,\n            v0.z * c + v2.z * s,\n            v0.w * c + v2.w * s\n        );\n        ret.normalize();\n        return ret;\n    };\n\n\n    /* @param {Object} element HTML element within which to create viewer\n     * @param {ViewerSpec} config Object containing optional configuration for the viewer\n     */\n    constructor(element, c: ViewerSpec = {}) {\n        // set variables\n        this.config = c;\n        this.callback = this.config.callback;\n        this.defaultcolors = this.config.defaultcolors;\n        if (!this.defaultcolors)\n            this.defaultcolors = elementColors.defaultColors;\n        this.nomouse = Boolean(this.config.nomouse);\n        this.bgColor = 0;\n        this.config.backgroundColor = this.config.backgroundColor || \"#ffffff\";\n        if (typeof (this.config.backgroundColor) != 'undefined') {\n            this.bgColor = CC.color(this.config.backgroundColor).getHex();\n        }\n        this.config.backgroundAlpha = this.config.backgroundAlpha == undefined ? 1.0 : this.config.backgroundAlpha;\n\n        this.camerax = 0;\n        if (typeof (this.config.camerax) != 'undefined') {\n            this.camerax = typeof(this.config.camerax) === 'string' ? parseFloat(this.config.camerax) : this.config.camerax;\n        }\n        this._viewer = this;\n        this.container = element; //we expect container to be HTMLElement\n\n        if (this.config.hoverDuration != undefined) {\n            this.hoverDuration = this.config.hoverDuration;\n        }\n        if (this.config.antialias === undefined) this.config.antialias = true;\n        if (this.config.cartoonQuality === undefined) this.config.cartoonQuality = 10;\n\n        this.WIDTH = this.getWidth();\n        this.HEIGHT = this.getHeight();\n\n        this.setupRenderer();\n\n        this.row = this.config.row == undefined ? 0 : this.config.row;\n        this.col = this.config.col == undefined ? 0 : this.config.col;\n        this.cols = this.config.cols;\n        this.rows = this.config.rows;\n        this.viewers = this.config.viewers;\n        this.control_all = this.config.control_all;\n\n        this.ASPECT = this.renderer.getAspect(this.WIDTH, this.HEIGHT);\n\n        this.camera = new Camera(this.fov, this.ASPECT, this.NEAR, this.FAR, this.config.orthographic);\n        this.camera.position = new Vector3(this.camerax, 0, this.CAMERA_Z);\n        this.lookingAt = new Vector3();\n        this.camera.lookAt(this.lookingAt);\n\n        this.raycaster = new Raycaster(new Vector3(0, 0, 0), new Vector3(0, 0, 0));\n        this.projector = new Projector();\n\n        this.initializeScene();\n        this.renderer.setClearColorHex(this.bgColor, this.config.backgroundAlpha);\n        this.scene.fog.color = CC.color(this.bgColor);\n\n        // this event is bound to the body element, not the container,\n        // so no need to put it inside initContainer()\n        document.body.addEventListener('mouseup', this._handleMouseUp.bind(this));\n        document.body.addEventListener('touchend', this._handleMouseUp.bind(this));\n\n        this.initContainer(this.container);\n        if (this.config.style) { //enable setting style in constructor\n            this.setViewStyle(this.config as ViewStyle);\n        }\n\n        window.addEventListener(\"resize\", this.resize.bind(this));\n\n        if (typeof (window.ResizeObserver) !== \"undefined\") {\n            this.divwatcher = new window.ResizeObserver(this.resize.bind(this));\n            this.divwatcher.observe(this.container);\n        }\n\n        if (typeof (window.IntersectionObserver) !== \"undefined\") {\n            //make sure a viewer that is becoming visible is alive\n            let intcallback = (entries, observer) => {\n                entries.forEach((entry) => {\n                    if (entry.isIntersecting) {\n                        this.resize();\n                    }\n                });\n            };\n            this.intwatcher = new window.IntersectionObserver(intcallback);\n            this.intwatcher.observe(this.container);\n        }\n\n        try {\n            if (typeof (this.callback) === \"function\")\n                this.callback(this);\n        } catch (e) {\n            // errors in callback shouldn't invalidate the viewer\n            console.log(\"error with glviewer callback: \" + e);\n        }\n\n    };\n\n    /**\n    * Return a list of objects that intersect that at the specified viewer position.\n    *\n    * @param x - x position in screen coordinates\n    * @param y - y position in screen coordinates\n    * @param {Object[]} - list of objects or selection object specifying what object to check for targeting\n    */\n    public targetedObjects(x: number, y: number, objects) {\n        var mouse = {\n            x: x,\n            y: y,\n            z: -1.0\n        };\n        if (!Array.isArray(objects)) { //assume selection object\n            objects = this.selectedAtoms(objects);\n        }\n        if (objects.length == 0) return [];\n        this.raycaster.setFromCamera(mouse, this.camera);\n        return this.raycaster.intersectObjects(this.modelGroup, objects);\n    };\n\n    /** Convert model coordinates to screen coordinates.\n     * @param {object | list} - an object or list of objects with x,y,z attributes (e.g. an atom)\n     * @return {object | list} - and object or list of {x: screenX, y: screenY}\n     */\n    public modelToScreen(coords) {\n        let returnsingle = false;\n        if (!Array.isArray(coords)) {\n            coords = [coords];\n            returnsingle = true;\n        }\n\n        let ratioX = this.renderer.getXRatio();\n        let ratioY = this.renderer.getYRatio();\n\n        let col = this.col;\n        let row = this.row;\n        let viewxoff = col * (this.WIDTH / ratioX);\n        //row is from bottom \n        let viewyoff = (ratioY - row - 1) * (this.HEIGHT / ratioY);\n\n        let results = [];\n        let offset = this.canvasOffset();\n        coords.forEach(coord => {\n            let t = new Vector3(coord.x, coord.y, coord.z);\n            t.applyMatrix4(this.modelGroup.matrixWorld);\n            this.projector.projectVector(t, this.camera);\n            let screenX = (this.WIDTH / ratioX) * (t.x + 1) / 2.0 + offset.left + viewxoff;\n            let screenY = -(this.HEIGHT / ratioY) * (t.y - 1) / 2.0 + offset.top + viewyoff;\n            results.push({ x: screenX, y: screenY });\n        });\n        if (returnsingle) results = results[0];\n        return results;\n    };\n\n    /**\n     * For a given screen (x,y) displacement return model displacement\n     * @param{x} x displacement in screen coordinates\n     * @param{y} y displacement in screen corodinates\n     * @param{modelz} z coordinate in model coordinates to compute offset for, default is model axis\n    */\n    public screenOffsetToModel(x: number, y: number, modelz?) {\n        var dx = x / this.WIDTH;\n        var dy = y / this.HEIGHT;\n        var zpos = (modelz === undefined ? this.rotationGroup.position.z : modelz);\n        var q = this.rotationGroup.quaternion;\n        var t = new Vector3(0, 0, zpos);\n        this.projector.projectVector(t, this.camera);\n        t.x += dx * 2;\n        t.y -= dy * 2;\n        this.projector.unprojectVector(t, this.camera);\n        t.z = 0;\n        t.applyQuaternion(q);\n        return t;\n    };\n\n    /**\n     * Distance from screen coordinate to model coordinate assuming screen point\n     * is projected to the same depth as model coordinate\n     * @param{screen} xy screen coordinate\n     * @param{model} xyz model coordinate\n    */\n    public screenToModelDistance(screen: XYZ, model) {\n        let offset = this.canvasOffset();\n\n        //convert model to screen to get screen z\n        let mvec = new Vector3(model.x, model.y, model.z);\n        mvec.applyMatrix4(this.modelGroup.matrixWorld);\n        let m = mvec.clone();\n        this.projector.projectVector(mvec, this.camera);\n\n        let t = new Vector3((screen.x - offset.left) * 2 / this.WIDTH - 1, (screen.y - offset.top) * 2 / -this.HEIGHT + 1, mvec.z);\n        this.projector.unprojectVector(t, this.camera);\n\n        return t.distanceTo(m);\n    };\n\n    /**\n     * Set a callback to call when the view has potentially changed.\n     *\n    */\n    public setViewChangeCallback(callback) {\n        if (typeof (callback) === 'function' || callback == null)\n            this.viewChangeCallback = callback;\n    };\n\n    /**\n     * Set a callback to call when the view has potentially changed.\n     *\n    */\n    public setStateChangeCallback(callback) {\n        if (typeof (callback) === 'function' || callback == null)\n            this.stateChangeCallback = callback;\n    };\n\n    /**\n     * Return configuration of viewer\n     */\n    public getConfig() {\n        return this.config;\n    };\n\n    /**\n     * Set the configuration object.  Note that some settings may only\n     * have an effect at viewer creation time.\n     */\n    public setConfig(c: ViewerSpec) {\n        this.config = c;\n        if(c.ambientOcclusion) {\n            this.renderer.enableAmbientOcclusion(c.ambientOcclusion);\n        }\n    };\n\n    /**\n     * Return object representing internal state of\n     * the viewer appropriate for passing to setInternalState\n     *\n    */\n    public getInternalState() {\n        var ret = { 'models': [], 'surfaces': [], 'shapes': [], 'labels': [] };\n        for (let i = 0; i < this.models.length; i++) {\n            if (this.models[i]) {\n                ret.models[i] = this.models[i].getInternalState();\n            }\n        }\n\n        //todo: labels, shapes, surfaces\n\n        return ret;\n    };\n\n    /**\n     * Overwrite internal state of the viewer with passed  object\n     * which should come from getInternalState.\n     *\n    */\n    public setInternalState(state) {\n\n        //clear out current viewer\n        this.clear();\n\n        //set model state\n        var newm = state.models;\n        for (let i = 0; i < newm.length; i++) {\n            if (newm[i]) {\n                this.models[i] = new GLModel(i);\n                this.models[i].setInternalState(newm[i]);\n            }\n        }\n\n        //todo: labels, shapes, surfaces\n        this.render();\n    };\n\n    /**\n     * Set lower and upper limit stops for zoom.\n     *\n     * @param {lower} - limit on zoom in (positive number).  Default 0.\n     * @param {upper} - limit on zoom out (positive number).  Default infinite.\n     * @example\n      $3Dmol.get(\"data/set1_122_complex.mol2\", function(moldata) {\n            var m = viewer.addModel(moldata);\n            viewer.setStyle({stick:{colorscheme:\"Jmol\"}});\n            viewer.setZoomLimits(100,200);\n            viewer.zoomTo();\n            viewer.zoom(10); //will not zoom all the way\n            viewer.render();\n        });\n    */\n    public setZoomLimits(lower, upper) {\n        if (typeof (lower) !== 'undefined') this.config.lowerZoomLimit = lower;\n        if (upper) this.config.upperZoomLimit = upper;\n        this.rotationGroup.position.z = this.adjustZoomToLimits(this.rotationGroup.position.z);\n        this.show();\n    };\n\n    /**\n     * Set camera parameters (distance to the origin and field of view)\n     *\n     * @param {parameters} - new camera parameters, with possible fields\n     *                       being fov for the field of view, z for the\n     *                       distance to the origin, and orthographic (boolean)\n     *                       for kind of projection (default false).\n     * @example\n      $3Dmol.get(\"data/set1_122_complex.mol2\", function(data) {\n            var m = viewer.addModel(data);\n            viewer.setStyle({stick:{}});\n            viewer.zoomTo();\n            viewer.setCameraParameters({ fov: 10 , z: 300 });\n            viewer.render();\n        });\n    */\n    public setCameraParameters(parameters) {\n        if (parameters.fov !== undefined) {\n            this.fov = parameters.fov;\n            this.camera.fov = this.fov;\n        }\n\n        if (parameters.z !== undefined) {\n            this.CAMERA_Z = parameters.z;\n            this.camera.z = this.CAMERA_Z;\n        }\n        if (parameters.orthographic !== undefined) {\n            this.camera.ortho = parameters.orthographic;\n        }\n    };\n\n    public _handleMouseDown(ev) {\n        ev.preventDefault();\n        if (!this.scene)\n            return;\n        var x = this.getX(ev);\n        var y = this.getY(ev);\n        if (x === undefined)\n            return;\n        this.isDragging = true;\n        this.mouseButton = ev.which;\n        this.mouseStartX = x;\n        this.mouseStartY = y;\n        this.touchHold = true;\n        this.touchDistanceStart = 0;\n        if (ev.targetTouches &&\n            ev.targetTouches.length == 2) {\n            this.touchDistanceStart = this.calcTouchDistance(ev);\n        }\n        this.cq = this.rotationGroup.quaternion.clone();\n        this.cz = this.rotationGroup.position.z;\n        this.currentModelPos = this.modelGroup.position.clone();\n        this.cslabNear = this.slabNear;\n        this.cslabFar = this.slabFar;\n\n        let self = this;\n        if (ev.targetTouches && ev.targetTouches.length === 1) {\n            this.longTouchTimeout = setTimeout(function () {\n                if (self.touchHold == true) {\n                    // console.log('Touch hold', x,y);\n                    self.glDOM = self.renderer.domElement;\n                    const touch = ev.targetTouches[0];\n                    const newEvent = new PointerEvent('contextmenu', {\n                        ...ev,\n                        pageX: touch.pageX, pageY: touch.pageY,\n                        screenX: touch.screenX, screenY: touch.screenY,\n                        clientX: touch.clientX, clientY: touch.clientY,\n                    });\n                    self.glDOM.dispatchEvent(newEvent);\n                }\n                else {\n                    // console.log('Touch hold ended earlier');\n\n                }\n            }, this.longTouchDuration);\n        }\n\n    };\n\n    public _handleMouseUp(ev) {\n        // handle touch\n        this.touchHold = false;\n\n        // handle selection\n        if (this.isDragging && this.scene) { //saw mousedown, haven't moved\n            var x = this.getX(ev);\n            var y = this.getY(ev);\n            if (this.closeEnoughForClick(ev) && this.isInViewer(x, y)) {\n                let mouse = this.mouseXY(x, y);\n                this.handleClickSelection(mouse.x, mouse.y, ev);\n            }\n        }\n\n        this.isDragging = false;\n    }\n\n    public _handleMouseScroll(ev) { // Zoom\n        ev.preventDefault();\n        if (!this.scene)\n            return;\n\n        var x = this.getX(ev);\n        var y = this.getY(ev);\n        if (x === undefined)\n            return;\n        if (!this.control_all && !this.isInViewer(x, y)) {\n            return;\n        }\n\n        var scaleFactor = (this.CAMERA_Z - this.rotationGroup.position.z) * 0.85;\n        var mult = 1.0;\n        if (ev.ctrlKey) {\n            mult = -1.0; //this is a pinch event turned into a wheel event (or they're just holding down the ctrl)\n        }\n        if (ev.detail) {\n            this.rotationGroup.position.z += mult * scaleFactor * ev.detail / 10;\n        } else if (ev.wheelDelta) {\n            //dampen the wheelDelta since some browser/OS/mouse combinations can be quite large\n            let wd = ev.wheelDelta * 600 / (ev.wheelDelta + 600);\n            this.rotationGroup.position.z -= mult * scaleFactor * wd / 400;\n        }\n        this.rotationGroup.position.z = this.adjustZoomToLimits(this.rotationGroup.position.z);\n        this.show();\n    };\n\n    /**\n     * Return image URI of viewer contents (base64 encoded).     *\n     */\n    public pngURI() {\n        return this.getCanvas().toDataURL('image/png');\n    };\n\n    /**\n     * Return a promise that resolves to an animated PNG image URI of\n     viewer contents (base64 encoded) for nframes of viewer changes.\n     * @return {Promise}\n     */\n    public apngURI(nframes: number) {\n        let viewer = this;\n        nframes = nframes ? nframes : 1;\n        return new Promise(function (resolve) {\n            let framecnt = 0;\n            let oldcb = viewer.viewChangeCallback;\n            let bufpromise = [];\n            let delays = [];\n            let lasttime = Date.now();\n            viewer.viewChangeCallback = function () {\n                delays.push(Date.now() - lasttime);\n                lasttime = Date.now();\n                bufpromise.push(new Promise(resolve => {\n                    viewer.getCanvas().toBlob(function (blob) {\n                        blob.arrayBuffer().then(resolve);\n                    }, \"image/png\");\n                }));\n                framecnt += 1;\n                if (framecnt == nframes) {\n                    viewer.viewChangeCallback = oldcb;\n\n                    Promise.all(bufpromise).then((buffers) => {\n                        //convert to apng\n                        let rgbas = [];\n                        //have to convert png to rgba, before creating the apng\n                        for (let i = 0; i < buffers.length; i++) {\n                            let img = decode(buffers[i]);\n                            rgbas.push(toRGBA8(img)[0]);\n                        }\n                        let width = viewer.getCanvas().width;\n                        let height = viewer.getCanvas().height;\n                        let apng = encode(rgbas, width, height, 0, delays);\n                        let blob = new Blob([apng], { type: 'image/png' });\n                        let fr = new FileReader();\n                        fr.onload = function (e) {\n                            resolve(e.target.result);\n                        };\n                        fr.readAsDataURL(blob);\n                    });\n                }\n            };\n        });\n\n    };\n\n\n    /**\n     * Return underlying canvas element.\n     */\n    public getCanvas(): HTMLCanvasElement {\n        return this.glDOM;\n    };\n\n    /**\n     * Return renderer element.\n     */\n    public getRenderer() {\n        return this.renderer;\n    };\n\n    /**\n         * Set the duration of the hover delay\n         *\n         * @param {number}\n         *            [hoverDuration] - an optional parameter that denotes\n         *            the duration of the hover delay (in milliseconds) before the hover action is called\n         *\n     */\n    public setHoverDuration(duration?: number) {\n        this.hoverDuration = duration;\n    };\n\n    private mouseXY(x, y) {\n        //convert to -1..1 coordinates\n        let offset = this.canvasOffset();\n        let ratioX = this.renderer.getXRatio();\n        let ratioY = this.renderer.getYRatio();\n\n        let col = this.col;\n        let row = this.row;\n        let viewxoff = col * (this.WIDTH / ratioX);\n        //row is from bottom \n        let viewyoff = (ratioY - row - 1) * (this.HEIGHT / ratioY);\n\n        let mouseX = ((x - offset.left - viewxoff) / (this.WIDTH / ratioX)) * 2 - 1;\n        let mouseY = -((y - offset.top - viewyoff) / (this.HEIGHT / ratioY)) * 2 + 1;\n\n        return { x: mouseX, y: mouseY };\n    }\n\n    public _handleMouseMove(ev) { // touchmove\n\n        clearTimeout(this.hoverTimeout);\n        ev.preventDefault();\n\n\n        let x = this.getX(ev);\n        let y = this.getY(ev);\n        if (x === undefined)\n            return;\n\n        let ratioX = this.renderer.getXRatio();\n        let ratioY = this.renderer.getYRatio();\n\n        let mouse = this.mouseXY(x, y);\n\n        let self = this;\n        // hover timeout\n        if (this.current_hover !== null) {\n            this.handleHoverContinue(mouse.x, mouse.y);\n        }\n\n        var mode = 0;\n        if (!this.control_all && !this.isInViewer(x, y)) {\n            return;\n        }\n\n        if (!this.scene)\n            return;\n\n        if (this.hoverables.length > 0) {\n            this.hoverTimeout = setTimeout(\n                function () {\n                    self.handleHoverSelection(mouse.x, mouse.y, ev);\n                },\n                this.hoverDuration);\n        }\n\n        if (!this.isDragging)\n            return;\n\n        // Cancel longtouch timer to avoid invoking context menu if dragged away from start\n        if (ev.targetTouches && (ev.targetTouches.length > 1 ||\n            (ev.targetTouches.length === 1 && !this.closeEnoughForClick(ev)))) {\n            clearTimeout(this.longTouchTimeout);\n        }\n\n        var dx = (x - this.mouseStartX) / this.WIDTH;\n        var dy = (y - this.mouseStartY) / this.HEIGHT;\n        // check for pinch\n        if (this.touchDistanceStart != 0 &&\n            ev.targetTouches &&\n            ev.targetTouches.length == 2) {\n            var newdist = this.calcTouchDistance(ev);\n            // change to zoom\n            mode = 2;\n            dy = (newdist - this.touchDistanceStart) * 2 / (this.WIDTH + this.HEIGHT);\n        } else if (ev.targetTouches &&\n            ev.targetTouches.length == 3) {\n            // translate\n            mode = 1;\n        }\n\n        dx *= ratioX;\n        dy *= ratioY;\n        var r = Math.hypot(dx, dy);\n        var scaleFactor;\n        if (mode == 3 || (this.mouseButton == 3 && ev.ctrlKey)) { // Slab\n            this.slabNear = this.cslabNear + dx * 100;\n            this.slabFar = this.cslabFar - dy * 100;\n        } else if (mode == 2 || this.mouseButton == 3 || ev.shiftKey) { // Zoom\n            scaleFactor = (this.CAMERA_Z - this.rotationGroup.position.z) * 0.85;\n            if (scaleFactor < 80)\n                scaleFactor = 80;\n            this.rotationGroup.position.z = this.cz + dy * scaleFactor;\n            this.rotationGroup.position.z = this.adjustZoomToLimits(this.rotationGroup.position.z);\n        } else if (mode == 1 || this.mouseButton == 2 || ev.ctrlKey) { // Translate\n            var t = this.screenOffsetToModel(ratioX * (x - this.mouseStartX), ratioY * (y - this.mouseStartY));\n            this.modelGroup.position.addVectors(this.currentModelPos, t);\n\n        } else if ((mode === 0 || this.mouseButton == 1) && r !== 0) { // Rotate\n            var rs = Math.sin(r * Math.PI) / r;\n            this.dq.x = Math.cos(r * Math.PI);\n            this.dq.y = 0;\n            this.dq.z = rs * dx;\n            this.dq.w = -rs * dy;\n            this.rotationGroup.quaternion.set(1, 0, 0, 0);\n            this.rotationGroup.quaternion.multiply(this.dq);\n            this.rotationGroup.quaternion.multiply(this.cq);\n        }\n        this.show();\n    };\n\n    /** User specified function for handling a context menu event.\n     * Handler is passed the selected object, x and y in canvas coordinates,\n     * and original event.\n     */\n    public userContextMenuHandler: Function | null = null;\n\n    public _handleContextMenu(ev) {\n        ev.preventDefault();\n        if (this.closeEnoughForClick(ev)) {\n            var x = this.mouseStartX;\n            var y = this.mouseStartY;\n            var offset = this.canvasOffset();\n            let mouse = this.mouseXY(x, y);\n            let mouseX = mouse.x;\n            let mouseY = mouse.y;\n\n            let intersects = this.targetedObjects(mouseX, mouseY, this.contextMenuEnabledObjects);\n            var selected = null;\n            if (intersects.length) {\n                selected = intersects[0].clickable;\n            }\n\n            var offset = this.canvasOffset();\n            var x = this.mouseStartX - offset.left;\n            var y = this.mouseStartY - offset.top;\n            if (this.userContextMenuHandler) {\n                this.userContextMenuHandler(selected, x, y, intersects, ev);\n                // We've processed this as a context menu evt; ignore further mouseup / touchend.\n                // This is really for touchend after longtouch, since the mouseup for right-click\n                // occurs before the contextmenu event.\n                this.isDragging = false;\n            }\n        }\n    };\n\n\n    /**\n     * Change the viewer's container element\n     * Also useful if the original container element was removed from the DOM.\n     *\n     * @param {Object | string} element\n     *            Either HTML element or string identifier. Defaults to the element used to initialize the viewer.\n\n     */\n    public setContainer(element) {\n        let elem = getElement(element) || this.container;\n        this.initContainer(elem);\n        return this;\n    };\n\n    /**\n     * Set the background color (default white)\n     *\n     * @param {number}\n     *            hex Hexcode specified background color, or standard color spec\n     * @param {number}\n     *            a Alpha level (default 1.0)\n     *\n     * @example\n     *\n     * viewer.setBackgroundColor(0x000000);\n\n\n     *\n     */\n    public setBackgroundColor(hex: ColorSpec, a: number) {\n        if (typeof (a) == \"undefined\") {\n            a = 1.0;\n        }\n        else if (a < 0 || a > 1.0) {\n            a = 1.0;\n        }\n        var c = CC.color(hex);\n        this.scene.fog.color = c;\n        this.bgColor = c.getHex();\n        this.renderer.setClearColorHex(c.getHex(), a);\n        this.show();\n\n        return this;\n    };\n\n    /**\n     * Set view projection scheme.  Either orthographic or perspective.\n     * Default is perspective.  Orthographic can also be enabled on viewer creation\n     * by setting orthographic to true in the config object.\n     *\n     *\n     * @example\n     viewer.setViewStyle({style:\"outline\"});\n          $3Dmol.get('data/1fas.pqr', function(data){\n              viewer.addModel(data, \"pqr\");\n              $3Dmol.get(\"data/1fas.cube\",function(volumedata){\n                  viewer.addSurface($3Dmol.SurfaceType.VDW, {opacity:0.85,voldata: new $3Dmol.VolumeData(volumedata, \"cube\"), volscheme: new $3Dmol.Gradient.RWB(-10,10)},{});\n              });\n              viewer.zoomTo();\n\n              viewer.setProjection(\"orthographic\");\n              viewer.render(callback);\n          });\n     *\n     */\n    public setProjection(proj) {\n        this.camera.ortho = (proj === \"orthographic\");\n        this.setSlabAndFog();\n    };\n\n    /**\n     * Set global view styles.\n     *\n     * @example\n     *   viewer.setViewStyle({style:\"outline\"});\n          $3Dmol.get('data/1fas.pqr', function(data){\n              viewer.addModel(data, \"pqr\");\n              $3Dmol.get(\"data/1fas.cube\",function(volumedata){\n                  viewer.addSurface($3Dmol.SurfaceType.VDW, {opacity:0.85,voldata: new $3Dmol.VolumeData(volumedata, \"cube\"), volscheme: new $3Dmol.Gradient.RWB(-10,10)},{});\n              });\n              viewer.zoomTo();\n              viewer.render(callback);\n          });\n     *\n     */\n    public setViewStyle(parameters: ViewStyle) {\n        parameters = parameters || {};\n        parameters.style = parameters.style || \"\";\n\n        if (parameters.style.includes(\"outline\")) {\n            var params: any = {};\n            if (parameters.color) params.color = CC.color(parameters.color);\n            if (parameters.width) params.width = parameters.width;\n            this.renderer.enableOutline(params);\n        } else {\n            this.renderer.disableOutline();\n        }\n        if (parameters.style.includes(\"ambientOcclusion\")) {\n            var params: any = {};\n            if (parameters.strength) params.strength = parameters.strength;\n            if (parameters.radius) params.radius = parameters.radius;\n            this.renderer.enableAmbientOcclusion(params);\n        } else {\n            this.renderer.disableAmbientOcclusion();\n        }        \n        return this;\n    };\n\n\n    private updateSize() {\n        this.renderer.setSize(this.WIDTH, this.HEIGHT);\n        this.ASPECT = this.renderer.getAspect(this.WIDTH, this.HEIGHT);\n        this.renderer.setSize(this.WIDTH, this.HEIGHT);\n        this.camera.aspect = this.ASPECT;\n        this.camera.updateProjectionMatrix();\n    }\n    /**\n     * Set viewer width independently of the HTML container.  This is probably not what you want.\n     *\n     * @param {number} w Width in pixels\n     */\n    public setWidth(w: number) {\n        this.WIDTH = w || this.WIDTH;\n        this.updateSize();\n        return this;\n    };\n\n    /**\n     * Set viewer height independently of the HTML container.  This is probably not what you want.\n     *\n     * @param {number} h Height in pixels\n     */\n    public setHeight(h: number) {\n        this.HEIGHT = h || this.HEIGHT;\n        this.updateSize();\n        return this;\n    };\n\n    /**\n     * Resize viewer according to containing HTML element's dimensions\n     *\n     */\n    public resize() {\n        this.WIDTH = this.getWidth();\n        this.HEIGHT = this.getHeight();\n        let regen = false;\n        if (this.renderer.isLost() && this.WIDTH > 0 && this.HEIGHT > 0) {\n            //create new context\n            let resetcanvas = false;\n            let currentcanvas = this.container.querySelector('canvas');\n            if (currentcanvas && currentcanvas != this.renderer.getCanvas()) {\n                //canvas has been replaced, use new one\n                this.config.canvas = currentcanvas;\n            } else {\n                currentcanvas.remove(); //remove existing\n                if (this.config && this.config.canvas != undefined) {\n                    delete this.config.canvas;\n                    resetcanvas = true;\n                }\n            }\n            this.setupRenderer();\n            this.initContainer(this.container);\n            this.renderer.setClearColorHex(this.bgColor, this.config.backgroundAlpha);\n\n            regen = true;\n            if (resetcanvas) {\n                this.config.canvas = this.renderer.getCanvas();\n            }\n        }\n        if (this.WIDTH == 0 || this.HEIGHT == 0) {\n            if (this.animated) this._viewer.pauseAnimate();\n        } else if (this.animated) {\n            this._viewer.resumeAnimate();\n        }\n        this.updateSize();\n\n        if (regen) { //restored rendere, need to regenerate scene\n            let options = this.renderer.supportedExtensions();\n            options.regen = true;\n            if (this.viewers) {\n                for (let i = 0, n = this.viewers.length; i < n; i++) {\n                    for (let j = 0, m = this.viewers[i].length; j < m; j++) {\n                        this.viewers[i][j].render(null, options);\n                    }\n                }\n            }\n            this._viewer.render(null, options);\n        } else {\n            this.show();\n        }\n\n        return this;\n    };\n\n\n    /**\n     * Return specified model\n     *\n     * @param {number}\n     *            [id=last model id] - Retrieve model with specified id\n     * @default Returns last model added to viewer or null if there are no models\n     * @return {GLModel}\n     *\n     * @example // Retrieve reference to first GLModel added var m =\n     *    $3Dmol.download(\"pdb:1UBQ\",viewer,{},function(m1){\n              $3Dmol.download(\"pdb:1UBI\", viewer,{}, function(m2) {\n                viewer.zoomTo();\n                m1.setStyle({cartoon: {color:'green'}});\n                //could use m2 here as well\n                viewer.getModel().setStyle({cartoon: {color:'blue'}});\n                viewer.render();\n            })\n          });\n     */\n    public getModel(id?: number | GLModel) {\n        if (id === undefined) {\n            return this.models.length == 0 ? null : this.models[this.models.length - 1];\n        }\n        if (id instanceof GLModel) {\n            return id;\n        }\n        if (!(id in this.models)) {\n            if (this.models.length == 0)\n                return null;\n            else\n                return this.models[this.models.length - 1]; //get last model if no (or invalid) id specified\n        }\n        return this.models[id];\n    };\n\n\n    /**\n     * Continuously rotate a scene around the specified axis.\n     *\n     * Call `spin(false)` to stop spinning.\n     *\n     * @param  {string|boolean|Array} axis\n     *            [axis] - Axis (\"x\", \"y\", \"z\", \"vx\", \"vy\", or \"vz\") to rotate around.\n     *            Default \"y\".  View relative (rather than model relative) axes are prefixed with v.\n     * @param  {number} speed\n     *            [speed] - Speed multiplier for spinning the viewer. 1 is default and a negative\n     *             value reverses the direction of the spin.\n     *\n     */\n    public spin(axis, speed: number = 1) {\n        clearInterval(this.spinInterval);\n        if (typeof axis == 'undefined')\n            axis = 'y';\n        if (typeof axis == \"boolean\") {\n            if (!axis)\n                return;\n            else\n                axis = 'y';\n        }\n\n        if (Array.isArray(axis)) {\n            axis = { x: axis[0], y: axis[1], z: axis[2] };\n        }\n        //out of bounds check\n\n        var viewer = this;\n\n        this.spinInterval = setInterval(\n            function () {\n                if (!viewer.getCanvas().isConnected && viewer.renderer.isLost()) {\n                    clearInterval(viewer.spinInterval);\n                }\n                viewer.rotate(1 * speed, axis);\n            }, 25);\n\n    };\n\n    //animate motion between current position and passed position\n    // can set some parameters to null\n    //if fixed is true will enforce the request animation, otherwise\n    //does relative updates\n    //positions objects have modelggroup position, rotation group position.z,\n    //and rotationgroup quaternion\n    //return array includes final position, but not current\n    //the returned array includes an animate method\n    private animateMotion(duration: number, fixed: boolean, mpos: Vector3, rz: number, rot: Quaternion, cam: Vector3) {\n        var interval = 20;\n        var nsteps: number = Math.ceil(duration / interval);\n        if (nsteps < 1) nsteps = 1;\n        this.incAnim();\n\n        var curr = {\n            mpos: this.modelGroup.position.clone(),\n            rz: this.rotationGroup.position.z,\n            rot: this.rotationGroup.quaternion.clone(),\n            cam: this.lookingAt.clone()\n        };\n\n        if (fixed) { //precompute path and stick to it\n            let steps = new Array(nsteps);\n            for (let i = 0; i < nsteps; i++) {\n                let frac = (i + 1) / nsteps;\n                let next: any = { mpos: curr.mpos, rz: curr.rz, rot: curr.rot };\n                next.mpos = mpos.clone().sub(curr.mpos).multiplyScalar(frac).add(curr.mpos);\n                next.rz = curr.rz + frac * (rz - curr.rz);\n                next.rot = GLViewer.slerp(curr.rot, rot, frac);\n                next.cam = cam.clone().sub(curr.cam).multiplyScalar(frac).add(curr.cam);\n                steps[i] = next;\n            }\n\n            let step = 0;\n            let self = this;\n            let callback = function () {\n                var p = steps[step];\n                step += 1;\n                self.modelGroup.position = p.mpos;\n                self.rotationGroup.position.z = p.rz;\n                self.rotationGroup.quaternion = p.rot;\n                self.camera.lookAt(p.cam);\n\n                if (step < steps.length) {\n                    setTimeout(callback, interval);\n                } else {\n                    self.decAnim();\n                }\n                self.show();\n            };\n            setTimeout(callback, interval);\n\n        } else { //relative update\n            var delta: any = {};\n            let frac = 1.0 / nsteps;\n            if (mpos) {\n                delta.mpos = mpos.clone().sub(curr.mpos).multiplyScalar(frac);\n            }\n            if (typeof (rz) != 'undefined' && rz != null) {\n                delta.rz = frac * (rz - curr.rz);\n            }\n            if (rot) {\n                var next = GLViewer.slerp(curr.rot, rot, frac);\n                //comptute step delta rotation\n                delta.rot = curr.rot.clone().inverse().multiply(next);\n            }\n            if (cam) {\n                delta.cam = cam.clone().sub(curr.cam).multiplyScalar(frac);\n            }\n            let step = 0.0;\n            let self = this;\n            let callback = function () {\n                step += 1;\n                if (delta.mpos) {\n                    self.modelGroup.position.add(delta.mpos);\n                }\n                if (delta.rz) {\n                    self.rotationGroup.position.z += delta.rz;\n                }\n                if (delta.rot) {\n                    self.rotationGroup.quaternion.multiply(delta.rot);\n                }\n                if (delta.cam) {\n                    self.lookingAt.add(delta.cam);\n                    self.camera.lookAt(self.lookingAt);\n                }\n\n                if (step < nsteps) {\n                    setTimeout(callback, interval);\n                } else {\n                    self.decAnim();\n                }\n                self.show();\n            };\n            setTimeout(callback, interval);\n        }\n    };\n\n    /**\n     * Rotate scene by angle degrees around axis\n     *\n     * @param {number}\n     *            [angle] - Angle, in degrees, to rotate by.\n     * @param {string}\n     *            [axis] - Axis (\"x\", \"y\", \"z\", \"vx\", \"vy\", or \"vz\") to rotate around.\n     *            Default \"y\".  View relative (rather than model relative) axes are prefixed with v.\n     *            Axis can also be specified as a vector.\n     * @param {number}\n     *            [animationDuration] - an optional parameter that denotes\n     *            the duration of the rotation animation. Default 0 (no animation)\n     * @param {boolean} [fixedPath] - if true animation is constrained to\n     *      requested motion, overriding updates that happen during the animation         *\n     * @example     $3Dmol.download('cid:4000', viewer, {}, function() {\n    viewer.setStyle({stick:{}});\n    viewer.zoomTo();\n    viewer.rotate(90,'y',1);\n    viewer.render(callback);\n    });\n\n     *\n     */\n    public rotate(angle: number, axis: any = \"y\", animationDuration: number = 0, fixedPath: boolean = false) {\n\n        if (axis == \"x\") {\n            axis = { x: 1, y: 0, z: 0 };\n        } else if (axis == \"y\") {\n            axis = { x: 0, y: 1, z: 0 };\n        } else if (axis == \"z\") {\n            axis = { x: 0, y: 0, z: 1 };\n        }\n\n        //support rotating with respect to view axis, not model\n        if (axis == \"vx\") {\n            axis = { vx: 1, vy: 0, vz: 0 };\n        } else if (axis == \"vy\") {\n            axis = { vx: 0, vy: 1, vz: 0 };\n        } else if (axis == \"vz\") {\n            axis = { vx: 0, vy: 0, vz: 1 };\n        }\n\n        if (typeof (axis.vx) !== 'undefined') {\n            var vaxis = new Vector3(axis.vx, axis.vy, axis.vz);\n            vaxis.applyQuaternion(this.rotationGroup.quaternion);\n            axis = { x: vaxis.x, y: vaxis.y, z: vaxis.z };\n        }\n\n        var qFromAngle = function (rangle) {\n            var s = Math.sin(rangle / 2.0);\n            var c = Math.cos(rangle / 2.0);\n            var i = 0, j = 0, k = 0;\n\n            i = axis.x * s;\n            j = axis.y * s;\n            k = axis.z * s;\n\n            return new Quaternion(i, j, k, c).normalize();\n        };\n\n        var rangle = Math.PI * angle / 180.0;\n        var q = qFromAngle(rangle);\n\n        if (animationDuration) {\n            var final = new Quaternion().copy(this.rotationGroup.quaternion).multiply(q);//final\n            this.animateMotion(animationDuration, fixedPath,\n                this.modelGroup.position,\n                this.rotationGroup.position.z,\n                final,\n                this.lookingAt);\n        } else { //not animated\n            this.rotationGroup.quaternion.multiply(q);\n            this.show();\n        }\n        return this;\n\n    };\n\n    public surfacesFinished() {\n        for (var key in this.surfaces) {\n            if (!this.surfaces[key][0].done) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /** Returns an array representing the current viewpoint.\n     * Translation, zoom, and rotation quaternion.\n     * @returns {Array.<number>} [ pos.x, pos.y, pos.z, rotationGroup.position.z, q.x, q.y, q.z, q.w ]\n     *  */\n    public getView() {\n        if (!this.modelGroup)\n            return [0, 0, 0, 0, 0, 0, 0, 1];\n        var pos = this.modelGroup.position;\n        var q = this.rotationGroup.quaternion;\n        return [pos.x, pos.y, pos.z, this.rotationGroup.position.z, q.x, q.y,\n        q.z, q.w];\n    };\n\n    /** Sets the view to the specified translation, zoom, and rotation.\n     *\n     * @param {Array.<number>} arg Array formatted identically to the return value of getView */\n    public setView(arg, nolink?) {\n\n        if (arg === undefined ||\n            !(arg instanceof Array || arg.length !== 8))\n            return this;\n\n        if (!this.modelGroup || !this.rotationGroup)\n            return this;\n        this.modelGroup.position.x = arg[0];\n        this.modelGroup.position.y = arg[1];\n        this.modelGroup.position.z = arg[2];\n        this.rotationGroup.position.z = arg[3];\n        this.rotationGroup.quaternion.x = arg[4];\n        this.rotationGroup.quaternion.y = arg[5];\n        this.rotationGroup.quaternion.z = arg[6];\n        this.rotationGroup.quaternion.w = arg[7];\n        if (typeof (arg[8]) != \"undefined\") {\n            this.rotationGroup.position.x = arg[8];\n            this.rotationGroup.position.y = arg[9];\n        }\n\n        this.show(nolink);\n        return this;\n\n    };\n\n    // apply styles, models, etc in viewer\n    /**\n     * Render current state of viewer, after\n     * adding/removing models, applying styles, etc.\n     *\n     */\n    public render(callback?, exts?) {\n        this.renderer.setViewport();\n        this.updateClickables(); //must render for clickable styles to take effect\n        var view = this.getView();\n\n        if (this.stateChangeCallback) {\n            //todo: have ability to only send delta updates\n            this.stateChangeCallback(this.getInternalState());\n        }\n\n        var i, n;\n        if (!exts) exts = this.renderer.supportedExtensions();\n        for (i = 0; i < this.models.length; i++) {\n            if (this.models[i]) {\n                this.models[i].globj(this.modelGroup, exts);\n            }\n        }\n\n        for (i = 0; i < this.shapes.length; i++) {\n            if (this.shapes[i]) { //exists\n                if ((typeof (this.shapes[i].frame) === 'undefined' || this.viewer_frame < 0 ||\n                    this.shapes[i].frame < 0 || this.shapes[i].frame == this.viewer_frame)) {\n                    this.shapes[i].globj(this.modelGroup, exts);\n                } else { //should not be displayed in current frame\n                    this.shapes[i].removegl(this.modelGroup);\n                }\n            }\n        }\n\n        for (i = 0; i < this.labels.length; i++) {\n            if (exts.regen) {\n                this.labels[i].dispose();\n                this.modelGroup.remove(this.labels[i].sprite);\n                this.labels[i].setContext();\n                this.modelGroup.add(this.labels[i].sprite);\n            }\n            if (this.labels[i] && typeof (this.labels[i].frame) != 'undefined' && this.labels[i].frame >= 0) { //exists and has frame specifier\n                this.modelGroup.remove(this.labels[i].sprite);\n                if (this.viewer_frame < 0 || this.labels[i].frame == this.viewer_frame) {\n                    this.modelGroup.add(this.labels[i].sprite);\n                }\n            }\n        }\n\n        for (i in this.surfaces) { // this is an object with possible holes\n            if (!this.surfaces.hasOwnProperty(i)) continue;\n            var surfArr = this.surfaces[i];\n            for (n = 0; n < surfArr.length; n++) {\n                if (surfArr.hasOwnProperty(n)) {\n                    var geo = surfArr[n].geo;\n                    // async surface generation can cause\n                    // the geometry to be webgl initialized before it is fully\n                    // formed; force various recalculations until full surface\n                    // is available\n                    if (!surfArr[n].finished || exts.regen) {\n                        geo.verticesNeedUpdate = true;\n                        geo.elementsNeedUpdate = true;\n                        geo.normalsNeedUpdate = true;\n                        geo.colorsNeedUpdate = true;\n                        geo.buffersNeedUpdate = true;\n                        geo.boundingSphere = null;\n                        surfArr[n].mat.needsUpdate = true;\n\n                        if (surfArr[n].done)\n                            surfArr[n].finished = true;\n\n                        // remove partially rendered surface\n                        if (surfArr[n].lastGL)\n                            this.modelGroup.remove(surfArr[n].lastGL);\n\n                        // create new surface\n                        var smesh = null;\n\n                        if (surfArr[n].mat instanceof LineBasicMaterial) {\n                            //special case line meshes\n                            smesh = new Line(geo, surfArr[n].mat);\n                        }\n                        else {\n                            smesh = new Mesh(geo, surfArr[n].mat);\n                        }\n                        if (surfArr[n].mat.transparent && surfArr[n].mat.opacity == 0) {\n                            //don't bother with hidden surfaces\n                            smesh.visible = false;\n                        } else {\n                            smesh.visible = true;\n                        }\n                        if (surfArr[n].symmetries.length > 1 ||\n                            (surfArr[n].symmetries.length == 1 &&\n                                !(surfArr[n].symmetries[n].isIdentity()))) {\n                            var j;\n                            var tmeshes = new Object3D(); //transformed meshes\n                            for (j = 0; j < surfArr[n].symmetries.length; j++) {\n                                var tmesh = smesh.clone();\n                                tmesh.matrix = surfArr[n].symmetries[j];\n                                tmesh.matrixAutoUpdate = false;\n                                tmeshes.add(tmesh);\n                            }\n                            surfArr[n].lastGL = tmeshes;\n                            this.modelGroup.add(tmeshes);\n                        }\n                        else {\n                            surfArr[n].lastGL = smesh;\n                            this.modelGroup.add(smesh);\n                        }\n                    } // else final surface already there\n                }\n            }\n        }\n\n        this.setView(view); // Calls show() => renderer render\n        if (typeof callback === 'function') {\n            callback(this);\n        }\n        return this;\n    };\n\n    /* @param {AtomSelectionSpec|any} sel\n     * @return list of models specified by sel\n     */\n    private getModelList(sel: any): GLModel[] {\n        let ms: GLModel[] = [];\n        if (typeof sel === 'undefined' || typeof sel.model === \"undefined\") {\n            for (let i = 0; i < this.models.length; i++) {\n                if (this.models[i])\n                    ms.push(this.models[i]);\n            }\n        } else { // specific to some models\n            let selm: any = sel.model;\n            if (!Array.isArray(selm))\n                selm = [selm];\n\n            for (let i = 0; i < selm.length; i++) {\n                //allow referencing models by order of creation\n                if (typeof selm[i] === 'number') {\n                    var index = selm[i];\n                    //support python backward indexing\n                    if (index < 0) index += this.models.length;\n                    ms.push(this.models[index]);\n                } else {\n                    ms.push(selm[i]);\n                }\n            }\n        }\n\n        return ms;\n    }\n    /**\n     *\n     * @param {AtomSelectionSpec}\n     *            sel\n     * @return {AtomSpec[]}\n     */\n    private getAtomsFromSel(sel: AtomSelectionSpec): AtomSpec[] {\n        var atoms = [];\n        if (typeof (sel) === \"undefined\")\n            sel = {};\n\n        var ms = this.getModelList(sel);\n\n        for (let i = 0; i < ms.length; i++) {\n            atoms = atoms.concat(ms[i].selectedAtoms(sel));\n        }\n\n        return atoms;\n    }\n\n    /**\n     *\n     * @param {AtomSpec}\n     *            atom\n     * @param {AtomSelectionSpec}\n     *            sel\n     * @return {boolean}\n     */\n    private atomIsSelected(atom: AtomSpec, sel: AtomSelectionSpec) {\n        if (typeof (sel) === \"undefined\")\n            sel = {};\n\n        var ms = this.getModelList(sel);\n\n        for (var i = 0; i < ms.length; i++) {\n            if (ms[i].atomIsSelected(atom, sel))\n                return true;\n        }\n\n        return false;\n    }\n\n\n    /** return list of atoms selected by sel\n     *\n     * @param {AtomSelectionSpec} sel\n     * @return {AtomSpec[]}\n     */\n    public selectedAtoms(sel: AtomSelectionSpec): AtomSpec[] {\n        return this.getAtomsFromSel(sel);\n    };\n\n    /**\n    * Returns valid values for the specified attribute in the given selection\n    * @param {string} attribute\n    * @param {AtomSelectionSpec} sel\n    * @return {Array.<Object>}\n    *\n    */\n    public getUniqueValues(attribute: string, sel?: AtomSelectionSpec) {\n        if (typeof (sel) === \"undefined\")\n            sel = {};\n        var atoms = this.getAtomsFromSel(sel);\n        var values = {};\n\n        for (var atom in atoms) {\n            if (atoms[atom].hasOwnProperty(attribute)) {\n                var value = atoms[atom][attribute];\n                values[value] = true;\n            }\n        }\n\n        return Object.keys(values);\n    };\n\n    /**\n     * Return pdb output of selected atoms (if atoms from pdb input)\n     *\n     * @param {AtomSelectionSpec} sel - Selection specification specifying model and atom properties to select.  Default: all atoms in viewer\n     * @return {string} PDB string of selected atoms\n     */\n    public pdbData(sel: AtomSelectionSpec) {\n        var atoms = this.getAtomsFromSel(sel);\n        var ret = \"\";\n        for (var i = 0, n = atoms.length; i < n; ++i) {\n            ret += atoms[i].pdbline + \"\\n\";\n        }\n        return ret;\n    };\n\n\n    /**\n     * Zoom current view by a constant factor\n     *\n     * @param {number}\n     *            [factor] - Magnification factor. Values greater than 1\n     *            will zoom in, less than one will zoom out. Default 2.\n     * @param {number}\n     *            [animationDuration] - an optional parameter that denotes\n     *            the duration of a zoom animation\n     * @param {Boolean} [fixedPath] - if true animation is constrained to\n     *      requested motion, overriding updates that happen during the animation\n     * @example\n    $3Dmol.get('data/4csv.pdb', function(data) {\n    viewer.addModel(data,'pdb');\n    viewer.setStyle({cartoon:{},stick:{}});\n    viewer.zoomTo()\n    viewer.zoom(2,1000);\n    viewer.render();\n    });\n\n         */\n    public zoom(factor: number = 2, animationDuration: number = 0, fixedPath: boolean = false) {\n        var scale = (this.CAMERA_Z - this.rotationGroup.position.z) / factor;\n        var final_z = this.CAMERA_Z - scale;\n\n        if (animationDuration > 0) {\n            this.animateMotion(animationDuration, fixedPath,\n                this.modelGroup.position,\n                this.adjustZoomToLimits(final_z),\n                this.rotationGroup.quaternion,\n                this.lookingAt);\n        } else { //no animation\n            this.rotationGroup.position.z = this.adjustZoomToLimits(final_z);\n            this.show();\n        }\n        return this;\n    };\n\n    /**\n     * Translate current view by x,y screen coordinates\n     * This pans the camera rather than translating the model.\n     *\n     * @param {number} x Relative change in view coordinates of camera\n     * @param {number} y Relative change in view coordinates of camera\n     * @param {number}\n     *            [animationDuration] - an optional parameter that denotes\n     *            the duration of a zoom animation\n     * @param {Boolean} [fixedPath] - if true animation is constrained to\n     *      requested motion, overriding updates that happen during the animation         *\n     * @example     $3Dmol.get('data/4csv.pdb', function(data) {\n    viewer.addModel(data,'pdb');\n    viewer.setStyle({cartoon:{},stick:{}});\n    viewer.zoomTo();\n    viewer.translate(200,50);\n    viewer.rotate(90,'z');\n    viewer.render(callback);\n    });\n     */\n    public translate(x: number, y: number, animationDuration: number = 0, fixedPath: boolean = false) {\n        var dx = x / this.WIDTH;\n        var dy = y / this.HEIGHT;\n        var v = new Vector3(0, 0, -this.CAMERA_Z);\n\n        this.projector.projectVector(v, this.camera);\n        v.x -= dx;\n        v.y -= dy;\n        this.projector.unprojectVector(v, this.camera);\n        v.z = 0;\n\n        var final_position = this.lookingAt.clone().add(v);\n        if (animationDuration > 0) {\n            this.animateMotion(animationDuration, fixedPath,\n                this.modelGroup.position,\n                this.rotationGroup.position.z,\n                this.rotationGroup.quaternion,\n                final_position);\n        } else { //no animation\n            this.lookingAt = final_position;\n            this.camera.lookAt(this.lookingAt);\n            this.show();\n        }\n        return this;\n    };\n\n    /**\n     * Translate current models by x,y screen coordinates\n     * This translates the models relative to the current view. It does\n     * not change the center of rotation.\n     *\n     * @param {number} x Relative change in x screen coordinate\n     * @param {number} y Relative change in y screen coordinate\n     * @param {number}\n     *            [animationDuration] - an optional parameter that denotes\n     *            the duration of a zoom animation\n     * @param {Boolean} [fixedPath] - if true animation is constrained to\n     *      requested motion, overriding updates that happen during the animation         *\n     * @example     $3Dmol.get('data/4csv.pdb', function(data) {\n    viewer.addModel(data,'pdb');\n    viewer.setStyle({cartoon:{},stick:{}});\n    viewer.zoomTo();\n    viewer.translateScene(200,50);\n    viewer.rotate(90,'z'); // will no longer be around model center\n    viewer.render(callback);\n    });\n     */\n    public translateScene(x: number, y: number, animationDuration: number = 0, fixedPath = false) {\n\n        var t = this.screenOffsetToModel(x, y);\n        var final_position = this.modelGroup.position.clone().add(t);\n\n        if (animationDuration > 0) {\n            this.animateMotion(animationDuration, fixedPath,\n                this.modelGroup.position,\n                this.rotationGroup.position.z,\n                this.rotationGroup.quaternion,\n                this.lookingAt);\n        } else { //no animation\n            this.modelGroup.position = final_position;\n            this.show();\n        }\n        return this;\n    };\n\n    /**\n     * Adjust slab to fully enclose selection (default everything).\n     *\n     * @param {AtomSelectionSpec} sel\n     *            Selection specification specifying model and atom\n     *            properties to select. Default: all atoms in viewer\n     */\n    public fitSlab(sel: AtomSelectionSpec) {\n        sel = sel || {};\n        var atoms = this.getAtomsFromSel(sel);\n        var tmp = getExtent(atoms);\n\n        // fit to bounding box\n        var x = tmp[1][0] - tmp[0][0],\n            y = tmp[1][1] - tmp[0][1],\n            z = tmp[1][2] - tmp[0][2];\n\n        var maxD = Math.hypot(x, y, z);\n        if (maxD < 5)\n            maxD = 5;\n\n        // use full bounding box for slab/fog\n        this.slabNear = -maxD / 1.9;\n        this.slabFar = maxD / 2;\n\n        return this;\n    };\n\n    /**\n     * Re-center the viewer around the provided selection (unlike zoomTo, does not zoom).\n     *\n     * @param {AtomSelectionSpec}\n     *            [sel] - Selection specification specifying model and atom\n     *            properties to select. Default: all atoms in viewer\n     * @param {number}\n     *            [animationDuration] - an optional parameter that denotes\n     *            the duration of a zoom animation\n     * @param {Boolean} [fixedPath] - if true animation is constrained to\n     *      requested motion, overriding updates that happen during the animation         *\n     * @example // if the user were to pass the animationDuration value to\n     *           // the function like so viewer.zoomTo({resn:'STI'},1000);\n     *         //   the program would center on resn 'STI' over the course\n     *         //   of 1 second(1000 milleseconds).\n     *  // Reposition to centroid of all atoms of all models in this\n     * //viewer glviewer.center();\n    $3Dmol.get('data/4csv.pdb', function(data) {\n    viewer.addModel(data,'pdb');\n    viewer.setStyle({cartoon:{},stick:{}});\n    viewer.center();\n    viewer.render(callback);\n    });\n     */\n    public center(sel: AtomSelectionSpec = {}, animationDuration: number = 0, fixedPath: boolean = false) {\n        var allatoms, alltmp;\n        var atoms = this.getAtomsFromSel(sel);\n        var tmp = getExtent(atoms);\n\n        if (isEmptyObject(sel)) {\n            //include shapes when zooming to full scene\n            //TODO: figure out a good way to specify shapes as part of a selection\n            this.shapes.forEach((shape) => {\n                if (shape && shape.boundingSphere && shape.boundingSphere.center) {\n                    var c = shape.boundingSphere.center;\n                    var r = shape.boundingSphere.radius;\n                    if (r > 0) {\n                        //make sure full shape is visible\n                        atoms.push(new Vector3(c.x + r, c.y, c.z));\n                        atoms.push(new Vector3(c.x - r, c.y, c.z));\n                        atoms.push(new Vector3(c.x, c.y + r, c.z));\n                        atoms.push(new Vector3(c.x, c.y - r, c.z));\n                        atoms.push(new Vector3(c.x, c.y, c.z + r));\n                        atoms.push(new Vector3(c.x, c.y, c.z - r));\n                    } else {\n                        atoms.push(c);\n                    }\n                }\n            });\n            tmp = getExtent(atoms);\n            allatoms = atoms;\n            alltmp = tmp;\n\n        }\n        else {\n            allatoms = this.getAtomsFromSel({});\n            alltmp = getExtent(allatoms);\n        }\n\n        // use selection for center\n        var center = new Vector3(tmp[2][0], tmp[2][1], tmp[2][2]);\n\n        // but all for bounding box\n        var x = alltmp[1][0] - alltmp[0][0], y = alltmp[1][1] -\n            alltmp[0][1], z = alltmp[1][2] - alltmp[0][2];\n\n        var maxD = Math.hypot(x, y, z);\n        if (maxD < 5)\n            maxD = 5;\n\n        // use full bounding box for slab/fog\n        this.slabNear = -maxD / 1.9;\n        this.slabFar = maxD / 2;\n\n        // for zoom, use selection box\n        x = tmp[1][0] - tmp[0][0];\n        y = tmp[1][1] - tmp[0][1];\n        z = tmp[1][2] - tmp[0][2];\n        maxD = Math.hypot(x, y, z);\n        if (maxD < 5)\n            maxD = 5;\n\n        //find the farthest atom from center to get max distance needed for view\n        var maxDsq = 25;\n        for (var i = 0; i < atoms.length; i++) {\n            if (atoms[i]) {\n                var dsq = center.distanceToSquared(atoms[i] as XYZ);\n                if (dsq > maxDsq)\n                    maxDsq = dsq;\n            }\n        }\n\n        maxD = Math.sqrt(maxDsq) * 2;\n        var finalpos = center.clone().multiplyScalar(-1);\n        if (animationDuration > 0) {\n            this.animateMotion(animationDuration, fixedPath,\n                finalpos,\n                this.rotationGroup.position.z,\n                this.rotationGroup.quaternion,\n                this.lookingAt);\n        } else { //no animation\n            this.modelGroup.position = finalpos;\n            this.show();\n        }\n        return this;\n    };\n\n    /**\n     * Zoom to center of atom selection.  The slab will be set appropriately for\n     * the selection, unless an empty selection is provided, in which case there will be no slab.\n     *\n     * @param {Object}\n     *            [sel] - Selection specification specifying model and atom\n     *            properties to select. Default: all atoms in viewer\n     * @param {number}\n     *            [animationDuration] - an optional parameter that denotes\n     *            the duration of a zoom animation\n     * @param {Boolean} [fixedPath] - if true animation is constrained to\n     *      requested motion, overriding updates that happen during the animation         *\n      * @example\n\n\n          $3Dmol.get('data/1fas.pqr', function(data){\n              viewer.addModel(data, \"pqr\");\n          viewer.zoomTo();\n              $3Dmol.get(\"data/1fas.cube\",function(volumedata){\n                  viewer.addSurface($3Dmol.SurfaceType.VDW, {\n                      opacity:0.85,\n                      voldata: new $3Dmol.VolumeData(volumedata, \"cube\"),\n                      volscheme: new $3Dmol.Gradient.Sinebow($3Dmol.getPropertyRange(viewer.selectedAtoms(),'charge'))\n                  },{});\n\n              viewer.render();\n              });\n            });\n     */\n    public zoomTo(sel: AtomSelectionSpec = {}, animationDuration: number = 0, fixedPath: boolean = false) {\n        let atoms = this.getAtomsFromSel(sel);\n        let atombox = getExtent(atoms);\n        let allbox = atombox;\n\n        if (isEmptyObject(sel)) {\n            //include shapes when zooming to full scene\n            //TODO: figure out a good way to specify shapes as part of a selection\n            let natoms = atoms && atoms.length;\n            this.shapes.forEach((shape) => {\n                if (shape && shape.boundingSphere) {\n                    if (shape.boundingSphere.box) {\n                        let box = shape.boundingSphere.box;\n                        atoms.push(new Vector3(box.min.x, box.min.y, box.min.z));\n                        atoms.push(new Vector3(box.max.x, box.max.y, box.max.z));\n                    } else if (shape.boundingSphere.center) {\n                        var c = shape.boundingSphere.center;\n                        var r = shape.boundingSphere.radius;\n                        if (r > 0) {\n                            //make sure full shape is visible\n                            atoms.push(new Vector3(c.x + r, c.y, c.z));\n                            atoms.push(new Vector3(c.x - r, c.y, c.z));\n                            atoms.push(new Vector3(c.x, c.y + r, c.z));\n                            atoms.push(new Vector3(c.x, c.y - r, c.z));\n                            atoms.push(new Vector3(c.x, c.y, c.z + r));\n                            atoms.push(new Vector3(c.x, c.y, c.z - r));\n                        } else {\n                            atoms.push(c);\n                        }\n                    }\n                }\n            });\n            allbox = getExtent(atoms);\n            if (!natoms) { //if no atoms, use shapes for center\n                for (let i = 0; i < 3; i++) { //center of bounding box\n                    atombox[2][i] = (allbox[0][i] + allbox[1][i]) / 2;\n                }\n            }\n        } else { //include all atoms in slab calculation\n            let allatoms = this.getAtomsFromSel({});\n            allbox = getExtent(allatoms);\n        }\n\n        // use selection for center\n        var center = new Vector3(atombox[2][0], atombox[2][1], atombox[2][2]);\n\n        // but all for bounding box\n        var x = allbox[1][0] - allbox[0][0], y = allbox[1][1]\n            - allbox[0][1], z = allbox[1][2] - allbox[0][2];\n\n        var maxD = Math.hypot(x, y, z);\n        if (maxD < 5)\n            maxD = 5;\n\n        // use full bounding box for slab/fog\n        this.slabNear = -maxD / 1.9;\n        this.slabFar = maxD / 2;\n\n        //if we are selecting everything, have ver permissive slab\n        //can't do \"infinity\" size since this will break orthographic\n        if (Object.keys(sel).length === 0) {\n            this.slabNear = Math.min(-maxD * 2, -50);\n            this.slabFar = Math.max(maxD * 2, 50);\n        }\n\n        // keep at least this much space in view\n        var MAXD = this.config.minimumZoomToDistance || 5;\n        // for zoom, use selection box\n        x = atombox[1][0] - atombox[0][0];\n        y = atombox[1][1] - atombox[0][1];\n        z = atombox[1][2] - atombox[0][2];\n        maxD = Math.hypot(x, y, z);\n        if (maxD < MAXD)\n            maxD = MAXD;\n\n        //find the farthest atom from center to get max distance needed for view\n        var maxDsq = MAXD * MAXD;\n        for (var i = 0; i < atoms.length; i++) {\n            if (atoms[i]) {\n                var dsq = center.distanceToSquared(atoms[i] as XYZ);\n                if (dsq > maxDsq)\n                    maxDsq = dsq;\n            }\n        }\n\n        maxD = Math.sqrt(maxDsq) * 2;\n        var finalpos = center.clone().multiplyScalar(-1);\n        var finalz = -(maxD * 0.5\n            / Math.tan(Math.PI / 180.0 * this.camera.fov / 2) - this.CAMERA_Z);\n\n        finalz = this.adjustZoomToLimits(finalz);\n        if (animationDuration > 0) {\n            this.animateMotion(animationDuration, fixedPath,\n                finalpos,\n                finalz,\n                this.rotationGroup.quaternion,\n                this.lookingAt);\n        } else {\n            this.modelGroup.position = finalpos;\n            this.rotationGroup.position.z = finalz;\n            this.show();\n        }\n        return this;\n\n    };\n\n    /**\n     * Set slab of view (contents outside of slab are clipped).\n     * Must call render to update.\n     *\n     * @param {number} near near clipping plane distance\n     * @param {number} far far clipping plane distance\n     */\n    public setSlab(near: number, far: number) {\n        this.slabNear = near;\n        this.slabFar = far;\n    };\n\n    /**\n     * Get slab of view (contents outside of slab are clipped).\n     *\n     * @return {Object}\n     *      @property {number} near - near clipping plane distance\n     *      @property {number} far - far clipping plane distance\n     */\n    public getSlab() {\n        return { near: this.slabNear, far: this.slabFar };\n    };\n\n    /**\n     * Add label to viewer\n     *\n     * @param {string}\n     *            text - Label text\n     * @param {LabelSpec}\n     *            options - Label style specification\n      @param {AtomSelection}\n     *            sel - Set position of label to center of this selection\n     * @param {boolean} noshow - if true, do not immediately display label - when adding multiple labels this is more efficient\n     * @return {Label}\n     *\n     * @example\n     *  $3Dmol.download(\"pdb:2EJ0\",viewer,{},function(){\n\n              viewer.addLabel(\"Aromatic\", {position: {x:-6.89, y:0.75, z:0.35}, backgroundColor: 0x800080, backgroundOpacity: 0.8});\n              viewer.addLabel(\"Label\",{font:'sans-serif',fontSize:18,fontColor:'white',fontOpacity:1,borderThickness:1.0,\n                                       borderColor:'red',borderOpacity:0.5,backgroundColor:'black',backgroundOpacity:0.5,\n                                       position:{x:50.0,y:0.0,z:0.0},inFront:true,showBackground:true});\n              viewer.setStyle({chain:'A'},{cross:{hidden:true}});\n              viewer.setStyle({chain:'B'},{cross:{hidden:false,\n                                                  linewidth:1.0,\n                                                  colorscheme:'greenCarbon'}});\n              viewer.setStyle({chain:'C'},{cross:{hidden:false,\n                                                  linewidth:1.0,\n                                                  radius:0.5}});\n              viewer.setStyle({chain:'D'},{cross:{hidden:false,\n                                                  linewidth:10.0}});\n              viewer.setStyle({chain:'E'},{cross:{hidden:false,\n                                                  linewidth:1.0,\n                                                  color:'black'}});\n\n              viewer.render();\n\n\n            });\n\n     */\n    public addLabel(text: string, options: LabelSpec = {}, sel?: AtomSelectionSpec, noshow: boolean = false) {\n        if (sel) {\n            var extent = getExtent(this.getAtomsFromSel(sel));\n            options.position = { x: extent[2][0], y: extent[2][1], z: extent[2][2] };\n        }\n        var label = new Label(text, options);\n        label.setContext();\n        this.modelGroup.add(label.sprite);\n        this.labels.push(label);\n\n        if (!noshow) this.show();\n        return label;\n    };\n\n\n\n    /** Add residue labels.  This will generate one label per a\n     * residue within the selected atoms.  The label will be at the\n     * centroid of the atoms and styled according to the passed style.\n     * The label text will be [resn][resi]\n     *\n     * @param {AtomSelectionSpec} sel\n     * @param {AtomStyleSpec} style\n     * @param {boolean} byframe - if true, create labels for every individual frame, not just current\n     *\n     * @example\n         $3Dmol.download(\"mmtf:2ll5\",viewer,{},function(){\n              viewer.setStyle({stick:{radius:0.15},cartoon:{}});\n              viewer.addResLabels({hetflag:false}, {font: 'Arial', fontColor:'black',showBackground:false, screenOffset: {x:0,y:0}});\n              viewer.zoomTo();\n              viewer.render();\n            });\n     */\n    public addResLabels(sel: AtomSelectionSpec, style: LabelSpec, byframe: boolean = false) {\n        let start = this.labels.length;\n        this.applyToModels(\"addResLabels\", sel, this, style, byframe);\n        this.show();\n        return this.labels.slice(start);\n    };\n\n    /** Add property labels.  This will generate one label per a selected\n     * atom at the atom's coordinates with the property value as the label text.\n     *\n     * @param {string} prop - property name\n     * @param {AtomSelectionSpec} sel\n     * @param {AtomStyleSpec} style\n     *\n     * * @example\n         $3Dmol.download(\"cid:5291\",viewer,{},function(){\n              viewer.setStyle({stick: {radius:.2}});\n              viewer.addPropertyLabels(\"index\",{not:{elem:'H'}}, {fontColor:'black',font: 'sans-serif', fontSize: 28, showBackground:false,alignment:'center'});\n              viewer.zoomTo();\n              viewer.render();\n            });\n     */\n    public addPropertyLabels(prop: string, sel: AtomSelectionSpec, style: AtomStyleSpec) {\n        this.applyToModels(\"addPropertyLabels\", prop, sel, this, style);\n        this.show();\n        return this;\n    };\n\n    /**\n     * Remove label from viewer\n     *\n     * @param {Label} label - $3Dmol label\n     *\n     * @example // Remove labels created in\n     $3Dmol.download(\"pdb:2EJ0\",viewer,{},function(){\n              var toremove = viewer.addLabel(\"Aromatic\", {position: {x:-6.89, y:0.75, z:0.35}, backgroundColor: 0x800080, backgroundOpacity: 0.8});\n              viewer.addLabel(\"Label\",{font:'sans-serif',fontSize:18,fontColor:'white',fontOpacity:1,borderThickness:1.0,\n                                       borderColor:'red',borderOpacity:0.5,backgroundColor:'black',backgroundOpacity:0.5,\n                                       position:{x:50.0,y:0.0,z:0.0},inFront:true,showBackground:true});\n              viewer.removeLabel(toremove);\n              viewer.render();\n\n\n            });\n\n     */\n    public removeLabel(label: Label) {\n        //todo: don't do the linear search\n        for (var i = 0; i < this.labels.length; i++) {\n            if (this.labels[i] == label) {\n                this.labels.splice(i, 1);\n                label.dispose();\n                this.modelGroup.remove(label.sprite);\n                break;\n            }\n        }\n        this.show();\n        return this;\n    };\n\n    /**\n     * Remove all labels from viewer\n     *\n     *         @example\n    $3Dmol.download(\"pdb:1ubq\",viewer,{},function(){\n\n           viewer.addResLabels();\n           viewer.setStyle({},{stick:{}});\n           viewer.render( ); //show labels\n\n           viewer.removeAllLabels();\n           viewer.render(); //hide labels\n    });\n     */\n    public removeAllLabels() {\n        for (var i = 0; i < this.labels.length; i++) {\n            if (this.labels[i] && this.labels[i].sprite) {\n                this.modelGroup.remove(this.labels[i].sprite);\n            }\n        }\n        this.labels.splice(0, this.labels.length); //don't overwrite in case linked\n        this.show();\n        return this;\n    };\n\n    // Modify label style\n    /**\n     * Modify existing label's style\n     *\n     * @param {Label} label - $3Dmol label\n     * @param {LabelSpec}\n     *            stylespec - Label style specification\n     * @return {Label}\n     */\n    public setLabelStyle(label: Label, stylespec: LabelSpec) {\n        this.modelGroup.remove(label.sprite);\n        label.dispose();\n        label.stylespec = stylespec;\n        label.setContext();\n        this.modelGroup.add(label.sprite);\n        this.show();\n        return label;\n\n    };\n\n    // Change label text\n    /**\n     * Modify existing label's text\n     *\n     * @param {Label}  label - $3Dmol label\n     * @param {String}\n     *            text - Label text\n     * @return {Label}\n     */\n    public setLabelText(label: Label, text: string) {\n        this.modelGroup.remove(label.sprite);\n        label.dispose();\n        label.text = text;\n        label.setContext();\n        this.modelGroup.add(label.sprite);\n        this.show();\n        return label;\n\n    };\n\n    /**\n     * Add shape object to viewer\n     * @see {GLShape}\n     *\n     * @param {ShapeSpec} shapeSpec - style specification for label\n     * @return {GLShape}\n     */\n    public addShape(shapeSpec: ShapeSpec) {\n        shapeSpec = shapeSpec || {};\n        var shape = new GLShape(shapeSpec);\n        shape.shapePosition = this.shapes.length;\n        this.shapes.push(shape);\n\n        return shape;\n    };\n\n    /**\n     * Remove shape object from viewer\n     *\n     * @param {GLShape} shape - Reference to shape object to remove\n     */\n    public removeShape(shape: GLShape) {\n        if (!shape)\n            return this;\n        shape.removegl(this.modelGroup);\n        delete this.shapes[shape.shapePosition];\n        // clear off back of model array\n        while (this.shapes.length > 0\n            && typeof (this.shapes[this.shapes.length - 1]) === \"undefined\")\n            this.shapes.pop();\n        return this;\n    };\n\n    /**\n     * Remove all shape objects from viewer\n     */\n    public removeAllShapes() {\n        for (var i = 0; i < this.shapes.length; i++) {\n            var shape = this.shapes[i];\n            if (shape) shape.removegl(this.modelGroup);\n        }\n        this.shapes.splice(0, this.shapes.length);\n        return this;\n    };\n\n    //gets the center of the selection\n    private getSelectionCenter(spec: AtomSelectionSpec): XYZ {\n        if (spec.hasOwnProperty(\"x\") && spec.hasOwnProperty(\"y\") && spec.hasOwnProperty(\"z\"))\n            return spec as XYZ;\n        var atoms = this.getAtomsFromSel(spec);\n        if (atoms.length == 0)\n            return { x: 0, y: 0, z: 0 };\n\n        var extent = getExtent(atoms);\n        return { x: extent[0][0] + (extent[1][0] - extent[0][0]) / 2, y: extent[0][1] + (extent[1][1] - extent[0][1]) / 2, z: extent[0][2] + (extent[1][2] - extent[0][2]) / 2 };\n    };\n\n    /**\n     * Create and add sphere shape. This method provides a shorthand\n     * way to create a spherical shape object\n     *\n     * @param {SphereShapeSpec} spec - Sphere shape style specification\n     * @return {GLShape}\n     @example\n\n     viewer.addSphere({center:{x:0,y:0,z:0},radius:10.0,color:'red'});\n\n     viewer.render();\n     */\n    public addSphere(spec: SphereSpec) {\n        spec = spec || {};\n\n        spec.center = this.getSelectionCenter(spec.center);\n\n        var s = new GLShape(spec);\n        s.shapePosition = this.shapes.length;\n        s.addSphere(spec);\n        this.shapes.push(s);\n        s.finalize(); //finalize shape for memory efficiency, assume shape won't be extended\n        return s;\n    };\n\n    /**\n     * Create and add box shape. This method provides a shorthand\n     * way to create a box shape object\n     *\n     * @param {BoxSpec} spec - Box shape style specification\n     * @return {GLShape}\n     @example\n\n     viewer.addLine({color:'red',start:{x:0,y:0,z:0},end:{x:5,y:0,z:0}});\n     viewer.addLine({color:'blue',start:{x:0,y:0,z:0},end:{x:0,y:5,z:0}});\n     viewer.addLine({color:'green',start:{x:0,y:0,z:0},end:{x:0,y:0,z:5}});\n\n     viewer.addBox({center:{x:0,y:0,z:0},dimensions: {w:3,h:4,d:2},color:'magenta'});\n     viewer.zoomTo();\n     viewer.rotate(45, {x:1,y:1,z:1});\n     viewer.render();\n     */\n    public addBox(spec: BoxSpec = {}) {\n\n        if (spec.corner != undefined) {\n            spec.corner = this.getSelectionCenter(spec.corner);\n        }\n        if (spec.center != undefined) {\n            spec.center = this.getSelectionCenter(spec.center);\n        }\n\n        var s = new GLShape(spec);\n        s.shapePosition = this.shapes.length;\n        s.addBox(spec);\n        this.shapes.push(s);\n        s.finalize(); //finalize shape for memory efficiency, assume shape won't be extended\n\n        return s;\n    };\n\n    /**\n     * Create and add arrow shape\n     *\n     * @param {ArrowSpec} spec - Style specification\n     * @return {GLShape}\n     @example\n    $3Dmol.download(\"pdb:4DM7\",viewer,{},function(){\n\n              viewer.setBackgroundColor(0xffffffff);\n              viewer.addArrow({\n                  start: {x:-10.0, y:0.0, z:0.0},\n                  end: {x:0.0, y:-10.0, z:0.0},\n                  radius: 1.0,\n                  radiusRadio:1.0,\n                  mid:1.0,\n                  clickable:true,\n                  callback:function(){\n                      this.color.setHex(0xFF0000FF);\n                      viewer.render( );\n                  }\n              });\n              viewer.render();\n            });\n     */\n    public addArrow(spec: ArrowSpec = {}) {\n\n        spec.start = this.getSelectionCenter(spec.start);\n        spec.end = this.getSelectionCenter(spec.end);\n\n        var s = new GLShape(spec);\n        s.shapePosition = this.shapes.length;\n        s.addArrow(spec);\n        this.shapes.push(s);\n        s.finalize(); //finalize shape for memory efficiency, assume shape won't be extended\n\n        return s;\n    };\n\n    /**\n     * Create and add cylinder shape\n     *\n     * @param {CylinderSpec} spec - Style specification\n     * @return {GLShape}\n\n      @example\n     viewer.setBackgroundColor(0xffffffff);\n          viewer.addCylinder({start:{x:0.0,y:0.0,z:0.0},\n                              end:{x:10.0,y:0.0,z:0.0},\n                              radius:1.0,\n                              fromCap:1,\n                              toCap:2,\n                              color:'red',\n                              hoverable:true,\n                              clickable:true,\n                              callback:function(){ this.color.setHex(0x00FFFF00);viewer.render( );},\n                              hover_callback: function(){ viewer.render( );},\n                              unhover_callback: function(){ this.color.setHex(0xFF000000);viewer.render( );}\n                             });\n          viewer.addCylinder({start:{x:0.0,y:2.0,z:0.0},\n                              end:{x:0.0,y:10.0,z:0.0},\n                              radius:0.5,\n                              fromCap:false,\n                              toCap:true,\n                              color:'teal'});\n          viewer.addCylinder({start:{x:15.0,y:0.0,z:0.0},\n                              end:{x:20.0,y:0.0,z:0.0},\n                              radius:1.0,\n                              color:'black',\n                              fromCap:false,\n                              toCap:false});\n          viewer.render();\n     */\n    public addCylinder(spec: CylinderSpec = {}) {\n\n        spec.start = this.getSelectionCenter(spec.start);\n        spec.end = this.getSelectionCenter(spec.end);\n\n        var s = new GLShape(spec);\n        s.shapePosition = this.shapes.length;\n        if (spec.dashed)\n            s.addDashedCylinder(spec);\n        else\n            s.addCylinder(spec);\n        this.shapes.push(s);\n        s.finalize(); //finalize shape for memory efficiency, assume shape won't be extended\n\n        return s;\n    };\n\n    /**\n     * Create and add Curve shape\n     *\n     * @param {CurveSpec} spec - Style specification\n     * @return {GLShape}\n\n     @example\n          viewer.addCurve({points: [{x:0.0,y:0.0,z:0.0}, {x:5.0,y:3.0,z:0.0}, {x:5.0,y:7.0,z:0.0}, {x:0.0,y:10.0,z:0.0}],\n                              radius:0.5,\n                              smooth: 10,\n                              fromArrow:false,\n                              toArrow: true,\n                              color:'orange',\n                              });\n          viewer.addCurve({points: [{x:-1,y:0.0,z:0.0}, {x:-5.0,y:5.0,z:0.0}, {x:-2,y:10.0,z:0.0}],\n                              radius:1,\n                              fromArrow:true,\n                              toArrow: false,\n                              color:'purple',\n                              });\n          viewer.zoomTo();\n          viewer.render();\n     */\n    public addCurve(spec: CurveSpec = {}) {\n        var s = new GLShape(spec);\n        s.shapePosition = this.shapes.length;\n        s.addCurve(spec);\n        this.shapes.push(s);\n        s.finalize(); //finalize shape for memory efficiency, assume shape won't be extended\n\n        return s;\n    };\n\n\n    /**\n     * Create and add line shape\n     *\n     * @param {LineSpec} spec - Style specification, can specify dashed, dashLength, and gapLength\n     * @return {GLShape}\n     @example\n     $3Dmol.download(\"pdb:2ABJ\",viewer,{},function(){\n\n              viewer.setViewStyle({style:\"outline\"});\n              viewer.setStyle({chain:'A'},{sphere:{hidden:true}});\n              viewer.setStyle({chain:'D'},{sphere:{radius:3.0}});\n              viewer.setStyle({chain:'G'},{sphere:{colorscheme:'greenCarbon'}});\n              viewer.setStyle({chain:'J'},{sphere:{color:'blue'}});\n              viewer.addLine({dashed:true,start:{x:0,y:0,z:0},end:{x:100,y:100,z:100}});\n              viewer.render();\n          });\n\n     */\n    public addLine(spec: LineSpec = {}) {\n\n        spec.start = this.getSelectionCenter(spec.start);\n        spec.end = this.getSelectionCenter(spec.end);\n\n        spec.wireframe = true;\n        var s = new GLShape(spec);\n        s.shapePosition = this.shapes.length;\n        if (spec.dashed)\n            s = this.addLineDashed(spec, s);\n        else\n            s.addLine(spec);\n        this.shapes.push(s);\n        s.finalize(); //finalize shape for memory efficiency, assume shape won't be extended\n\n        return s;\n    };\n\n\n    /**\n     * Create and add unit cell visualization.\n     *\n     * @param {GLModel|number} model - Model with unit cell information (e.g., pdb derived).  If omitted uses most recently added model.\n     * @param {UnitCellStyleSpec} spec - visualization style\n       @example\n\n            $3Dmol.get('data/1jpy.cif', function(data) {\n              let m = viewer.addModel(data);\n              viewer.addUnitCell(m, {box:{color:'purple'},alabel:'X',blabel:'Y',clabel:'Z',alabelstyle: {fontColor: 'black',backgroundColor:'white',inFront:true,fontSize:40},astyle:{color:'darkred', radius:5,midpos: -10}});\n              viewer.zoomTo();\n              viewer.render();\n    });\n     */\n    public addUnitCell(model?: GLModel | number, spec?: UnitCellStyleSpec) {\n        model = this.getModel(model);\n        spec = spec || { alabel: 'a', blabel: 'b', clabel: 'c' };\n\n        spec.box = spec.box || {};\n        spec.astyle = spec.astyle || { color: 'red', radius: 0.1, midpos: -1 };\n        spec.bstyle = spec.bstyle || { color: 'green', radius: 0.1, midpos: -1 };\n        spec.cstyle = spec.cstyle || { color: 'blue', radius: 0.1, midpos: -1 };\n        spec.alabelstyle = spec.alabelstyle || { fontColor: 'red', showBackground: false, alignment: 'center', inFront: false };\n        spec.blabelstyle = spec.blabelstyle || { fontColor: 'green', showBackground: false, alignment: 'center', inFront: false };\n        spec.clabelstyle = spec.clabelstyle || { fontColor: 'blue', showBackground: false, alignment: 'center', inFront: false };\n\n        //clear any previous box\n        if (model.unitCellObjects) {\n            this.removeUnitCell(model);\n        }\n        model.unitCellObjects = { shapes: [], labels: [] };\n        //calculate points\n        var data = model.getCrystData();\n        var matrix = null;\n        if (data) {\n\n            if (data.matrix) {\n                matrix = data.matrix;\n            } else {\n                var a = data.a, b = data.b, c = data.c, alpha = data.alpha, beta = data.beta, gamma = data.gamma;\n                alpha = alpha * Math.PI / 180.0;\n                beta = beta * Math.PI / 180.0;\n                gamma = gamma * Math.PI / 180.0;\n\n                var u, v, w;\n\n                u = Math.cos(beta);\n                v = (Math.cos(alpha) - Math.cos(beta) * Math.cos(gamma)) / Math.sin(gamma);\n                w = Math.sqrt(Math.max(0, 1 - u * u - v * v));\n\n                matrix = new Matrix3(a, b * Math.cos(gamma), c * u,\n                    0, b * Math.sin(gamma), c * v,\n                    0, 0, c * w);\n            }\n\n            var points = [new Vector3(0, 0, 0),\n            new Vector3(1, 0, 0),\n            new Vector3(0, 1, 0),\n            new Vector3(0, 0, 1),\n            new Vector3(1, 1, 0),\n            new Vector3(0, 1, 1),\n            new Vector3(1, 0, 1),\n            new Vector3(1, 1, 1)];\n\n            // console.log('Matrix4', data.matrix4, data.matrix);\n            if (data.matrix4) {\n                for (let i = 0; i < points.length; i++) {\n                    if (data.size) points[i].multiplyVectors(points[i], data.size); //matrix is for unit vectors, not whole box\n                    points[i] = points[i].applyMatrix4(data.matrix4);\n                }\n            } else {\n                for (let i = 0; i < points.length; i++) {\n                    points[i] = points[i].applyMatrix3(matrix);\n                }\n            }\n\n            //draw box\n            if (spec.box && !spec.box.hidden) {\n                spec.box.wireframe = true;\n                var s = new GLShape(spec.box);\n                s.shapePosition = this.shapes.length;\n\n                s.addLine({ start: points[0], end: points[1] });\n                s.addLine({ start: points[0], end: points[2] });\n                s.addLine({ start: points[1], end: points[4] });\n                s.addLine({ start: points[2], end: points[4] });\n\n                s.addLine({ start: points[0], end: points[3] });\n                s.addLine({ start: points[3], end: points[5] });\n                s.addLine({ start: points[2], end: points[5] });\n\n                s.addLine({ start: points[1], end: points[6] });\n                s.addLine({ start: points[4], end: points[7] });\n                s.addLine({ start: points[6], end: points[7] });\n\n                s.addLine({ start: points[3], end: points[6] });\n                s.addLine({ start: points[5], end: points[7] });\n\n                this.shapes.push(s);\n                model.unitCellObjects.shapes.push(s);\n                s.finalize(); //finalize shape for memory efficiency, assume shape won't be extended\n            }\n\n            //draw arrows\n            if (!spec.astyle.hidden) {\n                spec.astyle.start = points[0];\n                spec.astyle.end = points[1];\n                let arrow = this.addArrow(spec.astyle);\n                model.unitCellObjects.shapes.push(arrow);\n            }\n\n            if (!spec.bstyle.hidden) {\n                spec.bstyle.start = points[0];\n                spec.bstyle.end = points[2];\n                let arrow = this.addArrow(spec.bstyle);\n                model.unitCellObjects.shapes.push(arrow);\n            }\n\n            if (!spec.cstyle.hidden) {\n                spec.cstyle.start = points[0];\n                spec.cstyle.end = points[3];\n                let arrow = this.addArrow(spec.cstyle);\n                model.unitCellObjects.shapes.push(arrow);\n            }\n\n            if (spec.alabel) {\n                spec.alabelstyle.position = points[1];\n                let label = this.addLabel(spec.alabel, spec.alabelstyle);\n                model.unitCellObjects.labels.push(label);\n\n            }\n            if (spec.blabel) {\n                spec.blabelstyle.position = points[2];\n                let label = this.addLabel(spec.blabel, spec.blabelstyle);\n                model.unitCellObjects.labels.push(label);\n            }\n            if (spec.clabel) {\n                spec.clabelstyle.position = points[3];\n                let label = this.addLabel(spec.clabel, spec.clabelstyle);\n                model.unitCellObjects.labels.push(label);\n            }\n\n        }\n\n    };\n\n    /**\n    * Remove unit cell visualization from model.\n    *\n    * @param {GLModel|number} model - Model with unit cell information (e.g., pdb derived).  If omitted uses most recently added model.\n      @example\n           $3Dmol.get('data/icsd_200866.cif', function(data) {\n             let m = viewer.addModel(data);\n             viewer.setStyle({sphere:{}})\n             viewer.addUnitCell();\n             viewer.zoomTo();\n             viewer.removeUnitCell();\n             viewer.render();\n       });\n    */\n    public removeUnitCell(model?: GLModel | number) {\n        model = this.getModel(model);\n        if (model.unitCellObjects) {\n            let viewer = this;\n            model.unitCellObjects.shapes.forEach(function (s) { viewer.removeShape(s); });\n            model.unitCellObjects.labels.forEach(function (l) { viewer.removeLabel(l); });\n        }\n        delete model.unitCellObjects;\n    };\n\n    /**\n    * Replicate atoms in model to form a super cell of the specified dimensions.\n    * Original cell will be centered as much as possible.\n    *\n    * @param {integer} A - number of times to replicate cell in X dimension.\n    * @param {integer} B - number of times to replicate cell in Y dimension.  If absent, X value is used.\n    * @param {integer} C - number of times to replicate cell in Z dimension.  If absent, Y value is used.\n    * @param {GLModel} model - Model with unit cell information (e.g., pdb derived).  If omitted uses most recently added model.\n    * @param {boolean} addBonds - Create bonds between unit cells based on distances.\n    * @param {boolean} prune - Keep only atoms that are within the original unit cell (i.e., on edges).  Alternatively, call replicateUnitCell(1).\n      @example\n           $3Dmol.get('data/icsd_200866.cif', function(data) {\n             let m = viewer.addModel(data);\n             viewer.setStyle({sphere:{scale:.25}})\n             viewer.addUnitCell();\n             viewer.zoomTo();\n             viewer.replicateUnitCell(3,2,1,m);\n             viewer.render();\n       });\n    */\n    public replicateUnitCell(A: number = 3, B: number = A, C: number = B, model?: GLModel | number, addBonds?: boolean, prune?) {\n        model = this.getModel(model);\n        let cryst = model.getCrystData();\n        if (cryst) {\n            const atoms = model.selectedAtoms({});\n            const matrix = cryst.matrix;\n            let makeoff = function (I) {\n                //alternate around zero: 1,-1,2,-2...\n                if (I % 2 == 0) return -I / 2;\n                else return Math.ceil(I / 2);\n            };\n\n            if (A <= 1 && B <= 1 && C <= 1) {\n                prune = true;\n                A = B = C = 3;\n            }\n\n            let omitPosition = function (x, y, z) { return false; };\n            if (prune) {\n                const invmatrix = new Matrix3().getInverse3(matrix);\n                omitPosition = function (x, y, z) {\n                    //must reside within unit cell\n                    let pos = new Vector3(x, y, z).applyMatrix3(invmatrix);\n                    if (pos.x > -0.0001 && pos.x < 1.0001 &&\n                        pos.y > -0.0001 && pos.y < 1.0001 &&\n                        pos.z > -0.0001 && pos.z < 1.0001) {\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }\n\n            }\n\n            for (let i = 0; i < A; i++) {\n                for (let j = 0; j < B; j++) {\n                    for (let k = 0; k < C; k++) {\n                        if (i == 0 && j == 0 && k == 0) continue; //actual unit cell\n                        let offset = new Vector3(makeoff(i), makeoff(j), makeoff(k));\n                        offset.applyMatrix3(matrix);\n\n                        let newatoms = [];\n                        for (let a = 0; a < atoms.length; a++) {\n                            let newx = atoms[a].x + offset.x,\n                                newy = atoms[a].y + offset.y,\n                                newz = atoms[a].z + offset.z;\n                            if (omitPosition(newx, newy, newz)) {\n                                continue;\n                            }\n                            let newAtom: any = {};\n                            for (let p in atoms[a]) {\n                                newAtom[p] = atoms[a][p];\n                            }\n                            newAtom.x = newx;\n                            newAtom.y = newy;\n                            newAtom.z = newz;\n                            newatoms.push(newAtom);\n                        }\n                        model.addAtoms(newatoms);\n                    }\n                }\n            }\n\n            if (addBonds) {\n                model.assignBonds();\n            }\n        }\n    };\n\n    /** Add dashed line to shape */\n    public addLineDashed(spec: CylinderSpec, s: GLShape) {\n        spec.dashLength = spec.dashLength || 0.5;\n        spec.gapLength = spec.gapLength || 0.5;\n\n        var p1: Vector3;\n        if (!spec.start) {\n            p1 = new Vector3(0, 0, 0);\n        } else {\n            p1 = new Vector3(spec.start.x || 0,\n                spec.start.y || 0, spec.start.z || 0);\n        }\n\n        var p2: Vector3;\n        if (!spec.end) p2 = new Vector3(0, 0, 0);\n        else p2 = new Vector3(spec.end.x, spec.end.y || 0, spec.end.z || 0);\n\n        var dir = new Vector3();\n        var dash = new Vector3();\n        var gap = new Vector3();\n        var length, dashAmt, gapAmt;\n        var temp = p1.clone();\n        var drawn = 0;\n\n        dir.subVectors(p2, p1);\n        length = dir.length();\n        dir.normalize();\n        dash = dir.clone();\n        gap = dir.clone();\n        dash.multiplyScalar(spec.dashLength);\n        gap.multiplyScalar(spec.gapLength);\n        dashAmt = dash.length();\n        gapAmt = gap.length();\n\n        while (drawn < length) {\n            if ((drawn + dashAmt) > length) {\n                spec.start = p1;\n                spec.end = p2;\n                s.addLine(spec);\n                break;\n            }\n            temp.addVectors(p1, dash);\n            spec.start = p1;\n            spec.end = temp;\n            s.addLine(spec);\n            p1 = temp.clone();\n            drawn += dashAmt;\n\n            temp.addVectors(p1, gap);\n            p1 = temp.clone();\n            drawn += gapAmt;\n        }\n        s.finalize(); //finalize shape for memory efficiency, assume shape won't be extended\n\n        return s;\n    }\n\n    /**\n     * Add custom shape component from user supplied function\n     *\n     * @param {CustomSpec} spec - Style specification\n     * @return {GLShape}\n     @example\n     function triangle(viewer) {\n        var vertices = [];\n        var normals = [];\n        var colors = [];\n        var r = 20;\n        //triangle\n        vertices.push(new $3Dmol.Vector3(0,0,0));\n        vertices.push(new $3Dmol.Vector3(r,0,0));\n        vertices.push(new $3Dmol.Vector3(0,r,0));\n\n        normals.push(new $3Dmol.Vector3(0,0,1));\n        normals.push(new $3Dmol.Vector3(0,0,1));\n        normals.push(new $3Dmol.Vector3(0,0,1));\n\n        colors.push({r:1,g:0,b:0});\n        colors.push({r:0,g:1,b:0});\n        colors.push({r:0,g:0,b:1});\n\n        var faces = [ 0,1,2 ];\n\n        var spec = {vertexArr:vertices, normalArr: normals, faceArr:faces,color:colors};\n        viewer.addCustom(spec);\n    }\n    triangle(viewer);\n    viewer.render();\n     */\n    public addCustom(spec: CustomShapeSpec) {\n        spec = spec || {};\n        var s = new GLShape(spec);\n        s.shapePosition = this.shapes.length;\n        s.addCustom(spec);\n        this.shapes.push(s);\n        s.finalize(); //finalize shape for memory efficiency, assume shape won't be extended\n\n        return s;\n    };\n\n    /**\n     * Construct isosurface from volumetric data in gaussian cube format\n     * @param {String} data - Input file contents\n     * @param {String} format - Input file format\n     * @param {VolumetricRendererSpec|IsoSurfaceSpec} spec - Shape style specification\n     * @return {GLShape}\n     *\n     * @example\n\n\n    $3Dmol.get('data/bohr.cube', function(data) {\n\n    viewer.addVolumetricData(data, \"cube\", {isoval: -0.01, color: \"red\", opacity: 0.95});\n    viewer.setStyle({cartoon:{},stick:{}});\n    viewer.zoomTo();\n    viewer.render();\n    });\n\n\n     */\n    public addVolumetricData(data, format: string, spec: VolumetricRendererSpec | IsoSurfaceSpec = {}) {\n\n        var voldata = new VolumeData(data, format);\n        if (spec.hasOwnProperty('transferfn')) { //volumetric rendering\n            return this.addVolumetricRender(voldata, spec as VolumetricRendererSpec);\n        } else {\n            return this.addIsosurface(voldata, spec as IsoSurfaceSpec);\n        }\n    };\n\n    /**\n     * Construct isosurface from volumetric data.  This is more flexible\n    * than addVolumetricData, but can not be used with py3Dmol.\n     * @param {VolumeData} data - volumetric data\n     * @param {IsoSurfaceSpec} spec - Shape style specification\n     * @return {GLShape}\n     *\n     @example\n     $3Dmol.get('../test_structs/benzene-homo.cube', function(data){\n              var voldata = new $3Dmol.VolumeData(data, \"cube\");\n              viewer.addIsosurface(voldata, {isoval: 0.01,\n                                             color: \"blue\"});\n              viewer.addIsosurface(voldata, {isoval: -0.01,\n                                             color: \"red\"});\n              viewer.zoomTo();\n              viewer.render();\n            });\n     */\n    public addIsosurface(data, spec: IsoSurfaceSpec = {}, callback?) {\n        var s = new GLShape(spec);\n        s.shapePosition = this.shapes.length;\n        s.addIsosurface(data, spec, callback, this);\n        this.shapes.push(s);\n        return s;\n    };\n\n    /**\n     * Create volumetric renderer for volumetricData\n     * @param {VolumeData} data - volumetric data\n     * @param {VolumetricRenderSpec} spec - specification of volumetric render\n     *\n     * @return {GLShape}\n     *\n     */\n    public addVolumetricRender(data, spec: VolumetricRendererSpec) {\n        spec = spec || {};\n        var s = new GLVolumetricRender(data, spec, this);\n        s.shapePosition = this.shapes.length;\n        this.shapes.push(s);\n        return s;\n    };\n\n    /**\n     * Return true if volumetric rendering is supported (WebGL 2.0 required)\n     *\n     * @return {boolean}\n     */\n    public hasVolumetricRender() {\n        return this.renderer.supportsVolumetric();\n    };\n\n    /**\n     * Enable/disable fog for content far from the camera\n     *\n     * @param {boolean} fog whether to enable or disable the fog\n     */\n    public enableFog(fog: boolean) {\n        if (fog) {\n            this.scene.fog = new Fog(this.bgColor, 100, 200);\n        } else {\n            this.config.disableFog = true;\n            this.show();\n        }\n    };\n\n    /**\n     * Sets the atomlists of all models in the viewer to specified frame.\n     * Shapes and labels can also be displayed by frame.\n     * Sets to last frame if framenum out of range\n     *\n     * @param {number} framenum - fame index to use, starts at zero\n     * @return {Promise}\n     */\n    public setFrame(framenum: number) {\n        this.viewer_frame = framenum;\n        let viewer = this;\n        return new Promise<void>(function (resolve) {\n            var modelMap = viewer.models.map(function (model) {\n                return model.setFrame(framenum, viewer);\n            });\n            Promise.all(modelMap)\n                .then(function () { resolve(); });\n        });\n    };\n\n    /**\n     * Gets the current viewer frame.\n     *\n     */\n    public getFrame() {\n        return this.viewer_frame;\n    };\n\n    /**\n     * Returns the number of frames that the model with the most frames in the viewer has\n     *\n     * @return {number}\n     */\n    public getNumFrames() {\n        var mostFrames = 0;\n        for (let i = 0; i < this.models.length; i++) {\n            if (this.models[i].getNumFrames() > mostFrames) {\n                mostFrames = this.models[i].getNumFrames();\n            }\n        }\n        for (let i = 0; i < this.shapes.length; i++) {\n            if (this.shapes[i].frame && this.shapes[i].frame >= mostFrames) {\n                mostFrames = this.shapes[i].frame + 1;\n            }\n        }\n        for (let i = 0; i < this.labels.length; i++) {\n            if (this.labels[i].frame && this.labels[i].frame >= mostFrames) {\n                mostFrames = this.labels[i].frame + 1;\n            }\n        }\n        return mostFrames;\n    };\n\n\n    /**\n     * Animate all models in viewer from their respective frames\n     * @param {Object} options - can specify interval (speed of animation), loop (direction\n     * of looping, 'backward', 'forward' or 'backAndForth'), step interval between frames ('step'), startFrame, and reps (numer of repetitions, 0 indicates infinite loop)\n     *\n     */\n\n    public animate(options) {\n        this.incAnim();\n        var interval = 100;\n        var loop = \"forward\";\n        var reps = Infinity;\n        options = options || {};\n        if (options.interval) {\n            interval = options.interval;\n        }\n        if (options.loop) {\n            loop = options.loop;\n        }\n        if (options.reps) {\n            reps = options.reps;\n        }\n        var mostFrames = this.getNumFrames();\n        var self = this;\n        var currFrame = 0;\n        if (options.startFrame) {\n            currFrame = options.startFrame % mostFrames;\n        }\n        var inc = 1;\n        if (options.step) {\n            inc = options.step;\n            reps /= inc;\n        }\n        var displayCount = 0;\n        var displayMax = mostFrames * reps;\n        var time = new Date();\n        var resolve, timer;\n        var display = function (direction) {\n            time = new Date();\n            if (direction == \"forward\") {\n                self.setFrame(currFrame)\n                    .then(function () {\n                        currFrame = (currFrame + inc) % mostFrames;\n                        resolve();\n                    });\n            }\n            else if (direction == \"backward\") {\n                self.setFrame((mostFrames - 1) - currFrame)\n                    .then(function () {\n                        currFrame = (currFrame + inc) % mostFrames;\n                        resolve();\n                    });\n            }\n            else { //back and forth\n                self.setFrame(currFrame)\n                    .then(function () {\n                        currFrame += inc;\n                        inc *= (((currFrame % (mostFrames - 1)) == 0) ? -1 : 1);\n                        resolve();\n                    });\n            }\n        };\n\n        resolve = function () {\n            self.render();\n            if (!self.getCanvas().isConnected) {\n                //we no longer exist as part of the DOM\n                self.stopAnimate();\n            }\n            else if (++displayCount >= displayMax || !self.isAnimated()) {\n                timer.cancel();\n                self.animationTimers.delete(timer);\n                self.decAnim();\n            }\n            else {\n                var newInterval = interval - (new Date().getTime() - time.getTime());\n                newInterval = (newInterval > 0) ? newInterval : 0;\n                self.animationTimers.delete(timer);\n                timer = new PausableTimer(display, newInterval, loop);\n                self.animationTimers.add(timer);\n            }\n        };\n\n        timer = new PausableTimer(display, 0, loop);\n        this.animationTimers.add(timer);\n        return this;\n    };\n\n    /**\n     * Stop animation of all models in viewer\n     */\n    public stopAnimate() {\n        this.animated = 0;\n        this.animationTimers.forEach(function (timer: PausableTimer) { timer.cancel(); });\n        this.animationTimers = new Set();\n        return this;\n    };\n\n    /**\n     * Pause animation of all models in viewer\n     */\n    public pauseAnimate() {\n        this.animationTimers.forEach(function (timer) { timer.pause(); });\n        return this;\n    };\n\n    /**\n     * Resume animation of all models in viewer\n     */\n    public resumeAnimate() {\n        this.animationTimers.forEach(function (timer) { timer.resume(); });\n        return this;\n    };\n\n\n    /**\n     * Return true if viewer is currently being animated, false otherwise\n     * @return {boolean}\n     */\n    public isAnimated() {\n        return this.animated > 0;\n    };\n\n\n    //setup options dict\n    private getModelOpt(options) {\n        if (options && !options.defaultcolors) {\n            options.defaultcolors = this.defaultcolors;\n            options.cartoonQuality = options.cartoonQuality || this.config.cartoonQuality;\n        } else if (typeof (options) === 'undefined') {\n            options = { defaultcolors: this.defaultcolors, cartoonQuality: this.config.cartoonQuality };\n        }\n        return options;\n    }\n    /**\n     * Create and add model to viewer, given molecular data and its format\n     *\n     * @param {string} data - Input data\n     * @param {string} format - Input format ('pdb', 'sdf', 'xyz', 'pqr', or 'mol2')\n     * @param {ParserOptionsSpec} options - format dependent options. Attributes depend on the input file format.\n     * @example\n\n\n          viewer.setViewStyle({style:\"outline\"});\n          $3Dmol.get('data/1fas.pqr', function(data){\n              viewer.addModel(data, \"pqr\");\n              $3Dmol.get(\"data/1fas.cube\",function(volumedata){\n                  viewer.addSurface($3Dmol.SurfaceType.VDW, {opacity:0.85,voldata: new $3Dmol.VolumeData(volumedata, \"cube\"), volscheme: new $3Dmol.Gradient.RWB(-10,10)},{});\n\n              viewer.render();\n              });\n              viewer.zoomTo();\n          });\n     *\n     * @return {GLModel}\n     */\n    public addModel(data?, format = \"\", options?) {\n        options = this.getModelOpt(options);\n\n        var m = new GLModel(this.models.length, options);\n        m.addMolData(data, format, options);\n        this.models.push(m);\n\n        return m;\n    };\n\n    /**\n     * Given multimodel file and its format, add atom data to the viewer as separate models\n     * and return list of these models\n     *\n     * @param {string} data - Input data\n     * @param {string} format - Input format (see {@link FileFormats})\n     * @return {Array<GLModel>}\n     */\n    public addModels(data, format: string, options?) {\n        options = this.getModelOpt(options);\n        options.multimodel = true;\n        options.frames = true;\n\n        var modelatoms = GLModel.parseMolData(data, format, options);\n\n        for (var i = 0; i < modelatoms.length; i++) {\n            var newModel = new GLModel(this.models.length, options);\n            newModel.setAtomDefaults(modelatoms[i]);\n            newModel.addFrame(modelatoms[i]);\n            newModel.setFrame(0);\n            if (modelatoms.modelData)\n                newModel.setModelData(modelatoms.modelData[i]);\n            newModel.setDontDuplicateAtoms(!options.duplicateAssemblyAtoms);\n            this.models.push(newModel);\n        }\n\n        return this.models;\n    };\n\n    /**\n     * Create and add model to viewer. Given multimodel file and its format,\n     * different atomlists are stored in model's frame\n     * property and model's atoms are set to the 0th frame\n     *\n     * @param {string} data - Input data\n     * @param {string} format - Input format (see {@link FileFormats})\n     * @return {GLModel}\n     *\n     * @example\n            $3Dmol.get('../test_structs/multiple2.xyz', function(data){\n              viewer.addModelsAsFrames(data, \"xyz\");\n              viewer.animate({loop: \"forward\",reps: 1});\n              viewer.setStyle({stick:{colorscheme:'magentaCarbon'}});\n              viewer.zoomTo();\n              viewer.render();\n          });\n     */\n    public addModelsAsFrames(data, format: string, options?) {\n        options = this.getModelOpt(options);\n        options.multimodel = true;\n        options.frames = true;\n        var m = new GLModel(this.models.length, options);\n        m.addMolData(data, format, options);\n        this.models.push(m);\n\n        return m;\n    };\n\n    /**\n     * Create and add model to viewer. Given multimodel file and its format,\n     * all atoms are added to one model\n     *\n     * @param {string} data - Input data\n     * @param {string} format - Input format (see {@link FileFormats})\n     * @return {GLModel}\n     @example\n\n\n          $3Dmol.get('../test_structs/multiple.sdf', function(data){\n              viewer.addAsOneMolecule(data, \"sdf\");\n              viewer.zoomTo();\n              viewer.render();\n          });\n     */\n    public addAsOneMolecule(data, format: string, options?) {\n        options = this.getModelOpt(options);\n        options.multimodel = true;\n        options.onemol = true;\n        var m = new GLModel(this.models.length, options);\n        m.addMolData(data, format, options);\n        this.models.push(m);\n\n        return m;\n    };\n\n\n    /**\n     * Delete specified model from viewer\n     *\n     * @param {GLModel|number} model\n     */\n    public removeModel(model?: GLModel | number) {\n        model = this.getModel(model);\n        if (!model)\n            return;\n        model.removegl(this.modelGroup);\n        delete this.models[model.getID()];\n        // clear off back of model array\n        while (this.models.length > 0\n            && typeof (this.models[this.models.length - 1]) === \"undefined\")\n            this.models.pop();\n        return this;\n    };\n\n    /**\n     * Delete all existing models\n     */\n    public removeAllModels() {\n        for (var i = 0; i < this.models.length; i++) {\n            var model = this.models[i];\n            if (model) model.removegl(this.modelGroup);\n\n        }\n        this.models.splice(0, this.models.length); //don't simply overwrite array in case linked\n        return this;\n    };\n\n    /**\n     * Export one or all of the loaded models into ChemDoodle compatible JSON.\n     * @param {boolean} includeStyles - Whether or not to include style information.\n     * @param {number} modelID - Optional parameter for which model to export. If left out, export all of them.\n     * @return {string}\n     */\n    public exportJSON(includeStyles: boolean, modelID: number) {\n        var object: any = {};\n        if (modelID === undefined) {\n            object.m = this.models.map(function (model) {\n                return model.toCDObject(includeStyles);\n            });\n        } else {\n            object.m = [this.models[modelID].toCDObject()];\n        }\n        return JSON.stringify(object);\n    };\n\n    /** return a VRML string representation of the scene.  Include VRML header information\n     * @return VRML\n     */\n    public exportVRML() {\n        var savedmodelGroup = this.modelGroup;\n        this.applyToModels(\"removegl\", this.modelGroup); //cleanup\n        this.modelGroup = new Object3D();\n        //rendering with plain mesh\n        this.render(null, { supportsImposters: false, supportsAIA: false, regen: true });\n        var ret = '#VRML V2.0 utf8\\n' + this.modelGroup.vrml() + '\\n';\n        this.applyToModels(\"removegl\", this.modelGroup); //cleanup\n        this.modelGroup = savedmodelGroup;\n        return ret;\n    };\n\n    /**\n     * Create a new model from atoms specified by sel.\n     * If extract, removes selected atoms from existing models\n     *\n     * @param {AtomSelectionSpec} sel - Atom selection specification\n     * @param {boolean=} extract - If true, remove selected atoms from existing models\n     * @return {GLModel}\n     */\n    public createModelFrom(sel: AtomSelectionSpec, extract: boolean = false) {\n        var m = new GLModel(this.models.length, this.defaultcolors);\n        for (var i = 0; i < this.models.length; i++) {\n            if (this.models[i]) {\n                var atoms = this.models[i].selectedAtoms(sel);\n                m.addAtoms(atoms);\n                if (extract)\n                    this.models[i].removeAtoms(atoms);\n            }\n        }\n        this.models.push(m);\n        return m;\n    };\n\n    private applyToModels(func: string, sel: any, value1?, value2?, value3?, value4?, value5?) {\n\n        //apply func to all models that are selected by sel with value1 and 2\n        //sel might not be a selection, in which case getModelList returns everything\n        var ms = this.getModelList(sel);\n        for (var i = 0; i < ms.length; i++) {\n            ms[i][func](sel, value1, value2, value3, value4, value5);\n        }\n    }\n\n    /**\n     * Set style properties to all selected atoms\n     *\n     * @param {AtomSelectionSpec} sel - Atom selection specification.  Can be omitted to select all.\n     * @param {AtomStyleSpec} style - Style spec to apply to specified atoms\n     *\n     * @example\n     viewer.setBackgroundColor(0xffffffff);\n    $3Dmol.download('pdb:5IRE',viewer,{doAssembly: false},function(m) {\n    m.setStyle({chain:'A'},{'cartoon':{color:'spectrum'}});\n    m.setStyle({chain:'C'},{'cartoon':{style:'trace',color:'blue'}});\n    m.setStyle({chain:'E'},{'cartoon':{tubes:true,arrows:true,color:'green',opacity:0.75}});\n    m.setStyle({chain:'B'},{'cartoon':{color:'red',opacity:0.5}});\n    m.setStyle({chain:'D'},{'cartoon':{style:'trace',color:'grey',opacity:0.75}});\n    m.setStyle({chain:'F'},{'cartoon':{arrows:true,color:'white'}});\n    // viewer.addStyle({chain:'B'},{line:{}});\n    viewer.zoomTo();\n    viewer.render();\n    });\n     */\n    public setStyle(sel: AtomSelectionSpec, style: AtomStyleSpec);\n    public setStyle(sel: AtomStyleSpec);\n    public setStyle(sel: unknown, style?: unknown) {\n        if (typeof (style) === 'undefined') {\n            //if a single argument is provided, assume it is a style and select all\n            style = sel as AtomStyleSpec;\n            sel = {};\n        }\n\n        this.applyToModels(\"setStyle\", sel, style, false);\n        return this;\n    };\n\n    /**\n     * Add style properties to all selected atoms\n     *\n     * @param {AtomSelectionSpec} sel - Atom selection specification.  Can be omitted to select all\n     * @param {AtomStyleSpec} style - style spec to add to specified atoms\n     @example\n\n    $3Dmol.download('pdb:5IRE',viewer,{doAssembly: false},function(m) {\n    viewer.setStyle({cartoon:{}});\n    //keep cartoon style, but show thick sticks for chain A\n    viewer.addStyle({chain:'A'},{stick:{radius:.5,colorscheme:\"magentaCarbon\"}});\n    viewer.zoomTo();\n    viewer.render();\n    });\n     */\n    public addStyle(sel: AtomSelectionSpec, style: AtomStyleSpec);\n    public addStyle(sel: AtomStyleSpec);\n    public addStyle(sel: unknown, style?: unknown) {\n        if (typeof (style) === 'undefined') {\n            //if a single argument is provided, assume it is a style and select all\n            style = sel;\n            sel = {};\n        }\n        this.applyToModels(\"setStyle\", sel, style, true);\n        return this;\n    };\n\n\n    /**\n     * Set click-handling properties to all selected atoms. *Important*: render must be called for this to take effect.\n     *\n     * @param {AtomSelectionSpec} sel - atom selection to apply clickable settings to\n     * @param {boolean} clickable - whether click-handling is enabled for the selection\n     * @param {function} callback - function called when an atom in the selection is clicked. The function is passed\n     * the selected (foremost) object, the viewer, the triggering event, the associated container, and a list\n     * of all intersecting objects with their distances from the viewer.\n     *\n     * @example\n        $3Dmol.download(\"cid:307900\",viewer,{},function(){\n\n               viewer.setStyle({},{sphere:{}});\n               viewer.setClickable({},true,function(atom,viewer,event,container) {\n                   viewer.addLabel(atom.resn+\":\"+atom.atom,{position: atom, backgroundColor: 'darkgreen', backgroundOpacity: 0.8});\n               });\n               viewer.render();\n    });\n     */\n    public setClickable(sel: AtomSelectionSpec, clickable: boolean, callback) {\n        this.applyToModels(\"setClickable\", sel, clickable, callback);\n        return this;\n    };\n    /** Set hoverable and callback of selected atoms\n     *\n     * @param {AtomSelectionSpec} sel - atom selection to apply hoverable settings to\n     * @param {boolean} hoverable - whether hover-handling is enabled for the selection\n     * @param {function} hover_callback - function called when an atom in the selection is hovered over.  The function has the same signature as a click handler.\n     * @param {function} unhover_callback - function called when the mouse moves out of the hover area\n    @example\n    $3Dmol.download(\"pdb:1ubq\",viewer,{},function(){\n\n           viewer.setHoverable({},true,function(atom,viewer,event,container) {\n               if(!atom.label) {\n                atom.label = viewer.addLabel(atom.resn+\":\"+atom.atom,{position: atom, backgroundColor: 'mintcream', fontColor:'black'});\n               }\n           },\n           function(atom) {\n               if(atom.label) {\n                viewer.removeLabel(atom.label);\n                delete atom.label;\n               }\n            }\n           );\n           viewer.setStyle({},{stick:{}});\n           viewer.render();\n    });\n\n     */\n    public setHoverable(sel: AtomSelectionSpec, hoverable: boolean, hover_callback, unhover_callback) {\n        this.applyToModels(\"setHoverable\", sel, hoverable, hover_callback, unhover_callback);\n        return this;\n    };\n\n    /** enable context menu and callback of selected atoms\n     *\n     * @param {AtomSelectionSpec} sel - atom selection to apply hoverable settings to\n     * @param {boolean} contextMenuEnabled - whether contextMenu-handling is enabled for the selection\n\n     */\n    public enableContextMenu(sel: AtomSelectionSpec, contextMenuEnabled: boolean) {\n        this.applyToModels(\"enableContextMenu\", sel, contextMenuEnabled);\n        return this;\n    };\n\n    /**\n     * If  atoms have dx, dy, dz properties (in some xyz files), vibrate populates each model's frame property based on parameters.\n     * Models can then be animated\n     *\n     * @param {number} numFrames - number of frames to be created, default to 10\n     * @param {number} amplitude - amplitude of distortion, default to 1 (full)\n     * @param {boolean} bothWays - if true, extend both in positive and negative directions by numFrames\n     * @param {ArrowSpec} arrowSpec - specification for drawing animated arrows. If color isn't specified, atom color (sphere, stick, line preference) is used.\n     */\n    public vibrate(numFrames: number, amplitude: number, bothways: boolean, arrowSpec: ArrowSpec) {\n        this.applyToModels(\"vibrate\", numFrames, amplitude, bothways, this, arrowSpec);\n        return this;\n    };\n\n    /**\n     * @param {AtomSelectionSpec} sel\n     * @param {string} prop\n     * @param {Gradient|string} scheme\n     * @param {object} range\n     */\n    public setColorByProperty(sel: AtomSelectionSpec, prop: string, scheme: Gradient | string, range) {\n        this.applyToModels(\"setColorByProperty\", sel, prop, scheme, range);\n        return this;\n    };\n\n    /**\n     * @param {AtomSelectionSpec} sel\n     * @param {object} colors\n     */\n    public setColorByElement(sel: AtomSelectionSpec, colors) {\n        this.applyToModels(\"setColorByElement\", sel, colors);\n        return this;\n    };\n\n    /**\n     *\n     * @param {AtomSpec[]} atomlist\n     * @param {Array}\n     *            extent\n     * @return {Array}\n     */\n    private static getAtomsWithin(atomlist: AtomSpec[], extent) {\n        var ret = [];\n\n        for (let i = 0; i < atomlist.length; i++) {\n            var atom = atomlist[i];\n            if (typeof (atom) == \"undefined\")\n                continue;\n\n            if (atom.x < extent[0][0] || atom.x > extent[1][0])\n                continue;\n            if (atom.y < extent[0][1] || atom.y > extent[1][1])\n                continue;\n            if (atom.z < extent[0][2] || atom.z > extent[1][2])\n                continue;\n            ret.push(atom);\n        }\n        return ret;\n    };\n\n    // return volume of extent\n    private static volume(extent) {\n        var w = extent[1][0] - extent[0][0];\n        var h = extent[1][1] - extent[0][1];\n        var d = extent[1][2] - extent[0][2];\n        return w * h * d;\n    }; // volume\n    /*\n     * Break up bounding box/atoms into smaller pieces so we can parallelize\n     * with webworkers and also limit the size of the working memory Returns\n     * a list of bounding boxes with the corresponding atoms. These extents\n     * are expanded by 4 angstroms on each side.\n     */\n    /**\n     *\n     * @param {Array}\n     *            extent\n     * @param {AtomSpec[]} atomlist\n     * @param {AtomSpec[]} atomstoshow\n     * @return {Array}\n     */\n    private carveUpExtent(extent, atomlist: AtomSpec[], atomstoshow: AtomSpec[]) {\n        let ret = [];\n\n        let index2atomlist = {}; //map from atom.index to position in atomlist\n        for (let i = 0, n = atomlist.length; i < n; i++) {\n            index2atomlist[atomlist[i].index] = i;\n        }\n\n        let atomsToListIndex = function (atoms) {\n            //return a list of indices into atomlist\n            let ret = [];\n            for (let i = 0, n = atoms.length; i < n; i++) {\n                if (atoms[i].index in index2atomlist)\n                    ret.push(index2atomlist[atoms[i].index]);\n            }\n            return ret;\n        };\n        let copyExtent = function (extent) {\n            // copy just the dimensions\n            let ret = [];\n            ret[0] = [extent[0][0], extent[0][1], extent[0][2]];\n            ret[1] = [extent[1][0], extent[1][1], extent[1][2]];\n            return ret;\n        }; // copyExtent\n        let splitExtentR = function (extent) {\n            // recursively split until volume is below maxVol\n            if (GLViewer.volume(extent) < GLViewer.maxVolume) {\n                return [extent];\n            } else {\n                // find longest edge\n                var w = extent[1][0] - extent[0][0];\n                var h = extent[1][1] - extent[0][1];\n                var d = extent[1][2] - extent[0][2];\n\n                var index;\n\n                if (w > h && w > d) {\n                    index = 0;\n                } else if (h > w && h > d) {\n                    index = 1;\n                } else {\n                    index = 2;\n                }\n\n                // create two halves, splitting at index\n                var a = copyExtent(extent);\n                var b = copyExtent(extent);\n                var mid = (extent[1][index] - extent[0][index]) / 2\n                    + extent[0][index];\n                a[1][index] = mid;\n                b[0][index] = mid;\n\n                var alist = splitExtentR(a);\n                var blist = splitExtentR(b);\n                return alist.concat(blist);\n            }\n        }; // splitExtentR\n\n        // divide up extent\n        let splits = splitExtentR(extent);\n        // now compute atoms within expanded (this could be more efficient)\n        let off = 6; // enough for water and 2*r, also depends on scale\n        // factor\n        for (let i = 0, n = splits.length; i < n; i++) {\n            let e = copyExtent(splits[i]);\n            e[0][0] -= off;\n            e[0][1] -= off;\n            e[0][2] -= off;\n            e[1][0] += off;\n            e[1][1] += off;\n            e[1][2] += off;\n\n            let atoms = GLViewer.getAtomsWithin(atomlist, e);\n            let toshow = GLViewer.getAtomsWithin(atomstoshow, splits[i]);\n\n            // ultimately, divide up by atom for best meshing\n            ret.push({\n                extent: splits[i],\n                atoms: atomsToListIndex(atoms),\n                toshow: atomsToListIndex(toshow)\n            });\n        }\n\n        return ret;\n    };\n\n    // create a mesh defined from the passed vertices and faces and material\n    // Just create a single geometry chunk - broken up whether sync or not\n    /**\n     *\n     * @param {AtomSpec[]} atoms\n     * @param {{vertices:number,faces:number}}\n     *            VandF\n     * @param {MeshLambertMaterial}\n     *            mat\n     * @return {Mesh}\n     */\n    private static generateSurfaceMesh(atoms: AtomSpec[], VandF, mat: MeshLambertMaterial) {\n        var geo = new Geometry(true);\n        // Only one group per call to generate surface mesh (addSurface\n        // should split up mesh render)\n        var geoGroup = geo.updateGeoGroup(0);\n\n        // set colors for vertices\n        var colors = [];\n        for (let i = 0, il = atoms.length; i < il; i++) {\n            var atom = atoms[i];\n            if (atom) {\n                if (typeof (atom.surfaceColor) != \"undefined\") {\n                    colors[i] = atom.surfaceColor;\n                } else if (atom.color) // map from atom\n                    colors[i] = CC.color(atom.color);\n            }\n        }\n\n        var vertexArray = geoGroup.vertexArray;\n        // reconstruct vertices and faces\n        var v = VandF.vertices;\n        for (let i = 0, il = v.length; i < il; i++) {\n            let offset = geoGroup.vertices * 3;\n            vertexArray[offset] = v[i].x;\n            vertexArray[offset + 1] = v[i].y;\n            vertexArray[offset + 2] = v[i].z;\n            geoGroup.vertices++;\n        }\n\n        //set colorArray of there are per-atom colors\n        var colorArray = geoGroup.colorArray;\n\n        if (mat.voldata && mat.volscheme) {\n            //convert volumetric data into colors\n            var scheme = mat.volscheme;\n            var voldata = mat.voldata;\n            var range = scheme.range() || [-1, 1];\n            for (let i = 0, il = v.length; i < il; i++) {\n                let val = voldata.getVal(v[i].x, v[i].y, v[i].z);\n                let col = CC.color(scheme.valueToHex(val, range));\n                let offset = i * 3;\n                colorArray[offset] = col.r;\n                colorArray[offset + 1] = col.g;\n                colorArray[offset + 2] = col.b;\n            }\n        }\n        else if (colors.length > 0) { //have atom colors\n            for (let i = 0, il = v.length; i < il; i++) {\n                let A = v[i].atomid;\n                let offsetA = i * 3;\n\n                colorArray[offsetA] = colors[A].r;\n                colorArray[offsetA + 1] = colors[A].g;\n                colorArray[offsetA + 2] = colors[A].b;\n            }\n        }\n\n        var faces = VandF.faces;\n        geoGroup.faceidx = faces.length;// *3;\n        geo.initTypedArrays();\n\n        var verts = geoGroup.vertexArray;\n        var normalArray = geoGroup.normalArray;\n        var vA, vB, vC, norm;\n\n        // Setup colors, faces, and normals\n        for (let i = 0, il = faces.length; i < il; i += 3) {\n\n            // var a = faces[i].a, b = faces[i].b, c = faces[i].c;\n            var a = faces[i], b = faces[i + 1], c = faces[i + 2];\n            var offsetA = a * 3, offsetB = b * 3, offsetC = c * 3;\n\n            // setup Normals\n            // todo - calculate normals in parallel code\n            vA = new Vector3(verts[offsetA], verts[offsetA + 1],\n                verts[offsetA + 2]);\n            vB = new Vector3(verts[offsetB], verts[offsetB + 1],\n                verts[offsetB + 2]);\n            vC = new Vector3(verts[offsetC], verts[offsetC + 1],\n                verts[offsetC + 2]);\n\n            vC.subVectors(vC, vB);\n            vA.subVectors(vA, vB);\n            vC.cross(vA);\n\n            // face normal\n            norm = vC;\n            norm.normalize();\n\n            normalArray[offsetA] += norm.x;\n            normalArray[offsetB] += norm.x;\n            normalArray[offsetC] += norm.x;\n            normalArray[offsetA + 1] += norm.y;\n            normalArray[offsetB + 1] += norm.y;\n            normalArray[offsetC + 1] += norm.y;\n            normalArray[offsetA + 2] += norm.z;\n            normalArray[offsetB + 2] += norm.z;\n            normalArray[offsetC + 2] += norm.z;\n\n        }\n        geoGroup.faceArray = new Uint16Array(faces);\n        var mesh = new Mesh(geo, mat as Material);\n        return mesh;\n    };\n\n    // do same thing as worker in main thread\n    /**\n     *\n     * @param {SurfaceType}\n     *            type\n     * @param {Array}\n     *            expandedExtent\n     * @param {AtomSpec[]}\n     *            extendedAtoms\n     * @param {AtomSpec[]}\n     *            atomsToShow\n     * @param {AtomSpec[]} atoms\n     * @param {number}\n     *            vol\n     * @return {Object}\n     */\n    private static generateMeshSyncHelper(type: SurfaceType, expandedExtent,\n        extendedAtoms: AtomSpec[], atomsToShow: AtomSpec[], atoms: AtomSpec[], vol: number) {\n        //            var time = new Date();\n        var ps = new ProteinSurface();\n        ps.initparm(expandedExtent, (type === 1) ? false : true, vol);\n\n        //            var time2 = new Date();\n        //console.log(\"initialize \" + (time2 - time) + \"ms\");\n\n        ps.fillvoxels(atoms, extendedAtoms);\n\n        //            var time3 = new Date();\n        //console.log(\"fillvoxels \" + (time3 - time2) + \"  \" + (time3 - time) + \"ms\");\n\n        ps.buildboundary();\n\n        if (type == SurfaceType.SES || type == SurfaceType.MS) {\n            ps.fastdistancemap();\n            ps.boundingatom(false);\n            ps.fillvoxelswaals(atoms, extendedAtoms);\n        }\n\n        //            var time4 = new Date();\n        //console.log(\"buildboundaryetc \" + (time4 - time3) + \"  \" + (time4 - time) + \"ms\");\n\n        ps.marchingcube(type);\n\n        //            var time5 = new Date();\n        //console.log(\"marching cube \" + (time5 - time4) + \"  \"+ (time5 - time) + \"ms\");\n\n        return ps.getFacesAndVertices(atomsToShow);\n    };\n\n    /*\n     *\n     * @param {SurfaceStyleSpec}\n     *            style\n     * @return {MeshLambertMaterial}\n     */\n    private static getMatWithStyle(style: SurfaceStyleSpec) {\n        let mat = null;\n        if (style.onesided) {\n            mat = new MeshLambertMaterial();\n        } else {\n            mat = new MeshDoubleLambertMaterial();\n        }\n        mat.vertexColors = Coloring.VertexColors;\n\n        for (var prop in style) {\n            if (prop === \"color\" || prop === \"map\") {\n                // ignore\n            } else if (style.hasOwnProperty(prop))\n                mat[prop] = style[prop];\n        }\n        if (style.opacity !== undefined) {\n            if (style.opacity === 1)\n                mat.transparent = false;\n            else\n                mat.transparent = true;\n        }\n\n        return mat;\n    }\n\n\n    /**\n     * Adds an explicit mesh as a surface object.\n     * @param {Mesh}\n     *            mesh\n     * @param {Object}\n     *            style\n     * @returns {number} surfid\n     */\n    public addMesh(mesh: Mesh) {\n        var surfobj = {\n            geo: mesh.geometry,\n            mat: mesh.material,\n            done: true,\n            finished: false //the rendered finishes surfaces when they are done\n        };\n        var surfid = this.nextSurfID();\n        this.surfaces[surfid] = surfobj;\n        return surfid;\n    };\n\n    //return a shallow copy of list l, e.g., for atoms so we can\n    //ignore superficial changes (ie surfacecolor, position) that happen\n    //while we're surface building\n    private static shallowCopy(l) {\n        var ret = [];\n        let length = l.length;\n        for (let i = 0; i < length; i++) {\n            ret[i] = extend({}, l[i]);\n        }\n        return ret;\n    };\n\n\n\n    /**\n     * Add surface representation to atoms\n     * @param {SurfaceType|string} type - Surface type (VDW, MS, SAS, or SES)\n     * @param {SurfaceStyleSpec} style - optional style specification for surface material (e.g. for different coloring scheme, etc)\n     * @param {AtomSelectionSpec} atomsel - Show surface for atoms in this selection\n     * @param {AtomSelectionSpec} allsel - Use atoms in this selection to calculate surface; may be larger group than 'atomsel'\n     * @param {AtomSelectionSpec} focus - Optionally begin rendering surface specified atoms\n     * @param {function} surfacecallback - function to be called after setting the surface\n     * @return {Promise} promise - Returns a promise that ultimately resovles to the surfid.  Returns surfid immediately if surfacecallback is specified.  Returned promise has a [surfid, GLViewer, style, atomsel, allsel, focus] fields for immediate access.\n     */\n    public addSurface(stype: SurfaceType | string, style: SurfaceStyleSpec = {}, atomsel: AtomSelectionSpec = {},\n        allsel?: AtomSelectionSpec, focus?: AtomSelectionSpec, surfacecallback?) {\n        // type 1: VDW 3: SAS 4: MS 2: SES\n        // if sync is true, does all work in main thread, otherwise uses\n        // workers\n        // with workers, must ensure group is the actual modelgroup since\n        // surface\n        // will get added asynchronously\n        // all atoms in atomlist are used to compute surfaces, but only the\n        // surfaces\n        // of atomsToShow are displayed (e.g., for showing cavities)\n        // if focusSele is specified, will start rending surface around the\n\n        //surfacecallback gets called when done\n        let surfid = this.nextSurfID();\n        let mat = null;\n        let self = this;\n        let type: SurfaceType | 0 = SurfaceType.VDW;\n\n        if (typeof stype == \"string\") {\n            if (GLViewer.surfaceTypeMap[stype.toUpperCase()] !== undefined)\n                type = GLViewer.surfaceTypeMap[stype];\n            else {\n                console.log(\"Surface type : \" + stype + \" is not recognized\");\n            }\n        } else if (typeof stype == \"number\") {\n            type = stype;\n        }\n\n        // atoms specified by this selection\n        var atomlist = null, focusSele = null;\n        //TODO: currently generating a shallow copy to avoid problems when atoms are chagned\n        //during surface generation - come up with a better solution\n        var atomsToShow = GLViewer.shallowCopy(this.getAtomsFromSel(atomsel));\n        if (!allsel) {\n            atomlist = atomsToShow;\n        }\n        else {\n            atomlist = GLViewer.shallowCopy(this.getAtomsFromSel(allsel));\n        }\n\n        adjustVolumeStyle(style);\n        var symmetries = false;\n        var n;\n        for (n = 0; n < this.models.length; n++) {\n            if (this.models[n]) {\n                var symMatrices = this.models[n].getSymmetries();\n                if (symMatrices.length > 1 || (symMatrices.length == 1 && !(symMatrices[0].isIdentity()))) {\n                    symmetries = true;\n                    break;\n                }\n            }\n        }\n\n        var addSurfaceHelper = function addSurfaceHelper(surfobj, atomlist: AtomSpec[], atomsToShow: AtomSpec[]) {\n            //function returns promise with surfid resolved\n            if (!focus) {\n                focusSele = atomsToShow;\n            } else {\n                focusSele = GLViewer.shallowCopy(self.getAtomsFromSel(focus));\n            }\n\n            var atom;\n            //                var time = new Date();\n            var extent = getExtent(atomsToShow, true);\n            if (style.map && style.map.prop) {\n                // map color space using already set atom properties\n                var prop = style.map.prop;\n                let scheme = getGradient(style.map.scheme || style.map.gradient || new Gradient.RWB());\n                let range = scheme.range();\n                if (!range) {\n                    range = getPropertyRange(atomsToShow, prop);\n                }\n                style.colorscheme = { prop: prop as string, gradient: scheme };\n\n            }\n\n            //cache surface color on each atom\n            for (let i = 0, il = atomlist.length; i < il; i++) {\n                atom = atomlist[i];\n                atom.surfaceColor = getColorFromStyle(atom, style);\n            }\n\n            var totalVol = GLViewer.volume(extent); // used to scale resolution\n            var extents = self.carveUpExtent(extent, atomlist, atomsToShow);\n\n            if (focusSele && focusSele.length && focusSele.length > 0) {\n                var seleExtent = getExtent(focusSele, true);\n                // sort by how close to center of seleExtent\n                var sortFunc = function (a, b) {\n                    var distSq = function (ex, sele) {\n                        // distance from e (which has no center of mass) and\n                        // sele which does\n                        var e = ex.extent;\n                        var x = e[1][0] - e[0][0];\n                        var y = e[1][1] - e[0][1];\n                        var z = e[1][2] - e[0][2];\n                        var dx = (x - sele[2][0]);\n                        dx *= dx;\n                        var dy = (y - sele[2][1]);\n                        dy *= dy;\n                        var dz = (z - sele[2][2]);\n                        dz *= dz;\n\n                        return dx + dy + dz;\n                    };\n                    var d1 = distSq(a, seleExtent);\n                    var d2 = distSq(b, seleExtent);\n                    return d1 - d2;\n                };\n                extents.sort(sortFunc);\n            }\n\n            var reducedAtoms = [];\n            // to reduce amount data transfered, just pass x,y,z,serial and elem\n            for (let i = 0, il = atomlist.length; i < il; i++) {\n                atom = atomlist[i];\n                reducedAtoms[i] = {\n                    x: atom.x,\n                    y: atom.y,\n                    z: atom.z,\n                    serial: i,\n                    elem: atom.elem\n                };\n            }\n\n            var sync = !!(syncSurface);\n            if (sync) { // don't use worker, still break up for memory purposes\n\n                // to keep the browser from locking up, call through setTimeout\n                var callSyncHelper = function callSyncHelper(i) {\n                    return new Promise<void>(function (resolve) {\n                        var VandF = GLViewer.generateMeshSyncHelper(type as SurfaceType, extents[i].extent,\n                            extents[i].atoms, extents[i].toshow, reducedAtoms,\n                            totalVol);\n                        //complicated surfaces sometimes have > 2^16 vertices\n                        var VandFs = splitMesh({ vertexArr: VandF.vertices, faceArr: VandF.faces });\n                        for (var vi = 0, vl = VandFs.length; vi < vl; vi++) {\n                            VandF = {\n                                vertices: VandFs[vi].vertexArr,\n                                faces: VandFs[vi].faceArr\n                            };\n                            var mesh = GLViewer.generateSurfaceMesh(atomlist, VandF, mat);\n                            mergeGeos(surfobj.geo, mesh);\n                        }\n                        self.render();\n                        resolve();\n                    });\n                };\n                var promises = [];\n                for (let i = 0; i < extents.length; i++) {\n                    promises.push(callSyncHelper(i));\n                }\n                return Promise.all(promises)\n                    .then(function () {\n                        surfobj.done = true;\n                        return Promise.resolve(surfid);\n                    });\n\n                // TODO: Asynchronously generate geometryGroups (not separate\n                // meshes) and merge them into a single geometry\n            } else { // use worker\n\n                var workers = [];\n                if (type < 0)\n                    type = 0; // negative reserved for atom data\n                for (let i = 0, il = GLViewer.numWorkers; i < il; i++) {\n                    var w = new Worker($3Dmol.SurfaceWorker);\n                    workers.push(w);\n                    w.postMessage({\n                        'type': -1,\n                        'atoms': reducedAtoms,\n                        'volume': totalVol\n                    });\n                }\n\n                return new Promise(function (resolve, reject) {\n                    var cnt = 0;\n\n                    var releaseMemory = function () {\n                        if (!workers || !workers.length) return;\n                        workers.forEach(function (worker) {\n                            if (worker && worker.terminate) {\n                                worker.terminate();\n                            }\n                        });\n                    };\n\n                    var rfunction = function (event) {\n                        var VandFs = splitMesh({\n                            vertexArr: event.data.vertices,\n                            faceArr: event.data.faces\n                        });\n                        for (var i = 0, vl = VandFs.length; i < vl; i++) {\n                            var VandF = {\n                                vertices: VandFs[i].vertexArr,\n                                faces: VandFs[i].faceArr\n                            };\n                            var mesh = GLViewer.generateSurfaceMesh(atomlist, VandF, mat);\n                            mergeGeos(surfobj.geo, mesh);\n                        }\n                        self.render();\n\n                        //    console.log(\"async mesh generation \" + (+new Date() - time) + \"ms\");\n                        cnt++;\n                        if (cnt == extents.length) {\n                            surfobj.done = true;\n                            releaseMemory();\n                            resolve(surfid); //caller of helper will resolve callback if present\n                        }\n                    };\n\n                    var efunction = function (event) {\n                        releaseMemory();\n                        console.log(event.message + \" (\" + event.filename + \":\" + event.lineno + \")\");\n                        reject(event);\n                    };\n\n                    for (let i = 0; i < extents.length; i++) {\n                        var worker = workers[i % workers.length];\n                        worker.onmessage = rfunction;\n                        worker.onerror = efunction;\n\n                        worker.postMessage({\n                            'type': type,\n                            'expandedExtent': extents[i].extent,\n                            'extendedAtoms': extents[i].atoms,\n                            'atomsToShow': extents[i].toshow\n                        });\n                    }\n                });\n            }\n        };\n\n        style = style || {};\n        mat = GLViewer.getMatWithStyle(style);\n        var surfobj: any = [];\n        //save configuration of surface\n        surfobj.style = style;\n        surfobj.atomsel = atomsel;\n        surfobj.allsel = allsel;\n        surfobj.focus = focus;\n        var promise = null;\n        if (symmetries) { //do preprocessing\n            var modelsAtomList = {};\n            var modelsAtomsToShow = {};\n            for (n = 0; n < this.models.length; n++) {\n                modelsAtomList[n] = [];\n                modelsAtomsToShow[n] = [];\n            }\n            for (n = 0; n < atomlist.length; n++) {\n                modelsAtomList[atomlist[n].model].push(atomlist[n]);\n            }\n            for (n = 0; n < atomsToShow.length; n++) {\n                modelsAtomsToShow[atomsToShow[n].model].push(atomsToShow[n]);\n            }\n            var promises = [];\n            for (n = 0; n < this.models.length; n++) {\n                if (modelsAtomsToShow[n].length > 0) {\n                    surfobj.push({\n                        geo: new Geometry(true),\n                        mat: mat,\n                        done: false,\n                        finished: false,\n                        symmetries: this.models[n].getSymmetries()\n                        // also webgl initialized\n                    });\n                    promises.push(addSurfaceHelper(surfobj[surfobj.length - 1], modelsAtomList[n], modelsAtomsToShow[n]));\n                }\n            }\n            promise = Promise.all(promises);\n        }\n        else {\n            surfobj.push({\n                geo: new Geometry(true),\n                mat: mat,\n                done: false,\n                finished: false,\n                symmetries: [new Matrix4()]\n            });\n            promise = addSurfaceHelper(surfobj[surfobj.length - 1], atomlist, atomsToShow);\n        }\n        this.surfaces[surfid] = surfobj;\n        promise.surfid = surfid;\n\n        if (surfacecallback && typeof (surfacecallback) == \"function\") {\n            promise.then(function (surfid) {\n                surfacecallback(surfid);\n            });\n            return surfid;\n        }\n        else {\n            return promise;\n        }\n    };\n\n    /**\n     * Set the surface material to something else, must render change\n     * @param {number} surf - Surface ID to apply changes to\n     * @param {SurfaceStyleSpec} style - new material style specification\n     @example\n     $3Dmol.get(\"data/9002806.cif\",function(data){\n        viewer.addModel(data);\n        viewer.setStyle({stick:{}});\n        let surf = viewer.addSurface(\"SAS\");\n        surf.then(function() {\n            viewer.setSurfaceMaterialStyle(surf.surfid, {color:'blue',opacity:0.5});\n            viewer.render();\n            });\n       });\n     */\n    public setSurfaceMaterialStyle(surf: number, style: SurfaceStyleSpec) {\n        adjustVolumeStyle(style);\n        if (this.surfaces[surf]) {\n            var surfArr = this.surfaces[surf];\n            surfArr.style = style;\n            for (var i = 0; i < surfArr.length; i++) {\n                var mat = surfArr[i].mat = GLViewer.getMatWithStyle(style);\n                surfArr[i].mat.side = FrontSide;\n                if (style.color) {\n                    surfArr[i].mat.color = style.color;\n                    surfArr[i].geo.colorsNeedUpdate = true;\n                    const c = CC.color(style.color);\n                    surfArr[i].geo.setColors(function () { return c; });\n                }\n                else if (mat.voldata && mat.volscheme) {\n                    //convert volumetric data into colors\n                    const scheme = mat.volscheme;\n                    const voldata = mat.voldata;\n                    const cc = CC;\n                    const range = scheme.range() || [-1, 1];\n                    surfArr[i].geo.setColors(function (x, y, z) {\n                        let val = voldata.getVal(x, y, z);\n                        let col = cc.color(scheme.valueToHex(val, range));\n                        return col;\n                    });\n                }\n                surfArr[i].finished = false; // trigger redraw\n            }\n        }\n        return this;\n    };\n\n    /**\n     * Return surface object\n     * @param {number} surf - surface id\n     */\n    public getSurface(surf: number) {\n        return this.surfaces[surf];\n    };\n\n    /**\n     * Remove surface with given ID\n     * @param {number} surf - surface id\n     */\n    public removeSurface(surf: number) {\n        var surfArr = this.surfaces[surf];\n        for (var i = 0; i < surfArr.length; i++) {\n            if (surfArr[i] && surfArr[i].lastGL) {\n                if (surfArr[i].geo !== undefined)\n                    surfArr[i].geo.dispose();\n                if (surfArr[i].mat !== undefined)\n                    surfArr[i].mat.dispose();\n                this.modelGroup.remove(surfArr[i].lastGL); // remove from scene\n            }\n        }\n        delete this.surfaces[surf];\n        this.show();\n        return this;\n    };\n\n    /** Remove all surfaces.\n     **/\n    public removeAllSurfaces() {\n        for (var n in this.surfaces) {\n            if (!this.surfaces.hasOwnProperty(n)) continue;\n            var surfArr = this.surfaces[n];\n            for (var i = 0; i < surfArr.length; i++) {\n                if (surfArr[i] && surfArr[i].lastGL) {\n                    if (surfArr[i].geo !== undefined)\n                        surfArr[i].geo.dispose();\n                    if (surfArr[i].mat !== undefined)\n                        surfArr[i].mat.dispose();\n                    this.modelGroup.remove(surfArr[i].lastGL); // remove from scene\n                }\n            }\n            delete this.surfaces[n];\n        }\n        this.show();\n        return this;\n    };\n\n    /** return Jmol moveto command to position this scene */\n    public jmolMoveTo() {\n        var pos = this.modelGroup.position;\n        // center on same position\n        var ret = \"center { \" + (-pos.x) + \" \" + (-pos.y) + \" \" + (-pos.z)\n            + \" }; \";\n        // apply rotation\n        var q = this.rotationGroup.quaternion;\n        ret += \"moveto .5 quaternion { \" + q.x + \" \" + q.y + \" \" + q.z\n            + \" \" + q.w + \" };\";\n        // zoom is tricky.. maybe i would be best to let callee zoom on\n        // selection?\n        // can either do a bunch of math, or maybe zoom to the center with a\n        // fixed\n        // but reasonable percentage\n\n        return ret;\n    };\n\n    /** Clear scene of all objects\n     * */\n    public clear() {\n        this.removeAllSurfaces();\n        this.removeAllModels();\n        this.removeAllLabels();\n        this.removeAllShapes();\n        this.show();\n        return this;\n    };\n\n    // props is a list of objects that select certain atoms and enumerate\n    // properties for those atoms\n    /**\n     * Add specified properties to all atoms matching input argument\n     * @param {Object} props, either array of atom selectors with associated props, or function that takes atom and sets its properties\n     * @param {AtomSelectionSpec} sel  - subset of atoms to work on - model selection must be specified here\n         @example\n         $3Dmol.get('../test_structs/b.sdf', function(data){\n                  viewer.addModel(data,'sdf');\n                  let props = [];\n                  //make the atom index a property x\n                  for(let i = 0; i < 8; i++) {\n                    props.push({index:i,props:{'x':i}});\n                  }\n                  viewer.mapAtomProperties(props);\n                  viewer.setStyle({sphere:{colorscheme:{gradient:'roygb',prop:'x',min:0,max:8}}});\n                  viewer.zoomTo();\n                  viewer.render();\n                });\n     */\n    public mapAtomProperties(props, sel: AtomSelectionSpec) {\n        sel = sel || {};\n        var atoms = this.getAtomsFromSel(sel);\n\n        if (typeof (props) == \"function\") {\n            for (let a = 0, numa = atoms.length; a < numa; a++) {\n                let atom = atoms[a];\n                props(atom);\n            }\n        }\n        else {\n            for (let a = 0, numa = atoms.length; a < numa; a++) {\n                var atom = atoms[a];\n                for (let i = 0, n = props.length; i < n; i++) {\n                    let prop = props[i];\n                    if (prop.props) {\n                        for (var p in prop.props) {\n                            if (prop.props.hasOwnProperty(p)) {\n                                // check the atom\n                                if (this.atomIsSelected(atom, prop)) {\n                                    if (!atom.properties)\n                                        atom.properties = {};\n                                    atom.properties[p] = prop.props[p];\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return this;\n    };\n\n\n    /**\n     * Synchronize this view matrix of this viewer to the passed viewer.\n     * When the viewpoint of this viewer changes, the other viewer will\n     * be set to this viewer's view.\n     * @param {$3Dmol.GLViewer} otherview\n     */\n    public linkViewer(otherviewer: GLViewer) {\n        this.linkedViewers.push(otherviewer);\n        return this;\n    };\n\n    /**\n     * Return the z distance between the model and the camera\n     * @return {number} distance\n     */\n    public getPerceivedDistance() {\n        return this.CAMERA_Z - this.rotationGroup.position.z;\n    };\n\n    /**\n     * Set the distance between the model and the camera\n     * Essentially zooming. Useful while stereo rendering.\n     */\n    public setPerceivedDistance(dist: number) {\n        this.rotationGroup.position.z = this.CAMERA_Z - dist;\n    };\n\n    /**\n     * Used for setting an approx value of eyeSeparation. Created for calling by StereoViewer object\n     * @return {number} camera x position\n     */\n    public setAutoEyeSeparation(isright: boolean, x: number) {\n        var dist = this.getPerceivedDistance();\n        if (!x) x = 5.0;\n        if (isright || this.camera.position.x > 0) //setting a value of dist*tan(x)\n            this.camera.position.x = dist * Math.tan(Math.PI / 180.0 * x);\n        else\n            this.camera.position.x = -dist * Math.tan(Math.PI / 180.0 * x);\n        this.camera.lookAt(new Vector3(0, 0, this.rotationGroup.position.z));\n        return this.camera.position.x;\n    };\n\n    /**\n     * Set the default cartoon quality for newly created models.  Default is 5.\n     * Current models are not affected.\n     * @number quality, higher results in higher resolution renders\n     */\n    public setDefaultCartoonQuality(val: number) {\n        this.config.cartoonQuality = val;\n    };\n\n}\n\n\n/**\n * Create and initialize an appropriate viewer at supplied HTML element using specification in config\n * @param {Object | string} element - Either HTML element or string identifier\n * @param {ViewerSpec} [config] Viewer configuration\n * @return {GLViewer} GLViewer, null if unable to instantiate WebGL\n * @example\n   var viewer = $3Dmol.createViewer(\n     'gldiv', //id of div to create canvas in\n     {\n       defaultcolors: $3Dmol.elementColors.rasmol,\n       backgroundColor: 'black'\n     }\n   );\n *\n */\nexport function createViewer(element, config?: ViewerSpec) {\n    element = getElement(element);\n    if (!element) return;\n\n    config = config || {};\n    //try to create the  viewer\n    try {\n        var viewer = new GLViewer(element, config);\n        return viewer;\n    }\n    catch (e) {\n        throw \"error creating viewer: \" + e;\n    }\n};\n\n/**\n * Create and initialize an appropriate a grid of viewers that share a WebGL canvas\n * @param {Object | string} element - Either HTML element or string identifier\n * @param {GridSpec} [config] - grid configuration\n * @param {ViewerGridSpec} [viewer_config] - Viewer specification to apply to all subviewers\n * @return [[GLViewer]] 2D array of GLViewers\n * @example\n   var viewers = $3Dmol.createViewerGrid(\n     'gldiv', //id of div to create canvas in\n     {\n       rows: 2,\n       cols: 2,\n       control_all: true  //mouse controls all viewers\n     },\n     { backgroundColor: 'lightgrey' }\n   );\n   $3Dmol.get('data/1jpy.cif', function(data) {\n     var viewer = viewers[0][0];\n     viewer.addModel(data,'cif');\n     viewer.setStyle({sphere:{}});\n     viewer.zoomTo();\n     viewer.render( );\n\n     viewer = viewers[0][1];\n     viewer.addModel(data,'cif');\n     viewer.setStyle({stick:{}});\n     viewer.zoomTo();\n     viewer.render( );\n\n     viewer = viewers[1][0];\n     viewer.addModel(data,'cif');\n     viewer.setStyle({cartoon:{color:'spectrum'}});\n     viewer.zoomTo();\n     viewer.render( );\n\n     viewer = viewers[1][1];\n     viewer.addModel(data,'cif');\n     viewer.setStyle({cartoon:{colorscheme:'chain'}});\n     viewer.zoomTo();\n     viewer.render();\n\n\n   });\n\n */\nexport function createViewerGrid(element, config: ViewerGridSpec = {}, viewer_config: ViewerSpec = {}) {\n    element = getElement(element);\n    if (!element) return;\n\n    var viewers = [];\n    //create canvas\n    var canvas = document.createElement('canvas');\n\n    viewer_config.rows = config.rows;\n    viewer_config.cols = config.cols;\n    viewer_config.control_all = config.control_all != undefined ? config.control_all : false;\n    element.appendChild(canvas);\n\n    //try to create the  viewer\n    try {\n        for (var r = 0; r < config.rows; r++) {\n            var row = [];\n            for (var c = 0; c < config.cols; c++) {\n                viewer_config.row = r;\n                viewer_config.col = c;\n                viewer_config.canvas = canvas;\n                viewer_config.viewers = viewers;\n                viewer_config.control_all = config.control_all;\n                var viewer = createViewer(element, extend({}, viewer_config));\n                row.push(viewer);\n            }\n            viewers.unshift(row); //compensate for weird ordering in renderer\n        }\n    } catch (e) {\n        throw \"error creating viewer grid: \" + e;\n    }\n\n    return viewers;\n};\n\n\n/* StereoViewer for stereoscopic viewing\n* @param {Object | string} element - Either HTML element or string identifier\n*\n*/\nexport function createStereoViewer(element) {\n    var that = this;\n    element = getElement(element);\n    if (!element) return;\n\n    var viewers = createViewerGrid(element, { rows: 1, cols: 2, control_all: true });\n\n    this.glviewer1 = viewers[0][0];\n    this.glviewer2 = viewers[0][1];\n\n    this.glviewer1.setAutoEyeSeparation(false);\n    this.glviewer2.setAutoEyeSeparation(true);\n\n    this.glviewer1.linkViewer(this.glviewer2);\n    this.glviewer2.linkViewer(this.glviewer1);\n\n    var methods = Object.getOwnPropertyNames(this.glviewer1.__proto__) //get all methods of glviewer object\n        .filter(function (property) {\n            return typeof that.glviewer1[property] == 'function';\n        });\n\n    for (var i = 0; i < methods.length; i++) { //create methods of the same name\n        this[methods[i]] = (function (method) {\n            return function () {\n                var m1 = this.glviewer1[method].apply(this.glviewer1, arguments);\n                var m2 = this.glviewer2[method].apply(this.glviewer2, arguments);\n                return [m1, m2];\n            };\n        })(methods[i]);\n    }\n\n    //special cased methods\n    this.setCoordinates = function (models, data, format) { //for setting the coordinates of the models\n        for (var i = 0; i < models.length; i++) {\n            models[i].setCoordinates(data, format);\n        }\n    };\n\n    this.surfacesFinished = function () {\n        return this.glviewer1.surfacesFinished() && this.glviewer2.surfacesFinished();\n    };\n\n    this.isAnimated = function () {\n        return this.glviewer1.isAnimated() || this.glviewer2.isAnimated();\n    };\n\n    this.render = function (callback) {\n        this.glviewer1.render();\n        this.glviewer2.render();\n        if (callback) {\n            callback(this); //call only once\n        }\n    };\n\n    this.getCanvas = function () {\n        return this.glviewer1.getCanvas(); //same for both\n    };\n\n};\n\n\n/**\n * Outline style configuration parameters\n */\nexport interface OutlineStyle {\n    /** Width of the outline */\n    width?: number;\n    /** Color of the outline */\n    color?: ColorSpec;\n}\n\n/**\n * AmbientOcclusion style configuration parameters\n */\nexport interface AmbientOcclusionStyle {\n    /** Strength (darkness) of shading (default 1.0) */\n    strength?: number;\n    /** Radius (in Angstroms) used to detect occlusions (default 5.0). */\n    radius?: number;\n}\n\n/**\n * View style configuration\n */\nexport interface ViewStyle extends OutlineStyle, AmbientOcclusionStyle {\n    /** How to style viewer: outline|ambientOcclusion|none */\n    style?: string;\n}\n/**\n * GLViewer input specification\n */\nexport interface ViewerSpec {\n    /** Callback function to be executed with this viewer after setup is complete */\n    callback?: (viewer: ViewerSpec) => void;\n    /** Object defining default atom colors as atom => color property value pairs for all models within this viewer */\n    defaultcolors?: Record<string, ColorSpec>;\n    /**\n     * Whether to disable disable handling of mouse events.\n     * If you want to use your own mouse handlers, set this then bind your handlers to the canvas object.\n                  The default 3Dmol.js handlers are available for use:\n                  'mousedown touchstart': viewer._handleMouseDown,\n                  'DOMMouseScroll mousewheel': viewer._handleMouseScroll\n                  'mousemove touchmove': viewer._handleMouseMove\n     */\n    nomouse?: boolean | string;\n    /** Color of the canvas background */\n    backgroundColor?: string;\n    /** Alpha transparency of canvas background */\n    backgroundAlpha?: number;\n    /** */\n    camerax?: number|string;\n    /** */\n    hoverDuration?: number;\n    /** id of the canvas */\n    id?: string;\n    /** default 5 */\n    cartoonQuality?: number;\n    /** */\n    row?: number;\n    /** */\n    col?: number;\n    /** */\n    rows?: number;\n    /** */\n    cols?: number;\n    /** */\n    canvas?: HTMLCanvasElement;\n    viewers?: GLViewer[];\n    /** */\n    minimumZoomToDistance?: number;\n    /** */\n    lowerZoomLimit?: number;\n    /** */\n    upperZoomLimit?: number;\n    /** */\n    antialias?: boolean;\n    /** */\n    control_all?: boolean;\n    /** */\n    orthographic?: boolean;\n    /** Disable fog, default to false */\n    disableFog?: boolean;\n    /** outline or ambientOcclusion **deprecated** */\n    style?: string;\n    /** Outline parameters */\n    outline?: OutlineStyle;\n    /** Ambient occlusion settings */\n    ambientOcclusion?: AmbientOcclusionStyle;\n\n};\n\n/**\n * Grid GLViewer input specification\n */\nexport interface ViewerGridSpec {\n    /** number of rows in grid */\n    rows?: number;\n    /** number of columns in grid */\n    cols?: number;\n    /** if true, mouse events are linked */\n    control_all?: boolean;\n};\n\n\n/**\n * @example\n * var setStyles = function(volumedata){\n *  var data = new $3Dmol.VolumeData(volumedata, \"cube\");\n *  viewer.addSurface(\"VDW\", {opacity:0.85, voldata: data, volscheme: new $3Dmol.Gradient.RWB(-10,10)},{chain:'A'});\n *  viewer.mapAtomProperties($3Dmol.applyPartialCharges);\n *  viewer.addSurface($3Dmol.SurfaceType.SAS, {map:{prop:'partialCharge',scheme:new $3Dmol.Gradient.RWB(-.05,.05)}, opacity:1.0},{chain:'B'});\n *  viewer.addSurface($3Dmol.SurfaceType.VDW, {opacity:0.85,voldata: data, color:'red'},{chain:'C'});\n *  viewer.addSurface($3Dmol.SurfaceType.SAS, {opacity:0.85,voldata: data, colorscheme:'greenCarbon'},{chain:'D'});\n *  viewer.render();\n * };\n * $3Dmol.download(\"pdb:4DLN\",viewer,{},function(){\n *   $.get(\"data/1fas.cube\",setStyles);\n * });\n */\nexport interface SurfaceStyleSpec {\n    /** one sided material - back is transparent */\n    onesided?: boolean;\n    /** sets the transparency: 0 to hide, 1 for fully opaque */\n    opacity?: number;\n    /** element based coloring */\n    colorscheme?: ColorschemeSpec;\n    /** fixed coloring, overrides colorscheme */\n    color?: ColorSpec;\n    /** volumetric data for vertex coloring, can be VolumeData object or raw data if volformat is specified */\n    voldata?: VolumeData;\n    /** coloring scheme for mapping volumetric data to vertex color, if not a Gradient object, show describe a builtin gradient one by providing an object with gradient, min, max, and (optionally) mid fields. */\n    volscheme?: Gradient;\n    /** format of voldata if not a {VolumeData} object */\n    volformat?: string;\n    /* specifies a numeric atom property (prop) and color mapping (scheme) such as {@link $3Dmol.Gradient.RWB}.  Deprecated, use colorscheme instead. */\n    map?: Record<string, unknown>\n};\n\n\n/** Style specification ofr unit cell shape.  */\nexport interface UnitCellStyleSpec {\n    /** line style used to draw box */\n    box?: LineStyleSpec;\n    /** arrow specification of the \"a\" axis */\n    astyle?: ArrowSpec;\n    /** arrow specification of the \"b\" axis */\n    bstyle?: ArrowSpec;\n    /** arrow specification of the \"c\" axis */\n    cstyle?: ArrowSpec;\n    /** label for \"a\" axis */\n    alabel?: string;\n    /** label style for a axis */\n    alabelstyle?: LabelSpec;\n    /** label for \"b\" axis */\n    blabel?: string;\n    /** label style for b axis */\n    blabelstyle?: LabelSpec;\n    /** label for \"c\" axis */\n    clabel?: string;\n    /** label style for c axis */\n    clabelstyle?: LabelSpec;\n}\n","import { CC, Color, ColorSpec } from \"./colors\";\n\nexport abstract class GradientType {\n  gradient?: string;\n  abstract valueToHex(value: number, range?: number[]): number;\n  abstract range(): number[] | null;\n}\n\nexport function normalizeValue(\n  lo: number,\n  hi: number,\n  val: number\n): { lo: number; hi: number; val: number } {\n  if (hi >= lo) {\n    if (val < lo) val = lo;\n    if (val > hi) val = hi;\n    return { lo: lo, hi: hi, val: val };\n  } else {\n    if (val > lo) val = lo;\n    if (val < hi) val = hi;\n    //flip the meaning of val, lo, hi\n    val = lo - val + hi;\n    return { lo: hi, hi: lo, val: val };\n  }\n}\n\n/**\n*  Gradient specification.\n* @see builtinGradients\n*/\nexport type GradientSpec = {\n  /** Kind of gradient. E.g. RWB, ROYGB, sinebow.  Can also specify linear[_color]* as a\n   * shorthand for CustomLinear and passing a colors array.   */\n  gradient?: string;\n  /** Lower range of gradient */\n  min?: number;\n  /** Upper range of gradient */\n  max?: number;\n  /**  {AtomSpec} property to use for gradient calculation.  E.g., 'b' for temperature factors of a PDB. */\n  prop?: string;\n  /** mid point value for gradient (for rwb) */\n  mid?: number;\n  /** Custom colors for gradient (for {@link CustomLinear}) */\n  colors?: Array<ColorSpec>;\n  /** map of a certain {@link AtomSpec} property to a color of the form `{'prop': 'elem', map:elementColors.greenCarbon}` Allows the user to provide a mapping of elements to colors to the colorscheme.  This can be done with any properties, and not just 'elem'.\n */\n  map?: Record<string, unknown>\n};\n\n//return a Gradient object, even if what is specified is descriptive\nexport function getGradient(grad: GradientSpec|GradientType): GradientType {\n  if (grad instanceof GradientType) {\n    return grad;\n  } else if (grad.gradient !== undefined && builtinGradients[grad.gradient]\n  ) {\n    let min = grad.min === undefined ? -1 : grad.min;\n    let max = grad.max === undefined ? 1 : grad.max;\n    if (grad.mid === undefined) {\n      if (grad.colors === undefined) {\n        return new builtinGradients[grad.gradient](min, max);\n      } else {\n        return new builtinGradients[grad.gradient](min, max, grad.colors);\n      }\n    } else {\n      return new builtinGradients[grad.gradient](min, max, grad.mid);\n    }\n  } else if(typeof(grad.gradient) == \"string\" && grad.gradient.startsWith('linear_')) {\n    let colors = grad.gradient.split('_');\n    colors.shift();\n    let min = grad.min === undefined ? -1 : grad.min;\n    let max = grad.max === undefined ? 1 : grad.max;    \n    return new CustomLinear(min,max,colors);\n  }\n  return grad as GradientType;\n}\n\n/**\n * Color scheme red to white to blue, for charges\n * Reverse gradients are supported when min>max so that the colors are displayed in reverse order.\n * @subcategory Gradients\n */\nexport class RWB extends GradientType {\n  gradient = \"RWB\";\n  min: number;\n  max: number;\n  mid?: number;\n  mult: number;\n  constructor(min?: number | [number, number], max?: number, mid?: number) {\n    super();\n    this.mult = 1.0;\n    this.mid = mid;\n    this.min = min as number;\n    this.max = max as number;\n    if (typeof max == \"undefined\" && Array.isArray(min) && min.length >= 2) {\n      //we were passed a single range\n      this.max = min[1];\n      this.min = min[0];\n    } else if (!!min && !!max && !Array.isArray(min)) {\n      this.min = min;\n      this.max = max;\n    }\n  }\n\n  //return range used for color mapping, null if none set\n  range() {\n    if (typeof this.min != \"undefined\" && typeof this.max != \"undefined\") {\n      return [this.min, this.max] as [number, number];\n    }\n    return null;\n  }\n\n  //map value to hex color, range is provided\n  valueToHex(val: number, range?: number[]) {\n    var lo: number, hi: number;\n    val = this.mult * val; //reverse if necessary\n    if (range) {\n      lo = range[0];\n      hi = range[1];\n    } else {\n      lo = this.min;\n      hi = this.max;\n    }\n\n    if (val === undefined) return 0xffffff;\n\n    var norm = normalizeValue(lo, hi, val);\n    lo = norm.lo;\n    hi = norm.hi;\n    val = norm.val;\n\n    var middle = (hi + lo) / 2;\n    if (range && typeof range[2] != \"undefined\") middle = range[2];\n    else if (typeof this.mid != \"undefined\")\n      middle = this.mid; //allow user to specify midpoint\n    else middle = (lo + hi) / 2;\n    var scale: number, color: number;\n\n    //scale bottom from red to white\n    if (val < middle) {\n      scale = Math.floor(255 * Math.sqrt((val - lo) / (middle - lo)));\n      color = 0xff0000 + 0x100 * scale + scale;\n      return color;\n    } else if (val > middle) {\n      //form white to blue\n      scale = Math.floor(255 * Math.sqrt(1 - (val - middle) / (hi - middle)));\n      color = 0x10000 * scale + 0x100 * scale + 0xff;\n      return color;\n    } else {\n      //val == middle\n      return 0xffffff;\n    }\n  }\n}\n\n/**\n * rainbow gradient, but without purple to match jmol\n * Reverse gradients are supported when min>max so that the colors are displayed in reverse order.\n * @subcategory Gradients\n */\nexport class ROYGB extends GradientType {\n  gradient = \"ROYGB\";\n  mult: number;\n  max?: number;\n  min?: number;\n  constructor(min?: number, max?: number) {\n    super();\n    this.mult = 1.0;\n    this.min = min;\n    this.max = max;\n    if (typeof max == \"undefined\" && Array.isArray(min) && min.length >= 2) {\n      //we were passed a single range\n      this.max = min[1];\n      this.min = min[0];\n    } else if (!!min && !!max && !Array.isArray(min)) {\n      this.min = min;\n      this.max = max;\n    }\n  };\n  //map value to hex color, range is provided\n  valueToHex(val: number, range?: any[]) {\n    var lo: number, hi: number;\n    val = this.mult * val;\n    if (range) {\n      lo = range[0];\n      hi = range[1];\n    } else {\n      lo = this.min!;\n      hi = this.max!;\n    }\n\n    if (typeof val == \"undefined\") return 0xffffff;\n\n    var norm = normalizeValue(lo, hi, val);\n    lo = norm.lo;\n    hi = norm.hi;\n    val = norm.val;\n\n    var mid = (lo + hi) / 2;\n    var q1 = (lo + mid) / 2;\n    var q3 = (mid + hi) / 2;\n\n    var scale: number, color: number;\n    if (val < q1) {\n      //scale green up, red up, blue down\n      scale = Math.floor(255 * Math.sqrt((val - lo) / (q1 - lo)));\n      color = 0xff0000 + 0x100 * scale + 0;\n      return color;\n    } else if (val < mid) {\n      //scale red down, green up, blue down\n      scale = Math.floor(255 * Math.sqrt(1 - (val - q1) / (mid - q1)));\n      color = 0x010000 * scale + 0xff00 + 0x0;\n      return color;\n    } else if (val < q3) {\n      //scale blue up, red down, green up\n      scale = Math.floor(255 * Math.sqrt((val - mid) / (q3 - mid)));\n      color = 0x000000 + 0xff00 + 0x1 * scale;\n      return color;\n    } else {\n      //scale green down, blue up, red down\n      scale = Math.floor(255 * Math.sqrt(1 - (val - q3) / (hi - q3)));\n      color = 0x000000 + 0x0100 * scale + 0xff;\n      return color;\n    }\n  };\n\n  //return range used for color mapping, null if none set\n  range() {\n    if (typeof this.min != \"undefined\" && typeof this.max != \"undefined\") {\n      return [this.min, this.max] as [number, number];\n    }\n    return null;\n  };\n}\n/**\n * rainbow gradient with constant saturation, all the way to purple!\n * Reverse gradients are supported when min>max so that the colors are displayed in reverse order.\n  * @subcategory Gradients \n * \n * @example $.get('data/1fas.pqr', function(data){\n      viewer.addModel(data, \"pqr\");\n      $.get(\"data/1fas.cube\",function(volumedata){\n          viewer.addSurface($3Dmol.SurfaceType.VDW, {\n              opacity:0.85,\n              voldata: new $3Dmol.VolumeData(volumedata, \"cube\"),\n              volscheme: new $3Dmol.Gradient.Sinebow(2,0,1)\n          },{});\n          \n      viewer.render();\n      });\n      viewer.zoomTo();\n  });\n */\nexport class Sinebow extends GradientType {\n  gradient = \"Sinebow\";\n  mult: number;\n  max: number;\n  min: number;\n  constructor(min: number, max: number) {\n    super();\n    this.mult = 1.0;\n    this.min = min;\n    this.max = max;\n    if (typeof max == \"undefined\" && Array.isArray(min) && min.length >= 2) {\n      //we were passed a single range\n      this.max = min[1];\n      this.min = min[0];\n    }\n    if (max < min) {\n      //reverse the order\n      this.mult = -1.0;\n      this.min *= -1.0;\n      this.max *= -1.0;\n    }\n  };\n\n  //map value to hex color, range is provided\n  valueToHex(val: number, range?: any[]) {\n    var lo: number, hi: number;\n    val = this.mult * val;\n    if (range) {\n      lo = range[0];\n      hi = range[1];\n    } else {\n      lo = this.min;\n      hi = this.max;\n    }\n\n    if (typeof val == \"undefined\") return 0xffffff;\n    var norm = Gradient.normalizeValue(lo, hi, val);\n    lo = norm.lo;\n    hi = norm.hi;\n    val = norm.val;\n\n    var scale = (val - lo) / (hi - lo);\n    var h = (5 * scale) / 6.0 + 0.5;\n    var r = Math.sin(Math.PI * h);\n    r *= r * 255;\n    var g = Math.sin(Math.PI * (h + 1 / 3.0));\n    g *= g * 255;\n    var b = Math.sin(Math.PI * (h + 2 / 3.0));\n    b *= b * 255;\n\n    return (\n      0x10000 * Math.floor(r) + 0x100 * Math.floor(b) + 0x1 * Math.floor(g)\n    );\n  };\n\n  //return range used for color mapping, null if none set\n  range() {\n    if (typeof this.min != \"undefined\" && typeof this.max != \"undefined\") {\n      return [this.min, this.max] as [number, number];\n    }\n    return null;\n  };\n}\n\n\n/**\n * Custom linear gradient using user supplied colors.\n * Reverse gradients are supported when min>max so that the colors are displayed in reverse order.\n * Midpoints are not supported - color map should be specified to get desired middle color.\n * \n * @param {number} min \n * @param {number} max\n * @param {Array} colors  Array of colors that will be linearly interpolated between from min to max values.\n * @subcategory Gradients\n * \n * @example\n       $3Dmol.get('../test_structs/af.pdb', function(data){\n              viewer.addModel(data);\n              viewer.setStyle({cartoon:{colorscheme:{prop: 'b', gradient:'linear', min: 70, max: 100, colors: [\"blue\",\"yellow\",\"green\"]}}});\n              viewer.zoomTo();\n              viewer.render();\n            });\n */\nexport class CustomLinear extends GradientType {\n  gradient = \"linear\";\n  min: number;\n  max: number;\n  colors = new Array<Color>();\n\n  constructor(min: any, max: any, colors?: any) {\n    super();\n\n    var carr: Array<any>;\n    if (Array.isArray(min) && min.length >= 2) {\n      //we were passed a single range\n      this.max = min[1] as number;\n      this.min = min[0] as number;\n      carr = max;\n    } else {\n      this.min = min as number;\n      this.max = max as number;\n      carr = colors;\n    }\n\n    //convert colors\n    if (carr) {\n      for (let c of carr) {\n        this.colors.push(CC.color(c));\n      }\n    } else {\n      this.colors.push(CC.color(0));\n    }\n\n  }\n\n  //return range used for color mapping, null if none set\n  range() {\n    if (typeof this.min != \"undefined\" && typeof this.max != \"undefined\") {\n      return [this.min, this.max] as [number, number];\n    }\n    return null;\n  }\n\n  //map value to hex color, range is provided\n  valueToHex(val: number, range?: any[]) {\n    var lo: number, hi: number;\n    if (range) {\n      lo = range[0];\n      hi = range[1];\n    } else {\n      lo = this.min;\n      hi = this.max;\n    }\n\n    if (val === undefined) return 0xffffff;\n\n    var norm = normalizeValue(lo, hi, val);\n    lo = norm.lo;\n    hi = norm.hi;\n    val = norm.val;\n\n    let nsteps = this.colors.length;\n    let stepsize = (hi - lo) / nsteps;\n    let startpos = Math.min(Math.floor((val - lo) / stepsize), nsteps - 1);\n    let endpos = Math.min(startpos + 1, nsteps - 1);\n\n    let frac = (val - lo - (startpos * stepsize)) / stepsize;\n\n    let startcol = this.colors[startpos];\n    let endcol = this.colors[endpos];\n\n    let col = new Color(startcol.r + frac * (endcol.r - startcol.r),\n      startcol.g + frac * (endcol.g - startcol.g),\n      startcol.b + frac * (endcol.b - startcol.b));\n    return col.getHex();\n  }\n}\n\n/**\n * built in gradient schemes\n * The user can pass these strings directly as the gradient\n * @prop rwb - red/white/blue, supports setting a mid point for white\n * @prop roygb - rainbow\n * @prop sinebow - rainbow with better saturation properties\n * @prop linear  - linearly maps between provided colors\n *\n  */\n export const builtinGradients  = {\n  \"rwb\": RWB,\n  \"RWB\": RWB,\n  \"roygb\": ROYGB,\n  \"ROYGB\": ROYGB,\n  \"sinebow\": Sinebow,\n  \"linear\": CustomLinear\n};\n\nexport class Gradient extends GradientType {\n  static RWB = RWB;\n  static ROYGB = ROYGB;\n  static Sinebow = Sinebow;\n  static CustomLinear = CustomLinear;\n  static builtinGradients = builtinGradients;\n  static normalizeValue = normalizeValue;\n  static getGradient = getGradient;\n  valueToHex(_value: number, _range?: number[]): number { return 0; }\n  range(): [number, number] | null { return null; }\n}","import {\n  SpriteAlignment,\n  Texture,\n  SpriteMaterial,\n  Sprite,\n  Vector2,\n} from \"./WebGL\";\nimport { Gradient } from \"./Gradient\";\nimport { Color, CC, ColorSpec } from \"./colors\";\nimport {XYZ} from \"./WebGL/math\"\n\n// Adapted from the text sprite example from http://stemkoski.github.io/Three.js/index.html\n\nexport let LabelCount = 0;\n\n// Function for drawing rounded rectangles - for Label drawing\nfunction roundRect(ctx: CanvasRenderingContext2D, x: any, y: any, w: number, h: number, r: number, drawBorder: boolean) {\n  ctx.beginPath();\n  ctx.moveTo(x + r, y);\n  ctx.lineTo(x + w - r, y);\n  ctx.quadraticCurveTo(x + w, y, x + w, y + r);\n  ctx.lineTo(x + w, y + h - r);\n  ctx.quadraticCurveTo(x + w, y + h, x + w - r, y + h);\n  ctx.lineTo(x + r, y + h);\n  ctx.quadraticCurveTo(x, y + h, x, y + h - r);\n  ctx.lineTo(x, y + r);\n  ctx.quadraticCurveTo(x, y, x + r, y);\n  ctx.closePath();\n  ctx.fill();\n  if (drawBorder) ctx.stroke();\n}\n\n//do all the checks to figure out what color is desired\nfunction getColor(style: any, stylealpha?: any, init?: any) {\n  var ret = init;\n  if (typeof style != \"undefined\") {\n    //convet regular colors\n    if (style instanceof Color) ret = style.scaled();\n    else {\n      //hex or name\n      ret = CC.color(style);\n      if (typeof ret.scaled != \"undefined\") {\n        ret = ret.scaled(); //not already scaled to 255\n      }\n    }\n  }\n  if (typeof stylealpha != \"undefined\") {\n    ret.a = parseFloat(stylealpha);\n  }\n  return ret;\n}\n\n/** Label style specification */\nexport interface LabelSpec {\n/** font name, default sans-serif */\n  font?: string;\n  /** height of text, default 18 */\n  fontSize?: number;\n  /** font color, default white */\n  fontColor?: ColorSpec;\n  /** font opacity, default 1 */\n  fontOpacity?: number;\n  /** line width of border around label, default 0  */\n  borderThickness?: number;\n  /** color of border, default backgroundColor */\n  borderColor?: ColorSpec;\n  /** opacity of border */\n  borderOpacity?: number;\n  /** color of background, default black */\n  backgroundColor?: ColorSpec;\n  /** opacity of background, default 1.0 */\n  backgroundOpacity?: number;\n  /** coordinates for label */\n  position?: XYZ;\n  /** x,y pixel offset of label from position */\n  screenOffset?: Vector2;\n  /** always put labels in front of model */\n  inFront?: boolean;\n  /** show background rounded rectangle, default true */\n  showBackground?: boolean;\n  /** position is in screen (not model) coordinates which are pixel offsets from the upper left corner */\n  useScreen?: boolean;\n  /** An elment to draw into the label. Any CanvasImageSource is allowed.  Label is resized to size of image */\n  backgroundImage?: any;\n  /** how to orient the label w/respect to position: \"topLeft\" (default),\n   * \"topCenter\", \"topRight\", \"centerLeft\", \"center\", \"centerRight\",\n   * \"bottomLeft\", \"bottomCenter\", \"bottomRight\", or an arbitrary offset */\n  alignment?: string | Vector2;\n  /** if set, only display in this frame of an animation */\n  frame?: number;\n}\n\n/**\n * Renderable labels\n * @constructor $3Dmol.Label\n * @param {string} tag - Label text\n * @param {LabelSpec} parameters Label style and font specifications\n */\nexport class Label {\n  id: number;\n  stylespec: any;\n  canvas: HTMLCanvasElement;\n  context: any;\n  sprite: any;\n  text: any;\n  frame: any;\n  constructor(text: string, parameters: LabelSpec) {\n    this.id = LabelCount++;\n    this.stylespec = parameters || {};\n\n    this.canvas = document.createElement(\"canvas\");\n    //todo: implement resizing canvas..\n    this.canvas.width = 134;\n    this.canvas.height = 35;\n    this.context = this.canvas.getContext(\"2d\");\n    this.sprite = new Sprite();\n    this.text = text;\n    this.frame = this.stylespec.frame;\n  }\n\n  getStyle() {\n    return this.stylespec;\n  }\n\n  setContext() {\n    var style = this.stylespec;\n    var useScreen =\n      typeof style.useScreen == \"undefined\" ? false : style.useScreen;\n\n    var showBackground = style.showBackground;\n    if (showBackground === \"0\" || showBackground === \"false\")\n      showBackground = false;\n    if (typeof showBackground == \"undefined\") showBackground = true; //default\n    var font = style.font ? style.font : \"sans-serif\";\n\n    var fontSize = parseInt(style.fontSize) ? parseInt(style.fontSize) : 18;\n\n    var fontColor = getColor(style.fontColor, style.fontOpacity, {\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1.0,\n    });\n\n    var padding = style.padding ? style.padding : 4;\n    var borderThickness = style.borderThickness ? style.borderThickness : 0;\n\n    var backgroundColor = getColor(\n      style.backgroundColor,\n      style.backgroundOpacity,\n      {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 1.0,\n      }\n    );\n\n    var borderColor = getColor(\n      style.borderColor,\n      style.borderOpacity,\n      backgroundColor\n    );\n\n    var position = style.position\n      ? style.position\n      : {\n        x: -10,\n        y: 1,\n        z: 1,\n      };\n\n    // Should labels always be in front of model?\n    var inFront = style.inFront !== undefined ? style.inFront : true;\n    if (inFront === \"false\" || inFront === \"0\") inFront = false;\n\n    // clear canvas\n\n    var spriteAlignment = style.alignment || SpriteAlignment.topLeft;\n    if (\n      typeof spriteAlignment == \"string\" &&\n      spriteAlignment in SpriteAlignment\n    ) {\n      spriteAlignment = (SpriteAlignment as any)[spriteAlignment] ;\n    }\n\n    var bold = \"\";\n    if (style.bold) bold = \"bold \";\n    this.context.font = bold + fontSize + \"px  \" + font;\n\n    var metrics = this.context.measureText(this.text);\n    var textWidth = metrics.width;\n\n    if (!showBackground) borderThickness = 0;\n\n    var width = textWidth + 2.5 * borderThickness + 2 * padding;\n    var height = fontSize * 1.25 + 2 * borderThickness + 2 * padding; // 1.25 is extra height factor for text below baseline: g,j,p,q.\n\n    if (style.backgroundImage) {\n      //resize label to image\n      var img = style.backgroundImage;\n      var w = style.backgroundWidth ? style.backgroundWidth : img.width;\n      var h = style.backgroundHeight ? style.backgroundHeight : img.height;\n      if (w > width) width = w;\n      if (h > height) height = h;\n    }\n\n    this.canvas.width = width;\n    this.canvas.height = height;\n    this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n    bold = \"\";\n    if (style.bold) bold = \"bold \";\n    this.context.font = bold + fontSize + \"px  \" + font;\n\n    // background color\n    this.context.fillStyle =\n      \"rgba(\" +\n      backgroundColor.r +\n      \",\" +\n      backgroundColor.g +\n      \",\" +\n      backgroundColor.b +\n      \",\" +\n      backgroundColor.a +\n      \")\";\n    // border color\n    this.context.strokeStyle =\n      \"rgba(\" +\n      borderColor.r +\n      \",\" +\n      borderColor.g +\n      \",\" +\n      borderColor.b +\n      \",\" +\n      borderColor.a +\n      \")\";\n\n    if (style.backgroundGradient) {\n      let gradient = this.context.createLinearGradient(\n        0,\n        height / 2,\n        width,\n        height / 2\n      );\n      let g = Gradient.getGradient(style.backgroundGradient);\n      let minmax = g.range();\n      let min = -1;\n      let max = 1;\n      if (minmax) {\n        min = minmax[0];\n        max = minmax[1];\n      }\n      let d = max - min;\n      for (let i = 0; i < 1.01; i += 0.1) {\n        let c = getColor(g.valueToHex(min + d * i));\n        let cname = \"rgba(\" + c.r + \",\" + c.g + \",\" + c.b + \",\" + c.a + \")\";\n        gradient.addColorStop(i, cname);\n      }\n      this.context.fillStyle = gradient;\n    }\n\n    this.context.lineWidth = borderThickness;\n    if (showBackground) {\n      roundRect(\n        this.context,\n        borderThickness,\n        borderThickness,\n        width - 2 * borderThickness,\n        height - 2 * borderThickness,\n        6,\n        borderThickness > 0\n      );\n    }\n\n    if (style.backgroundImage) {\n      this.context.drawImage(img, 0, 0, width, height);\n    }\n\n    // text color\n    this.context.fillStyle =\n      \"rgba(\" +\n      fontColor.r +\n      \",\" +\n      fontColor.g +\n      \",\" +\n      fontColor.b +\n      \",\" +\n      fontColor.a +\n      \")\";\n\n    this.context.fillText(\n      this.text,\n      borderThickness + padding,\n      fontSize + borderThickness + padding,\n      textWidth\n    );\n\n    // canvas contents will be used for a texture\n    var texture = new Texture(this.canvas);\n    texture.needsUpdate = true;\n    this.sprite.material = new SpriteMaterial({\n      map: texture,\n      useScreenCoordinates: useScreen,\n      alignment: spriteAlignment,\n      depthTest: !inFront,\n      screenOffset: style.screenOffset || null,\n    });\n\n    this.sprite.scale.set(1, 1, 1);\n\n    this.sprite.position.set(position.x, position.y, position.z);\n  }\n\n  // clean up material and texture\n  dispose() {\n    if (this.sprite.material.map !== undefined)\n      this.sprite.material.map.dispose();\n    if (this.sprite.material !== undefined) this.sprite.material.dispose();\n  }\n}\n","/*  ProteinSurface.js by biochem_fan\n\nPorted and modified for Javascript based on EDTSurf,\n  whose license is as follows.\n\nPermission to use, copy, modify, and distribute this program for any\npurpose, with or without fee, is hereby granted, provided that this\ncopyright notice and the reference information appear in all copies or\nsubstantial portions of the Software. It is provided \"as is\" without\nexpress or implied warranty. \n\nReference:\nhttp://zhanglab.ccmb.med.umich.edu/EDTSurf/\nD. Xu, Y. Zhang (2009) Generating Triangulated Macromolecular Surfaces\nby Euclidean Distance Transform. PLoS ONE 4(12): e8140.\n\n=======\n\n\n */\nimport {Vector3} from \"./WebGL/math\"\n\n\n/**\n * Surface types\n * @readonly\n * @enum {number}\n * @property VDW - van der Waals surface\n * @property MS - Molecular surface\n * @property SAS - Solvent accessible surface\n * @property SES - Solvent exposed surface\n */\nexport enum SurfaceType {\n    VDW = 1,\n    MS = 2,\n    SAS = 3,\n    SES = 4\n};\n\n/** \n * Render surface synchronously if true\n * @param {boolean} [$3Dmol.syncSurface=false]\n * @type {boolean} */\nexport var syncSurface = false;\n\n/**\n * \n * @param {boolean} val - Whether surfaces should be rendered synchronously or in parallel.\n */\nexport function setSyncSurface(val:boolean) {\n    syncSurface = val;\n}\n\n// Internet Explorer refuses to allow webworkers in data blobs.  I can find\n// no way of checking for this feature directly, so must do a browser check\nif (window.navigator.userAgent.indexOf('MSIE ') >= 0 ||\n    window.navigator.userAgent.indexOf('Trident/') >= 0) {\n    syncSurface = true; // can't use webworkers\n}\n\n\n//Encapsulate marching cube algorithm for isosurface generation\n// (currently used by protein surface rendering and generic volumetric data reading)\nexport class MarchingCubeInitializer {\n    \n    //Marching cube algorithm - assume data has been pre-treated so isovalue is 0 \n    // (i.e. select points greater than 0)\n    //origin -  vector of origin of volumetric data (default is (0,0,0))\n    // nX, nY, nZ - specifies number of voxels in each dimension\n    // scale - cube diagonal unit vector scale (3Dmol vector) (specifying distance between data points); diagonal of cube\n    // - default is 1 - assumes unit cube (1,1,1) diag)\n    // fulltable - if true, use full marching cubes and tritables - else use trimmed table (e.g. surf render)\n    // voxel - if true, draws with a blocky voxel style (default false)\n    // verts, faces - vertex and face arrays to fill up\n    \n    //to match with protein surface...\n    ISDONE: number = 2;\n\n    constructor() {\n\n    }\n\n    march(data, verts, faces, spec) {\n\n        let fulltable = !!(spec.fulltable);\n        let origin = (spec.hasOwnProperty('origin') && spec.origin.hasOwnProperty('x')) ? spec.origin : {x:0, y:0, z:0};\n        let voxel = !!(spec.voxel);\n        let transform = spec.matrix; //if this is set, it overrides origin and unitCube\n        \n        let nX = spec.nX || 0;\n        let nY = spec.nY || 0;\n        let nZ = spec.nZ || 0;\n        \n        let scale = spec.scale || 1.0;\n        let unitCube = null;\n        if(spec.unitCube) {\n            unitCube = spec.unitCube;\n        } else {\n            unitCube = {x:scale,y:scale,z:scale};\n        }\n        \n        //keep track of calculated vertices to avoid repeats\n        let vertnums = new Int32Array(nX*nY*nZ);\n        \n        let i, il;\n        \n        for (i = 0, il = vertnums.length; i < il; ++i)\n            vertnums[i] = -1;\n\n        // create (or retrieve) a vertex at the appropriate point for\n        // the edge (p1,p2)\n        \n        let getVertex = function(i, j, k, code, p1, p2) {\n            let pt = {x:0,y:0,z:0};\n            let val1 = !!(code & (1 << p1));\n            let val2 = !!(code & (1 << p2));\n             \n            // p1 if they are the same or if !val1\n            let p = p1;\n            if (!val1 && val2)\n                p = p2;\n            \n            // adjust i,j,k by p\n            if (p & 1)\n                k++;\n            if (p & 2)\n                j++;\n            if (p & 4)\n                i++;\n\n            if(transform) {\n                let vpt = new Vector3(i,j,k);\n                vpt = vpt.applyMatrix4(transform);\n                pt = {x: vpt.x, y: vpt.y, z: vpt.z}; //remove vector gunk\n            } else {\n                pt.x = origin.x+unitCube.x*i;\n                pt.y = origin.y+unitCube.y*j;\n                pt.z = origin.z+unitCube.z*k;\n            }\n            \n            let index = ((nY * i) + j) * nZ + k;\n            //Have to add option to do voxels\n            if (!voxel) {\n            \n                if (vertnums[index] < 0) // not created yet\n                {\n                    vertnums[index] = verts.length;\n                    verts.push( pt );\n                }\n                return vertnums[index];\n            \n            }\n            \n            else {\n                verts.push(pt);\n                return verts.length - 1;\n            }\n            \n        };\n            \n        let intersects = new Int32Array(12);\n        \n        let etable = (fulltable) ? this.edgeTable2 : this.edgeTable;\n        let tritable = (fulltable) ? this.triTable2 : this.triTable;\n                \n        //Run marching cubes algorithm\n        for (i = 0; i < nX-1; ++i) {\n            \n            for (let j = 0; j < nY-1; ++j){\n                \n                for (let k = 0; k < nZ-1; ++k){\n                    \n                    let code = 0;\n                    \n                    for (let p = 0; p < 8; ++p) {\n                        let index = ((nY * (i + ((p & 4) >> 2))) + j + ((p & 2) >> 1)) *\n                                        nZ + k + (p & 1);\n\n                        //TODO: Need to fix vpBits in protein surface for this to work\n                        let val:any = !!(data[index] & this.ISDONE);\n                        //let val = !!(data[index] > 0);   \n                        \n                        code |= val << p;                        \n                    }\n                    \n                    if (code === 0 || code === 255)\n                        continue;\n                    \n                    let ecode = etable[code];\n                    \n                    if (ecode === 0)\n                        continue;\n                        \n                    let ttable = tritable[code];                        \n                    \n                    if (ecode & 1)\n                        intersects[0] = getVertex(i, j, k, code, 0, 1);\n                    if (ecode & 2)\n                        intersects[1] = getVertex(i, j, k, code, 1, 3);\n                    if (ecode & 4)\n                        intersects[2] = getVertex(i, j, k, code, 3, 2);\n                    if (ecode & 8)\n                        intersects[3] = getVertex(i, j, k, code, 2, 0);\n                    if (ecode & 16)\n                        intersects[4] = getVertex(i, j, k, code, 4, 5);\n                    if (ecode & 32)\n                        intersects[5] = getVertex(i, j, k, code, 5, 7);\n                    if (ecode & 64)\n                        intersects[6] = getVertex(i, j, k, code, 7, 6);\n                    if (ecode & 128)\n                        intersects[7] = getVertex(i, j, k, code, 6, 4);\n                    if (ecode & 256)\n                        intersects[8] = getVertex(i, j, k, code, 0, 4);\n                    if (ecode & 512)\n                        intersects[9] = getVertex(i, j, k, code, 1, 5);\n                    if (ecode & 1024)\n                        intersects[10] = getVertex(i, j, k, code, 3, 7);\n                    if (ecode & 2048)\n                        intersects[11] = getVertex(i, j, k, code, 2, 6);       \n\n                    for (let t = 0; t < ttable.length; t += 3) {\n                        \n                        let a = intersects[ttable[t]],\n                            b = intersects[ttable[t+1]],\n                            c = intersects[ttable[t+2]];         \n                                           \n                        if (voxel && t >= 3) {\n                            verts.push(verts[a]); a = verts.length - 1;\n                            verts.push(verts[b]); b = verts.length - 1;\n                            verts.push(verts[c]); c = verts.length - 1;\n                        }\n\n                        \n                        faces.push(a); faces.push(b); faces.push(c);                               \n                    }              \n                    \n                }\n                \n            }\n            \n        }\n             \n        \n    };\n\n    laplacianSmooth (numiter, verts, faces) {\n            let tps = new Array(verts.length);\n            let i, il, j, jl, k;\n            for (i = 0, il = verts.length; i < il; i++)\n                    tps[i] = {\n                        x : 0,\n                        y : 0,\n                        z : 0\n                    };\n            let vertdeg = new Array(20);\n            let flagvert;\n            for (i = 0; i < 20; i++)\n                    vertdeg[i] = new Array(verts.length);\n            for (i = 0, il = verts.length; i < il; i++)\n                    vertdeg[0][i] = 0;\n            for (i = 0, il = faces.length / 3; i < il; i++) {\n                let aoffset = i*3, boffset = i*3 + 1, coffset = i*3 + 2;\n                flagvert = true;\n                for (j = 0, jl = vertdeg[0][faces[aoffset]]; j < jl; j++) {\n                    if (faces[boffset] == vertdeg[j + 1][faces[aoffset]]) {\n                        flagvert = false;\n                        break;\n                    }\n                }\n                if (flagvert) {\n                    vertdeg[0][faces[aoffset]]++;\n                    vertdeg[vertdeg[0][faces[aoffset]]][faces[aoffset]] = faces[boffset];\n                }\n                flagvert = true;\n                for (j = 0, jl = vertdeg[0][faces[aoffset]]; j < jl; j++) {\n                    if (faces[coffset] == vertdeg[j + 1][faces[aoffset]]) {\n                        flagvert = false;\n                        break;\n                    }\n                }\n                if (flagvert) {\n                    vertdeg[0][faces[aoffset]]++;\n                    vertdeg[vertdeg[0][faces[aoffset]]][faces[aoffset]] = faces[coffset];\n                }\n                // b\n                flagvert = true;\n                for (j = 0, jl = vertdeg[0][faces[boffset]]; j < jl; j++) {\n                    if (faces[aoffset] == vertdeg[j + 1][faces[boffset]]) {\n                        flagvert = false;\n                        break;\n                    }\n                }\n                if (flagvert) {\n                    vertdeg[0][faces[boffset]]++;\n                    vertdeg[vertdeg[0][faces[boffset]]][faces[boffset]] = faces[aoffset];\n                }\n                flagvert = true;\n                for (j = 0, jl = vertdeg[0][faces[boffset]]; j < jl; j++) {\n                    if (faces[coffset] == vertdeg[j + 1][faces[boffset]]) {\n                        flagvert = false;\n                        break;\n                    }\n                }\n                if (flagvert) {\n                    vertdeg[0][faces[boffset]]++;\n                    vertdeg[vertdeg[0][faces[boffset]]][faces[boffset]] = faces[coffset];\n                }\n                // c\n                flagvert = true;\n                for (j = 0; j < vertdeg[0][faces[coffset]]; j++) {\n                    if (faces[aoffset] == vertdeg[j + 1][faces[coffset]]) {\n                        flagvert = false;\n                        break;\n                    }\n                }\n                if (flagvert) {\n                    vertdeg[0][faces[coffset]]++;\n                    vertdeg[vertdeg[0][faces[coffset]]][faces[coffset]] = faces[aoffset];\n                }\n                flagvert = true;\n                for (j = 0, jl = vertdeg[0][faces[coffset]]; j < jl; j++) {\n                    if (faces[boffset] == vertdeg[j + 1][faces[coffset]]) {\n                        flagvert = false;\n                        break;\n                    }\n                }\n                if (flagvert) {\n                    vertdeg[0][faces[coffset]]++;\n                    vertdeg[vertdeg[0][faces[coffset]]][faces[coffset]] = faces[boffset];\n                }\n            }\n\n            let wt = 1.00;\n            let wt2 = 0.50;\n\n            for (k = 0; k < numiter; k++) {\n                    for (i = 0, il = verts.length; i < il; i++) {\n                            if (vertdeg[0][i] < 3) {\n                                    tps[i].x = verts[i].x;\n                                    tps[i].y = verts[i].y;\n                                    tps[i].z = verts[i].z;\n                            } else if (vertdeg[0][i] == 3 || vertdeg[0][i] == 4) {\n                                    tps[i].x = 0;\n                                    tps[i].y = 0;\n                                    tps[i].z = 0;\n                                    for (j = 0, jl = vertdeg[0][i]; j < jl; j++) {\n                                            tps[i].x += verts[vertdeg[j + 1][i]].x;\n                                            tps[i].y += verts[vertdeg[j + 1][i]].y;\n                                            tps[i].z += verts[vertdeg[j + 1][i]].z;\n                                    }\n                                    tps[i].x += wt2 * verts[i].x;\n                                    tps[i].y += wt2 * verts[i].y;\n                                    tps[i].z += wt2 * verts[i].z;\n                                    tps[i].x /= wt2 + vertdeg[0][i];\n                                    tps[i].y /= wt2 + vertdeg[0][i];\n                                    tps[i].z /= wt2 + vertdeg[0][i];\n                            } else {\n                                    tps[i].x = 0;\n                                    tps[i].y = 0;\n                                    tps[i].z = 0;\n                                    for (j = 0, jl = vertdeg[0][i]; j < jl; j++) {\n                                            tps[i].x += verts[vertdeg[j + 1][i]].x;\n                                            tps[i].y += verts[vertdeg[j + 1][i]].y;\n                                            tps[i].z += verts[vertdeg[j + 1][i]].z;\n                                    }\n                                    tps[i].x += wt * verts[i].x;\n                                    tps[i].y += wt * verts[i].y;\n                                    tps[i].z += wt * verts[i].z;\n                                    tps[i].x /= wt + vertdeg[0][i];\n                                    tps[i].y /= wt + vertdeg[0][i];\n                                    tps[i].z /= wt + vertdeg[0][i];\n                            }\n                    }\n                    for (i = 0, il = verts.length; i < il; i++) {\n                            verts[i].x = tps[i].x;\n                            verts[i].y = tps[i].y;\n                            verts[i].z = tps[i].z;\n                    }\n                    /*\n                     * computenorm(); for (let i = 0; i < vertnumber; i++) { if\n                     * (verts[i].inout) ssign = 1; else ssign = -1; verts[i].x += ssign *\n                     * outwt * verts[i].pn.x; verts[i].y += ssign * outwt *\n                     * verts[i].pn.y; verts[i].z += ssign * outwt * verts[i].pn.z; }\n                     */\n            }\n    };\n\n\n    /*\n     * These tables are based off those by Paul Bourke and Geoffrey Heller:\n     * http://paulbourke.net/geometry/polygonise/\n     * http://paulbourke.net/geometry/polygonise/table2.txt\n     * \n     * However, they have been substantially modified to reflect a more \n     * sensible corner numbering scheme and the discrete nature of our voxel data\n     * (resulting in fewer faces).\n     */\n    edgeTable: Uint32Array = new Uint32Array([ 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n            0xb00, 0x0, 0x0, 0x0, 0x700, 0x0, 0xd00, 0xe00, 0xf00, 0x0, 0x0, 0x0,\n            0x8a, 0x0, 0x15, 0x0, 0x86, 0x0, 0x0, 0x0, 0x28c, 0x0, 0x813, 0xf19,\n            0xe10, 0x0, 0x0, 0x0, 0x2a, 0x0, 0x0, 0x0, 0x126, 0x0, 0x0, 0x15, 0x1c,\n            0x0, 0xf23, 0x419, 0xd20, 0x0, 0xa8, 0xa2, 0xaa, 0x0, 0x285, 0x9ab,\n            0x8a2, 0x0, 0x2af, 0x125, 0xac, 0xfaa, 0xea3, 0xda9, 0xca0, 0x0, 0x0,\n            0x0, 0x0, 0x0, 0x45, 0x0, 0x384, 0x0, 0x0, 0x0, 0x700, 0x8a, 0x83,\n            0x648, 0x780, 0x0, 0x51, 0x0, 0x81a, 0x54, 0x55, 0x54, 0x56, 0x0, 0x51,\n            0x0, 0xe5c, 0x14a, 0x451, 0x759, 0x650, 0x0, 0x0, 0x0, 0x2a, 0x0, 0x45,\n            0x0, 0x1f6, 0x0, 0x0, 0x15, 0xdfc, 0x8a, 0x7f3, 0x4f9, 0x5f0, 0xb00,\n            0x68, 0x921, 0x6a, 0x348, 0x245, 0x16f, 0x66, 0xb00, 0xe6f, 0xd65,\n            0xc6c, 0x76a, 0x663, 0x569, 0x460, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0,\n            0xf46, 0x0, 0x0, 0x45, 0x24c, 0x2a, 0x823, 0x29, 0xb40, 0x0, 0x0, 0x0,\n            0x6ba, 0x0, 0x8f5, 0xfff, 0xef6, 0x0, 0xff, 0x2f5, 0x2fc, 0x9ea, 0x8f3,\n            0xbf9, 0xaf0, 0x0, 0x0, 0x51, 0x152, 0x0, 0xf55, 0x45f, 0xd56, 0x54,\n            0x357, 0x55, 0x154, 0x852, 0xb53, 0x59, 0x950, 0x700, 0x2c8, 0xc2,\n            0x48a, 0xfc4, 0xec5, 0xdcf, 0xcc6, 0x2c4, 0x2cf, 0xc5, 0xcc, 0xbca,\n            0xac3, 0x9c9, 0x8c0, 0x0, 0x0, 0x0, 0x0, 0xa8, 0x1a4, 0xa8, 0x7a6,\n            0xa2, 0xa2, 0x2a4, 0xbac, 0xaa, 0xa3, 0x2a8, 0x3a0, 0xd00, 0xc18,\n            0xd00, 0xe3a, 0x34, 0x35, 0x73f, 0x636, 0x924, 0x83f, 0xb35, 0xa3c,\n            0x12a, 0x33, 0x339, 0x230, 0xe00, 0xe00, 0xc12, 0xd9a, 0x684, 0x795,\n            0x49f, 0x596, 0x92, 0xb9f, 0x815, 0x99c, 0x9a, 0x393, 0x99, 0x190,\n            0xf00, 0xe08, 0xd01, 0xc0a, 0x704, 0x605, 0x50f, 0x406, 0xb02, 0xa0f,\n            0x905, 0x80c, 0x30a, 0x203, 0x109, 0x0 ]);\n    \n    \n    triTable =  [ [], [], [], [], [], [], [], [ 11, 9, 8 ], [], [], [],\n            [ 8, 10, 9 ], [], [ 10, 8, 11 ], [ 9, 11, 10 ],\n            [ 8, 10, 9, 8, 11, 10 ], [], [], [], [ 1, 7, 3 ], [], [ 4, 2, 0 ], [],\n            [ 2, 1, 7 ], [], [], [], [ 2, 7, 3, 2, 9, 7 ], [],\n            [ 1, 4, 11, 1, 0, 4 ], [ 3, 8, 0, 11, 9, 4, 11, 10, 9 ],\n            [ 4, 11, 9, 11, 10, 9 ], [], [], [], [ 5, 3, 1 ], [], [], [],\n            [ 2, 5, 8, 2, 1, 5 ], [], [], [ 2, 4, 0 ], [ 3, 2, 4 ], [],\n            [ 0, 9, 1, 8, 10, 5, 8, 11, 10 ], [ 3, 4, 0, 3, 10, 4 ],\n            [ 5, 8, 10, 8, 11, 10 ], [], [ 3, 5, 7 ], [ 7, 1, 5 ],\n            [ 1, 7, 3, 1, 5, 7 ], [], [ 9, 2, 0, 9, 7, 2 ],\n            [ 0, 3, 8, 1, 7, 11, 1, 5, 7 ], [ 11, 1, 7, 1, 5, 7 ], [],\n            [ 9, 1, 0, 5, 3, 2, 5, 7, 3 ], [ 8, 2, 5, 8, 0, 2 ],\n            [ 2, 5, 3, 5, 7, 3 ], [ 3, 9, 1, 3, 8, 9, 7, 11, 10, 7, 10, 5 ],\n            [ 9, 1, 0, 10, 7, 11, 10, 5, 7 ], [ 3, 8, 0, 7, 10, 5, 7, 11, 10 ],\n            [ 11, 5, 7, 11, 10, 5 ], [], [], [], [], [], [ 0, 6, 2 ], [],\n            [ 7, 2, 9, 7, 9, 8 ], [], [], [], [ 8, 10, 9 ], [ 7, 1, 3 ],\n            [ 7, 1, 0 ], [ 6, 9, 3, 6, 10, 9 ], [ 7, 10, 8, 10, 9, 8 ], [],\n            [ 6, 0, 4 ], [], [ 11, 1, 4, 11, 3, 1 ], [ 2, 4, 6 ],\n            [ 2, 0, 4, 2, 4, 6 ], [ 2, 4, 6 ], [ 1, 4, 2, 4, 6, 2 ], [],\n            [ 6, 0, 4 ], [], [ 2, 11, 3, 6, 9, 4, 6, 10, 9 ], [ 8, 6, 1, 8, 1, 3 ],\n            [ 10, 0, 6, 0, 4, 6 ], [ 8, 0, 3, 9, 6, 10, 9, 4, 6 ],\n            [ 10, 4, 6, 10, 9, 4 ], [], [], [], [ 5, 3, 1 ], [], [ 0, 6, 2 ], [],\n            [ 7, 4, 8, 5, 2, 1, 5, 6, 2 ], [], [], [ 2, 4, 0 ],\n            [ 7, 4, 8, 2, 11, 3, 10, 5, 6 ], [ 7, 1, 3 ],\n            [ 5, 6, 10, 0, 9, 1, 8, 7, 4 ], [ 5, 6, 10, 7, 0, 3, 7, 4, 0 ],\n            [ 10, 5, 6, 4, 8, 7 ], [ 9, 11, 8 ], [ 3, 5, 6 ],\n            [ 0, 5, 11, 0, 11, 8 ], [ 6, 3, 5, 3, 1, 5 ], [ 3, 9, 6, 3, 8, 9 ],\n            [ 9, 6, 0, 6, 2, 0 ], [ 0, 3, 8, 2, 5, 6, 2, 1, 5 ],\n            [ 1, 6, 2, 1, 5, 6 ], [ 9, 11, 8 ], [ 1, 0, 9, 6, 10, 5, 11, 3, 2 ],\n            [ 6, 10, 5, 2, 8, 0, 2, 11, 8 ], [ 3, 2, 11, 10, 5, 6 ],\n            [ 10, 5, 6, 9, 3, 8, 9, 1, 3 ], [ 0, 9, 1, 5, 6, 10 ],\n            [ 8, 0, 3, 10, 5, 6 ], [ 10, 5, 6 ], [], [], [], [], [], [], [],\n            [ 1, 10, 2, 9, 11, 6, 9, 8, 11 ], [], [], [ 6, 0, 2 ],\n            [ 3, 6, 9, 3, 2, 6 ], [ 3, 5, 1 ], [ 0, 5, 1, 0, 11, 5 ], [ 0, 3, 5 ],\n            [ 6, 9, 11, 9, 8, 11 ], [], [], [], [ 4, 5, 9, 7, 1, 10, 7, 3, 1 ], [],\n            [ 11, 6, 7, 2, 4, 5, 2, 0, 4 ],\n            [ 11, 6, 7, 8, 0, 3, 1, 10, 2, 9, 4, 5 ],\n            [ 6, 7, 11, 1, 10, 2, 9, 4, 5 ], [],\n            [ 4, 1, 0, 4, 5, 1, 6, 7, 3, 6, 3, 2 ], [ 9, 4, 5, 0, 6, 7, 0, 2, 6 ],\n            [ 4, 5, 9, 6, 3, 2, 6, 7, 3 ], [ 6, 7, 11, 5, 3, 8, 5, 1, 3 ],\n            [ 6, 7, 11, 4, 1, 0, 4, 5, 1 ], [ 4, 5, 9, 3, 8, 0, 11, 6, 7 ],\n            [ 9, 4, 5, 7, 11, 6 ], [], [], [ 0, 6, 4 ], [ 8, 6, 4, 8, 1, 6 ], [],\n            [ 0, 10, 2, 0, 9, 10, 4, 8, 11, 4, 11, 6 ],\n            [ 10, 2, 1, 6, 0, 3, 6, 4, 0 ], [ 10, 2, 1, 11, 4, 8, 11, 6, 4 ],\n            [ 4, 2, 6 ], [ 1, 0, 9, 2, 4, 8, 2, 6, 4 ], [ 2, 4, 0, 2, 6, 4 ],\n            [ 8, 2, 4, 2, 6, 4 ], [ 11, 4, 1, 11, 6, 4 ],\n            [ 0, 9, 1, 4, 11, 6, 4, 8, 11 ], [ 3, 6, 0, 6, 4, 0 ],\n            [ 8, 6, 4, 8, 11, 6 ], [ 10, 8, 9 ], [ 6, 3, 9, 6, 7, 3 ], [ 6, 7, 1 ],\n            [ 10, 7, 1, 7, 3, 1 ], [ 7, 11, 6, 8, 10, 2, 8, 9, 10 ],\n            [ 11, 6, 7, 10, 0, 9, 10, 2, 0 ], [ 2, 1, 10, 7, 11, 6, 8, 0, 3 ],\n            [ 1, 10, 2, 6, 7, 11 ], [ 7, 2, 6, 7, 9, 2 ],\n            [ 1, 0, 9, 3, 6, 7, 3, 2, 6 ], [ 7, 0, 6, 0, 2, 6 ],\n            [ 2, 7, 3, 2, 6, 7 ], [ 7, 11, 6, 3, 9, 1, 3, 8, 9 ],\n            [ 9, 1, 0, 11, 6, 7 ], [ 0, 3, 8, 11, 6, 7 ], [ 11, 6, 7 ], [], [], [],\n            [], [ 5, 3, 7 ], [ 8, 5, 2, 8, 7, 5 ], [ 5, 3, 7 ],\n            [ 1, 10, 2, 5, 8, 7, 5, 9, 8 ], [ 1, 7, 5 ], [ 1, 7, 5 ],\n            [ 9, 2, 7, 9, 7, 5 ], [ 11, 3, 2, 8, 5, 9, 8, 7, 5 ],\n            [ 1, 3, 7, 1, 7, 5 ], [ 0, 7, 1, 7, 5, 1 ], [ 9, 3, 5, 3, 7, 5 ],\n            [ 9, 7, 5, 9, 8, 7 ], [ 8, 10, 11 ], [ 3, 4, 10, 3, 10, 11 ],\n            [ 8, 10, 11 ], [ 5, 9, 4, 1, 11, 3, 1, 10, 11 ], [ 2, 4, 5 ],\n            [ 5, 2, 4, 2, 0, 4 ], [ 0, 3, 8, 5, 9, 4, 10, 2, 1 ],\n            [ 2, 1, 10, 9, 4, 5 ], [ 2, 8, 5, 2, 11, 8 ],\n            [ 3, 2, 11, 1, 4, 5, 1, 0, 4 ], [ 9, 4, 5, 8, 2, 11, 8, 0, 2 ],\n            [ 11, 3, 2, 9, 4, 5 ], [ 8, 5, 3, 5, 1, 3 ], [ 5, 0, 4, 5, 1, 0 ],\n            [ 3, 8, 0, 4, 5, 9 ], [ 9, 4, 5 ], [ 11, 9, 10 ], [ 11, 9, 10 ],\n            [ 1, 11, 4, 1, 10, 11 ], [ 8, 7, 4, 11, 1, 10, 11, 3, 1 ],\n            [ 2, 7, 9, 2, 9, 10 ], [ 4, 8, 7, 0, 10, 2, 0, 9, 10 ],\n            [ 2, 1, 10, 0, 7, 4, 0, 3, 7 ], [ 10, 2, 1, 8, 7, 4 ], [ 1, 7, 4 ],\n            [ 3, 2, 11, 4, 8, 7, 9, 1, 0 ], [ 11, 4, 2, 4, 0, 2 ],\n            [ 2, 11, 3, 7, 4, 8 ], [ 4, 1, 7, 1, 3, 7 ], [ 1, 0, 9, 8, 7, 4 ],\n            [ 3, 4, 0, 3, 7, 4 ], [ 8, 7, 4 ], [ 8, 9, 10, 8, 10, 11 ],\n            [ 3, 9, 11, 9, 10, 11 ], [ 0, 10, 8, 10, 11, 8 ],\n            [ 10, 3, 1, 10, 11, 3 ], [ 2, 8, 10, 8, 9, 10 ], [ 9, 2, 0, 9, 10, 2 ],\n            [ 8, 0, 3, 1, 10, 2 ], [ 10, 2, 1 ], [ 1, 11, 9, 11, 8, 9 ],\n            [ 11, 3, 2, 0, 9, 1 ], [ 11, 0, 2, 11, 8, 0 ], [ 11, 3, 2 ],\n            [ 8, 1, 3, 8, 9, 1 ], [ 9, 1, 0 ], [ 8, 0, 3 ], [] ];\n     \n    edgeTable2 = [ 0x0, 0x109, 0x203, 0x30a, 0x80c, 0x905, 0xa0f,\n            0xb06, 0x406, 0x50f, 0x605, 0x70c, 0xc0a, 0xd03, 0xe09, 0xf00, 0x190,\n            0x99, 0x393, 0x29a, 0x99c, 0x895, 0xb9f, 0xa96, 0x596, 0x49f, 0x795,\n            0x69c, 0xd9a, 0xc93, 0xf99, 0xe90, 0x230, 0x339, 0x33, 0x13a, 0xa3c,\n            0xb35, 0x83f, 0x936, 0x636, 0x73f, 0x435, 0x53c, 0xe3a, 0xf33, 0xc39,\n            0xd30, 0x3a0, 0x2a9, 0x1a3, 0xaa, 0xbac, 0xaa5, 0x9af, 0x8a6, 0x7a6,\n            0x6af, 0x5a5, 0x4ac, 0xfaa, 0xea3, 0xda9, 0xca0, 0x8c0, 0x9c9, 0xac3,\n            0xbca, 0xcc, 0x1c5, 0x2cf, 0x3c6, 0xcc6, 0xdcf, 0xec5, 0xfcc, 0x4ca,\n            0x5c3, 0x6c9, 0x7c0, 0x950, 0x859, 0xb53, 0xa5a, 0x15c, 0x55, 0x35f,\n            0x256, 0xd56, 0xc5f, 0xf55, 0xe5c, 0x55a, 0x453, 0x759, 0x650, 0xaf0,\n            0xbf9, 0x8f3, 0x9fa, 0x2fc, 0x3f5, 0xff, 0x1f6, 0xef6, 0xfff, 0xcf5,\n            0xdfc, 0x6fa, 0x7f3, 0x4f9, 0x5f0, 0xb60, 0xa69, 0x963, 0x86a, 0x36c,\n            0x265, 0x16f, 0x66, 0xf66, 0xe6f, 0xd65, 0xc6c, 0x76a, 0x663, 0x569,\n            0x460, 0x460, 0x569, 0x663, 0x76a, 0xc6c, 0xd65, 0xe6f, 0xf66, 0x66,\n            0x16f, 0x265, 0x36c, 0x86a, 0x963, 0xa69, 0xb60, 0x5f0, 0x4f9, 0x7f3,\n            0x6fa, 0xdfc, 0xcf5, 0xfff, 0xef6, 0x1f6, 0xff, 0x3f5, 0x2fc, 0x9fa,\n            0x8f3, 0xbf9, 0xaf0, 0x650, 0x759, 0x453, 0x55a, 0xe5c, 0xf55, 0xc5f,\n            0xd56, 0x256, 0x35f, 0x55, 0x15c, 0xa5a, 0xb53, 0x859, 0x950, 0x7c0,\n            0x6c9, 0x5c3, 0x4ca, 0xfcc, 0xec5, 0xdcf, 0xcc6, 0x3c6, 0x2cf, 0x1c5,\n            0xcc, 0xbca, 0xac3, 0x9c9, 0x8c0, 0xca0, 0xda9, 0xea3, 0xfaa, 0x4ac,\n            0x5a5, 0x6af, 0x7a6, 0x8a6, 0x9af, 0xaa5, 0xbac, 0xaa, 0x1a3, 0x2a9,\n            0x3a0, 0xd30, 0xc39, 0xf33, 0xe3a, 0x53c, 0x435, 0x73f, 0x636, 0x936,\n            0x83f, 0xb35, 0xa3c, 0x13a, 0x33, 0x339, 0x230, 0xe90, 0xf99, 0xc93,\n            0xd9a, 0x69c, 0x795, 0x49f, 0x596, 0xa96, 0xb9f, 0x895, 0x99c, 0x29a,\n            0x393, 0x99, 0x190, 0xf00, 0xe09, 0xd03, 0xc0a, 0x70c, 0x605, 0x50f,\n            0x406, 0xb06, 0xa0f, 0x905, 0x80c, 0x30a, 0x203, 0x109, 0x0 ];\n     \n    triTable2 = [ [], [ 8, 3, 0 ], [ 9, 0, 1 ], [ 8, 3, 1, 8, 1, 9 ],\n            [ 11, 2, 3 ], [ 11, 2, 0, 11, 0, 8 ], [ 11, 2, 3, 0, 1, 9 ],\n            [ 2, 1, 11, 1, 9, 11, 11, 9, 8 ], [ 10, 1, 2 ], [ 8, 3, 0, 1, 2, 10 ],\n            [ 9, 0, 2, 9, 2, 10 ], [ 3, 2, 8, 2, 10, 8, 8, 10, 9 ],\n            [ 10, 1, 3, 10, 3, 11 ], [ 1, 0, 10, 0, 8, 10, 10, 8, 11 ],\n            [ 0, 3, 9, 3, 11, 9, 9, 11, 10 ], [ 8, 10, 9, 8, 11, 10 ], [ 8, 4, 7 ],\n            [ 3, 0, 4, 3, 4, 7 ], [ 1, 9, 0, 8, 4, 7 ],\n            [ 9, 4, 1, 4, 7, 1, 1, 7, 3 ], [ 2, 3, 11, 7, 8, 4 ],\n            [ 7, 11, 4, 11, 2, 4, 4, 2, 0 ], [ 3, 11, 2, 4, 7, 8, 9, 0, 1 ],\n            [ 2, 7, 11, 2, 1, 7, 1, 4, 7, 1, 9, 4 ], [ 10, 1, 2, 8, 4, 7 ],\n            [ 2, 10, 1, 0, 4, 7, 0, 7, 3 ], [ 4, 7, 8, 0, 2, 10, 0, 10, 9 ],\n            [ 2, 7, 3, 2, 9, 7, 7, 9, 4, 2, 10, 9 ],\n            [ 8, 4, 7, 11, 10, 1, 11, 1, 3 ],\n            [ 11, 4, 7, 1, 4, 11, 1, 11, 10, 1, 0, 4 ],\n            [ 3, 8, 0, 7, 11, 4, 11, 9, 4, 11, 10, 9 ],\n            [ 7, 11, 4, 4, 11, 9, 11, 10, 9 ], [ 9, 5, 4 ], [ 3, 0, 8, 4, 9, 5 ],\n            [ 5, 4, 0, 5, 0, 1 ], [ 4, 8, 5, 8, 3, 5, 5, 3, 1 ],\n            [ 11, 2, 3, 9, 5, 4 ], [ 9, 5, 4, 8, 11, 2, 8, 2, 0 ],\n            [ 3, 11, 2, 1, 5, 4, 1, 4, 0 ],\n            [ 8, 5, 4, 2, 5, 8, 2, 8, 11, 2, 1, 5 ], [ 2, 10, 1, 9, 5, 4 ],\n            [ 0, 8, 3, 5, 4, 9, 10, 1, 2 ], [ 10, 5, 2, 5, 4, 2, 2, 4, 0 ],\n            [ 3, 4, 8, 3, 2, 4, 2, 5, 4, 2, 10, 5 ],\n            [ 5, 4, 9, 1, 3, 11, 1, 11, 10 ],\n            [ 0, 9, 1, 4, 8, 5, 8, 10, 5, 8, 11, 10 ],\n            [ 3, 4, 0, 3, 10, 4, 4, 10, 5, 3, 11, 10 ],\n            [ 4, 8, 5, 5, 8, 10, 8, 11, 10 ], [ 9, 5, 7, 9, 7, 8 ],\n            [ 0, 9, 3, 9, 5, 3, 3, 5, 7 ], [ 8, 0, 7, 0, 1, 7, 7, 1, 5 ],\n            [ 1, 7, 3, 1, 5, 7 ], [ 11, 2, 3, 8, 9, 5, 8, 5, 7 ],\n            [ 9, 2, 0, 9, 7, 2, 2, 7, 11, 9, 5, 7 ],\n            [ 0, 3, 8, 2, 1, 11, 1, 7, 11, 1, 5, 7 ],\n            [ 2, 1, 11, 11, 1, 7, 1, 5, 7 ], [ 1, 2, 10, 5, 7, 8, 5, 8, 9 ],\n            [ 9, 1, 0, 10, 5, 2, 5, 3, 2, 5, 7, 3 ],\n            [ 5, 2, 10, 8, 2, 5, 8, 5, 7, 8, 0, 2 ],\n            [ 10, 5, 2, 2, 5, 3, 5, 7, 3 ],\n            [ 3, 9, 1, 3, 8, 9, 7, 11, 10, 7, 10, 5 ],\n            [ 9, 1, 0, 10, 7, 11, 10, 5, 7 ], [ 3, 8, 0, 7, 10, 5, 7, 11, 10 ],\n            [ 11, 5, 7, 11, 10, 5 ], [ 11, 7, 6 ], [ 0, 8, 3, 11, 7, 6 ],\n            [ 9, 0, 1, 11, 7, 6 ], [ 7, 6, 11, 3, 1, 9, 3, 9, 8 ],\n            [ 2, 3, 7, 2, 7, 6 ], [ 8, 7, 0, 7, 6, 0, 0, 6, 2 ],\n            [ 1, 9, 0, 3, 7, 6, 3, 6, 2 ], [ 7, 6, 2, 7, 2, 9, 2, 1, 9, 7, 9, 8 ],\n            [ 1, 2, 10, 6, 11, 7 ], [ 2, 10, 1, 7, 6, 11, 8, 3, 0 ],\n            [ 11, 7, 6, 10, 9, 0, 10, 0, 2 ],\n            [ 7, 6, 11, 3, 2, 8, 8, 2, 10, 8, 10, 9 ],\n            [ 6, 10, 7, 10, 1, 7, 7, 1, 3 ],\n            [ 6, 10, 1, 6, 1, 7, 7, 1, 0, 7, 0, 8 ],\n            [ 9, 0, 3, 6, 9, 3, 6, 10, 9, 6, 3, 7 ],\n            [ 6, 10, 7, 7, 10, 8, 10, 9, 8 ], [ 8, 4, 6, 8, 6, 11 ],\n            [ 11, 3, 6, 3, 0, 6, 6, 0, 4 ], [ 0, 1, 9, 4, 6, 11, 4, 11, 8 ],\n            [ 1, 9, 4, 11, 1, 4, 11, 3, 1, 11, 4, 6 ],\n            [ 3, 8, 2, 8, 4, 2, 2, 4, 6 ], [ 2, 0, 4, 2, 4, 6 ],\n            [ 1, 9, 0, 3, 8, 2, 2, 8, 4, 2, 4, 6 ], [ 9, 4, 1, 1, 4, 2, 4, 6, 2 ],\n            [ 10, 1, 2, 11, 8, 4, 11, 4, 6 ],\n            [ 10, 1, 2, 11, 3, 6, 6, 3, 0, 6, 0, 4 ],\n            [ 0, 2, 10, 0, 10, 9, 4, 11, 8, 4, 6, 11 ],\n            [ 2, 11, 3, 6, 9, 4, 6, 10, 9 ],\n            [ 8, 4, 6, 8, 6, 1, 6, 10, 1, 8, 1, 3 ],\n            [ 1, 0, 10, 10, 0, 6, 0, 4, 6 ], [ 8, 0, 3, 9, 6, 10, 9, 4, 6 ],\n            [ 10, 4, 6, 10, 9, 4 ], [ 9, 5, 4, 7, 6, 11 ],\n            [ 4, 9, 5, 3, 0, 8, 11, 7, 6 ], [ 6, 11, 7, 4, 0, 1, 4, 1, 5 ],\n            [ 6, 11, 7, 4, 8, 5, 5, 8, 3, 5, 3, 1 ], [ 4, 9, 5, 6, 2, 3, 6, 3, 7 ],\n            [ 9, 5, 4, 8, 7, 0, 0, 7, 6, 0, 6, 2 ],\n            [ 4, 0, 1, 4, 1, 5, 6, 3, 7, 6, 2, 3 ], [ 7, 4, 8, 5, 2, 1, 5, 6, 2 ],\n            [ 6, 11, 7, 1, 2, 10, 9, 5, 4 ],\n            [ 11, 7, 6, 8, 3, 0, 1, 2, 10, 9, 5, 4 ],\n            [ 11, 7, 6, 10, 5, 2, 2, 5, 4, 2, 4, 0 ],\n            [ 7, 4, 8, 2, 11, 3, 10, 5, 6 ],\n            [ 4, 9, 5, 6, 10, 7, 7, 10, 1, 7, 1, 3 ],\n            [ 5, 6, 10, 0, 9, 1, 8, 7, 4 ], [ 5, 6, 10, 7, 0, 3, 7, 4, 0 ],\n            [ 10, 5, 6, 4, 8, 7 ], [ 5, 6, 9, 6, 11, 9, 9, 11, 8 ],\n            [ 0, 9, 5, 0, 5, 3, 3, 5, 6, 3, 6, 11 ],\n            [ 0, 1, 5, 0, 5, 11, 5, 6, 11, 0, 11, 8 ],\n            [ 11, 3, 6, 6, 3, 5, 3, 1, 5 ], [ 9, 5, 6, 3, 9, 6, 3, 8, 9, 3, 6, 2 ],\n            [ 5, 6, 9, 9, 6, 0, 6, 2, 0 ], [ 0, 3, 8, 2, 5, 6, 2, 1, 5 ],\n            [ 1, 6, 2, 1, 5, 6 ], [ 1, 2, 10, 5, 6, 9, 9, 6, 11, 9, 11, 8 ],\n            [ 1, 0, 9, 6, 10, 5, 11, 3, 2 ], [ 6, 10, 5, 2, 8, 0, 2, 11, 8 ],\n            [ 3, 2, 11, 10, 5, 6 ], [ 10, 5, 6, 9, 3, 8, 9, 1, 3 ],\n            [ 0, 9, 1, 5, 6, 10 ], [ 8, 0, 3, 10, 5, 6 ], [ 10, 5, 6 ],\n            [ 10, 6, 5 ], [ 8, 3, 0, 10, 6, 5 ], [ 0, 1, 9, 5, 10, 6 ],\n            [ 10, 6, 5, 9, 8, 3, 9, 3, 1 ], [ 3, 11, 2, 10, 6, 5 ],\n            [ 6, 5, 10, 2, 0, 8, 2, 8, 11 ], [ 1, 9, 0, 6, 5, 10, 11, 2, 3 ],\n            [ 1, 10, 2, 5, 9, 6, 9, 11, 6, 9, 8, 11 ], [ 1, 2, 6, 1, 6, 5 ],\n            [ 0, 8, 3, 2, 6, 5, 2, 5, 1 ], [ 5, 9, 6, 9, 0, 6, 6, 0, 2 ],\n            [ 9, 6, 5, 3, 6, 9, 3, 9, 8, 3, 2, 6 ], [ 11, 6, 3, 6, 5, 3, 3, 5, 1 ],\n            [ 0, 5, 1, 0, 11, 5, 5, 11, 6, 0, 8, 11 ],\n            [ 0, 5, 9, 0, 3, 5, 3, 6, 5, 3, 11, 6 ],\n            [ 5, 9, 6, 6, 9, 11, 9, 8, 11 ], [ 10, 6, 5, 4, 7, 8 ],\n            [ 5, 10, 6, 7, 3, 0, 7, 0, 4 ], [ 5, 10, 6, 0, 1, 9, 8, 4, 7 ],\n            [ 4, 5, 9, 6, 7, 10, 7, 1, 10, 7, 3, 1 ],\n            [ 7, 8, 4, 2, 3, 11, 10, 6, 5 ],\n            [ 11, 6, 7, 10, 2, 5, 2, 4, 5, 2, 0, 4 ],\n            [ 11, 6, 7, 8, 0, 3, 1, 10, 2, 9, 4, 5 ],\n            [ 6, 7, 11, 1, 10, 2, 9, 4, 5 ], [ 7, 8, 4, 5, 1, 2, 5, 2, 6 ],\n            [ 4, 1, 0, 4, 5, 1, 6, 7, 3, 6, 3, 2 ],\n            [ 9, 4, 5, 8, 0, 7, 0, 6, 7, 0, 2, 6 ], [ 4, 5, 9, 6, 3, 2, 6, 7, 3 ],\n            [ 6, 7, 11, 4, 5, 8, 5, 3, 8, 5, 1, 3 ],\n            [ 6, 7, 11, 4, 1, 0, 4, 5, 1 ], [ 4, 5, 9, 3, 8, 0, 11, 6, 7 ],\n            [ 9, 4, 5, 7, 11, 6 ], [ 10, 6, 4, 10, 4, 9 ],\n            [ 8, 3, 0, 9, 10, 6, 9, 6, 4 ], [ 1, 10, 0, 10, 6, 0, 0, 6, 4 ],\n            [ 8, 6, 4, 8, 1, 6, 6, 1, 10, 8, 3, 1 ],\n            [ 2, 3, 11, 6, 4, 9, 6, 9, 10 ],\n            [ 0, 10, 2, 0, 9, 10, 4, 8, 11, 4, 11, 6 ],\n            [ 10, 2, 1, 11, 6, 3, 6, 0, 3, 6, 4, 0 ],\n            [ 10, 2, 1, 11, 4, 8, 11, 6, 4 ], [ 9, 1, 4, 1, 2, 4, 4, 2, 6 ],\n            [ 1, 0, 9, 3, 2, 8, 2, 4, 8, 2, 6, 4 ], [ 2, 4, 0, 2, 6, 4 ],\n            [ 3, 2, 8, 8, 2, 4, 2, 6, 4 ],\n            [ 1, 4, 9, 11, 4, 1, 11, 1, 3, 11, 6, 4 ],\n            [ 0, 9, 1, 4, 11, 6, 4, 8, 11 ], [ 11, 6, 3, 3, 6, 0, 6, 4, 0 ],\n            [ 8, 6, 4, 8, 11, 6 ], [ 6, 7, 10, 7, 8, 10, 10, 8, 9 ],\n            [ 9, 3, 0, 6, 3, 9, 6, 9, 10, 6, 7, 3 ],\n            [ 6, 1, 10, 6, 7, 1, 7, 0, 1, 7, 8, 0 ],\n            [ 6, 7, 10, 10, 7, 1, 7, 3, 1 ],\n            [ 7, 11, 6, 3, 8, 2, 8, 10, 2, 8, 9, 10 ],\n            [ 11, 6, 7, 10, 0, 9, 10, 2, 0 ], [ 2, 1, 10, 7, 11, 6, 8, 0, 3 ],\n            [ 1, 10, 2, 6, 7, 11 ], [ 7, 2, 6, 7, 9, 2, 2, 9, 1, 7, 8, 9 ],\n            [ 1, 0, 9, 3, 6, 7, 3, 2, 6 ], [ 8, 0, 7, 7, 0, 6, 0, 2, 6 ],\n            [ 2, 7, 3, 2, 6, 7 ], [ 7, 11, 6, 3, 9, 1, 3, 8, 9 ],\n            [ 9, 1, 0, 11, 6, 7 ], [ 0, 3, 8, 11, 6, 7 ], [ 11, 6, 7 ],\n            [ 11, 7, 5, 11, 5, 10 ], [ 3, 0, 8, 7, 5, 10, 7, 10, 11 ],\n            [ 9, 0, 1, 10, 11, 7, 10, 7, 5 ],\n            [ 3, 1, 9, 3, 9, 8, 7, 10, 11, 7, 5, 10 ],\n            [ 10, 2, 5, 2, 3, 5, 5, 3, 7 ],\n            [ 5, 10, 2, 8, 5, 2, 8, 7, 5, 8, 2, 0 ],\n            [ 9, 0, 1, 10, 2, 5, 5, 2, 3, 5, 3, 7 ],\n            [ 1, 10, 2, 5, 8, 7, 5, 9, 8 ], [ 2, 11, 1, 11, 7, 1, 1, 7, 5 ],\n            [ 0, 8, 3, 2, 11, 1, 1, 11, 7, 1, 7, 5 ],\n            [ 9, 0, 2, 9, 2, 7, 2, 11, 7, 9, 7, 5 ],\n            [ 11, 3, 2, 8, 5, 9, 8, 7, 5 ], [ 1, 3, 7, 1, 7, 5 ],\n            [ 8, 7, 0, 0, 7, 1, 7, 5, 1 ], [ 0, 3, 9, 9, 3, 5, 3, 7, 5 ],\n            [ 9, 7, 5, 9, 8, 7 ], [ 4, 5, 8, 5, 10, 8, 8, 10, 11 ],\n            [ 3, 0, 4, 3, 4, 10, 4, 5, 10, 3, 10, 11 ],\n            [ 0, 1, 9, 4, 5, 8, 8, 5, 10, 8, 10, 11 ],\n            [ 5, 9, 4, 1, 11, 3, 1, 10, 11 ],\n            [ 3, 8, 4, 3, 4, 2, 2, 4, 5, 2, 5, 10 ],\n            [ 10, 2, 5, 5, 2, 4, 2, 0, 4 ], [ 0, 3, 8, 5, 9, 4, 10, 2, 1 ],\n            [ 2, 1, 10, 9, 4, 5 ], [ 8, 4, 5, 2, 8, 5, 2, 11, 8, 2, 5, 1 ],\n            [ 3, 2, 11, 1, 4, 5, 1, 0, 4 ], [ 9, 4, 5, 8, 2, 11, 8, 0, 2 ],\n            [ 11, 3, 2, 9, 4, 5 ], [ 4, 5, 8, 8, 5, 3, 5, 1, 3 ],\n            [ 5, 0, 4, 5, 1, 0 ], [ 3, 8, 0, 4, 5, 9 ], [ 9, 4, 5 ],\n            [ 7, 4, 11, 4, 9, 11, 11, 9, 10 ],\n            [ 3, 0, 8, 7, 4, 11, 11, 4, 9, 11, 9, 10 ],\n            [ 11, 7, 4, 1, 11, 4, 1, 10, 11, 1, 4, 0 ],\n            [ 8, 7, 4, 11, 1, 10, 11, 3, 1 ],\n            [ 2, 3, 7, 2, 7, 9, 7, 4, 9, 2, 9, 10 ],\n            [ 4, 8, 7, 0, 10, 2, 0, 9, 10 ], [ 2, 1, 10, 0, 7, 4, 0, 3, 7 ],\n            [ 10, 2, 1, 8, 7, 4 ], [ 2, 11, 7, 2, 7, 1, 1, 7, 4, 1, 4, 9 ],\n            [ 3, 2, 11, 4, 8, 7, 9, 1, 0 ], [ 7, 4, 11, 11, 4, 2, 4, 0, 2 ],\n            [ 2, 11, 3, 7, 4, 8 ], [ 9, 1, 4, 4, 1, 7, 1, 3, 7 ],\n            [ 1, 0, 9, 8, 7, 4 ], [ 3, 4, 0, 3, 7, 4 ], [ 8, 7, 4 ],\n            [ 8, 9, 10, 8, 10, 11 ], [ 0, 9, 3, 3, 9, 11, 9, 10, 11 ],\n            [ 1, 10, 0, 0, 10, 8, 10, 11, 8 ], [ 10, 3, 1, 10, 11, 3 ],\n            [ 3, 8, 2, 2, 8, 10, 8, 9, 10 ], [ 9, 2, 0, 9, 10, 2 ],\n            [ 8, 0, 3, 1, 10, 2 ], [ 10, 2, 1 ], [ 2, 11, 1, 1, 11, 9, 11, 8, 9 ],\n            [ 11, 3, 2, 0, 9, 1 ], [ 11, 0, 2, 11, 8, 0 ], [ 11, 3, 2 ],\n            [ 8, 1, 3, 8, 9, 1 ], [ 9, 1, 0 ], [ 8, 0, 3 ], [] ];\n            \n};\n\nexport let MarchingCube = new MarchingCubeInitializer();\n//each webworker needs its own marching cube object\n\n\n// a little class for 3d array, should really generalize this and\n// use throughout...\nexport class PointGrid  {\n\n    data: Int32Array;\n    width: number;\n    height: number;\n\n    constructor(length, width, height) {\n        // the standard says this is zero initialized\n        this.data = new Int32Array(length * width * height * 3);\n        this.width = width;\n        this.height = height;\n    }\n\n    // set position x,y,z to pt, which has ix,iy,and iz\n    set(x:number, y:number, z:number, pt) {\n        let index = ((((x * this.width) + y) * this.height) + z) * 3;\n        this.data[index] = pt.ix;\n        this.data[index + 1] = pt.iy;\n        this.data[index + 2] = pt.iz;\n    };\n\n    // return point at x,y,z\n    get(x:number, y:number, z:number) {\n        let index = ((((x * this.width) + y) * this.height) + z) * 3;\n        return {\n            ix : this.data[index],\n            iy : this.data[index + 1],\n            iz : this.data[index + 2]\n        };\n    };\n};\n\n/*\n * @type Class\n*/\nexport class ProteinSurface {\n\n    // constants for vpbits bitmasks\n    readonly INOUT = 1;\n    readonly ISDONE = 2;\n    readonly ISBOUND = 4;\n\n    ptranx:number = 0;\n    ptrany:number = 0;\n    ptranz:number = 0;\n    probeRadius:number = 1.4;\n    defaultScaleFactor:number = 2;\n    scaleFactor:number = this.defaultScaleFactor; // 2 is .5A grid; if this is made user configurable,\n                            // also have to adjust offset used to find non-shown\n                            // atoms\n    pHeight:number = 0;\n    pWidth:number = 0;\n    pLength:number = 0;\n    cutRadius:number = 0;\n    vpBits: any = null; // uint8 array of bitmasks\n    vpDistance: any = null; // floatarray of _squared_ distances\n    vpAtomID: any = null; // intarray\n    \n    pminx:number = 0;\n    pminy:number = 0; \n    pminz:number = 0;\n    pmaxx:number = 0;\n    pmaxy:number = 0;\n    pmaxz:number = 0;\n\n    depty = {};\n    widxz = {};\n    faces: number[] = [];\n    verts = [];\n\n    static MarchingCube = new MarchingCubeInitializer();\n\n    constructor() {\n        if(!ProteinSurface.MarchingCube) {\n            //this is needed by webworkers\n            ProteinSurface.MarchingCube = new MarchingCubeInitializer();\n        }\n    }\n\n    readonly vdwRadii = {\n            \"H\" : 1.2,\n            \"Li\" : 1.82,\n            \"Na\" : 2.27,\n            \"K\" : 2.75,\n            \"C\" : 1.7,\n            \"N\" : 1.55,\n            \"O\" : 1.52,\n            \"F\" : 1.47,\n            \"P\" : 1.80,\n            \"S\" : 1.80,\n            \"CL\" : 1.75,\n            \"BR\" : 1.85,\n            \"SE\" : 1.90,\n            \"ZN\" : 1.39,\n            \"CU\" : 1.4,\n            \"NI\" : 1.63,\n            \"X\" : 2\n        };\n    \n    private getVDWIndex(atom:any) {\n        if(!atom.elem || typeof(this.vdwRadii[atom.elem]) == \"undefined\") {\n            return \"X\";\n        }\n        return atom.elem;\n    };\n    \n\n    readonly nb = [ new Int32Array([ 1, 0, 0 ]), new Int32Array([ -1, 0, 0 ]), \n               new Int32Array([ 0, 1, 0 ]), new Int32Array([ 0, -1, 0 ]),\n               new Int32Array([ 0, 0, 1 ]), \n               new Int32Array([ 0, 0, -1 ]), \n               new Int32Array([ 1, 1, 0 ]), \n               new Int32Array([ 1, -1, 0 ]), \n               new Int32Array([ -1, 1, 0 ]),\n               new Int32Array([ -1, -1, 0 ]), \n               new Int32Array([ 1, 0, 1 ]), \n               new Int32Array([ 1, 0, -1 ]), \n               new Int32Array([ -1, 0, 1 ]),\n               new Int32Array([ -1, 0, -1 ]), \n               new Int32Array([ 0, 1, 1 ]), \n               new Int32Array([ 0, 1, -1 ]), \n               new Int32Array([ 0, -1, 1 ]),\n               new Int32Array([ 0, -1, -1 ]), \n               new Int32Array([ 1, 1, 1 ]), \n               new Int32Array([ 1, 1, -1 ]), \n               new Int32Array([ 1, -1, 1 ]),\n               new Int32Array([ -1, 1, 1 ]), \n               new Int32Array([ 1, -1, -1 ]), \n               new Int32Array([ -1, -1, 1 ]), \n               new Int32Array([ -1, 1, -1 ]),\n               new Int32Array([ -1, -1, -1 ]) ];\n\n\n    public getFacesAndVertices(atomlist: any[]) {\n        let atomsToShow = {};\n        for (let i = 0, il = atomlist.length; i < il; i++)\n            atomsToShow[atomlist[i]] = true;\n        let vertices = this.verts;\n        for (let i = 0, il = vertices.length; i < il; i++) {\n            vertices[i].x = vertices[i].x / this.scaleFactor - this.ptranx;\n            vertices[i].y = vertices[i].y / this.scaleFactor - this.ptrany;\n            vertices[i].z = vertices[i].z / this.scaleFactor - this.ptranz;\n        }\n\n        let finalfaces = [];\n        for (let i = 0, il = this.faces.length; i < il; i += 3) {\n            //let f = faces[i];\n            let fa = this.faces[i], fb = this.faces[i+1], fc = this.faces[i+2];\n            let a = vertices[fa].atomid, b = vertices[fb].atomid, c = vertices[fc].atomid;\n\n            // must be a unique face for each atom\n            let which = a;\n            if (b < which)\n                which = b;\n            if (c < which)\n                which = c;\n            if (!atomsToShow[which]) {\n                continue;\n            }\n\n            if (fa !== fb && fb !== fc && fa !== fc){\n                finalfaces.push(fa); \n                finalfaces.push(fb); \n                finalfaces.push(fc); \n            }\n               \n        }\n\n        //try to help the garbage collector\n        this.vpBits = null; // uint8 array of bitmasks\n        this.vpDistance = null; // floatarray\n        this.vpAtomID = null; // intarray\n        \n        return {\n            'vertices' : vertices,\n            'faces' : finalfaces\n        };\n    };\n\n\n    public initparm (extent: number[][], btype, volume) {\n        if(volume > 1000000) //heuristical decrease resolution to avoid large memory consumption\n            this.scaleFactor = this.defaultScaleFactor/2;\n        \n        let margin = (1 / this.scaleFactor) * 5.5; // need margin to avoid\n                                                // boundary/round off effects\n        this.pminx = extent[0][0]; this.pmaxx = extent[1][0];\n        this.pminy = extent[0][1]; this.pmaxy = extent[1][1];\n        this.pminz = extent[0][2]; this.pmaxz = extent[1][2];\n\n        if (!btype) {\n            this.pminx -= margin;\n            this.pminy -= margin;\n            this.pminz -= margin;\n            this.pmaxx += margin;\n            this.pmaxy += margin;\n            this.pmaxz += margin;\n        } else {\n            this.pminx -= this.probeRadius + margin;\n            this.pminy -= this.probeRadius + margin;\n            this.pminz -= this.probeRadius + margin;\n            this.pmaxx += this.probeRadius + margin;\n            this.pmaxy += this.probeRadius + margin;\n            this.pmaxz += this.probeRadius + margin;\n        }\n\n        this.pminx = Math.floor(this.pminx * this.scaleFactor) / this.scaleFactor;\n        this.pminy = Math.floor(this.pminy * this.scaleFactor) / this.scaleFactor;\n        this.pminz = Math.floor(this.pminz * this.scaleFactor) / this.scaleFactor;\n        this.pmaxx = Math.ceil(this.pmaxx * this.scaleFactor) / this.scaleFactor;\n        this.pmaxy = Math.ceil(this.pmaxy * this.scaleFactor) / this.scaleFactor;\n        this.pmaxz = Math.ceil(this.pmaxz * this.scaleFactor) / this.scaleFactor;\n\n        this.ptranx = -this.pminx;\n        this.ptrany = -this.pminy;\n        this.ptranz = -this.pminz;\n\n        this.pLength = Math.ceil(this.scaleFactor * (this.pmaxx - this.pminx)) + 1;\n        this.pWidth = Math.ceil(this.scaleFactor * (this.pmaxy - this.pminy)) + 1;\n        this.pHeight = Math.ceil(this.scaleFactor * (this.pmaxz - this.pminz)) + 1;\n\n        this.boundingatom(btype);\n        this.cutRadius = this.probeRadius * this.scaleFactor;\n\n        this.vpBits = new Uint8Array(this.pLength * this.pWidth * this.pHeight);\n        this.vpDistance = new Float64Array(this.pLength * this.pWidth * this.pHeight); // float 32\n        // doesn't\n        // play\n        // nicely\n        // with\n        // native\n        // floats\n        this.vpAtomID = new Int32Array(this.pLength * this.pWidth * this.pHeight);\n    };\n\n    public boundingatom(btype) {\n        let tradius = {};\n\n        for ( const i in this.vdwRadii) {\n            let r = this.vdwRadii[i];\n            if (!btype)\n                tradius[i] = r * this.scaleFactor + 0.5;\n            else\n                tradius[i] = (r + this.probeRadius) * this.scaleFactor + 0.5;\n\n            let sradius = tradius[i] * tradius[i];\n            this.widxz[i] = Math.floor(tradius[i]) + 1;\n            this.depty[i] = new Int32Array(this.widxz[i] * this.widxz[i]);\n            let indx = 0;\n            for (let j = 0; j < this.widxz[i]; j++) {\n                for (let k = 0; k < this.widxz[i]; k++) {\n                    let txz = j * j + k * k;\n                    if (txz > sradius)\n                        this.depty[i][indx] = -1; // outside\n                    else {\n                        let tdept = Math.sqrt(sradius - txz);\n                        this.depty[i][indx] = Math.floor(tdept);\n                    }\n                    indx++;\n                }\n            }\n        }\n    };\n\n    public fillvoxels(atoms, atomlist) { // (int seqinit,int\n        // seqterm,bool\n        // atomtype,atom*\n        // proseq,bool bcolor)\n        for (let i = 0, il = this.vpBits.length; i < il; i++) {\n            this.vpBits[i] = 0;\n            this.vpDistance[i] = -1.0;\n            this.vpAtomID[i] = -1;\n        }\n\n        for (let i in atomlist) {\n            let atom = atoms[atomlist[i]];\n            if (atom === undefined)\n                continue;\n            this.fillAtom(atom, atoms);\n        }\n\n        for (let i = 0, il = this.vpBits.length; i < il; i++)\n            if (this.vpBits[i] & this.INOUT)\n                this.vpBits[i] |= this.ISDONE;\n\n    };\n\n\n    public fillAtom(atom, atoms) {\n\n        let cx = Math.floor(0.5 + this.scaleFactor * (atom.x + this.ptranx));\n        let cy = Math.floor(0.5 + this.scaleFactor * (atom.y + this.ptrany));\n        let cz = Math.floor(0.5 + this.scaleFactor * (atom.z + this.ptranz));\n\n        let at = this.getVDWIndex(atom);\n        let nind = 0;\n        let pWH = this.pWidth*this.pHeight;\n        \n        for (let i = 0, n = this.widxz[at]; i < n; i++) {\n            for (let j = 0; j < n; j++) {\n                if (this.depty[at][nind] != -1) {\n                    for (let ii = -1; ii < 2; ii++) {\n                        for (let jj = -1; jj < 2; jj++) {\n                            for (let kk = -1; kk < 2; kk++) {\n                                if (ii !== 0 && jj !== 0 && kk !== 0) {\n                                    let mi = ii * i;\n                                    let mk = kk * j;\n                                    for (let k = 0; k <= this.depty[at][nind]; k++) {\n                                        let mj = k * jj;\n                                        let si = cx + mi;\n                                        let sj = cy + mj;\n                                        let sk = cz + mk;\n                                        if (si < 0 || sj < 0 || \n                                                sk < 0 ||\n                                                si >= this.pLength || \n                                                sj >= this.pWidth || \n                                                sk >= this.pHeight)\n                                            continue;\n                                        let index = si * pWH + sj * this.pHeight + sk;\n\n                                        if (!(this.vpBits[index] & this.INOUT)) {\n                                            this.vpBits[index] |= this.INOUT;\n                                            this.vpAtomID[index] = atom.serial;\n                                        } else {\n                                            let atom2 = atoms[this.vpAtomID[index]];\n                                            if(atom2.serial != atom.serial) {\n                                                let ox = cx + mi - Math.floor(0.5 + this.scaleFactor *\n                                                        (atom2.x + this.ptranx));\n                                                let oy = cy + mj - Math.floor(0.5 + this.scaleFactor *\n                                                        (atom2.y + this.ptrany));\n                                                let oz = cz + mk - Math.floor(0.5 + this.scaleFactor *\n                                                        (atom2.z + this.ptranz));\n                                                if (mi * mi + mj * mj + mk * mk < ox *\n                                                        ox + oy * oy + oz * oz)\n                                                    this.vpAtomID[index] = atom.serial;\n                                            }\n                                        }\n\n                                    }// k\n                                }// if\n                            }// kk\n                        }// jj\n                    }// ii\n                }// if\n                nind++;\n            }// j\n        }// i\n    };\n\n    public fillvoxelswaals(atoms, atomlist) {\n        for (let i = 0, il = this.vpBits.length; i < il; i++)\n            this.vpBits[i] &= ~this.ISDONE; // not isdone\n\n        for (let i in atomlist) {\n            let atom = atoms[atomlist[i]];\n            if (atom === undefined)\n                continue;\n\n            this.fillAtomWaals(atom, atoms);\n        }\n    };\n\n    public fillAtomWaals(atom, atoms) {\n        let nind = 0;\n        let cx = Math.floor(0.5 + this.scaleFactor * (atom.x + this.ptranx));\n        let cy = Math.floor(0.5 + this.scaleFactor * (atom.y + this.ptrany));\n        let cz = Math.floor(0.5 + this.scaleFactor * (atom.z + this.ptranz));\n\n        let at = this.getVDWIndex(atom);\n        let pWH = this.pWidth*this.pHeight;\n        for (let i = 0, n = this.widxz[at]; i < n; i++) {\n            for (let j = 0; j < n; j++) {\n                if (this.depty[at][nind] != -1) {\n                    for (let ii = -1; ii < 2; ii++) {\n                        for (let jj = -1; jj < 2; jj++) {\n                            for (let kk = -1; kk < 2; kk++) {\n                                if (ii !== 0 && jj !== 0 && kk !== 0) {\n                                    let mi = ii * i;\n                                    let mk = kk * j;\n                                    for (let k = 0; k <= this.depty[at][nind]; k++) {\n                                        let mj = k * jj;\n                                        let si = cx + mi;\n                                        let sj = cy + mj;\n                                        let sk = cz + mk;\n                                        if (si < 0 || sj < 0 || \n                                                sk < 0 || \n                                                si >= this.pLength || \n                                                sj >= this.pWidth || \n                                                sk >= this.pHeight)\n                                            continue;\n                                        let index = si * pWH + sj * this.pHeight + sk;\n                                        if (!(this.vpBits[index] & this.ISDONE)) {\n                                            this.vpBits[index] |= this.ISDONE;\n                                            this.vpAtomID[index] = atom.serial;\n                                        }  else {\n                                            let atom2 = atoms[this.vpAtomID[index]];\n                                            if(atom2.serial != atom.serial) {\n                                                let ox = cx + mi - Math.floor(0.5 + this.scaleFactor *\n                                                        (atom2.x + this.ptranx));\n                                                let oy = cy + mj - Math.floor(0.5 + this.scaleFactor *\n                                                        (atom2.y + this.ptrany));\n                                                let oz = cz + mk - Math.floor(0.5 + this.scaleFactor *\n                                                        (atom2.z + this.ptranz));\n                                                if (mi * mi + mj * mj + mk * mk < ox *\n                                                        ox + oy * oy + oz * oz)\n                                                    this.vpAtomID[index] = atom.serial;\n                                            }\n                                        }\n                                    }// k\n                                }// if\n                            }// kk\n                        }// jj\n                    }// ii\n                }// if\n                nind++;\n            }// j\n        }// i\n    };\n\n    public buildboundary() {\n        let pWH = this.pWidth*this.pHeight;\n        for (let i = 0; i < this.pLength; i++) {\n            for (let j = 0; j < this.pHeight; j++) {\n                for (let k = 0; k < this.pWidth; k++) {\n                    let index = i * pWH + k * this.pHeight + j;\n                    if (this.vpBits[index] & this.INOUT) {\n                        let ii = 0;\n                        while (ii < 26) {\n                            let ti = i + this.nb[ii][0], tj = j + this.nb[ii][2], tk = k +\n                                    this.nb[ii][1];\n                            if (ti > -1 && \n                                ti < this.pLength && \n                                tk > -1 && \n                                tk < this.pWidth && \n                                tj > -1 && \n                                tj < this.pHeight && \n                                !(this.vpBits[ti * pWH + tk * this.pHeight + tj] & this.INOUT)) {\n                                this.vpBits[index] |= this.ISBOUND;\n                                break;\n                            } else\n                                ii++;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    public fastdistancemap() {\n        let boundPoint = new PointGrid(this.pLength, this.pWidth, this.pHeight);\n        let pWH = this.pWidth*this.pHeight;\n        let cutRSq = this.cutRadius*this.cutRadius;\n        \n        let inarray = [];\n        let outarray = [];\n        \n        let index;\n        \n        for (let i = 0; i < this.pLength; i++) {\n            for (let j = 0; j < this.pWidth; j++) {\n                for (let k = 0; k < this.pHeight; k++) {\n                    index = i * pWH + j * this.pHeight + k;\n                    this.vpBits[index] &= ~this.ISDONE; // isdone = false\n                    if (this.vpBits[index] & this.INOUT) {\n                        if (this.vpBits[index] & this.ISBOUND) {\n                            let triple = {\n                                ix : i,\n                                iy : j,\n                                iz : k\n                            };\n                            boundPoint.set(i, j, k, triple);\n                            inarray.push(triple);\n                            this.vpDistance[index] = 0;\n                            this.vpBits[index] |= this.ISDONE;\n                            this.vpBits[index] &= ~this.ISBOUND;\n                        } \n                    }\n                }\n            }\n        }\n\n        do {\n            outarray = this.fastoneshell(inarray, boundPoint);\n            inarray = [];\n            for (let i = 0, n = outarray.length; i < n; i++) {\n                index = pWH * outarray[i].ix + this.pHeight *\n                    outarray[i].iy + outarray[i].iz;\n                this.vpBits[index] &= ~this.ISBOUND;\n                if (this.vpDistance[index] <= 1.0404 * cutRSq) {\n                    inarray.push({\n                        ix : outarray[i].ix,\n                        iy : outarray[i].iy,\n                        iz : outarray[i].iz\n                    });\n                }\n            }\n        } while (inarray.length !== 0);\n\n        inarray = [];\n        outarray = [];\n        boundPoint = null;\n        \n        let cutsf = this.scaleFactor - 0.5;\n        if (cutsf < 0)\n            cutsf = 0;\n        let cutoff = cutRSq - 0.50 / (0.1 + cutsf);\n        for (let i = 0; i < this.pLength; i++) {\n            for (let j = 0; j < this.pWidth; j++) {\n                for (let k = 0; k < this.pHeight; k++) {\n                    index = i * pWH + j * this.pHeight + k;\n                    this.vpBits[index] &= ~this.ISBOUND;\n                    // ses solid\n                    if (this.vpBits[index] & this.INOUT) {\n                        if (!(this.vpBits[index] & this.ISDONE) ||\n                                ((this.vpBits[index] & this.ISDONE) && this.vpDistance[index] >= cutoff)) {\n                            this.vpBits[index] |= this.ISBOUND;\n                        }\n                    }\n                }\n            }\n        }\n\n    };\n\n    public fastoneshell(inarray, boundPoint) { // (int* innum,int\n        // *allocout,voxel2\n        // ***boundPoint, int*\n        // outnum, int *elimi)\n        let tx, ty, tz;\n        let dx, dy, dz;\n        let square;\n        let bp, index;\n        let outarray = [];\n        if (inarray.length === 0)\n            return outarray;\n\n        let tnv = {\n            ix : -1,\n            iy : -1,\n            iz : -1\n        };\n        let pWH = this.pWidth*this.pHeight;\n        for (let i = 0, n = inarray.length; i < n; i++) {\n            tx = inarray[i].ix;\n            ty = inarray[i].iy;\n            tz = inarray[i].iz;\n            bp = boundPoint.get(tx, ty, tz);\n\n            for (let j = 0; j < 6; j++) {\n                tnv.ix = tx + this.nb[j][0];\n                tnv.iy = ty + this.nb[j][1];\n                tnv.iz = tz + this.nb[j][2];\n                \n                if (tnv.ix < this.pLength && tnv.ix > -1 && tnv.iy < this.pWidth &&\n                        tnv.iy > -1 && tnv.iz < this.pHeight && tnv.iz > -1) {\n                    index = tnv.ix * pWH + this.pHeight * tnv.iy + tnv.iz;\n                    \n                    if ((this.vpBits[index] & this.INOUT) && !(this.vpBits[index] & this.ISDONE)) {\n    \n                        boundPoint.set(tnv.ix, tnv.iy, tz + this.nb[j][2], bp);\n                        dx = tnv.ix - bp.ix;\n                        dy = tnv.iy - bp.iy;\n                        dz = tnv.iz - bp.iz;\n                        square = dx * dx + dy * dy + dz * dz;\n                        this.vpDistance[index] = square;\n                        this.vpBits[index] |= this.ISDONE;\n                        this.vpBits[index] |= this.ISBOUND;\n    \n                        outarray.push({\n                            ix : tnv.ix,\n                            iy : tnv.iy,\n                            iz : tnv.iz\n                        });\n                    } else if ((this.vpBits[index] & this.INOUT) && (this.vpBits[index] & this.ISDONE)) {\n    \n                        dx = tnv.ix - bp.ix;\n                        dy = tnv.iy - bp.iy;\n                        dz = tnv.iz - bp.iz;\n                        square = dx * dx + dy * dy + dz * dz;\n                        if (square < this.vpDistance[index]) {\n                            boundPoint.set(tnv.ix, tnv.iy, tnv.iz, bp);\n    \n                            this.vpDistance[index] = square;\n                            if (!(this.vpBits[index] & this.ISBOUND)) {\n                                this.vpBits[index] |= this.ISBOUND;\n                                outarray.push({\n                                    ix : tnv.ix,\n                                    iy : tnv.iy,\n                                    iz : tnv.iz\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        for (let i = 0, n = inarray.length; i < n; i++) {\n            tx = inarray[i].ix;\n            ty = inarray[i].iy;\n            tz = inarray[i].iz;\n            bp = boundPoint.get(tx, ty, tz);\n\n            for (let j = 6; j < 18; j++) {\n                tnv.ix = tx + this.nb[j][0];\n                tnv.iy = ty + this.nb[j][1];\n                tnv.iz = tz + this.nb[j][2];\n\n                if(tnv.ix < this.pLength && tnv.ix > -1 && tnv.iy < this.pWidth &&\n                        tnv.iy > -1 && tnv.iz < this.pHeight && tnv.iz > -1) {\n                    index = tnv.ix * pWH + this.pHeight * tnv.iy + tnv.iz;\n                    \n                    if ((this.vpBits[index] & this.INOUT) && !(this.vpBits[index] & this.ISDONE)) {\n                        boundPoint.set(tnv.ix, tnv.iy, tz + this.nb[j][2], bp);\n    \n                        dx = tnv.ix - bp.ix;\n                        dy = tnv.iy - bp.iy;\n                        dz = tnv.iz - bp.iz;\n                        square = dx * dx + dy * dy + dz * dz;\n                        this.vpDistance[index] = square;\n                        this.vpBits[index] |= this.ISDONE;\n                        this.vpBits[index] |= this.ISBOUND;\n    \n                        outarray.push({\n                            ix : tnv.ix,\n                            iy : tnv.iy,\n                            iz : tnv.iz\n                        });\n                    } else if ((this.vpBits[index] & this.INOUT) && (this.vpBits[index] & this.ISDONE)) {\n                        dx = tnv.ix - bp.ix;\n                        dy = tnv.iy - bp.iy;\n                        dz = tnv.iz - bp.iz;\n                        square = dx * dx + dy * dy + dz * dz;\n                        if (square < this.vpDistance[index]) {\n                            boundPoint.set(tnv.ix, tnv.iy, tnv.iz, bp);\n                            this.vpDistance[index] = square;\n                            if (!(this.vpBits[index] & this.ISBOUND)) {\n                                this.vpBits[index] |= this.ISBOUND;\n                                outarray.push({\n                                    ix : tnv.ix,\n                                    iy : tnv.iy,\n                                    iz : tnv.iz\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        for (let i = 0, n = inarray.length; i < n; i++) {\n            tx = inarray[i].ix;\n            ty = inarray[i].iy;\n            tz = inarray[i].iz;\n            bp = boundPoint.get(tx, ty, tz);\n\n            for (let j = 18; j < 26; j++) {\n                tnv.ix = tx + this.nb[j][0];\n                tnv.iy = ty + this.nb[j][1];\n                tnv.iz = tz + this.nb[j][2];\n\n                if (tnv.ix < this.pLength && tnv.ix > -1 && tnv.iy < this.pWidth &&\n                        tnv.iy > -1 && tnv.iz < this.pHeight && tnv.iz > -1) {\n                    index = tnv.ix * pWH + this.pHeight * tnv.iy + tnv.iz;\n\n                    if ((this.vpBits[index] & this.INOUT) && !(this.vpBits[index] & this.ISDONE)) {\n                        boundPoint.set(tnv.ix, tnv.iy, tz + this.nb[j][2], bp);\n\n                        dx = tnv.ix - bp.ix;\n                        dy = tnv.iy - bp.iy;\n                        dz = tnv.iz - bp.iz;\n                        square = dx * dx + dy * dy + dz * dz;\n                        this.vpDistance[index] = square;\n                        this.vpBits[index] |= this.ISDONE;\n                        this.vpBits[index] |= this.ISBOUND;\n\n                        outarray.push({\n                            ix : tnv.ix,\n                            iy : tnv.iy,\n                            iz : tnv.iz\n                        });\n                    } else if ((this.vpBits[index] & this.INOUT)  && (this.vpBits[index] & this.ISDONE)) {\n                        dx = tnv.ix - bp.ix;\n                        dy = tnv.iy - bp.iy;\n                        dz = tnv.iz - bp.iz;\n                        square = dx * dx + dy * dy + dz * dz;\n                        if (square < this.vpDistance[index]) {\n                            boundPoint.set(tnv.ix, tnv.iy, tnv.iz, bp);\n\n                            this.vpDistance[index] = square;\n                            if (!(this.vpBits[index] & this.ISBOUND)) {\n                                this.vpBits[index] |= this.ISBOUND;\n                                outarray.push({\n                                    ix : tnv.ix,\n                                    iy : tnv.iy,\n                                    iz : tnv.iz\n                                });\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return outarray;\n    };\n\n    public marchingcubeinit(stype) {\n        for ( let i = 0, lim = this.vpBits.length; i < lim; i++) {\n            if (stype == 1) {// vdw\n                this.vpBits[i] &= ~this.ISBOUND;\n            } else if (stype == 4) { // ses\n                this.vpBits[i] &= ~this.ISDONE;\n                if (this.vpBits[i] & this.ISBOUND)\n                    this.vpBits[i] |= this.ISDONE;\n                this.vpBits[i] &= ~this.ISBOUND;\n            } else if (stype == 2) {// after vdw\n                if ((this.vpBits[i] & this.ISBOUND) && (this.vpBits[i] & this.ISDONE))\n                    this.vpBits[i] &= ~this.ISBOUND;\n                else if ((this.vpBits[i] & this.ISBOUND) && !(this.vpBits[i] & this.ISDONE))\n                    this.vpBits[i] |= this.ISDONE;\n            } else if (stype == 3) { // sas\n                this.vpBits[i] &= ~this.ISBOUND;\n            }\n        }\n    };\n    \n    public marchingcube(stype:number) {\n        this.marchingcubeinit(stype);\n        this.verts = []; this.faces = [];   \n        ProteinSurface.MarchingCube.march(this.vpBits, this.verts, this.faces, {\n            smooth : 1,\n            nX : this.pLength,\n            nY : this.pWidth,\n            nZ : this.pHeight        \n        });      \n\n        let pWH = this.pWidth*this.pHeight;\n        for (let i = 0, vlen = this.verts.length; i < vlen; i++) {\n            this.verts[i].atomid = this.vpAtomID[this.verts[i].x * pWH + this.pHeight *\n                    this.verts[i].y + this.verts[i].z];\n        }  \n\n        ProteinSurface.MarchingCube.laplacianSmooth(1, this.verts, this.faces);\n\n    };\n\n\n};","import { base64ToArray } from \"./utilities\";\nimport { Vector3, Matrix4 } from \"./WebGL/math\";\nimport { VASP } from \"./parsers/VASP\";\nimport { CUBE } from \"./parsers/CUBE\";\nimport { inflate } from \"pako\";\n\n\ninterface VolumeDataOptions {\n    negate?: boolean;\n    normalize?: boolean;\n};\n\n/**\n * $3Dmol.VolumeData stores volumetric data. This includes file parsing\n * functionality.\n *\n * @class\n * @param {string} str - volumetric data\n * @param {string} format - format of supplied data (cube, dx, vasp); append .gz if compressed\n * @param {Object} options - normalize (zero mean, unit variance), negate\n */\nexport class VolumeData {\n\n    unit = {\n        x: 1,\n        y: 1,\n        z: 1\n    }; // scale of each voxel\n    origin = {\n        x: 0,\n        y: 0,\n        z: 0\n    }; // origin (bottom \"left\", not center)\n    size = {\n        x: 0,\n        y: 0,\n        z: 0\n    }; // number of voxels in each direction\n    data = new Float32Array([]); // actual floating point data, arranged\n    // x->y->z\n\n    matrix: any = null; //if set must transform data\n    inversematrix: Matrix4|null = null;\n    dimensionorder: any;\n\n    isbinary = new Set<string>(['ccp4','CCP4']);\n\n    constructor(str: any, format: string, options?: VolumeDataOptions) {\n        format = format.toLowerCase();\n\n        if (/\\.gz$/.test(format)) {\n            //unzip gzipped files\n            format = format.replace(/\\.gz$/, '');\n            try {\n                if ((this as any)[format] && this.isbinary.has(format)) {\n                    if (typeof (str) == \"string\") {\n                        //assume base64 encoded\n                        str = base64ToArray(str);\n                    }\n                    str = inflate(str);\n                }\n                else {\n                    str = new TextDecoder(\"utf-8\").decode(inflate(str));\n                }\n            } catch (err) {\n                console.error(err);\n            }\n        }\n\n        if ((this as any)[format]) {\n            if (this.isbinary.has(format) && typeof (str) == \"string\") {\n                str = base64ToArray(str);\n            }\n            (this as any)[format](str);\n        }\n\n        if (options) {\n            if (options.negate) {\n                for (let i = 0, n = this.data.length; i < n; i++) {\n                    this.data[i] = -this.data[i];\n                }\n            }\n            if (options.normalize) {\n                var total = 0.0;\n                for (let i = 0, n = this.data.length; i < n; i++) {\n                    total += this.data[i];\n                }\n                var mean = total / this.data.length;\n                total = 0;\n                for (let i = 0, n = this.data.length; i < n; i++) {\n                    var diff = this.data[i] - mean;\n                    total += diff * diff; //variance is ave of squared difference with mean\n                }\n                var variance = total / this.data.length;\n                //now normalize\n                for (let i = 0, n = this.data.length; i < n; i++) {\n                    this.data[i] = (this.data[i] - mean) / variance;\n                }\n            }\n        }\n    }\n\n    /**\n     * @function $3Dmol.VolumeData.getIndex\n     * @param {number} x,y,z - the coordinates\n     * @returns - index into flat array closest to provided coordinate; -1 if invalid\n     */\n    getIndex(x: number, y: number, z: number) {\n\n        if (this.matrix) {\n            //all transformation is done through matrix multiply\n            if (this.inversematrix == null) {\n                this.inversematrix = new Matrix4().getInverse(this.matrix);\n            }\n            var pt = new Vector3(x, y, z);\n            pt = pt.applyMatrix4(this.inversematrix as Matrix4);\n            x = pt.x;\n            y = pt.y;\n            z = pt.z;\n        } else { //use simple origin/unit transform\n            x -= this.origin.x;\n            y -= this.origin.y;\n            z -= this.origin.z;\n\n            x /= this.unit.x;\n            y /= this.unit.y;\n            z /= this.unit.z;\n        }\n        x = Math.round(x);\n        y = Math.round(y);\n        z = Math.round(z);\n\n        if (x < 0 || x >= this.size.x) return -1;\n        if (y < 0 || y >= this.size.y) return -1;\n        if (z < 0 || z >= this.size.z) return -1;\n\n        return x * this.size.y * this.size.z + y * this.size.z + z;\n    };\n\n    /**\n     * @function $3Dmol.VolumeData.getVal\n     * @param {number} x,y,z - the coordinates\n     * @returns - value closest to provided coordinate; zero if coordinate invalid\n     */\n    getVal(x: number, y: number, z: number) {\n        let i = this.getIndex(x, y, z);\n        if (i < 0) return 0;\n        return this.data[i];\n    };\n\n    getCoordinates = function (index: number) {\n\n        var x = index / (this.size.y * this.size.z);\n        var y = index % (this.size.y * this.size.z);\n        var z = index % this.size.z;\n\n        x *= this.unit.x;\n        y *= this.unit.y;\n        z *= this.unit.z;\n\n        x += this.origin.x;\n        y += this.origin.y;\n        z += this.origin.z;\n\n        return { x: x, y: y, z: z };\n    };\n\n    /*\n     * parse vasp data\n     * Essentially this parser converts the CHGCAR data into\n     * cube data. It has been adapted from 'chg2cube.pl' found in\n     * http://theory.cm.utexas.edu/vtsttools/\n     */\n    vasp = function (str: string) {\n\n        var lines = str.replace(/^\\s+/, \"\").split(/[\\n\\r]/);\n\n        var atomicData = VASP(str)[0];\n        var natoms = atomicData.length;\n\n        if (natoms == 0) {\n            console.warn(\"No good formating of CHG or CHGCAR file, not atomic information provided in the file.\");\n            this.data = [];\n            return;\n        }\n\n        // Assume atomic units\n        //    var unittype = \"bohr/hartree\";\n        var l_units = 1.889725992;\n        var e_units = 0.036749309;\n\n        // copied from $3Dmol.Parsers.vasp\n        var convFactor = parseFloat(lines[1]);\n        // This is how Vasp reads in the basis We need the l_units in order to\n        // compute the volume of the cell. Afterwards to obtain the axis for the\n        // voxels we have to remove this unit and divide by the number of voxels in\n        // each dimension\n        var v: string[];\n        v = lines[2].replace(/^\\s+/, \"\").split(/\\s+/);\n        var xVec = new Vector3(parseFloat(v[0]), parseFloat(v[1]), parseFloat(v[2])).multiplyScalar(convFactor * l_units);\n        v = lines[3].replace(/^\\s+/, \"\").split(/\\s+/);\n        var yVec = new Vector3(parseFloat(v[0]), parseFloat(v[1]), parseFloat(v[2])).multiplyScalar(convFactor * l_units);\n        v = lines[4].replace(/^\\s+/, \"\").split(/\\s+/);\n        var zVec = new Vector3(parseFloat(v[0]), parseFloat(v[1]), parseFloat(v[2])).multiplyScalar(convFactor * l_units);\n\n        // correct volume for non-orthognal box (expansion by minors)\n        var vol = xVec.x * (yVec.y * zVec.z - zVec.y * yVec.z) - yVec.x * (xVec.y * zVec.z - zVec.y * xVec.z) + zVec.x * (xVec.y * yVec.z - yVec.y * xVec.z);\n\n        vol = Math.abs(vol) / (Math.pow(l_units, 3));\n        var vol_scale = 1.0 / (vol); //This Only for CHGCAR files\n\n        // We splice the structure information\n        // 2 (header) + 3 (vectors) + 2 (atoms) + 1 (vaspMode) + natoms (coords) + 1 (blank line)\n        lines.splice(0, 2 + 3 + 2 + 1 + natoms + 1);\n\n\n        var lineArr = lines[0].replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n\n        var nX = Math.abs(parseFloat(lineArr[0]));\n        var nY = Math.abs(parseFloat(lineArr[1]));\n        var nZ = Math.abs(parseFloat(lineArr[2]));\n\n\n        var origin = this.origin = new Vector3(0, 0, 0);\n\n        this.size = { x: nX, y: nY, z: nZ };\n        this.unit = new Vector3(xVec.x, yVec.y, zVec.z);\n\n        // resize the vectors accordingly\n        xVec = xVec.multiplyScalar(1 / (l_units * nX));\n        yVec = yVec.multiplyScalar(1 / (l_units * nY));\n        zVec = zVec.multiplyScalar(1 / (l_units * nZ));\n\n        if (xVec.y != 0 || xVec.z != 0 || yVec.x != 0 || yVec.z != 0 || zVec.x != 0\n            || zVec.y != 0) {\n            //need a transformation matrix\n            this.matrix = new Matrix4(xVec.x, yVec.x, zVec.x, 0, xVec.y, yVec.y, zVec.y, 0, xVec.z, yVec.z, zVec.z, 0, 0, 0, 0, 1);\n            //include translation in matrix\n            this.matrix = this.matrix.multiplyMatrices(this.matrix,\n                new Matrix4().makeTranslation(origin.x, origin.y, origin.z));\n            //all translation and scaling done by matrix, so reset origin and unit\n            this.origin = new Vector3(0, 0, 0);\n            this.unit = new Vector3(1, 1, 1);\n        }\n\n\n        lines.splice(0, 1); // Remove the dimension line\n        var raw = lines.join(\" \");\n\n        raw = raw.replace(/^\\s+/, '');\n        var rawArray = raw.split(/[\\s\\r]+/);\n        rawArray.splice(nX * nY * nZ + 1);\n\n        var preConvertedData = Float32Array.from(rawArray, parseFloat); //We still have to format it to get the density\n\n        for (var i = 0; i < preConvertedData.length; i++) {\n            preConvertedData[i] = preConvertedData[i] * vol_scale * e_units;\n        }\n\n        this.data = preConvertedData;\n    };\n\n    // parse dx data - does not support all features of the file format\n    dx = function (str: string) {\n        var lines = str.split(/[\\n\\r]+/);\n        var m: string[];\n        var recounts = /gridpositions\\s+counts\\s+(\\d+)\\s+(\\d+)\\s+(\\d+)/;\n        var reorig = /^origin\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)/;\n        var redelta = /^delta\\s+(\\S+)\\s+(\\S+)\\s+(\\S+)/;\n        var follows = /data follows/;\n        var i = 0;\n\n        for (i = 0; i < lines.length; i++) {\n            var line = lines[i];\n            if ((m = recounts.exec(line))) {\n                var nX = parseInt(m[1]);\n                var nY = parseInt(m[2]);\n                var nZ = parseInt(m[3]);\n                this.size = { x: nX, y: nY, z: nZ };\n            }\n            else if ((m = redelta.exec(line))) {\n                var xunit = parseFloat(m[1]);\n                if (parseFloat(m[2]) != 0 || parseFloat(m[3]) != 0) {\n                    console.warn(\"Non-orthogonal delta matrix not currently supported in dx format\");\n                }\n                i += 1;\n                line = lines[i];\n                m = redelta.exec(line);\n                if (m == null) {\n                    console.error(\"Parse error in dx delta matrix\");\n                    return;\n                }\n\n                var yunit = parseFloat(m[2]);\n                if (parseFloat(m[1]) != 0 || parseFloat(m[3]) != 0) {\n                    console.warn(\"Non-orthogonal delta matrix not currently supported in dx format\");\n                }\n\n                i += 1;\n                line = lines[i];\n                m = redelta.exec(line);\n                if (m == null) {\n                    console.error(\"Parse error in dx delta matrix\");\n                    return;\n                }\n\n                var zunit = parseFloat(m[3]);\n                if (parseFloat(m[1]) != 0 || parseFloat(m[2]) != 0) {\n                    console.warn(\"Non-orthogonal delta matrix not currently supported in dx format\");\n                }\n                this.unit = new Vector3(xunit, yunit, zunit);\n            }\n            else if ((m = reorig.exec(line))) {\n                var xorig = parseFloat(m[1]);\n                var yorig = parseFloat(m[2]);\n                var zorig = parseFloat(m[3]);\n                this.origin = new Vector3(xorig, yorig, zorig);\n            } else if ((m = follows.exec(line))) {\n                break;\n            }\n        }\n        i += 1;\n        if (!this.size || !this.origin || !this.unit || !this.size) {\n            console.error(\"Error parsing dx format\");\n            return;\n        }\n        var raw = lines.splice(i).join(\" \");\n        var rawArray = raw.split(/[\\s\\r]+/);\n        this.data = Float32Array.from(rawArray, parseFloat);\n    };\n\n    // parse cube data\n    cube(str: string) {\n        var lines = str.split(/\\r?\\n/);\n\n        if (lines.length < 6)\n            return;\n\n        var cryst = CUBE(str, {}).modelData[0].cryst;\n\n        var lineArr = lines[2].replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n\n        var atomsnum = parseFloat(lineArr[0]); //includes sign, which indicates presence of oribital line in header\n        var natoms = Math.abs(atomsnum);\n\n        this.origin = cryst.origin;\n        this.size = cryst.size;\n        this.unit = cryst.unit;\n        this.matrix = cryst.matrix4;\n\n        var headerlines = 6;\n        if (atomsnum < 0) headerlines++; //see: http://www.ks.uiuc.edu/Research/vmd/plugins/molfile/cubeplugin.html\n        var raw = lines.splice(natoms + headerlines).join(\" \");\n        raw = raw.replace(/^\\s+/, '');\n        var rawArray = raw.split(/[\\s\\r]+/);\n        this.data = Float32Array.from(rawArray, parseFloat);\n\n    };\n\n\n\n    //parse cp4 files\n    ccp4(bin: Int8Array) {\n\n        // http://www.ccp4.ac.uk/html/maplib.html#description\n        //code from ngl: https://github.com/arose/ngl/blob/master/js/ngl/parser.js\n        var header:any = {};\n        bin = new Int8Array(bin);\n        var intView = new Int32Array(bin.buffer, 0, 56);\n        var floatView = new Float32Array(bin.buffer, 0, 56);\n        var dv = new DataView(bin.buffer);\n\n\n        // 53  MAP         Character string 'MAP ' to identify file type\n        header.MAP = String.fromCharCode(\n            dv.getUint8(52 * 4), dv.getUint8(52 * 4 + 1),\n            dv.getUint8(52 * 4 + 2), dv.getUint8(52 * 4 + 3)\n        );\n\n        // 54  MACHST      Machine stamp indicating machine type which wrote file\n        //                 17 and 17 for big-endian or 68 and 65 for little-endian\n        header.MACHST = [dv.getUint8(53 * 4), dv.getUint8(53 * 4 + 1)];\n\n        // swap byte order when big endian\n        if (header.MACHST[0] === 17 && header.MACHST[1] === 17) {\n            var n = bin.byteLength;\n            for (var i = 0; i < n; i += 4) {\n                dv.setFloat32(i, dv.getFloat32(i), true);\n            }\n        }\n\n        header.NX = intView[0];  // NC - columns (fastest changing)\n        header.NY = intView[1];  // NR - rows\n        header.NZ = intView[2];  // NS - sections (slowest changing)\n\n        // mode\n        //  0 image : signed 8-bit bytes range -128 to 127\n        //  1 image : 16-bit halfwords\n        //  2 image : 32-bit reals\n        //  3 transform : complex 16-bit integers\n        //  4 transform : complex 32-bit reals\n        //  6 image : unsigned 16-bit range 0 to 65535\n        // 16 image: unsigned char * 3 (for rgb data, non-standard)\n        //\n        // Note: Mode 2 is the normal mode used in the CCP4 programs.\n        //       Other modes than 2 and 0 may NOT WORK\n        header.MODE = intView[3];\n\n        // start\n        header.NXSTART = intView[4];  // NCSTART - first column\n        header.NYSTART = intView[5];  // NRSTART - first row\n        header.NZSTART = intView[6];  // NSSTART - first section\n\n        // intervals\n        header.MX = intView[7];  // intervals along x\n        header.MY = intView[8];  // intervals along y\n        header.MZ = intView[9];  // intervals along z\n\n        // cell length (Angstroms in CCP4)\n        header.xlen = floatView[10];\n        header.ylen = floatView[11];\n        header.zlen = floatView[12];\n\n        // cell angle (Degrees)\n        header.alpha = floatView[13];\n        header.beta = floatView[14];\n        header.gamma = floatView[15];\n\n        // axis correspondence (1,2,3 for X,Y,Z)\n        header.MAPC = intView[16];  // column\n        header.MAPR = intView[17];  // row\n        header.MAPS = intView[18];  // section\n\n        // density statistics\n        header.DMIN = floatView[19];\n        header.DMAX = floatView[20];\n        header.DMEAN = floatView[21];\n\n        // space group number 0 or 1 (default=0)\n        header.ISPG = intView[22];\n\n        // number of bytes used for symmetry data (0 or 80)\n        header.NSYMBT = intView[23];\n\n        // Flag for skew transformation, =0 none, =1 if foll\n        header.LSKFLG = intView[24];\n\n        // 26-34  SKWMAT  Skew matrix S (in order S11, S12, S13, S21 etc) if\n        //                LSKFLG .ne. 0.\n        // 35-37  SKWTRN  Skew translation t if LSKFLG != 0.\n        //                Skew transformation is from standard orthogonal\n        //                coordinate frame (as used for atoms) to orthogonal\n        //                map frame, as Xo(map) = S * (Xo(atoms) - t)\n\n        // 38      future use       (some of these are used by the MSUBSX routines\n        //  .          \"              in MAPBRICK, MAPCONT and FRODO)\n        //  .          \"   (all set to zero by default)\n        //  .          \"\n        // 52          \"\n\n        // 50-52 origin in X,Y,Z used for transforms\n        header.originX = floatView[49];\n        header.originY = floatView[50];\n        header.originZ = floatView[51];\n\n        // 53  MAP         Character string 'MAP ' to identify file type\n        // => see top of this parser\n\n        // 54  MACHST      Machine stamp indicating machine type which wrote file\n        // => see top of this parser\n\n        // Rms deviation of map from mean density\n        header.ARMS = floatView[54];\n\n        // 56      NLABL           Number of labels being used\n        // 57-256  LABEL(20,10)    10  80 character text labels (ie. A4 format)\n\n        //create transformation matrix, code mostly copied from ngl\n        var h = header;\n        var basisX: Array<any> = [\n            h.xlen,\n            0,\n            0\n        ];\n\n        var basisY: Array<any> = [\n            h.ylen * Math.cos(Math.PI / 180.0 * h.gamma),\n            h.ylen * Math.sin(Math.PI / 180.0 * h.gamma),\n            0\n        ];\n\n        var basisZ: Array<any> = [\n            h.zlen * Math.cos(Math.PI / 180.0 * h.beta),\n            h.zlen * (\n                Math.cos(Math.PI / 180.0 * h.alpha)\n                - Math.cos(Math.PI / 180.0 * h.gamma)\n                * Math.cos(Math.PI / 180.0 * h.beta)\n            ) / Math.sin(Math.PI / 180.0 * h.gamma),\n            0\n        ];\n        basisZ[2] = Math.sqrt(\n            h.zlen * h.zlen * Math.sin(Math.PI / 180.0 * h.beta) *\n            Math.sin(Math.PI / 180.0 * h.beta) - basisZ[1] * basisZ[1]\n        );\n\n        var basis: Array<any> = [0, basisX, basisY, basisZ];\n        var nxyz: Array<any> = [0, h.MX, h.MY, h.MZ];\n        var mapcrs: Array<any> = [0, h.MAPC, h.MAPR, h.MAPS];\n\n        this.matrix = new Matrix4();\n\n        this.matrix.set(\n\n            basis[mapcrs[1]][0] / nxyz[mapcrs[1]],\n            basis[mapcrs[2]][0] / nxyz[mapcrs[2]],\n            basis[mapcrs[3]][0] / nxyz[mapcrs[3]],\n            0,\n\n            basis[mapcrs[1]][1] / nxyz[mapcrs[1]],\n            basis[mapcrs[2]][1] / nxyz[mapcrs[2]],\n            basis[mapcrs[3]][1] / nxyz[mapcrs[3]],\n            0,\n\n            basis[mapcrs[1]][2] / nxyz[mapcrs[1]],\n            basis[mapcrs[2]][2] / nxyz[mapcrs[2]],\n            basis[mapcrs[3]][2] / nxyz[mapcrs[3]],\n            0,\n\n            0, 0, 0, 1\n\n        );\n        //include translation in matrix, NXSTART etc are an offset in grid space\n        this.matrix = this.matrix.multiplyMatrices(\n            this.matrix,\n            new Matrix4().makeTranslation(\n                h.NXSTART + h.originX,\n                h.NYSTART + h.originY,\n                h.NZSTART + h.originZ)\n        );\n        //all translation and scaling done by matrix, so reset origin and unit\n        this.origin = new Vector3(0, 0, 0);\n        this.unit = new Vector3(1, 1, 1);\n        this.size = { x: header.NX, y: header.NY, z: header.NZ };\n        this.dimensionorder = [header.MAPC, header.MAPR, header.MAPS];\n        var data = new Float32Array(bin.buffer, 1024 + header.NSYMBT);\n        //data must by (slowest changing) x,y,z (fastest changing)\n\n        var NX = header.NX, NY = header.NY, NZ = header.NZ;\n        this.data = new Float32Array(NX * NY * NZ);\n        for (let i = 0; i < NX; i++) {\n            for (let j = 0; j < NY; j++) {\n                for (let k = 0; k < NZ; k++) {\n                    //should I be concerned that I'm not using mapc?\n                    this.data[((i * NY) + j) * NZ + k] = data[((k * NY) + j) * NX + i];\n                }\n            }\n        }\n\n    };\n};\n","import { Sphere } from \"./WebGL/shapes\";\nimport { Vector3, Matrix4, XYZ } from \"./WebGL/math\";\nimport { VolumetricMaterial, Mesh, Texture, Object3D, Material } from \"./WebGL\";\nimport { CC } from \"./colors\";\nimport { GLShape } from \"./GLShape\";\nimport { AtomSelectionSpec } from \"specs\";\nimport { GLViewer } from \"GLViewer\";\n\n\n\n/**\n * VolumetricRenderer style specification\n*/\nexport interface VolumetricRendererSpec {\n    /** list of objects containing @color, @opacity and @value properties to specify color per voxel data value */\n    transferfn?: { color: unknown; opacity: unknown; value: unknown }[];\n    /** number of times to sample each voxel approximately (default 5) */\n    subsamples?: number;\n    /**  coordinates around which to include data; use viewer.selectedAtoms() to convert an AtomSelectionSpec to coordinates */\n    coords?: XYZ[];\n    /** selection around which to include data */\n    selection?: AtomSelectionSpec;\n    /** distance around coords to include data [default = 2.0] */\n    seldist?: number; \n};\n\n/**\n * A GLVolumetricRender is a \"shape\" for representing volumetric data as a density distribution.\n *\n * @class\n *\n * @param {VolumeData} data - volumetric data\n * @param {VolumetricRenderSpec} spec - specification of volumetric render\n * @returns {$3Dmol.GLShape}\n */\nexport class GLVolumetricRender {\n\n    static interpolateArray(data: string | any[], fitCount: number) {\n        function linearInterpolate(before: number, after: number, atPoint: number) {\n            return before + (after - before) * atPoint;\n        }\n        var newData = [];\n        var springFactor = (data.length - 1) / (fitCount - 1);\n        newData[0] = data[0]; // for new allocation\n        for (var i = 1; i < fitCount - 1; i++) {\n            var tmp = i * springFactor;\n            var before = Math.floor(tmp);\n            var after = Math.ceil(tmp);\n            var atPoint = tmp - before;\n            newData[i] = linearInterpolate(data[before], data[after], atPoint);\n        }\n        newData[fitCount - 1] = data[data.length - 1]; // for new allocation\n        return newData;\n    }\n\n    hidden = false;\n    boundingSphere = new Sphere();\n    shapePosition: any;\n    renderedShapeObj: any = null;\n    shapeObj: any = null;\n    geo: any;\n    subsamples = 5.0;\n    data: any = null;\n    transferfunctionbuffer: any = [];\n    min: number = 0;\n    max: number = 0;\n    extent: any;\n    maxdepth: number;\n    texmatrix: any;\n    minunit: any;\n\n    constructor(data: { matrix: { elements: any; }; size: XYZ; \n                unit: XYZ; origin: XYZ; data: number[]; getIndex: (arg0: number, arg1: number, arg2: number) => number; }, \n        spec: VolumetricRendererSpec, viewer?: GLViewer) {\n        spec = spec || {};\n        var transferfn = Object.assign([], spec.transferfn);\n        this.subsamples = spec.subsamples || 5.0;\n\n        let TRANSFER_BUFFER_SIZE = 256;\n\n        // arrange points based on position property\n        transferfn.forEach(function (a: { value: any; }) { a.value = parseFloat(a.value); });\n        transferfn.sort(function (a: { value: number; }, b: { value: number; }) { return a.value - b.value; });\n        this.min = transferfn[0].value;\n        if (transferfn.length == 0) transferfn.push(transferfn[0]); //need at least two\n        this.max = transferfn[transferfn.length - 1].value;\n\n        // create and fill an array of interpolated values per 2 colors\n        var pos1, pos2, color1, color2, R, G, B, A, alpha1, alpha2;\n        for (let i = 0; i < transferfn.length - 1; i++) {\n            color1 = CC.color(transferfn[i].color);\n            color2 = CC.color(transferfn[i + 1].color);\n            alpha1 = transferfn[i].opacity;\n            alpha2 = transferfn[i + 1].opacity;\n            pos1 = Math.floor((transferfn[i].value - this.min) * TRANSFER_BUFFER_SIZE / (this.max - this.min));\n            pos2 = Math.floor((transferfn[i + 1].value - this.min) * TRANSFER_BUFFER_SIZE / (this.max - this.min));\n            if (pos1 == pos2)\n                continue;\n            R = GLVolumetricRender.interpolateArray([color1.r * 255, color2.r * 255], pos2 - pos1);\n            G = GLVolumetricRender.interpolateArray([color1.g * 255, color2.g * 255], pos2 - pos1);\n            B = GLVolumetricRender.interpolateArray([color1.b * 255, color2.b * 255], pos2 - pos1);\n            A = GLVolumetricRender.interpolateArray([alpha1 * 255, alpha2 * 255], pos2 - pos1);\n\n            for (let j = 0; j < R.length; j++) {\n                this.transferfunctionbuffer.push(R[j]);\n                this.transferfunctionbuffer.push(G[j]);\n                this.transferfunctionbuffer.push(B[j]);\n                this.transferfunctionbuffer.push(A[j]); // opacity will be added later\n            }\n        }\n\n        this.transferfunctionbuffer = new Uint8ClampedArray(this.transferfunctionbuffer);\n\n        //need to create transformation matrix that maps model points into\n        //texture space\n        // need extent (bounding box dimensions), maxdepth (box diagonal), \n        // texmatrix (conversion from model to texture coords), minunit,\n        // possibly non-orthnormal basis if matrix\n        if (data.matrix) {\n            //figure out bounding box of transformed grid\n            let start = new Vector3(0, 0, 0);\n            let end = new Vector3(data.size.x, data.size.y, data.size.z);\n            let unit = new Vector3(1, 1, 1);\n\n            start.applyMatrix4(data.matrix);\n            end.applyMatrix4(data.matrix);\n            unit.applyMatrix4(data.matrix).sub(start);\n\n            this.extent = [[start.x, start.y, start.z], [end.x, end.y, end.z]];\n\n            //check all corners, these may not be the farthest apart\n            for (let i = 1; i < 7; i++) {\n                end.x = (i & 1) ? data.size.x : 0;\n                end.y = (i & 2) ? data.size.y : 0;\n                end.z = (i & 4) ? data.size.z : 0;\n                end.applyMatrix4(data.matrix);\n                this.extent[0][0] = Math.min(this.extent[0][0], end.x);\n                this.extent[0][1] = Math.min(this.extent[0][1], end.y);\n                this.extent[0][2] = Math.min(this.extent[0][2], end.z);\n                this.extent[1][0] = Math.max(this.extent[1][0], end.x);\n                this.extent[1][1] = Math.max(this.extent[1][1], end.y);\n                this.extent[1][2] = Math.max(this.extent[1][2], end.z);\n            }\n\n            let xoff = end.x - start.x;\n            let yoff = end.y - start.y;\n            let zoff = end.z - start.z;\n            this.maxdepth = Math.sqrt(xoff * xoff + yoff * yoff + zoff * zoff);\n\n            this.minunit = Math.min(Math.min(unit.x, unit.y), unit.z);\n\n            //invert onto grid, then scale by grid dimensions to get\n            //normalized texture coordinates\n            this.texmatrix = new Matrix4().identity().scale({ x: data.size.x, y: data.size.y, z: data.size.z });\n            this.texmatrix = this.texmatrix.multiplyMatrices(data.matrix, this.texmatrix);\n\n            this.texmatrix = this.texmatrix.getInverse(this.texmatrix);\n\n        } else {\n            this.texmatrix = new Matrix4().identity();\n            let xoff = data.unit.x * data.size.x;\n            let yoff = data.unit.y * data.size.y;\n            let zoff = data.unit.z * data.size.z;\n            //scale doesn't apply to the translation vector, so preapply it\n            this.texmatrix.makeTranslation(-data.origin.x / xoff, -data.origin.y / yoff, -data.origin.z / zoff);\n            this.texmatrix.scale({ x: 1.0 / xoff, y: 1.0 / yoff, z: 1.0 / zoff });\n            this.minunit = Math.min(Math.min(data.unit.x, data.unit.y), data.unit.z);\n\n            //need the bounding box so we can intersect with rays\n            this.extent = [[data.origin.x, data.origin.y, data.origin.z],\n            [data.origin.x + xoff, data.origin.y + yoff, data.origin.z + zoff]];\n\n            this.maxdepth = Math.sqrt(xoff * xoff + yoff * yoff + zoff * zoff);\n        }\n\n        //use GLShape to construct box\n        var shape = new GLShape({});\n        shape.addBox({\n            corner: { x: this.extent[0][0], y: this.extent[0][1], z: this.extent[0][2] },\n            dimensions: {\n                w: this.extent[1][0] - this.extent[0][0],\n                h: this.extent[1][1] - this.extent[0][1],\n                d: this.extent[1][2] - this.extent[0][2]\n            }\n        });\n\n        this.geo = shape.finalize();\n        this.boundingSphere.center = new Vector3(\n            (this.extent[0][0] + this.extent[1][0]) / 2.0,\n            (this.extent[0][1] + this.extent[1][1]) / 2.0,\n            (this.extent[0][2] + this.extent[1][2]) / 2.0\n        );\n        this.boundingSphere.radius = this.maxdepth / 2;\n\n        if (spec.coords === undefined && spec.selection !== undefined) {\n            if(viewer) {\n                spec.coords = viewer.selectedAtoms(spec.selection) as XYZ[];\n            } else {\n                console.log('Need to provide viewer to volumetric renderer if selection specified.');\n            }\n        }\n        // volume selectivity based on given coords and distance\n        if (spec.coords !== undefined && spec.seldist !== undefined) {\n            let mask = new Uint8Array(data.data.length);\n            //for each coordinate\n            let d = spec.seldist;\n            let d2 = d * d;\n            for (let i = 0, n = spec.coords.length; i < n; i++) {\n                let c = spec.coords[i];\n                let minx = c.x - d, miny = c.y - d, minz = c.z - d;\n                let maxx = c.x + d, maxy = c.y + d, maxz = c.z + d;\n                if (data.getIndex(minx, miny, minz) >= 0 || data.getIndex(maxx, maxy, maxz) >= 0) {\n                    //bounding box overlaps grid\n                    //iterate over the grid points in the seldist bounding box\n                    //minunit may be inefficient if axes have very different units. oh well.\n                    for (let x = minx; x < maxx; x += this.minunit) {\n                        for (let y = miny; y < maxy; y += this.minunit) {\n                            for (let z = minz; z < maxz; z += this.minunit) {\n                                let idx = data.getIndex(x, y, z);\n                                if (idx >= 0 && !mask[idx]) {\n                                    //if not already masked, check distance\n                                    let distsq = (x - c.x) * (x - c.x) + (y - c.y) * (y - c.y) + (z - c.z) * (z - c.z);\n                                    if (distsq < d2) {\n                                        mask[idx] = 1;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            //any place mask is zero, make infinite in data\n            for (let i = 0, n = data.data.length; i < n; i++) {\n                if (mask[i] == 0) data.data[i] = Infinity;\n            }\n        }\n        this.data = data;\n    }\n\n    /**\n     * Initialize webgl objects for rendering\n     * @param {Object3D} group\n     *\n     */\n    globj(group: { remove: (arg0: any) => void; add: (arg0: any) => void; }) {\n\n        if (this.renderedShapeObj) {\n            group.remove(this.renderedShapeObj);\n            this.renderedShapeObj = null;\n        }\n\n        if (this.hidden)\n            return;\n\n        this.shapeObj = new Object3D();\n        var material = null;\n\n        var texture = new Texture(this.data, true);\n        var transfertexture = new Texture(this.transferfunctionbuffer, false);\n        texture.needsUpdate = true;\n        transfertexture.needsUpdate = true;\n        transfertexture.flipY = false;\n\n        material = new VolumetricMaterial({\n            transferfn: transfertexture,\n            transfermin: this.min,\n            transfermax: this.max,\n            map: texture,\n            extent: this.extent,\n            maxdepth: this.maxdepth,\n            texmatrix: this.texmatrix,\n            unit: this.minunit,\n            subsamples: this.subsamples,\n        });\n\n        var mesh = new Mesh(this.geo, (material as Material));\n        this.shapeObj.add(mesh);\n\n        this.renderedShapeObj = this.shapeObj.clone();\n        group.add(this.renderedShapeObj);\n    };\n\n    removegl(group: { remove: (arg0: any) => void; }) {\n        if (this.renderedShapeObj) {\n            // dispose of geos and materials\n            if (this.renderedShapeObj.geometry !== undefined)\n                this.renderedShapeObj.geometry.dispose();\n            if (this.renderedShapeObj.material !== undefined)\n                this.renderedShapeObj.material.dispose();\n            group.remove(this.renderedShapeObj);\n            this.renderedShapeObj = null;\n        }\n        this.shapeObj = null;\n    };\n\n    get position() {\n        return this.boundingSphere.center;\n    }\n\n    get x() {\n        return this.boundingSphere.center.x;\n    }\n    get y() {\n        return this.boundingSphere.center.y;\n    }\n    get z() {\n        return this.boundingSphere.center.z;\n    }\n}\n\n","import { Object3D } from \"./core\";\nimport { Matrix4, Vector3 } from \"./math\";\n/*\n * Simplified Perspective Camera\n */\n\n/* @constructor */\nexport class Camera extends Object3D {\n  projectionMatrix = new Matrix4();\n  projectionMatrixInverse = new Matrix4();\n  matrixWorldInverse = new Matrix4();\n  right: number;\n  left: number;\n  top: number;\n  bottom: number;\n  ortho: boolean;\n  fov: number;\n  aspect: number;\n  near: number;\n  far: number;\n  z: number;\n  constructor(fov = 50, aspect = 1, near = 0.1, far = 2000, ortho = false) {\n    super();\n\n    this.fov = fov;\n    this.aspect = aspect;\n    this.near = near;\n    this.far = far;\n\n    var center = this.position.z;\n    this.right = center * Math.tan((Math.PI / 180) * fov);\n    this.left = -this.right;\n    this.top = this.right / this.aspect;\n    this.bottom = -this.top;\n\n    this.ortho = !!ortho;\n\n    this.updateProjectionMatrix();\n  }\n\n  lookAt(vector: Vector3) {\n    //Why is the parameter order switched (compared to Object3D)?\n    this.matrix.lookAt(this.position, vector, this.up);\n\n    if (this.rotationAutoUpdate) {\n      if (this.useQuaternion === false && this.rotation instanceof Vector3) {\n        this.rotation.setEulerFromRotationMatrix(this.matrix, this.eulerOrder);\n      } else {\n        console.error(\"Unimplemented math operation.\");\n      }\n    }\n  }\n\n  updateProjectionMatrix() {\n    if (this.ortho) {\n      this.projectionMatrix.makeOrthographic(\n        this.left,\n        this.right,\n        this.top,\n        this.bottom,\n        this.near,\n        this.far\n      );\n    } else {\n      this.projectionMatrix.makePerspective(\n        this.fov,\n        this.aspect,\n        this.near,\n        this.far\n      );\n    }\n\n    this.projectionMatrixInverse.getInverse(this.projectionMatrix);\n  }\n}\n","import { Color, ColorConstructorArg } from '../colors';\n\nexport class Fog {\n  name = \"\";\n  color: Color;\n  near: number;\n  far: number;\n  constructor(hex?:ColorConstructorArg, near = 1, far = 1000) {\n    this.color = new Color(hex);\n    this.near = near;\n    this.far = far;\n  }\n\n  clone() {\n    return new Fog(this.color.getHex(), this.near, this.far);\n  }\n}\n","/**\n * Simplified webGL renderer\n */\n\nimport { Camera } from \"./Camera\";\nimport { DoubleSide, BackSide } from \"./constants/Sides\";\nimport {\n  UnsignedByteType,\n  RGBAFormat,\n  NearestFilter,\n} from \"./constants/TextureConstants\";\nimport { Light } from \"./core\";\nimport { Color } from \"../colors\";\nimport {\n  MeshOutlineMaterial,\n  SphereImposterOutlineMaterial,\n  StickImposterOutlineMaterial,\n} from \"./materials\";\nimport { Matrix4, Vector3, Matrix3 } from \"./math\";\nimport { Mesh, Line, Sprite } from \"./objects\";\nimport { ShaderLib, ShaderUtils } from \"./shaders\";\nimport { SpritePlugin } from \"./SpritePlugin\";\n\nexport class Renderer {\n  row: any;\n  col: any;\n  rows: any;\n  cols: any;\n  context = null;\n  devicePixelRatio = 1.0; //set in setSize\n  domElement: HTMLCanvasElement;\n\n  // scene graph\n  sortObjects = true;\n  autoUpdateObjects = true;\n  autoUpdateScene = true;\n\n  // info\n  info = {\n    memory: {\n      programs: 0,\n      geometries: 0,\n      textures: 0,\n    },\n    render: {\n      calls: 0,\n      vertices: 0,\n      faces: 0,\n      points: 0,\n    },\n  };\n\n  // webgl rednering context\n  private _gl: WebGLRenderingContext | WebGL2RenderingContext;\n  // internal properties\n  private _programs = [];\n  private _programs_counter = 0;\n  private _webglversion = 1;\n  // internal state cache\n  private _currentProgram = null;\n  private _currentMaterialId = -1;\n  private _currentGeometryGroupHash = null;\n  private _currentCamera = null;\n  private _geometryGroupCounter = 0;\n  // GL state cache\n  private _oldDoubleSided = -1 as number | boolean;\n  private _oldFlipSided = -1 as number | boolean;\n  private _oldDepthTest = -1;\n  private _oldDepthWrite = -1;\n  private _oldPolygonOffset = null;\n  private _oldLineWidth = null;\n  private _viewportWidth = 0;\n  private _viewportHeight = 0;\n  private _currentWidth = 0;\n  private _currentHeight = 0;\n  private _enabledAttributes = {};\n  // camera matrices cache\n  private _vector3 = new Vector3();\n  private _worldInverse = new Matrix4();\n  private _projInverse = new Matrix4();\n  private _textureMatrix = new Matrix4();\n  private _fullProjModelMatrix = new Matrix4();\n  private _fullProjModelMatrixInv = new Matrix4();\n  // light arrays cach\n  private _direction = new Vector3();\n  private _lightsNeedUpdate = true;\n  private _lights = {\n    ambient: [0, 0, 0],\n    directional: {\n      length: 0,\n      colors: [],\n      positions: [],\n    },\n    point: {\n      length: 0,\n      colors: [],\n      positions: [],\n      distances: [],\n    },\n    spot: {\n      length: 0,\n      colors: [],\n      positions: [],\n      distances: [],\n      directions: [],\n      anglesCos: [],\n      exponents: [],\n    },\n    hemi: {\n      length: 0,\n      skyColors: [],\n      groundColors: [],\n      positions: [],\n    },\n  };\n\n  sprites = new SpritePlugin();\n\n  //screensshader related variables\n  private _screenshader = null;\n  private _AOshader = null;\n  private _blurshader = null;\n  private _vertexattribpos = null;\n  private _aovertexattribpos = null;\n  private _blurvertexattribpos = null;\n  private _screenQuadVBO = null;\n\n  //framebuffer variables\n  private _fb = null;\n  private _targetTexture = null;\n  private _depthTexture = null;\n  private _shadingTexture = null;\n  private _scratchTexture = null;\n  private _canvas: any;\n  private _precision: any;\n  private _alpha: any;\n  private _premultipliedAlpha: any;\n  private _antialias: any;\n  private _preserveDrawingBuffer: any;\n  private _clearColor: Color;\n  private _clearAlpha: any;\n  private _outlineMaterial: MeshOutlineMaterial;\n  private _outlineSphereImposterMaterial: SphereImposterOutlineMaterial;\n  private _outlineStickImposterMaterial: StickImposterOutlineMaterial;\n  private _outlineEnabled: boolean;\n  private _AOEnabled: boolean;\n  private _AOstrength: number = 1.0;\n  private _AOradius: number = 5.0;\n  private _extInstanced: any;\n  private _extFragDepth: ReturnType<WebGL2RenderingContext[\"getExtension\"]>;\n  private _extFloatLinear: ReturnType<WebGL2RenderingContext[\"getExtension\"]>;\n  private _extColorBufferFloat: ReturnType<WebGL2RenderingContext[\"getExtension\"]>;\n\n  private SHADE_TEXTURE: number = 3;\n\n  constructor(parameters) {\n    parameters = parameters || {};\n    this.row = parameters.row;\n    this.col = parameters.col;\n    this.rows = parameters.rows;\n    this.cols = parameters.cols;\n    this._canvas =\n      parameters.canvas !== undefined\n        ? parameters.canvas\n        : document.createElement(\"canvas\");\n    this._precision =\n      parameters.precision !== undefined ? parameters.precision : \"highp\";\n    this._alpha = parameters.alpha !== undefined ? parameters.alpha : true;\n    this._premultipliedAlpha =\n      parameters.premultipliedAlpha !== undefined\n        ? parameters.premultipliedAlpha\n        : true;\n    this._antialias = parameters.antialias !== undefined ? parameters.antialias : false;\n\n    this._preserveDrawingBuffer =\n      parameters.preserveDrawingBuffer !== undefined\n        ? parameters.preserveDrawingBuffer\n        : false;\n    this._clearColor =\n      parameters.clearColor !== undefined\n        ? new Color(parameters.clearColor)\n        : new Color(0x000000);\n    this._clearAlpha =\n      parameters.clearAlpha !== undefined ? parameters.clearAlpha : 0;\n    this._outlineMaterial = new MeshOutlineMaterial(parameters.outline);\n    this._outlineSphereImposterMaterial = new SphereImposterOutlineMaterial(\n      parameters.outline\n    );\n    this._outlineStickImposterMaterial = new StickImposterOutlineMaterial(\n      parameters.outline\n    );\n    this._outlineEnabled = !!parameters.outline;\n    this._AOEnabled = !!parameters.ambientOcclusion;\n    if(parameters.ambientOcclusion && typeof(parameters.ambientOcclusion.strength) !== 'undefined') {\n      this._AOstrength = parseFloat(parameters.ambientOcclusion.strength);\n    }\n    if(this._AOstrength == 0) {\n      this._AOEnabled = false;\n    }\n    if(parameters.ambientOcclusion && typeof(parameters.ambientOcclusion.radius) !== 'undefined') {\n      this._AOradius = parseFloat(parameters.ambientOcclusion.radius);\n    }    \n    \n    this.domElement = this._canvas;\n    this._canvas.id = parameters.id;\n\n    if (parameters.containerWidth == 0 || parameters.containerHeight == 0) {\n      return; //start lost\n    }\n    this.initGL();\n    this.setDefaultGLState();\n\n    this.context = this._gl;\n    if (this.isWebGL1()) {\n      this._extInstanced = this._gl.getExtension(\"ANGLE_instanced_arrays\");\n    } else { //no longer an extension, wrap\n      this._extInstanced = {\n        vertexAttribDivisorANGLE: (this._gl as WebGL2RenderingContext).vertexAttribDivisor.bind(this._gl),\n        drawElementsInstancedANGLE: (this._gl as WebGL2RenderingContext).drawElementsInstanced.bind(this._gl),\n      };\n    }\n    this._extFragDepth = this._gl.getExtension(\"EXT_frag_depth\");\n    this._extFloatLinear = this._gl.getExtension(\"OES_texture_float_linear\");\n    this._extColorBufferFloat = this._gl.getExtension(\"EXT_color_buffer_float\");\n\n    this.sprites.init(this);\n  }\n\n  // API\n\n  supportedExtensions() {\n    return {\n      supportsAIA: Boolean(this._extInstanced),\n      supportsImposters: Boolean(this._extFragDepth) || !this.isWebGL1(),\n      regen: false\n    };\n  }\n\n  getContext() {\n    return this._gl;\n  }\n\n  getCanvas() {\n    return this._canvas;\n  }\n\n  isLost() {\n    return this._gl == null || this._gl.isContextLost();\n  }\n\n  getPrecision() {\n    return this._precision;\n  }\n\n  setClearColorHex(hex, alpha) {\n    this._clearColor.setHex(hex);\n    this._clearAlpha = alpha;\n    if (!this.isLost()) {\n      this._gl.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearAlpha);\n    }\n  }\n\n  enableOutline(parameters) {\n    this._outlineMaterial = new MeshOutlineMaterial(parameters);\n    this._outlineSphereImposterMaterial = new SphereImposterOutlineMaterial(\n      parameters\n    );\n    this._outlineStickImposterMaterial = new StickImposterOutlineMaterial(\n      parameters\n    );\n    this._outlineEnabled = true;\n  }\n\n  disableOutline() {\n    this._outlineEnabled = false;\n  }\n\n  enableAmbientOcclusion(parameters) {\n    if(parameters) {\n      if(parameters.strength) this._AOstrength = parameters.strength;\n      if(parameters.scale) this._AOradius = parameters.scale;\n    }\n    this._AOEnabled = this._AOstrength > 0;\n  }\n\n  disableAmbientOcclusion() {\n    this._AOEnabled = false;\n  }\n\n  setViewport() {\n    if (\n      this.rows != undefined &&\n      this.cols != undefined &&\n      this.row != undefined &&\n      this.col != undefined\n    ) {\n      var wid = this._canvas.width / this.cols;\n      var hei = this._canvas.height / this.rows;\n\n      this._viewportWidth = wid;\n      this._viewportHeight = hei;\n\n      if (!this.isLost()) {\n        this._gl.enable(this._gl.SCISSOR_TEST);\n        this._gl.scissor(wid * this.col, hei * this.row, wid, hei);\n        this._gl.viewport(wid * this.col, hei * this.row, wid, hei);\n      }\n    }\n  }\n\n  setSize(width, height) {\n    //zooming (in the browser) changes the pixel ratio and width/height\n    this.devicePixelRatio =\n      window.devicePixelRatio !== undefined ? window.devicePixelRatio : 1;\n    //with antialiasing on (which doesn't seem to do much), render at double rsolution to eliminate jaggies\n    //my iphone crashes if we do though, so as a hacky workaround, don't do it with retina displays\n    if (this._antialias && this.devicePixelRatio < 2.0) this.devicePixelRatio *= 2.0;\n\n    if (\n      this.rows != undefined &&\n      this.cols != undefined &&\n      this.row != undefined &&\n      this.col != undefined\n    ) {\n      var wid = width / this.cols;\n      var hei = height / this.rows;\n      this._canvas.width = width * this.devicePixelRatio;\n      this._canvas.height = height * this.devicePixelRatio;\n\n      this._viewportWidth = wid * this.devicePixelRatio;\n      this._viewportHeight = hei * this.devicePixelRatio;\n\n      this._canvas.style.width = width + \"px\";\n      this._canvas.style.height = height + \"px\";\n\n      this.setViewport();\n    } else {\n      this._viewportWidth = this._canvas.width = width * this.devicePixelRatio;\n      this._viewportHeight = this._canvas.height = height * this.devicePixelRatio;\n\n      this._canvas.style.width = width + \"px\";\n      this._canvas.style.height = height + \"px\";\n\n      if (!this.isLost()) {\n        this._gl.viewport(0, 0, this._gl.drawingBufferWidth, this._gl.drawingBufferHeight);\n      }\n    }\n    this.initFrameBuffer();\n  }\n\n  clear(color, depth, stencil) {\n    var bits = 0;\n    if (color === undefined || color) bits |= this._gl.COLOR_BUFFER_BIT;\n    if (depth === undefined || depth) bits |= this._gl.DEPTH_BUFFER_BIT;\n    if (stencil === undefined || stencil) bits |= this._gl.STENCIL_BUFFER_BIT;\n    this._gl.clear(bits);\n  }\n\n  setMaterialFaces(material, reflected) {\n    var doubleSided = material.side === DoubleSide;\n    var flipSided = material.side === BackSide;\n\n    if (!material.imposter)\n      // Ignore reflection with imposters\n      flipSided = reflected ? !flipSided : flipSided;\n\n    if (this._oldDoubleSided !== doubleSided) {\n      if (doubleSided) {\n        this._gl.disable(this._gl.CULL_FACE);\n      } else {\n        this._gl.enable(this._gl.CULL_FACE);\n      }\n\n      this._oldDoubleSided = doubleSided;\n    }\n\n    if (this._oldFlipSided !== flipSided) {\n      if (flipSided) {\n        this._gl.frontFace(this._gl.CW);\n      } else {\n        this._gl.frontFace(this._gl.CCW);\n      }\n\n      this._oldFlipSided = flipSided;\n    }\n\n    this._gl.cullFace(this._gl.BACK);\n  }\n\n  setDepthTest(depthTest) {\n    if (this._oldDepthTest !== depthTest) {\n      if (depthTest) {\n        this._gl.enable(this._gl.DEPTH_TEST);\n      } else {\n        this._gl.disable(this._gl.DEPTH_TEST);\n      }\n\n      this._oldDepthTest = depthTest;\n    }\n  }\n\n  setDepthWrite(depthWrite) {\n    if (this._oldDepthWrite !== depthWrite) {\n      this._gl.depthMask(depthWrite);\n      this._oldDepthWrite = depthWrite;\n    }\n  }\n\n  setBlending(blending) {\n    if (!blending) {\n      this._gl.disable(this._gl.BLEND);\n    } else {\n      this._gl.enable(this._gl.BLEND);\n      this._gl.blendEquationSeparate(this._gl.FUNC_ADD, this._gl.FUNC_ADD);\n      this._gl.blendFuncSeparate(\n        this._gl.SRC_ALPHA,\n        this._gl.ONE_MINUS_SRC_ALPHA,\n        this._gl.ONE,\n        this._gl.ONE_MINUS_SRC_ALPHA\n      );\n    }\n  }\n\n  // TODO: need to set up shader attributes and uniforms as attributes on\n  // material object after attaching prgm\n  // We need to attach appropriate uniform variables to material after shaders\n  // have been chosen\n  initMaterial(material, lights, fog, objects) {\n    material.addEventListener(\"dispose\", this.onMaterialDispose.bind(this));\n\n    var parameters, shaderID;\n\n    shaderID = material.shaderID;\n\n    if (shaderID) {\n      var shader = ShaderLib[shaderID];\n      material.vertexShader = shader.vertexShader;\n      material.fragmentShader = shader.fragmentShader;\n      material.uniforms = ShaderUtils.clone(shader.uniforms);\n      // TODO: set material uniforms to shader uniform variables\n\n      if (material.shaded) {\n        material.makeShaded(this.SHADE_TEXTURE);\n      }\n    }\n\n    parameters = {\n      wireframe: material.wireframe,\n      fragdepth: material.imposter,\n      volumetric: material.volumetric,\n      shaded: material.shaded\n    };\n\n    material.program = this.buildProgram(\n      material.fragmentShader,\n      material.vertexShader,\n      material.uniforms,\n      parameters\n    );\n  }\n\n  renderBuffer(camera, lights, fog, material, geometryGroup, object) {\n    if (!material.visible) return;\n\n    var program, attributes;\n\n    // Sets up proper vertex and fragment shaders and attaches them to webGL\n    // program\n    // Also sets appropriate uniform variables\n    program = this.setProgram(camera, lights, fog, material, object, this);\n    if (!program) return;\n\n    attributes = program.attributes;\n\n    var updateBuffers = false,\n      wireframeBit = material.wireframe ? 1 : 0,\n      geometryGroupHash =\n        geometryGroup.id * 0xffffff + program.id * 2 + wireframeBit;\n\n    if (geometryGroupHash !== this._currentGeometryGroupHash) {\n      this._currentGeometryGroupHash = geometryGroupHash;\n      updateBuffers = true;\n    }\n\n    // rebind shader attributes to appropriate (and already initialized) gl\n    // buffers\n    if (updateBuffers) {\n      this.disableAttributes();\n\n      // Vertices\n      if (attributes.position >= 0) {\n        this._gl.bindBuffer(this._gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer);\n        this.enableAttribute(attributes.position);\n        this._gl.vertexAttribPointer(attributes.position, 3, this._gl.FLOAT, false, 0, 0);\n      }\n\n      // Colors\n      if (attributes.color >= 0) {\n        this._gl.bindBuffer(this._gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer);\n        this.enableAttribute(attributes.color);\n        this._gl.vertexAttribPointer(attributes.color, 3, this._gl.FLOAT, false, 0, 0);\n      }\n\n      // Normals\n      if (attributes.normal >= 0) {\n        this._gl.bindBuffer(this._gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer);\n        this.enableAttribute(attributes.normal);\n        this._gl.vertexAttribPointer(attributes.normal, 3, this._gl.FLOAT, false, 0, 0);\n      }\n\n      // Offsets (Instanced only)\n      if (attributes.offset >= 0) {\n        this._gl.bindBuffer(this._gl.ARRAY_BUFFER, geometryGroup.__webglOffsetBuffer);\n        this.enableAttribute(attributes.offset);\n        this._gl.vertexAttribPointer(attributes.offset, 3, this._gl.FLOAT, false, 0, 0);\n      }\n\n      // Radii (Instanced only)\n      if (attributes.radius >= 0) {\n        this._gl.bindBuffer(this._gl.ARRAY_BUFFER, geometryGroup.__webglRadiusBuffer);\n        this.enableAttribute(attributes.radius);\n        this._gl.vertexAttribPointer(attributes.radius, 1, this._gl.FLOAT, false, 0, 0);\n      }\n    }\n\n    // Render\n    var faceCount, lineCount;\n    // lambert shaders - draw triangles\n    // TODO: make sure geometryGroup's face count is setup correctly\n    if (object instanceof Mesh) {\n      if (material.shaderID === \"instanced\") {\n        var sphereGeometryGroup = material.sphere.geometryGroups[0];\n        if (updateBuffers) {\n          this._gl.bindBuffer(this._gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer);\n          this._gl.bufferData(\n            this._gl.ARRAY_BUFFER,\n            sphereGeometryGroup.vertexArray,\n            this._gl.STATIC_DRAW\n          );\n          this._gl.bindBuffer(this._gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer);\n          this._gl.bufferData(\n            this._gl.ARRAY_BUFFER,\n            sphereGeometryGroup.normalArray,\n            this._gl.STATIC_DRAW\n          );\n          this._gl.bindBuffer(\n            this._gl.ELEMENT_ARRAY_BUFFER,\n            geometryGroup.__webglFaceBuffer\n          );\n          this._gl.bufferData(\n            this._gl.ELEMENT_ARRAY_BUFFER,\n            sphereGeometryGroup.faceArray,\n            this._gl.STATIC_DRAW\n          );\n        }\n\n        faceCount = sphereGeometryGroup.faceidx;\n\n        this._extInstanced.vertexAttribDivisorANGLE(attributes.offset, 1);\n        this._extInstanced.vertexAttribDivisorANGLE(attributes.radius, 1);\n        this._extInstanced.vertexAttribDivisorANGLE(attributes.color, 1);\n\n        this._extInstanced.drawElementsInstancedANGLE(\n          this._gl.TRIANGLES,\n          faceCount,\n          this._gl.UNSIGNED_SHORT,\n          0,\n          geometryGroup.radiusArray.length\n        );\n\n        this._extInstanced.vertexAttribDivisorANGLE(attributes.offset, 0);\n        this._extInstanced.vertexAttribDivisorANGLE(attributes.radius, 0);\n        this._extInstanced.vertexAttribDivisorANGLE(attributes.color, 0);\n      } else if (material.wireframe) {\n        lineCount = geometryGroup.lineidx;\n        this.setLineWidth(material.wireframeLinewidth);\n\n        if (updateBuffers)\n          this._gl.bindBuffer(\n            this._gl.ELEMENT_ARRAY_BUFFER,\n            geometryGroup.__webglLineBuffer\n          );\n\n        this._gl.drawElements(this._gl.LINES, lineCount, this._gl.UNSIGNED_SHORT, 0);\n      } else {\n        faceCount = geometryGroup.faceidx;\n\n        if (updateBuffers)\n          this._gl.bindBuffer(\n            this._gl.ELEMENT_ARRAY_BUFFER,\n            geometryGroup.__webglFaceBuffer\n          );\n        this._gl.drawElements(this._gl.TRIANGLES, faceCount, this._gl.UNSIGNED_SHORT, 0);\n      }\n\n      this.info.render.calls++;\n      this.info.render.vertices += faceCount;\n      this.info.render.faces += faceCount / 3;\n    }\n\n    // basic shaders - draw lines\n    else if (object instanceof Line) {\n      lineCount = geometryGroup.vertices;\n\n      this.setLineWidth(material.linewidth);\n      this._gl.drawArrays(this._gl.LINES, 0, lineCount);\n\n      this.info.render.calls++;\n    }\n  }\n\n  /* clear out the shading textures */\n  clearShading() {\n    this._gl.framebufferTexture2D(\n      this._gl.FRAMEBUFFER,\n      this._gl.DEPTH_ATTACHMENT,\n      this._gl.TEXTURE_2D,\n      this._shadingTexture,\n      0\n    );\n    this.clear(false,true,false);\n    this._gl.framebufferTexture2D(\n      this._gl.FRAMEBUFFER,\n      this._gl.DEPTH_ATTACHMENT,\n      this._gl.TEXTURE_2D,\n      this._depthTexture,\n      0\n    );\n  }\n\n  /* Setup the shading buffer to reflect desired shading (ambient occlusion) values.\n    Only the matching object with materialType are considered. */\n  setShading(scene, camera, materialType) {\n    //identify all matching objects\n    let lights = scene.__lights;\n    let fog = scene.fog;\n    let renderList = [];\n\n    for (let i = 0, il = scene.__webglObjects.length; i < il; i++) {\n      let webglObject = scene.__webglObjects[i];\n\n      if (webglObject.render && webglObject[materialType]) {\n        renderList.push(webglObject);\n      }\n    }\n\n    if (renderList.length == 0) return;\n\n    //setup shading texture as depth buffer\n    this._gl.framebufferTexture2D(\n      this._gl.FRAMEBUFFER,\n      this._gl.DEPTH_ATTACHMENT,\n      this._gl.TEXTURE_2D,\n      this._shadingTexture,\n      0\n    );\n\n    this._gl.framebufferTexture2D(\n      this._gl.FRAMEBUFFER,\n      this._gl.COLOR_ATTACHMENT0,\n      this._gl.TEXTURE_2D,\n      null, //don't write colors (can we do this?)\n      0\n    );\n\n    //calculate depth map\n    this.renderObjects(scene.__webglObjects, true, materialType + \"Depth\",\n      camera, lights, fog, false);\n    \n    //detach so we can read and attach scratch\n    this._gl.framebufferTexture2D(\n      this._gl.FRAMEBUFFER,\n      this._gl.DEPTH_ATTACHMENT,\n      this._gl.TEXTURE_2D,\n      this._scratchTexture,\n      0\n    );\n    this.clear(false,true,false);\n\n    //perform AO calculation from depth map to scratch buffer\n\n    // set screen shader and use it\n    this._gl.useProgram(this._AOshader);\n    this._currentProgram = this._AOshader;\n    // disable depth test\n    this.setDepthTest(-1);\n    this.setDepthWrite(-1);\n\n    let p_uniforms = this._AOshader.uniforms;\n    this._gl.uniform1f(p_uniforms.total_strength, this._AOstrength);\n    this._gl.uniform1f(p_uniforms.radius, this._AOradius);\n\n    //setup full projection matrix from model to screen and inverted\n    //use first object\n    this._fullProjModelMatrix = new Matrix4();\n    this._fullProjModelMatrixInv = new Matrix4();\n    let object = renderList[0].object;\n    this._fullProjModelMatrix.multiplyMatrices(camera.projectionMatrix,object._modelViewMatrix);\n    this._fullProjModelMatrixInv.getInverse(this._fullProjModelMatrix);\n      this._gl.uniformMatrix4fv(\n        p_uniforms.projectionMatrix,\n        false,\n        this._fullProjModelMatrix.elements\n      );\n    \n    this._gl.uniformMatrix4fv(p_uniforms.projinv, false, this._fullProjModelMatrixInv.elements);    \n\n\n    // bind vertexarray buffer and texture\n    this._gl.bindBuffer(this._gl.ARRAY_BUFFER, this._screenQuadVBO);\n    this._gl.enableVertexAttribArray(this._aovertexattribpos);\n    this._gl.vertexAttribPointer(this._aovertexattribpos, 2, this._gl.FLOAT, false, 0, 0);\n\n    this._gl.activeTexture(this._gl.TEXTURE0);\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this._shadingTexture);\n\n    // Draw 6 vertexes => 2 triangles:\n    this._gl.drawArrays(this._gl.TRIANGLES, 0, 6);\n\n\n    //perform blur from scratch to shading\n    this._gl.framebufferTexture2D(\n      this._gl.FRAMEBUFFER,\n      this._gl.DEPTH_ATTACHMENT,\n      this._gl.TEXTURE_2D,\n      this._shadingTexture,\n      0\n    );\n    this.clear(false,true,false);\n        \n    this._gl.useProgram(this._blurshader);\n    this._currentProgram = this._blurshader;\n    this.setDepthTest(-1);\n    this.setDepthWrite(-1);    \n\n\n    this._gl.bindBuffer(this._gl.ARRAY_BUFFER, this._screenQuadVBO);\n    this._gl.enableVertexAttribArray(this._blurvertexattribpos);\n    this._gl.vertexAttribPointer(this._blurvertexattribpos, 2, this._gl.FLOAT, false, 0, 0);\n\n    this._gl.activeTexture(this._gl.TEXTURE0);\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this._scratchTexture);\n\n    // Draw 6 vertexes => 2 triangles:\n    this._gl.drawArrays(this._gl.TRIANGLES, 0, 6);\n\n    //restore original depth, color\n    this._gl.framebufferTexture2D(\n      this._gl.FRAMEBUFFER,\n      this._gl.COLOR_ATTACHMENT0,\n      this._gl.TEXTURE_2D,\n      this._targetTexture,\n      0\n    );\n\n    this._gl.framebufferTexture2D(\n      this._gl.FRAMEBUFFER,\n      this._gl.DEPTH_ATTACHMENT,\n      this._gl.TEXTURE_2D,\n      this._depthTexture,\n      0\n    );\n\n  }\n\n  render(scene, camera) {\n    if (camera instanceof Camera === false) {\n      console.error(\"Renderer.render: camera is not an instance of Camera.\");\n      return;\n    }\n\n    var i,\n      il,\n      webglObject,\n      object,\n      renderList,\n      lights = scene.__lights,\n      fog = scene.fog;\n\n    // reset caching for this frame\n\n    this._currentMaterialId = -1;\n    this._lightsNeedUpdate = true;\n\n    // update scene graph\n\n    if (this.autoUpdateScene) scene.updateMatrixWorld();\n\n    // update camera matrices\n    // Pretty sure camera's parent is always going to be undefined for our\n    // purposes...\n    if (camera.parent === undefined) camera.updateMatrixWorld();\n\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n\n    if (this.isLost()) {\n      return;\n    }\n    // update WebGL objects\n\n    if (this.autoUpdateObjects) this.initWebGLObjects(scene);\n\n    this.info.render.calls = 0;\n    this.info.render.vertices = 0;\n    this.info.render.faces = 0;\n    this.info.render.points = 0;\n\n    this._currentWidth = this._viewportWidth;\n    this._currentHeight = this._viewportHeight;\n    this.setViewport();\n    this.setFrameBuffer();\n\n    this._gl.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearAlpha);\n    this.clear(true, true, true);\n\n    // set matrices for regular objects (frustum culled)\n\n    renderList = scene.__webglObjects;\n    let hasvolumetric = false;\n    let hasAO = this._AOEnabled;\n    for (i = 0, il = renderList.length; i < il; i++) {\n      webglObject = renderList[i];\n      object = webglObject.object;\n\n      webglObject.render = false;\n\n      if (object.visible) {\n        this.setupMatrices(object, camera);\n        this.unrollBufferMaterial(webglObject);\n        webglObject.render = true;\n        if (webglObject.volumetric) hasvolumetric = true;\n        if (webglObject.hasAO) hasAO = true;\n      }\n    }\n\n    // set matrices for immediate objects\n\n    // opaque pass (front-to-back order)\n\n    this.setBlending(false);\n\n    if (hasAO) {\n      this.setShading(scene, camera, \"opaque\");\n    }\n\n    this.renderObjects(scene.__webglObjects, true, \"opaque\",\n      camera, lights, fog, false);\n\n      if (hasAO) {\n        this.clearShading();\n      }\n\n    // Render embedded labels (sprites)\n    this.renderSprites(scene, camera, false);\n\n    // prime depth buffer with transparent objects\n    this.renderObjects(scene.__webglObjects, true, \"transparentDepth\",\n      camera, lights, fog, true);\n\n    // transparent pass (back-to-front order)\n\n    this.renderObjects(scene.__webglObjects, false, \"transparent\",\n      camera, lights, fog, true);\n\n    //volumetric is separate\n    if (hasvolumetric && this._fb) {\n      //disconnect depth texture from framebuffer so we can read it\n      this._gl.framebufferTexture2D(\n        this._gl.FRAMEBUFFER,\n        this._gl.DEPTH_ATTACHMENT,\n        this._gl.TEXTURE_2D,\n        null,\n        0\n      );\n\n      this.renderObjects(scene.__webglObjects, false, \"volumetric\",\n        camera, lights, fog, true);\n    }\n\n    this.renderFrameBuffertoScreen();\n    this.setDepthTest(true);\n    this.setDepthWrite(true);\n\n    // Render floating labels (sprites)\n    this.renderSprites(scene, camera, true);\n  }\n\n\n  //setup framebuffer for drawing into, assumes buffers already allocated\n  setFrameBuffer() {\n    if (this.isWebGL1() || !this._fb) return;\n    let width = this._viewportWidth;\n    let height = this._viewportHeight;\n\n    //when using framebuffer, always draw from origin, will shift the viewport when we render\n    this._gl.enable(this._gl.SCISSOR_TEST);\n    this._gl.scissor(0, 0, width, height);\n    this._gl.viewport(0, 0, width, height);\n\n    //color texture\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this._targetTexture);\n    this._gl.texImage2D(\n      this._gl.TEXTURE_2D,\n      0,\n      this._gl.RGBA,\n      width,\n      height,\n      0,\n      this._gl.RGBA,\n      this._gl.UNSIGNED_BYTE,\n      null\n    );\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.LINEAR);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.LINEAR);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_S, this._gl.CLAMP_TO_EDGE);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_T, this._gl.CLAMP_TO_EDGE);\n\n    //depth texture\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this._depthTexture);\n    this._gl.texImage2D(\n      this._gl.TEXTURE_2D,\n      0,\n      (this._gl as WebGL2RenderingContext).DEPTH_COMPONENT32F,\n      width,\n      height,\n      0,\n      this._gl.DEPTH_COMPONENT,\n      this._gl.FLOAT,\n      null\n    );\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.NEAREST);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.NEAREST);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_S, this._gl.CLAMP_TO_EDGE);\n    this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_T, this._gl.CLAMP_TO_EDGE);\n\n    //shading texture - for AO and maybe eventually shadows? I don't like shadows\n    if(this._shadingTexture) {\n      //for whatever reason, chrome seems to require this manual memory management\n      //for these textures, at least in the auto tests webpage where many viewers are being created/destroyed\n      this._gl.deleteTexture(this._shadingTexture);\n      this._shadingTexture = this._gl.createTexture();\n      this._gl.bindTexture(this._gl.TEXTURE_2D, this._shadingTexture);\n      this._gl.texImage2D(\n        this._gl.TEXTURE_2D,\n        0,\n        (this._gl as WebGL2RenderingContext).DEPTH_COMPONENT32F,\n        width,\n        height,\n        0,\n        this._gl.DEPTH_COMPONENT,\n        this._gl.FLOAT,\n        null\n      );\n      this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.NEAREST);\n      this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.NEAREST);\n      this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_S, this._gl.CLAMP_TO_EDGE);\n      this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_T, this._gl.CLAMP_TO_EDGE);\n\n      //scratch texture, needed by AO to do blur\n      this._gl.deleteTexture(this._scratchTexture);\n      this._scratchTexture = this._gl.createTexture();\n      this._gl.bindTexture(this._gl.TEXTURE_2D, this._scratchTexture);\n      this._gl.texImage2D(\n        this._gl.TEXTURE_2D,\n        0,\n        (this._gl as WebGL2RenderingContext).DEPTH_COMPONENT32F,\n        width,\n        height,\n        0,\n        this._gl.DEPTH_COMPONENT,\n        this._gl.FLOAT,\n        null\n      );\n      this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MIN_FILTER, this._gl.NEAREST);\n      this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_MAG_FILTER, this._gl.NEAREST);\n      this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_S, this._gl.CLAMP_TO_EDGE);\n      this._gl.texParameteri(this._gl.TEXTURE_2D, this._gl.TEXTURE_WRAP_T, this._gl.CLAMP_TO_EDGE);\n      \n    }\n    //bind fb\n    this._gl.bindFramebuffer(this._gl.FRAMEBUFFER, this._fb);\n    this._gl.framebufferTexture2D(\n      this._gl.FRAMEBUFFER,\n      this._gl.COLOR_ATTACHMENT0,\n      this._gl.TEXTURE_2D,\n      this._targetTexture,\n      0\n    );\n    this._gl.framebufferTexture2D(\n      this._gl.FRAMEBUFFER,\n      this._gl.DEPTH_ATTACHMENT,\n      this._gl.TEXTURE_2D,\n      this._shadingTexture,\n      0\n    );\n    this._gl.clearDepth(1);\n    this._gl.clear(this._gl.DEPTH_BUFFER_BIT);  //shading all ones\n\n    this._gl.framebufferTexture2D(\n      this._gl.FRAMEBUFFER,\n      this._gl.DEPTH_ATTACHMENT,\n      this._gl.TEXTURE_2D,\n      this._depthTexture,\n      0\n    );\n  }\n\n  //allocate buffers for framebuffer, needs to be called with every resize\n  initFrameBuffer() {\n    // only needed/works with webgl2\n    if (this.isWebGL1()) return;\n\n    let width = this._viewportWidth;\n    let height = this._viewportHeight;\n\n    //when using framebuffer, always draw from origin, will shift the viewport when we render\n    this._gl.enable(this._gl.SCISSOR_TEST);\n    this._gl.scissor(0, 0, width, height);\n    this._gl.viewport(0, 0, width, height);\n\n    //create textures and frame buffer, will be initialized in setFrameBuffer\n    this._targetTexture = this._gl.createTexture();\n    this._depthTexture = this._gl.createTexture();\n    this._shadingTexture = this._gl.createTexture();\n    this._scratchTexture = this._gl.createTexture();\n    this._fb = this._gl.createFramebuffer();\n\n    // build screenshader\n    var screenshader = this._antialias ? ShaderLib.screenaa : ShaderLib.screen;\n\n    this._screenshader = this.buildProgram(\n      screenshader.fragmentShader,\n      screenshader.vertexShader,\n      screenshader.uniforms,\n      {}\n    );\n    this._vertexattribpos = this._gl.getAttribLocation(this._screenshader, \"vertexPosition\");\n    // create the vertex array and attrib array for the full screenquad\n    var verts = [\n      // First triangle:\n      1.0, 1.0, -1.0, 1.0, -1.0, -1.0,\n      // Second triangle:\n      -1.0, -1.0, 1.0, -1.0, 1.0, 1.0,\n    ];\n    this._screenQuadVBO = this._gl.createBuffer();\n    this._gl.bindBuffer(this._gl.ARRAY_BUFFER, this._screenQuadVBO);\n    this._gl.bufferData(this._gl.ARRAY_BUFFER, new Float32Array(verts), this._gl.STATIC_DRAW);\n\n    // build aoshader\n    let aoshader = ShaderLib.ssao;\n\n    this._AOshader = this.buildProgram(\n      aoshader.fragmentShader,\n      aoshader.vertexShader,\n      aoshader.uniforms,\n      {}\n    );\n    this._aovertexattribpos = this._gl.getAttribLocation(this._AOshader, \"vertexPosition\");\n    // create the vertex array and attrib array for the full screenquad\n\n    //blur shader\n    let bshader = ShaderLib.blur;\n\n    this._blurshader = this.buildProgram(\n      bshader.fragmentShader,\n      bshader.vertexShader,\n      bshader.uniforms,\n      {}\n    );\n    this._blurvertexattribpos = this._gl.getAttribLocation(this._blurshader, \"vertexPosition\");\n\n  }\n\n  renderFrameBuffertoScreen() {\n    // only needed/works with webgl2\n    if (this.isWebGL1() || this._fb === null) return;\n\n    this.setViewport(); //draw texture in correct viewport\n\n    // bind default framebuffer\n    this._gl.bindFramebuffer(this._gl.FRAMEBUFFER, null);\n    this._gl.clear(this._gl.COLOR_BUFFER_BIT | this._gl.DEPTH_BUFFER_BIT);\n    this._gl.frontFace(this._gl.CCW);\n    this._gl.cullFace(this._gl.BACK);\n\n    // set screen shader and use it\n    this._gl.useProgram(this._screenshader);\n    this._currentProgram = this._screenshader;\n    // disable depth test\n    this.setDepthTest(-1);\n    this.setDepthWrite(-1);\n\n    // bind vertexarray buffer and texture\n    this._gl.bindBuffer(this._gl.ARRAY_BUFFER, this._screenQuadVBO);\n    this._gl.enableVertexAttribArray(this._vertexattribpos);\n    this._gl.vertexAttribPointer(this._vertexattribpos, 2, this._gl.FLOAT, false, 0, 0);\n\n    this._gl.activeTexture(this._gl.TEXTURE0);\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this._targetTexture);\n\n    // Draw 6 vertexes => 2 triangles:\n    this._gl.drawArrays(this._gl.TRIANGLES, 0, 6);\n  }\n\n  initWebGLObjects(scene) {\n    if (!scene.__webglObjects) {\n      scene.__webglObjects = [];\n      scene.__webglObjectsImmediate = [];\n      scene.__webglSprites = [];\n      scene.__webglFlares = [];\n    }\n\n    // Add objects; this sets up buffers for each geometryGroup\n    if (scene.__objectsAdded.length) {\n      while (scene.__objectsAdded.length) {\n        this.addObject(scene.__objectsAdded[0], scene);\n        scene.__objectsAdded.splice(0, 1);\n      }\n\n      // Force buffer update during render\n      // Hackish fix for initial cartoon-render-then-transparent-surface\n      // bug\n      this._currentGeometryGroupHash = -1;\n    }\n\n    while (scene.__objectsRemoved.length) {\n      this.removeObject(scene.__objectsRemoved[0], scene);\n      scene.__objectsRemoved.splice(0, 1);\n    }\n\n    // update must be called after objects adding / removal\n    // This sends typed arrays to GL buffers for each geometryGroup\n    for (var o = 0, ol = scene.__webglObjects.length; o < ol; o++) {\n      this.updateObject(scene.__webglObjects[o].object);\n    }\n  }\n\n  getYRatio() {\n    if (this.rows !== undefined && this.row !== undefined) return this.rows;\n    return 1;\n  }\n\n  getXRatio() {\n    if (this.cols !== undefined && this.col !== undefined) return this.cols;\n    return 1;\n  }\n\n  getAspect(width, height) {\n    if (width == undefined || height == undefined) {\n      width = this._canvas.width;\n      height = this._canvas.height;\n    }\n    var aspect = width / height;\n    if (\n      this.rows != undefined &&\n      this.cols != undefined &&\n      this.row != undefined &&\n      this.col != undefined\n    ) {\n      var wid = width / this.cols;\n      var hei = height / this.rows;\n      aspect = wid / hei;\n    }\n    return aspect;\n  }\n\n  setTexture(texture, slot, is3D) {\n    if (texture.needsUpdate) {\n      if (!texture.__webglInit) {\n        texture.__webglInit = true;\n        texture.addEventListener(\"dispose\", this.onTextureDispose.bind(this));\n        texture.__webglTexture = this._gl.createTexture();\n        this.info.memory.textures++;\n      }\n\n      this._gl.activeTexture(this._gl.TEXTURE0 + slot);\n      var gltextureType = is3D ? (this._gl as WebGL2RenderingContext).TEXTURE_3D : this._gl.TEXTURE_2D;\n      this._gl.bindTexture(gltextureType, texture.__webglTexture);\n      this._gl.pixelStorei(this._gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n      this._gl.pixelStorei(\n        this._gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL,\n        texture.premultiplyAlpha\n      );\n      this._gl.pixelStorei(this._gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n      this._gl.pixelStorei(this._gl.PACK_ALIGNMENT, texture.unpackAlignment);\n\n      var glFormat = this.paramToGL(texture.format),\n        glType = this.paramToGL(texture.type);\n\n      if (!is3D) {\n        var image = texture.image;\n        var width = image.width; //might not be defined\n        var height = image.height;\n        if (typeof width === \"undefined\") {\n          //if no width,\n          width = image.length;\n          if (glFormat == this._gl.RGBA) {\n            width /= 4; //each element takes up 4 bytes\n          }\n          height = 1;\n        }\n        this.setTextureParameters(this._gl.TEXTURE_2D, texture);\n        if (!this.isWebGL1()) {\n          //webgl2\n          this._gl.texImage2D(\n            this._gl.TEXTURE_2D,\n            0,\n            glFormat,\n            width,\n            height,\n            0,\n            glFormat,\n            glType,\n            texture.image\n          );\n        } else {\n          this._gl.texImage2D(\n            this._gl.TEXTURE_2D,\n            0,\n            glFormat,\n            glFormat,\n            glType,\n            texture.image\n          );\n        }\n      } else {\n        //3D\n        this.setTextureParameters((this._gl as WebGL2RenderingContext).TEXTURE_3D, texture);\n        (this._gl as WebGL2RenderingContext).texImage3D(\n          (this._gl as WebGL2RenderingContext).TEXTURE_3D,\n          0,\n          (this._gl as WebGL2RenderingContext).R32F,\n          texture.image.size.z,\n          texture.image.size.y,\n          texture.image.size.x,\n          0,\n          (this._gl as WebGL2RenderingContext).RED,\n          this._gl.FLOAT,\n          texture.image.data\n        );\n      }\n\n      texture.needsUpdate = false;\n\n      if (texture.onUpdate) texture.onUpdate();\n    } else {\n      this._gl.activeTexture(this._gl.TEXTURE0 + slot);\n      if (is3D) this._gl.bindTexture((this._gl as WebGL2RenderingContext).TEXTURE_3D, texture.__webglTexture);\n      else this._gl.bindTexture(this._gl.TEXTURE_2D, texture.__webglTexture);\n    }\n  }\n\n  supportsVolumetric() {\n    return !this.isWebGL1();\n  }\n\n  private enableAttribute(attribute) {\n    if (!this._enabledAttributes[attribute]) {\n      this._gl.enableVertexAttribArray(attribute);\n      this._enabledAttributes[attribute] = true;\n    }\n  }\n\n  private disableAttributes() {\n    for (let attribute in this._enabledAttributes) {\n      if (this._enabledAttributes[attribute]) {\n        this._gl.disableVertexAttribArray(attribute as any);\n        this._enabledAttributes[attribute] = false;\n      }\n    }\n  }\n\n  private setPolygonOffset(polygonOffset, offsetFactor, offsetUnits) {\n    if (this._oldPolygonOffset !== polygonOffset) {\n      if (polygonOffset) this._gl.enable(this._gl.POLYGON_OFFSET_FILL);\n      else this._gl.disable(this._gl.POLYGON_OFFSET_FILL);\n    }\n  }\n\n  private setLineWidth(width: number) {\n    if (width !== this._oldLineWidth) {\n      this._gl.lineWidth(width);\n      this._oldLineWidth = width;\n    }\n  }\n\n  private deallocateGeometry(geometry) {\n    geometry.__webglInit = undefined;\n\n    if (geometry.__webglVertexBuffer !== undefined)\n      this._gl.deleteBuffer(geometry.__webglVertexBuffer);\n\n    if (geometry.__webglColorBuffer !== undefined)\n      this._gl.deleteBuffer(geometry.__webglColorBuffer);\n\n    if (geometry.geometryGroups !== undefined) {\n      for (var g = 0, gl = geometry.groups; g < gl; g++) {\n        var geometryGroup = geometry.geometryGroups[g];\n\n        if (geometryGroup.__webglVertexBuffer !== undefined)\n          this._gl.deleteBuffer(geometryGroup.__webglVertexBuffer);\n\n        if (geometryGroup.__webglColorBuffer !== undefined)\n          this._gl.deleteBuffer(geometryGroup.__webglColorBuffer);\n\n        if (geometryGroup.__webglNormalBuffer !== undefined)\n          this._gl.deleteBuffer(geometryGroup.__webglNormalBuffer);\n\n        if (geometryGroup.__webglFaceBuffer !== undefined)\n          this._gl.deleteBuffer(geometryGroup.__webglFaceBuffer);\n\n        if (geometryGroup.__webglLineBuffer !== undefined)\n          this._gl.deleteBuffer(geometryGroup.__webglLineBuffer);\n      }\n    }\n  }\n\n  private deallocateMaterial(material) {\n    var program = material.program;\n\n    if (program === undefined) return;\n\n    material.program = undefined;\n\n    // only deallocate GL program if this was the last use of shared program\n    // assumed there is only single copy of any program in the _programs\n    // list\n    // (that's how it's constructed)\n\n    var i, il, programInfo;\n    var deleteProgram = false;\n\n    for (i = 0, il = this._programs.length; i < il; i++) {\n      programInfo = this._programs[i];\n\n      if (programInfo.program === program) {\n        programInfo.usedTimes--;\n\n        if (programInfo.usedTimes === 0) {\n          deleteProgram = true;\n        }\n\n        break;\n      }\n    }\n\n    if (deleteProgram === true) {\n      // avoid using array.splice, this is costlier than creating new\n      // array from scratch\n\n      var newPrograms = [];\n\n      for (i = 0, il = this._programs.length; i < il; i++) {\n        programInfo = this._programs[i];\n\n        if (programInfo.program !== program) {\n          newPrograms.push(programInfo);\n        }\n      }\n\n      this._programs = newPrograms;\n\n      this._gl.deleteProgram(program);\n\n      this.info.memory.programs--;\n    }\n  }\n\n  private deallocateTexture(texture) {\n    if (texture.image && texture.image.__webglTextureCube) {\n      // cube texture\n\n      this._gl.deleteTexture(texture.image.__webglTextureCube);\n    } else {\n      // 2D texture\n\n      if (!texture.__webglInit) return;\n\n      texture.__webglInit = false;\n      this._gl.deleteTexture(texture.__webglTexture);\n    }\n  }\n\n  private onGeometryDispose(event) {\n    var geometry = event.target;\n    geometry.removeEventListener(\"dispose\", this.onGeometryDispose);\n\n    this.deallocateGeometry(geometry);\n\n    this.info.memory.geometries--;\n  }\n\n  private onTextureDispose(event) {\n    var texture = event.target;\n\n    texture.removeEventListener(\"dispose\", this.onTextureDispose);\n\n    this.deallocateTexture(texture);\n\n    this.info.memory.textures--;\n  }\n\n  private onMaterialDispose(event) {\n    var material = event.target;\n    material.removeEventListener(\"dispose\", this.onMaterialDispose);\n\n    this.deallocateMaterial(material);\n  }\n\n  // Compile and return shader\n  private getShader(type, str) {\n    var shader;\n\n    if (!this.isWebGL1() && !str.startsWith(\"#version\")) {\n      //convert webgl1 to webgl2, unless a version is already explicit\n      str = str.replace(/gl_FragDepthEXT/g, \"gl_FragDepth\");\n      if (type == \"fragment\") {\n        str = str.replace(/varying/g, \"in\");\n      } else {\n        str = str.replace(/varying/g, \"out\");\n      }\n      str = str.replace(/attribute/g, \"in\");\n      str = str.replace(/texture2D/g, \"texture\");\n      str = str.replace(/\\/\\/DEFINEFRAGCOLOR/g, \"out vec4 glFragColor;\");\n      str = str.replace(/gl_FragColor/g, \"glFragColor\");\n      str = \"#version 300 es\\n\" + str;\n    }\n    if (type === \"fragment\") shader = this._gl.createShader(this._gl.FRAGMENT_SHADER);\n    else if (type === \"vertex\") shader = this._gl.createShader(this._gl.VERTEX_SHADER);\n\n    if (shader == null) return null;\n\n    this._gl.shaderSource(shader, str);\n    this._gl.compileShader(shader);\n\n    if (!this._gl.getShaderParameter(shader, this._gl.COMPILE_STATUS)) {\n      console.error(this._gl.getShaderInfoLog(shader));\n      console.error(\"could not initialize shader\");\n      return null;\n    }\n\n    return shader;\n  }\n\n  // Compile appropriate shaders (if necessary) from source code and attach to\n  // gl program.\n  private buildProgram(fragmentShader, vertexShader, uniforms, parameters) {\n    var p, pl, program, code;\n    var chunks = [];\n\n    chunks.push(fragmentShader);\n    chunks.push(vertexShader);\n\n    for (p in parameters) {\n      chunks.push(p);\n      chunks.push(parameters[p]);\n    }\n\n    code = chunks.join();\n\n    // check if program has already been compiled\n\n    for (p = 0, pl = this._programs.length; p < pl; p++) {\n      var programInfo = this._programs[p];\n\n      if (programInfo.code === code) {\n        programInfo.usedTimes++;\n\n        return programInfo.program;\n      }\n    }\n\n    // check if program requires webgl2\n    if (this.isWebGL1()) {\n      if (parameters.volumetric)\n        throw new Error(\n          \"Volumetric rendering requires webgl2 which is not supported by your hardware.\"\n        );\n    }\n\n    // Set up new program and compile shaders\n    program = this._gl.createProgram();\n    if (program == null) return null;\n\n    // set up precision\n    var precision = this._precision;\n    var prefix = \"precision \" + precision + \" float;\";\n\n    var prefix_vertex = [\n      parameters.volumetric ? \"#version 300 es\" : \"\",\n      prefix,\n    ].join(\"\\n\");\n\n    var prefix_fragment = [\n      parameters.volumetric ? \"#version 300 es\" : \"\",\n      parameters.fragdepth && this.isWebGL1()\n        ? \"#extension GL_EXT_frag_depth: enable\"\n        : \"\",\n      parameters.shaded ? \"#define SHADED 1\" : \"\",\n      parameters.wireframe ? \"#define WIREFRAME 1\" : \"\",\n      prefix,\n    ].join(\"\\n\");\n\n    var glFragmentShader = this.getShader(\n      \"fragment\",\n      prefix_fragment + fragmentShader\n    );\n    var glVertexShader = this.getShader(\"vertex\", prefix_vertex + vertexShader);\n\n    if (glVertexShader != null) this._gl.attachShader(program, glVertexShader);\n    if (glFragmentShader != null) this._gl.attachShader(program, glFragmentShader);\n\n    this._gl.linkProgram(program);\n\n    if (!this._gl.getProgramParameter(program, this._gl.LINK_STATUS))\n      console.error(\"Could not initialize shader\");\n\n    // gather and cache uniform variables and attributes\n\n    program.uniforms = {};\n    program.attributes = {};\n\n    var identifiers, u, i;\n\n    // uniform vars\n    identifiers = [\n      \"viewMatrix\",\n      \"modelViewMatrix\",\n      \"projectionMatrix\",\n      \"normalMatrix\",\n    ];\n\n    // custom uniform vars\n    for (u in uniforms) identifiers.push(u);\n\n    for (i = 0; i < identifiers.length; i++) {\n      var uniformVar = identifiers[i];\n      program.uniforms[uniformVar] = this._gl.getUniformLocation(\n        program,\n        uniformVar\n      );\n    }\n\n    // attributes\n    identifiers = [\n      \"position\",\n      \"normal\",\n      \"color\",\n      \"lineDistance\",\n      \"offset\",\n      \"radius\",\n    ];\n\n    /*\n     * for (a in attributes) identifiers.push(a);\n     */\n\n    for (i = 0; i < identifiers.length; i++) {\n      var attributeVar = identifiers[i];\n      program.attributes[attributeVar] = this._gl.getAttribLocation(\n        program,\n        attributeVar\n      );\n    }\n\n    program.id = this._programs_counter++;\n    this._programs.push({\n      program: program,\n      code: code,\n      usedTimes: 1,\n    });\n    this.info.memory.programs = this._programs.length;\n\n    return program;\n  }\n\n  private setProgram(camera, lights, fog, material, object, renderer) {\n    if (material.needsUpdate) {\n      if (material.program) this.deallocateMaterial(material);\n\n      this.initMaterial(material, lights, fog, object);\n      material.needsUpdate = false;\n    }\n    if (material.program == null) return null;\n\n    var refreshMaterial = false;\n\n    // p_uniforms: uniformVarName => uniformLocation\n    // m_uniforms: uniformVarName => uniformJsVal\n    var program = material.program,\n      p_uniforms = program.uniforms,\n      m_uniforms = material.uniforms;\n\n    if (program != this._currentProgram) {\n      this._gl.useProgram(program);\n      this._currentProgram = program;\n\n      refreshMaterial = true;\n    }\n\n    if (material.id != this._currentMaterialId) {\n      this._currentMaterialId = material.id;\n      refreshMaterial = true;\n    }\n\n    if (camera != this._currentCamera) {\n      this._currentCamera = camera;\n      refreshMaterial = true;\n    }\n\n    if (p_uniforms.projectionMatrix) {\n      this._gl.uniformMatrix4fv(\n        p_uniforms.projectionMatrix,\n        false,\n        camera.projectionMatrix.elements\n      );\n    }\n\n    if (p_uniforms.modelViewMatrix) {\n      this._gl.uniformMatrix4fv(\n        p_uniforms.modelViewMatrix,\n        false,\n        object._modelViewMatrix.elements\n      );\n    }\n\n    if (p_uniforms.normalMatrix) {\n      this._gl.uniformMatrix3fv(\n        p_uniforms.normalMatrix,\n        false,\n        object._normalMatrix.elements\n      );\n    }\n\n    if (p_uniforms.projinv) {\n      this._projInverse.getInverse(camera.projectionMatrix);\n      this._gl.uniformMatrix4fv(p_uniforms.projinv, false, this._projInverse.elements);\n    }\n\n    if (p_uniforms.viewMatrix) {\n      this._gl.uniformMatrix4fv(\n        p_uniforms.viewMatrix,\n        false,\n        camera.matrixWorldInverse.elements\n      );\n    }\n    // Send projection matrix to uniform variable in shader\n    if (refreshMaterial) {\n      // Load projection, model-view matrices for perspective\n\n      // Set up correct fog uniform vals\n      m_uniforms.fogColor.value = fog.color;\n      m_uniforms.fogNear.value = fog.near;\n      m_uniforms.fogFar.value = fog.far;\n\n      // Set up lights for lambert shader\n      if (\n        material.shaderID.startsWith(\"lambert\") ||\n        material.shaderID === \"instanced\" ||\n        material.shaderID.endsWith(\"imposter\")\n      ) {\n        // load view and normal matrices for directional and object\n        // lighting\n\n        if (this._lightsNeedUpdate) {\n          this.setupLights(program, lights);\n          this._lightsNeedUpdate = false;\n        }\n\n        // Set up correct light uniform var vals\n        m_uniforms.directionalLightColor.value = this._lights.directional.colors;\n        m_uniforms.directionalLightDirection.value =\n          this._lights.directional.positions;\n      } else if (material.shaderID.endsWith(\"outline\")) {\n        m_uniforms.outlineColor.value = material.outlineColor;\n        m_uniforms.outlineWidth.value = material.outlineWidth;\n        m_uniforms.outlinePushback.value = material.outlinePushback;\n      } else if (material.shaderID === \"volumetric\") {\n        //need a matrix that maps back from model coordinates to texture coordinates\n        //  textureMat*modelInv*position\n        object._modelViewMatrix.getScale(this._direction); //scale factor of conversion\n        this._worldInverse.getInverse(object._modelViewMatrix);\n        this._projInverse.getInverse(camera.projectionMatrix);\n        this._textureMatrix.multiplyMatrices(\n          object.material.texmatrix,\n          this._worldInverse\n        );\n        this._gl.uniformMatrix4fv(\n          p_uniforms.textmat,\n          false,\n          this._textureMatrix.elements\n        );\n        this._gl.uniformMatrix4fv(p_uniforms.projinv, false, this._projInverse.elements);\n\n        //  need the resolution (step size of ray in viewer coordinates)\n        let invscale = Math.min(\n          Math.min(this._direction.x, this._direction.y),\n          this._direction.z\n        );\n        m_uniforms.step.value = object.material.unit * invscale;\n        m_uniforms.maxdepth.value = object.material.maxdepth * invscale;\n        m_uniforms.transfermax.value = object.material.transfermax;\n        m_uniforms.transfermin.value = object.material.transfermin;\n        m_uniforms.subsamples.value = object.material.subsamples;\n\n        renderer.setTexture(object.material.transferfn, 4, false);\n        renderer.setTexture(object.material.map, 3, true);\n        //depth texture from the renderbuffer, for volumetric integration with surfaces\n        this._gl.activeTexture(this._gl.TEXTURE5);\n        this._gl.bindTexture(this._gl.TEXTURE_2D, this._depthTexture);\n      }\n\n      // opacity, diffuse, emissive, etc\n      m_uniforms.opacity.value = material.opacity;\n\n      // Load any other material specific uniform variables to gl shaders\n      this.loadMaterialUniforms(p_uniforms, m_uniforms);\n    }\n\n    if (m_uniforms.shading) {\n      if (m_uniforms.shading.value == 3) {\n        this._gl.activeTexture(this._gl.TEXTURE0 + this.SHADE_TEXTURE);\n        this._gl.bindTexture(this._gl.TEXTURE_2D, this._shadingTexture);\n      } else {\n        console.error(\"Invalid shading textures.\");\n      }\n    }\n\n    return program;\n  }\n\n  private loadMaterialUniforms(p_uniforms, m_uniforms) {\n    var uniformVar, type, uniformVal, uniformLoc;\n\n    for (uniformVar in m_uniforms) {\n      if (!p_uniforms[uniformVar]) continue;\n\n      type = m_uniforms[uniformVar].type;\n      uniformVal = m_uniforms[uniformVar].value;\n      uniformLoc = p_uniforms[uniformVar];\n\n      // single float\n      if (type === \"f\") this._gl.uniform1f(uniformLoc, uniformVal);\n      // single integer\n      else if (type === \"i\") this._gl.uniform1i(uniformLoc, uniformVal);\n      // array of floats\n      else if (type === \"fv\") this._gl.uniform3fv(uniformLoc, uniformVal);\n      // color - r,g,b floats\n      else if (type === \"c\")\n        this._gl.uniform3f(uniformLoc, uniformVal.r, uniformVal.g, uniformVal.b);\n      else if (type === \"f4\")\n        this._gl.uniform4f(\n          uniformLoc,\n          uniformVal[0],\n          uniformVal[1],\n          uniformVal[2],\n          uniformVal[3]\n        );\n    }\n  }\n\n  // Objects adding\n\n  private addObject(object, scene) {\n    var g, gl, geometry, geometryGroup;\n\n    if (!object.__webglInit) {\n      object.__webglInit = true;\n\n      object._modelViewMatrix = new Matrix4();\n      object._normalMatrix = new Matrix3();\n\n      if (\n        object.geometry !== undefined &&\n        object.geometry.__webglInit === undefined\n      ) {\n        object.geometry.__webglInit = true;\n        object.geometry.addEventListener(\"dispose\", this.onGeometryDispose.bind(this));\n      }\n\n      if (object instanceof Mesh || object instanceof Line) {\n        geometry = object.geometry;\n\n        for (g = 0, gl = geometry.geometryGroups.length; g < gl; g++) {\n          geometryGroup = geometry.geometryGroups[g];\n\n          geometryGroup.id = this._geometryGroupCounter++;\n\n          // initialise VBO on the first access\n\n          if (!geometryGroup.__webglVertexBuffer) {\n            if (object instanceof Mesh) {\n              this.createMeshBuffers(geometryGroup);\n              geometry.elementsNeedUpdate = true;\n              geometry.normalsNeedUpdate = true;\n            } else if (object instanceof Line) this.createLineBuffers(geometryGroup);\n\n            geometry.verticesNeedUpdate = true;\n            geometry.colorsNeedUpdate = true;\n          }\n        }\n      }\n    }\n\n    if (!object.__webglActive) {\n      if (object instanceof Mesh || object instanceof Line) {\n        geometry = object.geometry;\n\n        for (g = 0, gl = geometry.geometryGroups.length; g < gl; g++) {\n          geometryGroup = geometry.geometryGroups[g];\n\n          this.addBuffer(scene.__webglObjects, geometryGroup, object);\n        }\n      }\n\n      // Sprite\n      else if (object instanceof Sprite) scene.__webglSprites.push(object);\n\n      object.__webglActive = true;\n    }\n  }\n\n  private updateObject(object) {\n    var geometry = object.geometry,\n      geometryGroup;\n\n    if (object instanceof Mesh || object instanceof Line) {\n      for (var g = 0, gl = geometry.geometryGroups.length; g < gl; g++) {\n        geometryGroup = geometry.geometryGroups[g];\n\n        if (\n          geometry.verticesNeedUpdate ||\n          geometry.elementsNeedUpdate ||\n          geometry.colorsNeedUpdate ||\n          geometry.normalsNeedUpdate\n        ) {\n          this.setBuffers(geometryGroup, this._gl.STATIC_DRAW);\n        }\n      }\n\n      geometry.verticesNeedUpdate = false;\n      geometry.elementsNeedUpdate = false;\n      geometry.normalsNeedUpdate = false;\n      geometry.colorsNeedUpdate = false;\n\n      geometry.buffersNeedUpdate = false;\n    }\n  }\n\n  private removeObject(object, scene) {\n    if (object instanceof Mesh || object instanceof Line)\n      this.removeInstances(scene.__webglObjects, object);\n    else if (object instanceof Sprite)\n      this.removeInstancesDirect(scene.__webglSprites, object);\n\n    object.__webglActive = false;\n  }\n\n  private removeInstances(objList, object) {\n    for (var o = objList.length - 1; o >= 0; --o) {\n      if (objList[o].object === object) objList.splice(o, 1);\n    }\n  }\n\n  private removeInstancesDirect(objList, object) {\n    for (var o = objList.length - 1; o >= 0; --o) {\n      if (objList[o] === object) objList.splice(o, 1);\n    }\n  }\n\n  private unrollBufferMaterial(globject) {\n    var object = globject.object;\n    var material = object.material;\n\n    if (material.volumetric) {\n      globject.opaque = null;\n      globject.transparent = null;\n      globject.volumetric = material;\n    } else if (material.transparent) {\n      globject.opaque = null;\n      globject.volumetric = null;\n      globject.transparent = material;\n      if (!material.wireframe) {\n        let blankMaterial = material.clone();\n        blankMaterial.opacity = 0.0;\n        globject.transparentDepth = blankMaterial;\n      }\n    } else {\n      globject.opaque = material;\n      globject.transparent = null;\n      globject.volumetric = null;\n      if (!material.wireframe) {\n        let blankMaterial = material.clone();\n        blankMaterial.opacity = 0.0;\n        globject.opaqueDepth = blankMaterial;\n      }\n      if(material.hasAO) {\n        globject.hasAO = true;\n      }\n      if (this._AOEnabled || globject.hasAO) {\n        globject.opaqueShaded = material.clone();\n        globject.opaqueShaded.shaded = true;\n      }\n\n    }\n  }\n\n  private setBuffers(geometryGroup, hint) {\n    var vertexArray = geometryGroup.vertexArray;\n    var colorArray = geometryGroup.colorArray;\n\n    // offset buffers\n    if (geometryGroup.__webglOffsetBuffer !== undefined) {\n      this._gl.bindBuffer(this._gl.ARRAY_BUFFER, geometryGroup.__webglOffsetBuffer);\n      this._gl.bufferData(this._gl.ARRAY_BUFFER, vertexArray, hint);\n    } else {\n      //normal, non-instanced case\n      this._gl.bindBuffer(this._gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer);\n      this._gl.bufferData(this._gl.ARRAY_BUFFER, vertexArray, hint);\n    }\n    // color buffers\n    this._gl.bindBuffer(this._gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer);\n    this._gl.bufferData(this._gl.ARRAY_BUFFER, colorArray, hint);\n\n    // normal buffers\n    if (\n      geometryGroup.normalArray &&\n      geometryGroup.__webglNormalBuffer !== undefined\n    ) {\n      var normalArray = geometryGroup.normalArray;\n      this._gl.bindBuffer(this._gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer);\n      this._gl.bufferData(this._gl.ARRAY_BUFFER, normalArray, hint);\n    }\n\n    // radius buffers\n    if (\n      geometryGroup.radiusArray &&\n      geometryGroup.__webglRadiusBuffer !== undefined\n    ) {\n      this._gl.bindBuffer(this._gl.ARRAY_BUFFER, geometryGroup.__webglRadiusBuffer);\n      this._gl.bufferData(this._gl.ARRAY_BUFFER, geometryGroup.radiusArray, hint);\n    }\n\n    // face (index) buffers\n    if (\n      geometryGroup.faceArray &&\n      geometryGroup.__webglFaceBuffer !== undefined\n    ) {\n      var faceArray = geometryGroup.faceArray;\n      this._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer);\n      this._gl.bufferData(this._gl.ELEMENT_ARRAY_BUFFER, faceArray, hint);\n    }\n\n    // line (index) buffers (for wireframe)\n    if (\n      geometryGroup.lineArray &&\n      geometryGroup.__webglLineBuffer !== undefined\n    ) {\n      var lineArray = geometryGroup.lineArray;\n      this._gl.bindBuffer(this._gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer);\n      this._gl.bufferData(this._gl.ELEMENT_ARRAY_BUFFER, lineArray, hint);\n    }\n  }\n\n  // Creates appropriate gl buffers for geometry chunk\n  // TODO: do we need line buffer for mesh objects?\n  // Also, can we integrate this with createLineBuffers?\n  private createMeshBuffers(geometryGroup) {\n    if (geometryGroup.radiusArray) {\n      geometryGroup.__webglRadiusBuffer = this._gl.createBuffer();\n    }\n    if (geometryGroup.useOffset) {\n      geometryGroup.__webglOffsetBuffer = this._gl.createBuffer();\n    }\n    geometryGroup.__webglVertexBuffer = this._gl.createBuffer();\n    geometryGroup.__webglNormalBuffer = this._gl.createBuffer();\n    geometryGroup.__webglColorBuffer = this._gl.createBuffer();\n\n    geometryGroup.__webglFaceBuffer = this._gl.createBuffer();\n    geometryGroup.__webglLineBuffer = this._gl.createBuffer();\n\n    this.info.memory.geometries++;\n  }\n\n  private createLineBuffers(geometry) {\n    geometry.__webglVertexBuffer = this._gl.createBuffer();\n    geometry.__webglColorBuffer = this._gl.createBuffer();\n\n    this.info.memory.geometries++;\n  }\n\n  private addBuffer(objlist, buffer, object) {\n    objlist.push({\n      buffer: buffer,\n      object: object,\n      opaque: null,\n      transparent: null,\n    });\n  }\n\n  private setupMatrices(object, camera) {\n    object._modelViewMatrix.multiplyMatrices(\n      camera.matrixWorldInverse,\n      object.matrixWorld\n    );\n\n    object._normalMatrix.getInverse(object._modelViewMatrix);\n    object._normalMatrix.transpose();\n  }\n\n  // Fallback filters for non-power-of-2 textures\n  private filterFallback(filter) {\n    return this._gl.LINEAR;\n  }\n\n  private setTextureParameters(textureType, texture) {\n    if (textureType == this._gl.TEXTURE_2D) {\n      this._gl.texParameteri(textureType, this._gl.TEXTURE_WRAP_S, this._gl.CLAMP_TO_EDGE);\n      this._gl.texParameteri(textureType, this._gl.TEXTURE_WRAP_T, this._gl.CLAMP_TO_EDGE);\n      this._gl.texParameteri(\n        textureType,\n        this._gl.TEXTURE_MAG_FILTER,\n        this.filterFallback(texture.magFilter)\n      );\n      this._gl.texParameteri(\n        textureType,\n        this._gl.TEXTURE_MIN_FILTER,\n        this.filterFallback(texture.minFilter)\n      );\n    } else {\n      // 3Dtexture\n      this._gl.texParameteri(textureType, this._gl.TEXTURE_WRAP_S, this._gl.CLAMP_TO_EDGE);\n      this._gl.texParameteri(textureType, this._gl.TEXTURE_WRAP_T, this._gl.CLAMP_TO_EDGE);\n      this._gl.texParameteri(textureType, (this._gl as WebGL2RenderingContext).TEXTURE_WRAP_R, this._gl.CLAMP_TO_EDGE);\n\n      if (this._extColorBufferFloat && this._extFloatLinear) {\n        //linear interpolation isn't supported by default (despite being the default??)\n        this._gl.texParameteri(textureType, this._gl.TEXTURE_MAG_FILTER, this._gl.LINEAR);\n        this._gl.texParameteri(textureType, this._gl.TEXTURE_MIN_FILTER, this._gl.LINEAR);\n      } else {\n        this._gl.texParameteri(textureType, this._gl.TEXTURE_MAG_FILTER, this._gl.NEAREST);\n        this._gl.texParameteri(textureType, this._gl.TEXTURE_MIN_FILTER, this._gl.NEAREST);\n      }\n    }\n  }\n\n  // Map constants to WebGL constants\n\n  private paramToGL(p) {\n    if (p === UnsignedByteType) return this._gl.UNSIGNED_BYTE;\n    if (p === RGBAFormat) return this._gl.RGBA;\n    if (p === NearestFilter) return this._gl.NEAREST;\n\n    return 0;\n  }\n\n  private setupLights(program, lights) {\n    var l,\n      ll,\n      light,\n      r = 0,\n      g = 0,\n      b = 0,\n      color,\n      intensity,\n      zlights = this._lights,\n      dirColors = zlights.directional.colors,\n      dirPositions = zlights.directional.positions,\n      dirLength = 0,\n      dirOffset = 0;\n\n    for (l = 0, ll = lights.length; l < ll; l++) {\n      light = lights[l];\n\n      color = light.color;\n      intensity = light.intensity;\n\n      if (light instanceof Light) {\n\n        this._direction.getPositionFromMatrix(light.matrixWorld);\n        this._vector3.getPositionFromMatrix(light.target.matrixWorld);\n        this._direction.sub(this._vector3);\n        this._direction.normalize();\n\n        if (this._direction.x === 0 && this._direction.y === 0 && this._direction.z === 0)\n          continue;\n\n        dirPositions[dirOffset] = this._direction.x;\n        dirPositions[dirOffset + 1] = this._direction.y;\n        dirPositions[dirOffset + 2] = this._direction.z;\n\n        dirColors[dirOffset] = color.r * intensity;\n        dirColors[dirOffset + 1] = color.g * intensity;\n        dirColors[dirOffset + 2] = color.b * intensity;\n\n        dirOffset += 3;\n\n        dirLength++;\n      }\n    }\n\n    zlights.ambient[0] = r;\n    zlights.ambient[1] = g;\n    zlights.ambient[2] = b;\n    zlights.directional.length = dirLength;\n  }\n\n  private initGL() {\n    //note setting antialis to true doesn't seem to do much and\n    //causes problems on iOS Safari\n\n    try {\n      if (\n        !(this._gl = this._canvas.getContext(\"webgl2\", {\n          alpha: this._alpha,\n          premultipliedAlpha: this._premultipliedAlpha,\n          antialias: this._antialias,\n          preserveDrawingBuffer: this._preserveDrawingBuffer,\n        }))\n      ) {\n        if (\n          !(this._gl = this._canvas.getContext(\"experimental-webgl\", {\n            alpha: this._alpha,\n            premultipliedAlpha: this._premultipliedAlpha,\n            antialias: this._antialias,\n            preserveDrawingBuffer: this._preserveDrawingBuffer,\n          }))\n        ) {\n          if (\n            !(this._gl = this._canvas.getContext(\"webgl\", {\n              alpha: this._alpha,\n              premultipliedAlpha: this._premultipliedAlpha,\n              antialias: this._antialias,\n              preserveDrawingBuffer: this._preserveDrawingBuffer,\n            }))\n          ) {\n            throw \"Error creating WebGL context.\";\n          }\n        }\n      }\n      var vers = this._gl.getParameter(this._gl.VERSION);\n      this._webglversion = parseInt(vers[6]);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  private isWebGL1() {\n    return this._webglversion == 1;\n  }\n\n  private setDefaultGLState() {\n    this._gl.clearColor(0, 0, 0, 1);\n    this._gl.clearDepth(1);\n    this._gl.clearStencil(0);\n\n    this._gl.enable(this._gl.DEPTH_TEST);\n    this._gl.depthFunc(this._gl.LEQUAL);\n\n    this._gl.frontFace(this._gl.CCW);\n    this._gl.cullFace(this._gl.BACK);\n    this._gl.enable(this._gl.CULL_FACE);\n\n    this._gl.enable(this._gl.BLEND);\n    this._gl.blendEquation(this._gl.FUNC_ADD);\n    this._gl.blendFunc(this._gl.SRC_ALPHA, this._gl.ONE_MINUS_SRC_ALPHA);\n\n    this._gl.clearColor(this._clearColor.r, this._clearColor.g, this._clearColor.b, this._clearAlpha);\n  }\n\n  // rendering\n  private renderObjects(\n    renderList,\n    reverse,\n    materialType,\n    camera,\n    lights,\n    fog,\n    useBlending\n  ) {\n    var webglObject, object, buffer, material, start, end, delta;\n\n    // Forward or backward render\n\n\n    if (reverse) {\n      start = renderList.length - 1;\n      end = -1;\n      delta = -1;\n    } else {\n      start = 0;\n      end = renderList.length;\n      delta = 1;\n    }\n\n    for (var i = start; i !== end; i += delta) {\n      webglObject = renderList[i];\n\n      if (webglObject.render) {\n        object = webglObject.object;\n        buffer = webglObject.buffer;\n        material = webglObject[materialType];\n\n        //convert to AO if needed\n        if ((webglObject.hasAO || this._AOEnabled) &&\n          webglObject[materialType + \"Shaded\"]) {\n          material = webglObject[materialType + \"Shaded\"];\n        }\n        if (!material) continue;\n\n        if (useBlending) this.setBlending(true);\n\n        this.setDepthTest(material.depthTest);\n        this.setDepthWrite(material.depthWrite);\n        this.setPolygonOffset(\n          material.polygonOffset,\n          material.polygonOffsetFactor,\n          material.polygonOffsetUnits\n        );\n\n        var reflected = object._modelViewMatrix.isReflected();\n\n        this.setMaterialFaces(material, reflected);\n\n        this.renderBuffer(camera, lights, fog, material, buffer, object);\n\n        if ((this._outlineEnabled || material.outline) &&\n          !material.wireframe &&\n          material.shaderID !== \"basic\" &&\n          material.opacity !== 0.0) {\n          let outmat: any = this._outlineMaterial;\n          if (material.shaderID == \"sphereimposter\") {\n            outmat = this._outlineSphereImposterMaterial;\n          } else if (material.shaderID == \"stickimposter\") {\n            outmat = this._outlineStickImposterMaterial;\n          }\n\n          this.renderBuffer(\n            camera,\n            lights,\n            fog,\n            outmat,\n            buffer,\n            object\n          );\n        }\n      }\n    }\n  }\n\n  private renderSprites(scene, camera, inFront) {\n    // Reset state once regardless\n    // This should also fix cartoon render bug (after transparent surface\n    // render)\n\n    this._currentGeometryGroupHash = -1;\n    this._currentProgram = null;\n    this._currentCamera = null;\n    this._oldDepthWrite = -1;\n    this._oldDepthTest = -1;\n    this._oldDoubleSided = -1;\n    this._currentMaterialId = -1;\n    this._oldFlipSided = -1;\n    this._lightsNeedUpdate = true;\n\n    this.sprites.render(scene, camera, this._currentWidth, this._currentHeight, inFront);\n\n    // Reset state a\n    this._currentGeometryGroupHash = -1;\n    this._currentProgram = null;\n    this._currentCamera = null;\n    this._oldDepthWrite = -1;\n    this._oldDepthTest = -1;\n    this._oldDoubleSided = -1;\n    this._currentMaterialId = -1;\n    this._oldFlipSided = -1;\n  }\n}\n","import { Fog } from \"./Fog\";\nimport type { Camera } from \"./Camera\";\nimport { Scene } from \"./core\";\n//Render plugins go here\nimport { Sprite } from \"./objects/Sprite\";\nimport { ShaderLib } from \"./shaders/index\";\nimport { Shader } from './shaders/ShaderType';\n\nexport type Nullable<T> = T | null;\nexport type NullableWebGLUniformLocation = Nullable<WebGLUniformLocation>;\n\nexport type UniformsValueType = {\n  uvOffset: NullableWebGLUniformLocation;\n  uvScale: NullableWebGLUniformLocation;\n  rotation: NullableWebGLUniformLocation;\n  scale: NullableWebGLUniformLocation;\n  alignment: NullableWebGLUniformLocation;\n  color: NullableWebGLUniformLocation;\n  map: NullableWebGLUniformLocation;\n  opacity: NullableWebGLUniformLocation;\n  useScreenCoordinates: NullableWebGLUniformLocation;\n  screenPosition: NullableWebGLUniformLocation;\n  modelViewMatrix: NullableWebGLUniformLocation;\n  projectionMatrix: NullableWebGLUniformLocation;\n  fogType: NullableWebGLUniformLocation;\n  fogDensity: NullableWebGLUniformLocation;\n  fogNear: NullableWebGLUniformLocation;\n  fogFar: NullableWebGLUniformLocation;\n  fogColor: NullableWebGLUniformLocation;\n  alphaTest: NullableWebGLUniformLocation;\n};\n\nexport type SpriteMeta = {\n  vertices: Nullable<Float32Array>;\n  faces: Nullable<Uint16Array>;\n  vertexBuffer: Nullable<WebGLBuffer>;\n  elementBuffer: Nullable<WebGLBuffer>;\n  program: Nullable<WebGLProgram>;\n  attributes: Record<string, number>;\n  uniforms: Nullable<UniformsValueType>;\n};\n\n/*\n * Sprite render plugin\n */\nexport class SpritePlugin {\n  private gl?: WebGLRenderingContext;\n  private renderer: any;\n  private precision?: number;\n  private sprite: SpriteMeta = {\n    vertices: null,\n    faces: null,\n    vertexBuffer: null,\n    elementBuffer: null,\n    program: null,\n    attributes: {},\n    uniforms: null,\n  };\n  sprites?: Sprite[];\n\n  init(renderer: any) {\n    this.gl = renderer.context as WebGLRenderingContext;\n    this.renderer = renderer;\n\n    this.precision = renderer.getPrecision();\n\n    this.sprite.vertices = new Float32Array(8 + 8);\n    this.sprite.faces = new Uint16Array(6);\n\n    var i = 0;\n\n    this.sprite.vertices[i++] = -1;\n    this.sprite.vertices[i++] = -1; // vertex 0\n    this.sprite.vertices[i++] = 0;\n    this.sprite.vertices[i++] = 0; // uv 0\n\n    this.sprite.vertices[i++] = 1;\n    this.sprite.vertices[i++] = -1; // vertex 1\n    this.sprite.vertices[i++] = 1;\n    this.sprite.vertices[i++] = 0; // uv 1\n\n    this.sprite.vertices[i++] = 1;\n    this.sprite.vertices[i++] = 1; // vertex 2\n    this.sprite.vertices[i++] = 1;\n    this.sprite.vertices[i++] = 1; // uv 2\n\n    this.sprite.vertices[i++] = -1;\n    this.sprite.vertices[i++] = 1; // vertex 3\n    this.sprite.vertices[i++] = 0;\n    this.sprite.vertices[i++] = 1; // uv 3\n\n    i = 0;\n\n    this.sprite.faces[i++] = 0;\n    this.sprite.faces[i++] = 1;\n    this.sprite.faces[i++] = 2;\n    this.sprite.faces[i++] = 0;\n    this.sprite.faces[i++] = 2;\n    this.sprite.faces[i++] = 3;\n\n    this.sprite.vertexBuffer = this.gl.createBuffer();\n    this.sprite.elementBuffer = this.gl.createBuffer();\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.sprite.vertexBuffer);\n    this.gl.bufferData(\n      this.gl.ARRAY_BUFFER,\n      this.sprite.vertices,\n      this.gl.STATIC_DRAW\n    );\n\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.sprite.elementBuffer);\n    this.gl.bufferData(\n      this.gl.ELEMENT_ARRAY_BUFFER,\n      this.sprite.faces,\n      this.gl.STATIC_DRAW\n    );\n\n    this.sprite.program = this.createProgram(\n      ShaderLib.sprite,\n      this.precision || 1 /** added default to single precision */\n    );\n\n    this.sprite.attributes = {};\n    const uniforms = {} as Partial<UniformsValueType>;\n\n    this.sprite.attributes.position = this.gl.getAttribLocation(\n      this.sprite.program,\n      \"position\"\n    );\n    this.sprite.attributes.uv = this.gl.getAttribLocation(\n      this.sprite.program,\n      \"uv\"\n    );\n\n    uniforms.uvOffset = this.gl.getUniformLocation(\n      this.sprite.program,\n      \"uvOffset\"\n    );\n    uniforms.uvScale = this.gl.getUniformLocation(\n      this.sprite.program,\n      \"uvScale\"\n    );\n    uniforms.rotation = this.gl.getUniformLocation(\n      this.sprite.program,\n      \"rotation\"\n    );\n    uniforms.scale = this.gl.getUniformLocation(this.sprite.program, \"scale\");\n    uniforms.alignment = this.gl.getUniformLocation(\n      this.sprite.program,\n      \"alignment\"\n    );\n    uniforms.color = this.gl.getUniformLocation(this.sprite.program, \"color\");\n    uniforms.map = this.gl.getUniformLocation(this.sprite.program, \"map\");\n    uniforms.opacity = this.gl.getUniformLocation(\n      this.sprite.program,\n      \"opacity\"\n    );\n    uniforms.useScreenCoordinates = this.gl.getUniformLocation(\n      this.sprite.program,\n      \"useScreenCoordinates\"\n    );\n    uniforms.screenPosition = this.gl.getUniformLocation(\n      this.sprite.program,\n      \"screenPosition\"\n    );\n    uniforms.modelViewMatrix = this.gl.getUniformLocation(\n      this.sprite.program,\n      \"modelViewMatrix\"\n    );\n    uniforms.projectionMatrix = this.gl.getUniformLocation(\n      this.sprite.program,\n      \"projectionMatrix\"\n    );\n    uniforms.fogType = this.gl.getUniformLocation(\n      this.sprite.program,\n      \"fogType\"\n    );\n    uniforms.fogDensity = this.gl.getUniformLocation(\n      this.sprite.program,\n      \"fogDensity\"\n    );\n    uniforms.fogNear = this.gl.getUniformLocation(\n      this.sprite.program,\n      \"fogNear\"\n    );\n    uniforms.fogFar = this.gl.getUniformLocation(this.sprite.program, \"fogFar\");\n    uniforms.fogColor = this.gl.getUniformLocation(\n      this.sprite.program,\n      \"fogColor\"\n    );\n    uniforms.alphaTest = this.gl.getUniformLocation(\n      this.sprite.program,\n      \"alphaTest\"\n    );\n\n    this.sprite.uniforms = uniforms as UniformsValueType;\n  }\n\n  render(\n    scene: Scene,\n    camera: Camera,\n    viewportWidth: number,\n    viewportHeight: number,\n    inFront?: boolean\n  ) {\n    if (!this.gl) throw new Error(\"WebGLRenderer not initialized\");\n    let sprites: unknown[] = [];\n    scene?.__webglSprites?.forEach((sprite) => {\n      //depthTest is false for inFront labels\n      if (inFront && sprite.material.depthTest == false) {\n        sprites.push(sprite);\n      } else if (!inFront && sprite.material.depthTest) {\n        sprites.push(sprite);\n      }\n    });\n\n    let nSprites = sprites.length;\n\n    if (!nSprites) return;\n\n    const attributes = this.sprite.attributes;\n    const uniforms = this.sprite.uniforms;\n\n    if (!uniforms) throw new Error(\"Uniforms not defined\");\n\n    var halfViewportWidth = viewportWidth * 0.5,\n      halfViewportHeight = viewportHeight * 0.5;\n\n    // setup gl\n\n    this.gl.useProgram(this.sprite.program);\n\n    this.gl.enableVertexAttribArray(attributes.position);\n    this.gl.enableVertexAttribArray(attributes.uv);\n\n    this.gl.disable(this.gl.CULL_FACE);\n    this.gl.enable(this.gl.BLEND);\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, this.sprite.vertexBuffer);\n    this.gl.vertexAttribPointer(\n      attributes.position,\n      2,\n      this.gl.FLOAT,\n      false,\n      2 * 8,\n      0\n    );\n    this.gl.vertexAttribPointer(\n      attributes.uv,\n      2,\n      this.gl.FLOAT,\n      false,\n      2 * 8,\n      8\n    );\n\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.sprite.elementBuffer);\n\n    this.gl.uniformMatrix4fv(\n      uniforms.projectionMatrix,\n      false,\n      camera.projectionMatrix.elements\n    );\n\n    this.gl.activeTexture(this.gl.TEXTURE0);\n    this.gl.uniform1i(uniforms.map, 0);\n\n    var oldFogType = 0;\n    var sceneFogType = 0;\n    var fog = scene.fog as Fog;\n\n    if (fog) {\n      this.gl.uniform3f(\n        uniforms.fogColor,\n        fog.color.r,\n        fog.color.g,\n        fog.color.b\n      );\n\n      this.gl.uniform1f(uniforms.fogNear, fog.near);\n      this.gl.uniform1f(uniforms.fogFar, fog.far);\n\n      this.gl.uniform1i(uniforms.fogType, 1);\n      oldFogType = 1;\n      sceneFogType = 1;\n    } else {\n      this.gl.uniform1i(uniforms.fogType, 0);\n      oldFogType = 0;\n      sceneFogType = 0;\n    }\n\n    // update positions and sort\n\n    var i;\n    let sprite: Sprite;\n    let material;\n    let size;\n    let fogType;\n    let scale: number[] = [];\n\n    for (i = 0; i < nSprites; i++) {\n      sprite = sprites[i] as Sprite;\n      material = sprite.material;\n      if (!material) continue;\n      if (material.depthTest == false && !inFront) continue;\n\n      if (!sprite.visible || material.opacity === 0) continue;\n\n      if (!material.useScreenCoordinates) {\n        sprite._modelViewMatrix.multiplyMatrices(\n          camera.matrixWorldInverse,\n          sprite.matrixWorld\n        );\n        sprite.z = -sprite._modelViewMatrix.elements[14];\n      } else {\n        sprite.z = -sprite.position.z;\n      }\n    }\n\n    sprites.sort(painterSortStable);\n\n    // render all sprites\n    for (i = 0; i < nSprites; i++) {\n      sprite = sprites[i] as Sprite;\n      material = sprite.material;\n      if (!material) continue;\n      if (!sprite.visible || material.opacity === 0) continue;\n\n      if (material.map && material.map.image && material.map.image.width) {\n        this.gl.uniform1f(uniforms?.alphaTest || null, material.alphaTest);\n        var w = material.map.image.width;\n        var h = material.map.image.height;\n\n        scale[0] = (w * this.renderer.devicePixelRatio) / viewportWidth;\n        scale[1] = (h * this.renderer.devicePixelRatio) / viewportHeight;\n\n        if (material.useScreenCoordinates === true) {\n          this.gl.uniform1i(uniforms.useScreenCoordinates, 1);\n          this.gl.uniform3f(\n            uniforms.screenPosition,\n            (sprite.position.x * this.renderer.devicePixelRatio -\n              halfViewportWidth) /\n              halfViewportWidth,\n            (halfViewportHeight -\n              sprite.position.y * this.renderer.devicePixelRatio) /\n              halfViewportHeight,\n            Math.max(0, Math.min(1, sprite.position.z))\n          );\n        } else {\n          this.gl.uniform1i(uniforms.useScreenCoordinates, 0);\n          this.gl.uniformMatrix4fv(\n            uniforms.modelViewMatrix,\n            false,\n            sprite._modelViewMatrix.elements\n          );\n        }\n\n        if (scene.fog && material.fog) {\n          fogType = sceneFogType;\n        } else {\n          fogType = 0;\n        }\n\n        if (oldFogType !== fogType) {\n          this.gl.uniform1i(uniforms.fogType, fogType);\n          oldFogType = fogType;\n        }\n\n        size = 1 / (material.scaleByViewport ? viewportHeight : 1);\n\n        scale[0] *= size * sprite.scale.x;\n        scale[1] *= size * sprite.scale.y;\n\n        let alignx = material?.alignment?.x,\n          aligny = material?.alignment?.y;\n        if (material.screenOffset) {\n          //adjust alignment offset by screenOffset adjusted to sprite coords\n          alignx = (alignx || 0) + (2.0 * material.screenOffset.x) / w;\n          aligny = (aligny || 0) + (2.0 * material.screenOffset.y) / h;\n        }\n\n        this.gl.uniform2f(\n          uniforms.uvScale,\n          material?.uvScale?.x || 1,\n          material?.uvScale?.y || 1\n        );\n        this.gl.uniform2f(\n          uniforms.uvOffset,\n          material?.uvOffset?.x || 0,\n          material?.uvOffset?.y || 0\n        );\n        this.gl.uniform2f(uniforms.alignment, alignx || 0, aligny || 0);\n\n        this.gl.uniform1f(uniforms.opacity, material.opacity);\n        this.gl.uniform3f(\n          uniforms.color,\n          material?.color?.r || 0,\n          material?.color?.g || 0,\n          material?.color?.b || 0\n        );\n\n        this.gl.uniform1f(uniforms.rotation, sprite.rotation as number);\n        this.gl.uniform2fv(uniforms.scale, scale);\n\n        //this.renderer.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\n        this.renderer.setDepthTest(material.depthTest);\n        this.renderer.setDepthWrite(material.depthWrite);\n        this.renderer.setTexture(material.map, 0);\n\n        this.gl.drawElements(this.gl.TRIANGLES, 6, this.gl.UNSIGNED_SHORT, 0);\n      }\n    }\n\n    // restore gl\n    this.gl.enable(this.gl.CULL_FACE);\n  }\n\n  private createProgram(shader: Shader, precision: number): WebGLProgram {\n    if (!this.gl) throw new Error(\"WebGL Rendering context not found\");\n    var program = this.gl.createProgram();\n\n    if (!program) throw new Error(\"Error creating webgl program\");\n\n    var fragmentShader = this.gl.createShader(this.gl.FRAGMENT_SHADER);\n    var vertexShader = this.gl.createShader(this.gl.VERTEX_SHADER);\n\n    if (!fragmentShader)\n      throw new Error(\n        \"Unable to create fragment shader SpritePlugin.createProgram\"\n      );\n    if (!vertexShader)\n      throw new Error(\n        \"Unable to create vertex shader SpritePlugin.createProgram\"\n      );\n\n    var prefix = \"precision \" + precision + \" float;\\n\";\n\n    this.gl.shaderSource(fragmentShader, prefix + shader.fragmentShader);\n    this.gl.shaderSource(vertexShader, prefix + shader.vertexShader);\n\n    this.gl.compileShader(fragmentShader);\n    this.gl.compileShader(vertexShader);\n\n    if (\n      !this.gl.getShaderParameter(fragmentShader, this.gl.COMPILE_STATUS) ||\n      !this.gl.getShaderParameter(vertexShader, this.gl.COMPILE_STATUS)\n    ) {\n      throw new Error(`Error compiling shader: \n      ${this.gl.getShaderInfoLog(fragmentShader)} \n      ${this.gl.getShaderInfoLog(vertexShader)}`);\n    }\n\n    this.gl.attachShader(program, fragmentShader);\n    this.gl.attachShader(program, vertexShader);\n\n    this.gl.linkProgram(program);\n\n    if (!this.gl.getProgramParameter(program, this.gl.LINK_STATUS))\n      console.error(\"Could not initialize shader\");\n\n    return program;\n  }\n}\nfunction painterSortStable(a: any, b: any): number {\n  if (a.z !== b.z) {\n    return b.z - a.z;\n  } else {\n    return b.id - a.id;\n  }\n}\n","export enum Coloring {\n  // colors\n  NoColors = 0,\n  FaceColors = 1,\n  VertexColors = 2,\n}","export enum Shading {\n  // shading\n  NoShading = 0,\n  FlatShading = 1,\n  SmoothShading = 2,\n}","// sides - not an enum for backwards compat\nexport const FrontSide = 0;\nexport const BackSide = 1;\nexport const DoubleSide = 2;","//Alignment for Sprites\n\nimport { Vector2 } from \"../math\";\n\nexport const SpriteAlignment = {\n    topLeft: new Vector2(1, -1),\n    topCenter: new Vector2(0, -1),\n    topRight: new Vector2(-1, -1),\n    centerLeft: new Vector2(1, 0),\n    center: new Vector2(0, 0),\n    centerRight: new Vector2(-1, 0),\n    bottomLeft: new Vector2(1, 1),\n    bottomCenter: new Vector2(0, 1),\n    bottomRight: new Vector2(-1, 1)\n}\n","// wrapping modes\nexport const ClampToEdgeWrapping = 1001;\n\n//Filters\nexport const LinearFilter = 1006;\nexport const NearestFilter = 1007;\nexport const LinearMipMapLinearFilter = 1008;\n\n//Data types\nexport const UnsignedByteType = 1009;\nexport const FloatType = 1010;\n\n//Pixel formats\nexport const RGBAFormat = 1021;\nexport const RFormat = 1022;\nexport const R32Format = 1023;","//Texture constants\n//TODO: Which of these do I need (since I only use textures to display label sprites) ?\nexport enum TextureOperations {\n  MultiplyOperation = 0,\n  MixOperation = 1,\n  AddOperation = 2,\n}","//Event Handling\nexport class EventDispatcher {\n  listeners = {} as Record<string, Array<(event: any) => void>>;\n\n  dispatchEvent(event: any) {\n    var listenerArray = this.listeners[event.type];\n\n    if (listenerArray !== undefined) {\n      event.target = this;\n\n      for (var i = 0, l = listenerArray.length; i < l; i++)\n        listenerArray[i].call(this, event);\n    }\n  }\n\n  removeEventListener(type: string, listener?: (event: any) => void) {\n    if (!listener) {\n      this.listeners[type] = [];\n    } else {\n      var index = this.listeners[type].indexOf(listener);\n      if (index !== -1) this.listeners[type].splice(index, 1);\n    }\n  }\n\n  addEventListener(type: string, listener: (event: any) => void) {\n    if (this.listeners[type] === undefined) this.listeners[type] = [];\n\n    if (this.listeners[type].indexOf(listener) === -1)\n      this.listeners[type].push(listener);\n  }\n}\n","import type { Material } from './../materials/Material';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial';\nimport { EventDispatcher } from \"./EventDispatcher\";\nimport { Vector3 } from \"../math\";\nimport { CC, Color } from \"../../colors\";\nconst BUFFERSIZE = 65535; //limited to 16bit indices\nexport class GeometryGroup {\n  id: number;\n  vertexArray: Float32Array | null = null;\n  colorArray: Float32Array | null = null;\n  normalArray: Float32Array | null = null;\n  radiusArray: Float32Array | null = null;\n  faceArray: Uint16Array | null = null;\n  lineArray: Uint16Array | null = null;\n  vertices: number = 0;\n  faceidx: number = 0;\n  lineidx: number = 0;\n  __inittedArrays = false;\n  useOffset: unknown;\n\n  constructor(id = 0) {\n    this.id = id;\n  }\n\n  setColors(setcolor: (r: number, g: number, b: number) => Color | number): void {\n    //apply a function that takes the vertex coordinate and returns a color\n    var v = this.vertexArray;\n    var c = this.colorArray;\n    if (!v) throw new Error(\"vertex array not initialized\");\n    if (!c) throw new Error(\"color array not initialized\");\n    if (v.length != c.length) {\n      console.log(\"Cannot re-color geometry group due to mismatched lengths.\");\n      return;\n    }\n    for (var i = 0; i < v.length; i += 3) {\n      var col = setcolor(v[i], v[i + 1], v[i + 2]);\n      if (!(col instanceof Color)) {\n        col = CC.color(col);\n      }\n      c[i] = col.r;\n      c[i + 1] = col.g;\n      c[i + 2] = col.b;\n    }\n  }\n\n  getNumVertices(): number {\n    return this.vertices;\n  }\n\n  getVertices() {\n    return this.vertexArray;\n  }\n\n  getCentroid() {\n    if (!this.vertexArray) throw new Error(\"vertex array not initialized\");\n    var centroid = new Vector3();\n    var offset: number, x: number, y: number, z: number;\n\n    for (var i = 0; i < this.vertices; ++i) {\n      offset = i * 3;\n\n      x = this.vertexArray[offset];\n      y = this.vertexArray[offset + 1];\n      z = this.vertexArray[offset + 2];\n\n      centroid.x += x;\n      centroid.y += y;\n      centroid.z += z;\n    }\n\n    //divideScalar checks for 0 denom\n    centroid.divideScalar(this.vertices);\n\n    return centroid;\n  }\n\n  //setup normals - vertex and face array must exist\n  setNormals(): void {\n    var faces = this.faceArray;\n    var verts = this.vertexArray;\n    var norms = this.normalArray;\n\n    if (!this.vertices || !this.faceidx) return;\n    if (!faces) throw new Error(\"face array not initialized\");\n    if (!verts) throw new Error(\"vertex array not initialized\");\n    if (!norms) throw new Error(\"normal array not initialized\");\n\n    //vertex indices\n    var a: number,\n      b: number,\n      c: number,\n      //and actual vertices\n      vA: Vector3,\n      vB: Vector3,\n      vC: Vector3,\n      norm: { normalize: () => void; x: number; y: number; z: number; };\n\n    for (var i = 0; i < faces.length / 3; ++i) {\n      a = faces[i * 3] * 3;\n      b = faces[i * 3 + 1] * 3;\n      c = faces[i * 3 + 2] * 3;\n\n      vA = new Vector3(verts[a], verts[a + 1], verts[a + 2]);\n      vB = new Vector3(verts[b], verts[b + 1], verts[b + 2]);\n      vC = new Vector3(verts[c], verts[c + 1], verts[c + 2]);\n\n      vA.subVectors(vA, vB);\n      vC.subVectors(vC, vB);\n      vC.cross(vA);\n\n      //face normal\n      norm = vC;\n      norm.normalize();\n\n      norms[a] += norm.x;\n      norms[b] += norm.x;\n      norms[c] += norm.x;\n      norms[a + 1] += norm.y;\n      norms[b + 1] += norm.y;\n      norms[c + 1] += norm.y;\n      norms[a + 2] += norm.z;\n      norms[b + 2] += norm.z;\n      norms[c + 2] += norm.z;\n    }\n  }\n\n  /* sets line index array from face arr\n  Note - assumes all faces are triangles (i.e. there will\n  be an extra diagonal for four-sided faces - user should\n  specify linearr for custom shape generation to show wireframe squares\n  as rectangles rather than two triangles) */\n  setLineIndices() {\n    if (!this.faceidx) return;\n\n    if (\n      this.lineArray &&\n      this.lineArray.length == this.faceidx * 2 &&\n      this.lineidx == this.faceidx * 2\n    )\n      return; //assume already computed\n\n    var faceArr = this.faceArray,\n      lineArr = (this.lineArray = new Uint16Array(this.faceidx * 2));\n    this.lineidx = this.faceidx * 2;\n\n    if (!faceArr) throw new Error(\"face array not initialized\");\n\n    for (var i = 0; i < this.faceidx / 3; ++i) {\n      var faceoffset = i * 3;\n      var lineoffset = faceoffset * 2;\n      var a = faceArr[faceoffset],\n        b = faceArr[faceoffset + 1],\n        c = faceArr[faceoffset + 2];\n\n      lineArr[lineoffset] = a;\n      lineArr[lineoffset + 1] = b;\n      lineArr[lineoffset + 2] = a;\n      lineArr[lineoffset + 3] = c;\n      lineArr[lineoffset + 4] = b;\n      lineArr[lineoffset + 5] = c;\n    }\n  }\n\n  vrml(indent: string, material?: Material) {\n    var ret = \"\";\n    ret +=\n      indent +\n      \"Shape {\\n\" +\n      indent +\n      \" appearance Appearance {\\n\" +\n      indent +\n      \"  material Material {\\n\" +\n      indent +\n      \"   diffuseColor \" +\n      material?.color?.r +\n      \" \" +\n      material?.color?.g +\n      \" \" +\n      material?.color?.b +\n      \"\\n\";\n    if (material.wireframe && this.colorArray) {\n      //per vertex colors don't seem to work\n      let c = this.colorArray;\n      ret += indent + \"    emissiveColor \" + c[0] + \" \" + c[1] + \" \" + c[2] + \"\\n\";\n    }\n    if (material?.transparent) {\n      ret += indent + \"   transparency \" + (1.0 - material.opacity) + \"\\n\";\n    }\n    ret += indent + \"  }\\n\"; //material\n    ret += indent + \" }\\n\"; //appearance\n\n    var oldindent = indent;\n    indent += \" \"; //inshape\n    if (material instanceof LineBasicMaterial || material.wireframe) {\n      ret +=\n        indent +\n        \"geometry IndexedLineSet {\\n\" +\n        indent +\n        \" colorPerVertex TRUE\\n\" +\n        indent +\n        \" coord Coordinate {\\n\" +\n        indent +\n        \"  point [\\n\";\n      let x: string | number, y: string | number, z: string | number;\n      for (let i = 0; i < this.vertices; ++i) {\n        let offset = i * 3;\n        x = this.vertexArray?.[offset];\n        y = this.vertexArray?.[offset + 1];\n        z = this.vertexArray?.[offset + 2];\n        ret += indent + \"   \" + x + \" \" + y + \" \" + z + \",\\n\";\n      }\n      ret += indent + \"  ]\\n\";\n      ret += indent + \" }\\n\"; //end coordinate\n\n      if (this.colorArray && !material.wireframe) {\n        ret += indent + \" color Color {\\n\" + indent + \"  color [\\n\";\n        for (let i = 0; i < this.vertices; ++i) {\n          let offset = i * 3;\n          x = this.colorArray[offset];\n          y = this.colorArray[offset + 1];\n          z = this.colorArray[offset + 2];\n          ret += indent + \"   \" + x + \" \" + y + \" \" + z + \",\\n\";\n        }\n        ret += indent + \"  ]\\n\";\n        ret += indent + \" }\\n\"; //end color\n      }\n\n      ret += indent + \" coordIndex [\\n\";\n      if(material.wireframe && this.faceArray) {\n        for (let i = 0; i < this.faceidx; i += 3) {\n          x = this.faceArray?.[i];\n          y = this.faceArray?.[i + 1];\n          z = this.faceArray?.[i + 2];\n          ret += indent + \"  \" + x + \", \" + y + \", \" + z + \", -1,\\n\";\n        }\n      }  else {\n        for (let i = 0; i < this.vertices-1; i += 2) {\n          ret += indent + \"  \" + i + \", \" + (i + 1) + \", -1,\\n\";\n        }\n      }\n      ret += indent + \" ]\\n\";\n      ret += indent + \"}\\n\"; //geometry\n    } else {\n      //faces\n      ret +=\n        indent +\n        \"geometry IndexedFaceSet {\\n\" +\n        indent +\n        \" colorPerVertex TRUE\\n\" +\n        indent +\n        \" normalPerVertex TRUE\\n\" +\n        indent +\n        \" solid FALSE\\n\";\n\n      //vertices\n      ret += indent + \" coord Coordinate {\\n\" + indent + \"  point [\\n\";\n      let x: string | number, y: string | number, z: string | number;\n      for (let i = 0; i < this.vertices; ++i) {\n        let offset = i * 3;\n        x = this.vertexArray?.[offset];\n        y = this.vertexArray?.[offset + 1];\n        z = this.vertexArray?.[offset + 2];\n        ret += indent + \"   \" + x + \" \" + y + \" \" + z + \",\\n\";\n      }\n      ret += indent + \"  ]\\n\";\n      ret += indent + \" }\\n\"; //end coordinate\n\n      //normals\n      ret += indent + \" normal Normal {\\n\" + indent + \"  vector [\\n\";\n      for (let i = 0; i < this.vertices; ++i) {\n        let offset = i * 3;\n        x = this.normalArray?.[offset];\n        y = this.normalArray?.[offset + 1];\n        z = this.normalArray?.[offset + 2];\n        ret += indent + \"   \" + x + \" \" + y + \" \" + z + \",\\n\";\n      }\n      ret += indent + \"  ]\\n\";\n      ret += indent + \" }\\n\"; //end normal\n\n      //colors\n      if (this.colorArray) {\n        ret += indent + \" color Color {\\n\" + indent + \"  color [\\n\";\n        for (let i = 0; i < this.vertices; ++i) {\n          let offset = i * 3;\n          x = this.colorArray[offset];\n          y = this.colorArray[offset + 1];\n          z = this.colorArray[offset + 2];\n          ret += indent + \"   \" + x + \" \" + y + \" \" + z + \",\\n\";\n        }\n        ret += indent + \"  ]\\n\";\n        ret += indent + \" }\\n\"; //end color\n      }\n\n      //faces\n      ret += indent + \" coordIndex [\\n\";\n      for (let i = 0; i < this.faceidx; i += 3) {\n        x = this.faceArray?.[i];\n        y = this.faceArray?.[i + 1];\n        z = this.faceArray?.[i + 2];\n        ret += indent + \"  \" + x + \", \" + y + \", \" + z + \", -1,\\n\";\n      }\n      ret += indent + \" ]\\n\"; //end faces\n      ret += indent + \"}\\n\"; //geometry\n    }\n\n    ret += oldindent + \"}\"; //shape\n    return ret;\n  }\n\n  truncateArrayBuffers(mesh = true, reallocatemem = false) {\n\n    var vertexArr = this.vertexArray,\n      colorArr = this.colorArray,\n      normalArr = this.normalArray,\n      faceArr = this.faceArray,\n      lineArr = this.lineArray,\n      radiusArr = this.radiusArray;\n\n    //subarray to avoid copying and reallocating memory\n    this.vertexArray = vertexArr?.subarray(0, this.vertices * 3) || null;\n    this.colorArray = colorArr?.subarray(0, this.vertices * 3) || null;\n\n    if (mesh) {\n      this.normalArray = normalArr?.subarray(0, this.vertices * 3) || null;\n      this.faceArray = faceArr?.subarray(0, this.faceidx) || null;\n\n      if (this.lineidx > 0)\n        //not always set so reclaim memory\n        this.lineArray = lineArr?.subarray(0, this.lineidx) || null;\n      else this.lineArray = new Uint16Array(0);\n    } else {\n      this.normalArray = new Float32Array(0);\n      this.faceArray = new Uint16Array(0);\n      this.lineArray = new Uint16Array(0);\n    }\n    if (radiusArr) {\n      this.radiusArray = radiusArr.subarray(0, this.vertices);\n    }\n\n    if (reallocatemem) {\n      //actually copy smaller arrays to save memory\n      if (this.normalArray)\n        this.normalArray = new Float32Array(this.normalArray);\n      if (this.faceArray) this.faceArray = new Uint16Array(this.faceArray);\n      if (this.lineArray) this.lineArray = new Uint16Array(this.lineArray);\n      if (this.vertexArray)\n        this.vertexArray = new Float32Array(this.vertexArray);\n      if (this.colorArray) this.colorArray = new Float32Array(this.colorArray);\n      if (this.radiusArray)\n        this.radiusArray = new Float32Array(this.radiusArray);\n    }\n    this.__inittedArrays = true;\n  }\n}\n \nexport class Geometry extends EventDispatcher {\n  id: number;\n  name: string = \"\";\n  hasTangents: boolean =  false;\n  dynamic: boolean = true; // the intermediate typed arrays will be deleted when set to false;\n  radii: boolean;\n  mesh: boolean;\n  offset: boolean;\n  verticesNeedUpdate: boolean = false;\n  elementsNeedUpdate: boolean = false;\n  normalsNeedUpdate: boolean = false;\n  colorsNeedUpdate: boolean = false;\n  buffersNeedUpdate: boolean = false;\n  imposter: boolean = false;\n  instanced: boolean = false;\n  geometryGroups: GeometryGroup[] = [];\n  groups: number = 0;\n  sphereGeometry?: Geometry;\n  drawnCaps?: any;\n  \n  constructor(mesh = false, radii = false, offset = false) {\n    super();\n    this.id = GeometryIDCount++;\n    this.mesh = mesh; // Does this geometry represent a mesh (i.e. do we need Face/Line index buffers?)\n    this.radii = radii;\n    this.offset = offset; //offset buffer used for instancing\n  }\n\n  //Get geometry group to accomodate addVertices new vertices - create\n  // new group if necessary\n  updateGeoGroup(addVertices = 0): GeometryGroup {\n    var retGroup =\n      this.groups > 0 ? this.geometryGroups[this.groups - 1] : null;\n\n    if (\n      !retGroup ||\n      retGroup.vertices + addVertices > (retGroup?.vertexArray?.length || 0) / 3\n    )\n      retGroup = this.addGeoGroup();\n\n    return retGroup;\n  }\n\n  //return comma separated list of IndexedFace (or Line) sets from geometry groups\n  vrml(indent: string, material?: Material): string {\n    var ret = \"\";\n    var len = this.geometryGroups.length;\n    for (var g = 0; g < len; g++) {\n      var geoGroup = this.geometryGroups[g];\n      ret += geoGroup.vrml(indent, material) + \",\\n\";\n    }\n    return ret;\n  }\n\n  addGeoGroup() {\n    var ret = new GeometryGroup(this.geometryGroups.length);\n    this.geometryGroups.push(ret);\n    this.groups = this.geometryGroups.length;\n  \n    ret.vertexArray = new Float32Array(BUFFERSIZE * 3);\n    ret.colorArray = new Float32Array(BUFFERSIZE * 3);\n  \n    //TODO: instantiating uint arrays according to max number of vertices\n    // is dangerous, since there exists the possibility that there will be\n    // more face or line indices than vertex points - but so far that doesn't\n    // seem to be the case for any of the renders\n    if (this.mesh) {\n      ret.normalArray = new Float32Array(BUFFERSIZE * 3);\n      ret.faceArray = new Uint16Array(BUFFERSIZE * 6);\n      ret.lineArray = new Uint16Array(BUFFERSIZE * 6);\n    }\n    if (this.radii) {\n      ret.radiusArray = new Float32Array(BUFFERSIZE);\n    }\n    ret.useOffset = this.offset;\n  \n    return ret;\n  }\n\n  setUpNormals(...args: Parameters<GeometryGroup[\"setNormals\"]>) {\n    for (var g = 0; g < this.groups; g++) {\n      var geoGroup = this.geometryGroups[g];\n\n      geoGroup.setNormals(...args);\n    }\n  }\n\n  setColors(...setcolor: Parameters<GeometryGroup[\"setColors\"]>): void {\n    var len = this.geometryGroups.length;\n    for (var g = 0; g < len; g++) {\n      var geoGroup = this.geometryGroups[g];\n      geoGroup.setColors(...setcolor);\n    }\n  }\n\n\n  setUpWireframe(...lineIndexArgs: Parameters<GeometryGroup[\"setLineIndices\"]>) {\n    for (var g = 0; g < this.groups; g++) {\n      var geoGroup = this.geometryGroups[g];\n\n      geoGroup.setLineIndices(...lineIndexArgs);\n    }\n  }\n\n  //After vertices, colors, etc are collected in regular or typed arrays,\n  //  create typed arrays from regular arrays if they don't already exist,\n  initTypedArrays() {\n    for (var g = 0; g < this.groups; g++) {\n      var group = this.geometryGroups[g];\n\n      if (group.__inittedArrays === true) continue;\n\n      //do not actually reallocate smaller memory here because\n      //of the performance hit - if you know your geometry is small,\n      //truncate manually with the second parameter true\n      group.truncateArrayBuffers(this.mesh, false);\n    }\n  }\n\n  dispose() {\n    this.dispatchEvent({ type: \"dispose\" });\n  }\n\n  get vertices (): number {\n    var vertices = 0;\n    for (var g = 0; g < this.groups; g++)\n      vertices += this.geometryGroups[g].vertices;\n\n    return vertices;\n  }\n}\n\nexport let GeometryIDCount = 0;","import type { Material } from './../materials/Material';\nimport { Matrix4, Quaternion, Vector3 } from \"../math\";\nimport type { Geometry } from './Geometry';\nimport type { Fog } from '../Fog';\nimport { Color, ColorConstructorArg } from \"../../colors\";\nimport { Sprite } from 'WebGL/objects';\n\nexport let Object3DIDCount = 0;\n// Object3D base constructor function\nexport class Object3D {\n  id = Object3DIDCount++;\n  name = \"\";\n  parent?: Object3D;\n  children: Array<Object3D> = [];\n  position = new Vector3();\n  rotation: Vector3 | number = new Vector3();\n  matrix = new Matrix4();\n  matrixWorld = new Matrix4();\n  quaternion = new Quaternion();\n  eulerOrder = \"XYZ\";\n  up = new Vector3(0, 1, 0);\n  scale = new Vector3(1, 1, 1);\n  matrixAutoUpdate = true;\n  matrixWorldNeedsUpdate = true;\n  rotationAutoUpdate = true;\n  useQuaternion = false;\n  visible = true;\n  geometry?: Geometry;\n  material?: Material;\n\n  lookAt(vector: Vector3) {\n    this.matrix.lookAt(vector, this.position, this.up);\n    if (this.rotationAutoUpdate) {\n      if (this.useQuaternion === true)\n        console.error(\"Unimplemented math operation.\");\n      else if (this.rotation instanceof Vector3)\n        this.rotation.setEulerFromRotationMatrix(this.matrix, this.eulerOrder);\n    }\n  }\n\n  //add child object\n  add<T extends Object3D>(object: T): void {\n    if (object === (this as Object3D)) {\n      console.error(\"Can't add $3Dmol.Object3D to itself\");\n      return;\n    }\n\n    object.parent = this;\n    this.children.push(object);\n\n    //add to the scene (i.e. follow up this instance's parents until reach the top)\n\n    var scene = this as Object3D;\n\n    while (scene.parent !== undefined) scene = scene.parent;\n\n    if (scene !== undefined && scene instanceof Scene)\n      scene.__addObject(object);\n  }\n\n  remove<T extends Object3D>(object: T): void {\n    var index = this.children.indexOf(object);\n\n    if (index !== -1) {\n      object.parent = undefined;\n      this.children.splice(index, 1);\n\n      //Remove from scene\n\n      var scene = this as Object3D;\n\n      while (scene.parent !== undefined) scene = scene.parent;\n\n      if (scene !== undefined && scene instanceof Scene)\n        scene.__removeObject(object);\n    }\n  }\n\n  //convert to vrml\n  vrml(indent?: string) {\n    //attempt to pretty print\n    if (!indent) indent = \" \";\n    //all objects have a transformation (usually identity)\n    //not quite sure if getting rotation right here..\n    var theta = 2 * Math.atan2(this.quaternion.lengthxyz(), this.quaternion.w);\n    var x = 0,\n      y = 0,\n      z = 0;\n    if (theta != 0) {\n      let st = Math.sin(theta / 2);\n      x = this.quaternion.x / st;\n      y = this.quaternion.y / st;\n      z = this.quaternion.z / st;\n    }\n    var ret =\n      indent +\n      \"Transform {\\n\" +\n      indent +\n      \" center \" +\n      this.position.x +\n      \" \" +\n      this.position.y +\n      \" \" +\n      this.position.z +\n      \"\\n\" +\n      indent +\n      \" rotation \" +\n      x +\n      \" \" +\n      y +\n      \" \" +\n      z +\n      \" \" +\n      theta +\n      \"\\n\" +\n      indent +\n      \" children [\\n\";\n\n    if (this.geometry) {\n      ret += this.geometry.vrml(indent, this.material);\n    }\n    for (var i = 0; i < this.children.length; i++) {\n      ret += this.children[i].vrml(indent + \" \") + \",\\n\";\n    }\n    ret += \" ]\\n\";\n    ret += \"}\";\n    return ret;\n  }\n\n  updateMatrix() {\n    this.matrix.setPosition(this.position);\n\n    if (this.useQuaternion === false && this.rotation instanceof Vector3) {\n      this.matrix.setRotationFromEuler(this.rotation, this.eulerOrder);\n    } else {\n      this.matrix.setRotationFromQuaternion(this.quaternion);\n    }\n\n    //TODO: Do I need this??\n    if (this.scale.x !== 1 || this.scale.y !== 1 || this.scale.z !== 1)\n      this.matrix.scale(this.scale);\n\n    this.matrixWorldNeedsUpdate = true;\n  }\n\n  updateMatrixWorld(force?: boolean) {\n    if (this.matrixAutoUpdate === true) this.updateMatrix();\n\n    if (this.matrixWorldNeedsUpdate === true || force === true) {\n      if (this.parent === undefined) this.matrixWorld.copy(this.matrix);\n      else\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n    }\n\n    this.matrixWorldNeedsUpdate = false;\n\n    //Update matrices of all children\n    for (var i = 0; i < this.children.length; i++) {\n      this.children[i].updateMatrixWorld(true);\n    }\n  }\n\n  clone(object?: Object3D): Object3D {\n    if (object === undefined) object = new Object3D();\n\n    object.name = this.name;\n\n    object.up.copy(this.up);\n    object.position.copy(this.position);\n    if (\n      object.rotation instanceof Vector3 &&\n      this.rotation instanceof Vector3\n    ) {\n      object.rotation.copy(this.rotation);\n    } else {\n      object.rotation = this.rotation;\n    }\n    object.eulerOrder = this.eulerOrder;\n    object.scale.copy(this.scale);\n\n    object.rotationAutoUpdate = this.rotationAutoUpdate;\n    object.matrix.copy(this.matrix);\n    object.matrixWorld.copy(this.matrixWorld);\n    object.quaternion.copy(this.quaternion);\n    object.matrixAutoUpdate = this.matrixAutoUpdate;\n    object.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate;\n\n    object.useQuaternion = this.useQuaternion;\n\n    object.visible = this.visible;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      object.add(child.clone());\n    }\n\n    return object;\n  }\n\n  setVisible(val: boolean): void {\n    //recursively set visibility\n    this.visible = val;\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.setVisible(val);\n    }\n  }\n}\n\n\n/*\n * Scene class\n */\n/* @constructor */\nexport class Scene extends Object3D {\n  fog: Fog | null = null;\n  //may not need...\n  overrideMaterial: Material | null = null;\n  matrixAutoUpdate = false;\n  __objects = [] as Object3D[];\n  __lights = [] as Light[];\n  __objectsAdded = [] as Object3D[];\n  __objectsRemoved = [] as Object3D[];\n  __webglSprites: Sprite[];\n\n  __addObject<T extends Object3D>(object: T) {\n    //Directional Lighting\n    if (object instanceof Light) {\n      if (this.__lights.indexOf(object as unknown as Light) === -1) this.__lights.push(object as unknown as Light);\n\n      //TODO: Do I need this??\n      if ((object as unknown as Light).target && (object as unknown as Light).target.parent === undefined)\n        this.add((object as unknown as Light).target);\n    }\n\n    //Rotation group\n    else {\n      if (this.__objects.indexOf(object) === -1) {\n        this.__objects.push(object);\n        this.__objectsAdded.push(object);\n\n        //Check if previously removed\n\n        var idx = this.__objectsRemoved.indexOf(object);\n\n        if (idx !== -1) this.__objectsRemoved.splice(idx, 1);\n      }\n    }\n\n    //Add object's children\n\n    for (var i = 0; i < object.children.length; i++)\n      this.__addObject(object.children[i]);\n  }\n\n  __removeObject<T extends Object3D>(object: T) {\n    var idx: number;\n    if (object instanceof Light) {\n      idx = this.__lights.indexOf(object as unknown as Light);\n\n      if (idx !== -1) this.__lights.splice(idx, 1);\n    }\n\n    //Object3D\n    else {\n      idx = this.__objects.indexOf(object);\n\n      if (idx !== -1) {\n        this.__objects.splice(idx, 1);\n        this.__objectsRemoved.push(object);\n\n        //Check if previously added\n\n        var ai = this.__objectsAdded.indexOf(object);\n\n        if (ai !== -1) this.__objectsAdded.splice(idx, 1);\n      }\n    }\n\n    //Remove object's children\n    for (var i = 0; i < object.children.length; i++)\n      this.__removeObject(object.children[i]);\n  }\n}\n\n\nexport class Light extends Object3D {\n  color: Color;\n  intensity: any;\n  position = new Vector3(0, 1, 0);\n  target = new Object3D();\n  castShadow = false;\n  onlyShadow = false;\n  constructor(hex?: ColorConstructorArg, intensity: number = 1) {\n    super();\n    this.color = new Color(hex);\n    this.intensity = intensity;\n  }\n}\n","import type { Vector3 } from '../math';\nimport type { Camera } from '../Camera';\nimport { Matrix4 } from '../math';\n\nconst viewProjectionMatrix = new Matrix4();\n\n//$3Dmol Projection \nexport class Projector {\n  static unprojectVector(vector: Vector3, camera: Camera) {\n    camera.projectionMatrixInverse.getInverse(camera.projectionMatrix);\n    viewProjectionMatrix.multiplyMatrices(camera.matrixWorld, camera.projectionMatrixInverse);\n    return vector.applyProjection(viewProjectionMatrix);\n\n  };\n\n  static projectVector(vector: Vector3, camera: Camera) {\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n    viewProjectionMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n    return vector.applyProjection(viewProjectionMatrix);\n  };\n\n  projectVector(vector: Vector3, camera: Camera) {\n    return Projector.projectVector(vector, camera);\n  }\n\n  unprojectVector(vector: Vector3, camera: Camera) {\n    return Projector.unprojectVector(vector, camera);\n  }\n}","import type { Camera } from '../Camera';\nimport { Ray, Matrix4, Vector3 } from \"../math\";\nimport { Sphere, Cylinder, Triangle } from \"../shapes\";\n\nconst descSort = (a: { distance: number; }, b: { distance: number; }) => {\n  return a.distance - b.distance;\n};\n\nconst viewProjectionMatrix = new Matrix4();\n\nexport class Raycaster {\n  ray: Ray;\n  near: number;\n  far: number;\n  precision = 0.0001;\n  linePrecision = 0.2;\n  constructor(origin: Vector3 | undefined, direction: Vector3 | undefined, far?: number, near?: number) {\n    this.ray = new Ray(origin, direction);\n\n    if (this.ray.direction.lengthSq() > 0) this.ray.direction.normalize();\n\n    this.near = near || 0;\n    this.far = far || Infinity;\n  }\n\n  set(origin: Vector3, direction: Vector3): void {\n    this.ray.set(origin, direction);\n  }\n\n  setFromCamera(coords: { x: any; y: any; z: any; }, camera: Camera): void {\n    if (!camera.ortho) {\n      this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n      this.ray.direction.set(coords.x, coords.y, coords.z);\n\n      camera.projectionMatrixInverse.getInverse(camera.projectionMatrix);\n      viewProjectionMatrix.multiplyMatrices(\n        camera.matrixWorld,\n        camera.projectionMatrixInverse\n      );\n      this.ray.direction.applyProjection(viewProjectionMatrix);\n      this.ray.direction.sub(this.ray.origin).normalize();\n    } else {\n      this.ray.origin\n        .set(\n          coords.x,\n          coords.y,\n          (camera.near + camera.far) / (camera.near - camera.far)\n        )\n        .unproject(camera);\n      this.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n    }\n  }\n\n  intersectObjects(group: any, objects: string | any[]) {\n    var intersects: any[] = [];\n  \n    for (var i = 0, l = objects.length; i < l; i++)\n      intersectObject(group, objects[i], this, intersects);\n  \n    intersects.sort(descSort);\n  \n    return intersects;\n  }\n}\n\n// [-1, 1]\nconst clamp = (x: number): number => {\n  return Math.min(Math.max(x, -1), 1);\n};\n\nvar sphere = new Sphere();\nvar cylinder = new Cylinder();\nvar triangle = new Triangle();\nvar w_0 = new Vector3(); // for cylinders, cylinder.c1 - ray.origin\nvar v1 = new Vector3(); // all purpose local vector\nvar v2 = new Vector3();\nvar v3 = new Vector3();\nvar matrixPosition = new Vector3();\n\n//object is a Sphere or (Bounding) Box\nexport function intersectObject(group: { matrixWorld: Matrix4; }, clickable: { intersectionShape: any; boundingSphere: Sphere | undefined; }, raycaster: Raycaster, intersects: any[]) {\n  matrixPosition.getPositionFromMatrix(group.matrixWorld);\n\n  if (clickable.intersectionShape === undefined) return intersects;\n  var intersectionShape = clickable.intersectionShape;\n  var precision = raycaster.linePrecision;\n  precision *= group.matrixWorld.getMaxScaleOnAxis();\n  var precisionSq = precision * precision;\n\n  //Check for intersection with clickable's bounding sphere, if it exists\n  if (\n    clickable.boundingSphere !== undefined &&\n    clickable.boundingSphere instanceof Sphere\n  ) {\n    sphere.copy(clickable.boundingSphere);\n    sphere.applyMatrix4(group.matrixWorld);\n    if (!raycaster.ray.isIntersectionSphere(sphere)) {\n      return intersects;\n    }\n  }\n\n  //Iterate through intersection objects\n  var i: number,\n    il: number,\n    norm: Vector3,\n    normProj: number,\n    cylProj: number,\n    rayProj: number,\n    distance: number,\n    closestDistSq: number,\n    denom: number,\n    discriminant: number,\n    s: number,\n    t: number,\n    s_c: number,\n    t_c: number;\n  //triangle faces\n  for (i = 0, il = intersectionShape.triangle.length; i < il; i++) {\n    if (intersectionShape.triangle[i] instanceof Triangle) {\n      triangle.copy(intersectionShape.triangle[i]);\n      triangle.applyMatrix4(group.matrixWorld);\n\n      norm = triangle.getNormal();\n\n      normProj = raycaster.ray.direction.dot(norm);\n\n      //face culling\n      if (normProj >= 0) continue;\n\n      w_0.subVectors(triangle.a, raycaster.ray.origin);\n\n      distance = norm.dot(w_0) / normProj;\n\n      if (distance < 0) continue;\n\n      //intersects with plane, check if P inside triangle\n      v1.copy(raycaster.ray.direction)\n        .multiplyScalar(distance)\n        .add(raycaster.ray.origin);\n      v1.sub(triangle.a); // from pt a to intersection point P\n\n      v2.copy(triangle.b).sub(triangle.a); // from pt a to b\n      v3.copy(triangle.c).sub(triangle.a); // from pt a to c\n      var b_dot_c = v2.dot(v3);\n      var b_sq = v2.lengthSq();\n      var c_sq = v3.lengthSq();\n\n      // P = A + s(v2) + t(v3), inside trianle if 0 <= s, t <=1  and (s + t) <=0\n\n      t =\n        (b_sq * v1.dot(v3) - b_dot_c * v1.dot(v2)) /\n        (b_sq * c_sq - b_dot_c * b_dot_c);\n\n      if (t < 0 || t > 1) continue;\n\n      s = (v1.dot(v2) - t * b_dot_c) / b_sq;\n\n      if (s < 0 || s > 1 || s + t > 1) continue;\n      else {\n        intersects.push({ clickable: clickable, distance: distance });\n      }\n    }\n  }\n  //cylinders\n  for (i = 0, il = intersectionShape.cylinder.length; i < il; i++) {\n    if (intersectionShape.cylinder[i] instanceof Cylinder) {\n      cylinder.copy(intersectionShape.cylinder[i]);\n      cylinder.applyMatrix4(group.matrixWorld);\n\n      w_0.subVectors(cylinder.c1, raycaster.ray.origin);\n\n      cylProj = w_0.dot(cylinder.direction); // Dela\n      rayProj = w_0.dot(raycaster.ray.direction); // Epsilon\n\n      normProj = clamp(raycaster.ray.direction.dot(cylinder.direction)); // Beta\n\n      denom = 1 - normProj * normProj;\n\n      if (denom === 0.0) continue;\n\n      s_c = (normProj * rayProj - cylProj) / denom;\n      t_c = (rayProj - normProj * cylProj) / denom;\n\n      v1.copy(cylinder.direction).multiplyScalar(s_c).add(cylinder.c1); // Q_c\n      v2.copy(raycaster.ray.direction)\n        .multiplyScalar(t_c)\n        .add(raycaster.ray.origin); // P_c\n\n      closestDistSq = v3.subVectors(v1, v2).lengthSq();\n      var radiusSq = cylinder.radius * cylinder.radius;\n\n      //Smoothing?\n      //if (closestDistSq > radiusSq) radiusSq += precisionSq;\n\n      // closest distance between ray and cylinder axis not greater than cylinder radius;\n      // might intersect this cylinder between atom and bond midpoint\n      if (closestDistSq <= radiusSq) {\n        //Find points where ray intersects sides of cylinder\n        discriminant =\n          (normProj * cylProj - rayProj) * (normProj * cylProj - rayProj) -\n          denom * (w_0.lengthSq() - cylProj * cylProj - radiusSq);\n\n        // ray tangent to cylinder?\n        if (discriminant <= 0) t = distance = Math.sqrt(closestDistSq);\n        else\n          t = distance =\n            (rayProj - normProj * cylProj - Math.sqrt(discriminant)) / denom;\n\n        //find closest intersection point; make sure it's between atom's position and cylinder midpoint\n\n        s = normProj * t - cylProj;\n\n        //does not intersect cylinder between atom and midpoint,\n        // or intersects cylinder behind camera\n        if (s < 0 || s * s > cylinder.lengthSq() || t < 0) continue;\n        else intersects.push({ clickable: clickable, distance: distance });\n      }\n    }\n  }\n  //lines\n  for (i = 0, il = intersectionShape.line.length; i < il; i += 2) {\n    v1.copy(intersectionShape.line[i]);\n    v1.applyMatrix4(group.matrixWorld);\n    v2.copy(intersectionShape.line[i + 1]);\n    v2.applyMatrix4(group.matrixWorld);\n\n    v3.subVectors(v2, v1);\n    var bondLengthSq = v3.lengthSq();\n    v3.normalize();\n\n    w_0.subVectors(v1, raycaster.ray.origin);\n\n    var lineProj = w_0.dot(v3);\n    rayProj = w_0.dot(raycaster.ray.direction);\n\n    normProj = clamp(raycaster.ray.direction.dot(v3));\n\n    denom = 1 - normProj * normProj;\n\n    if (denom === 0.0) continue;\n\n    s_c = (normProj * rayProj - lineProj) / denom;\n    t_c = (rayProj - normProj * lineProj) / denom;\n\n    v1.add(v3.multiplyScalar(s_c)); // Q_c\n    v2.copy(raycaster.ray.direction)\n      .multiplyScalar(t_c)\n      .add(raycaster.ray.origin); // P_c\n\n    closestDistSq = v3.subVectors(v2, v1).lengthSq();\n\n    if (closestDistSq < precisionSq && s_c * s_c < bondLengthSq)\n      intersects.push({ clickable: clickable, distance: t_c });\n  }\n  for (i = 0, il = intersectionShape.sphere.length; i < il; i++) {\n    //sphere\n    if (intersectionShape.sphere[i] instanceof Sphere) {\n      sphere.copy(intersectionShape.sphere[i]);\n      sphere.applyMatrix4(group.matrixWorld);\n\n      if (raycaster.ray.isIntersectionSphere(sphere)) {\n        v1.subVectors(sphere.center, raycaster.ray.origin);\n\n        //distance from ray origin to point on the ray normal to sphere's center\n        //must be less than sphere's radius (since ray intersects sphere)\n        var distanceToCenter = v1.dot(raycaster.ray.direction);\n\n        discriminant =\n          distanceToCenter * distanceToCenter -\n          (v1.lengthSq() - sphere.radius * sphere.radius);\n\n        //Don't select if sphere center behind camera\n        if (distanceToCenter < 0) return intersects;\n\n        //ray tangent to sphere?\n        if (discriminant <= 0) distance = distanceToCenter;\n        //This is reversed if sphere is closer than ray origin.  Do we have\n        //to worry about handling that case?\n        else distance = distanceToCenter - Math.sqrt(discriminant);\n\n        intersects.push({ clickable: clickable, distance: distance });\n      }\n    }\n  }\n  return intersects;\n};\n","//Texture\n//We really only create textures from 2d rendering contexts (to display text labels)\n//edit: we can now create 3dtextures using volumetric data\n\nimport {\n  ClampToEdgeWrapping,\n  RFormat,\n  FloatType,\n  NearestFilter,\n  RGBAFormat,\n  UnsignedByteType,\n  LinearFilter,\n  LinearMipMapLinearFilter,\n} from \"../constants/TextureConstants\";\nimport { Vector2 } from \"../math\";\nimport { EventDispatcher } from \"./EventDispatcher\";\nimport { UVMapping } from \"./UVMapping\";\n\n/* @constructor */\nexport class Texture extends EventDispatcher {\n  id: number;\n  name: string;\n  image: any;\n  mapping: any;\n  wrapS: number;\n  wrapT: number;\n  anisotropy: number;\n  format: number;\n  type: number;\n  premultiplyAlpha: boolean;\n  flipY: boolean;\n  unpackAlignment: number;\n  magFilter: number;\n  minFilter: number;\n  offset: any;\n  repeat: any;\n  needsUpdate: boolean;\n  onUpdate: null;\n  constructor(image?: any, is3D?: boolean) {\n    super();\n\n    this.id = TextureIdCount++;\n\n    this.name = \"\";\n\n    this.image = image;\n\n    this.mapping = new UVMapping();\n\n    this.wrapS = ClampToEdgeWrapping;\n    this.wrapT = ClampToEdgeWrapping;\n\n    this.anisotropy = 1;\n\n    if (is3D) {\n      this.format = RFormat;\n      this.type = FloatType;\n\n      this.premultiplyAlpha = false;\n      this.flipY = false;\n\n      this.unpackAlignment = 1;\n\n      this.magFilter = NearestFilter;\n      this.minFilter = NearestFilter;\n    } else {\n      this.format = RGBAFormat;\n      this.type = UnsignedByteType;\n\n      this.offset = new Vector2(0, 0);\n      this.repeat = new Vector2(1, 1);\n\n      this.premultiplyAlpha = false;\n      this.flipY = true;\n      this.unpackAlignment = 4;\n\n      this.magFilter = LinearFilter;\n      this.minFilter = LinearMipMapLinearFilter;\n    }\n\n    this.needsUpdate = false;\n    this.onUpdate = null;\n  }\n\n  clone(texture = new Texture()): Texture {\n\n    texture.image = this.image;\n\n    texture.mapping = this.mapping;\n\n    texture.wrapS = this.wrapS;\n    texture.wrapT = this.wrapT;\n\n    texture.magFilter = this.magFilter;\n    texture.minFilter = this.minFilter;\n\n    texture.anisotropy = this.anisotropy;\n\n    texture.format = this.format;\n    texture.type = this.type;\n\n    texture.offset.copy(this.offset);\n    texture.repeat.copy(this.repeat);\n\n    texture.premultiplyAlpha = this.premultiplyAlpha;\n    texture.flipY = this.flipY;\n    texture.unpackAlignment = this.unpackAlignment;\n\n    return texture;\n  }\n\n  dispose() {\n    this.dispatchEvent({ type: \"dispose\" });\n  }\n}\nexport let TextureIdCount = 0;\n","// mapping modes\nexport class UVMapping {};","import { Coloring } from \"./../constants/Coloring\";\nimport { Shading } from \"./../constants/Shading\";\nimport { Color } from \"../../colors\";\nimport { Vector3 } from \"../math\";\nimport { Material } from \"./Material\";\n//Imposter material\n/* @constructor */\nexport class ImposterMaterial extends Material {\n  combine: any;\n  morphTargets: any;\n  morphNormals: any;\n  color = new Color(0xffffff);\n  ambient = new Color(0xfffff);\n  emissive = new Color(0x000000);\n  imposter = true;\n\n  //TODO: Which of these instance variables do I really need?\n  wrapAround = false;\n  wrapRGB = new Vector3(1, 1, 1);\n  map = undefined;\n  lightMap = null;\n  specularMap = null;\n  envMap = null;\n  reflectivity = 1;\n  refractionRatio = 0.98;\n  fog = true;\n  wireframe = false;\n  wireframeLinewidth = 1;\n  wireframeLinecap = \"round\";\n  wireframeLinejoin = \"round\";\n  shading = Shading.SmoothShading;\n  shaderID = null as string | null;\n  vertexColors = Coloring.NoColors;\n  skinning = false;\n  constructor(parameters?: any) {\n    super();\n    this.setValues(parameters);\n  }\n\n  clone<T extends this>(material: T = new ImposterMaterial() as T): T {\n    super.clone.call(this, material);\n\n    material.color.copy(this.color);\n    material.ambient.copy(this.ambient);\n    material.emissive.copy(this.emissive);\n\n    material.wrapAround = this.wrapAround;\n    material.wrapRGB.copy(this.wrapRGB);\n\n    material.map = this.map;\n\n    material.lightMap = this.lightMap;\n\n    material.specularMap = this.specularMap;\n\n    material.envMap = this.envMap;\n    material.combine = this.combine;\n    material.reflectivity = this.reflectivity;\n    material.refractionRatio = this.refractionRatio;\n\n    material.fog = this.fog;\n\n    material.shading = this.shading;\n    material.shaderID = this.shaderID;\n    material.vertexColors = this.vertexColors;\n\n    material.skinning = this.skinning;\n    material.morphTargets = this.morphTargets;\n    material.morphNormals = this.morphNormals;\n\n    return material;\n  }\n}\n","import { Coloring } from \"../constants/Coloring\";\nimport { Shading } from \"../constants/Shading\";\nimport { Color } from \"../../colors\";\nimport { Vector3 } from \"../math\";\nimport { Material } from \"./Material\";\n\nexport class InstancedMaterial extends Material {\n  combine: any;\n  morphTargets: any;\n  morphNormals: any;\n\n  color = new Color(0xffffff);\n  ambient = new Color(0xfffff);\n  emissive = new Color(0x000000);\n\n  //TODO: Which of these instance variables do I really need?\n  wrapAround = false;\n  wrapRGB = new Vector3(1, 1, 1);\n  map = undefined;\n  lightMap = null;\n  specularMap = null;\n  envMap = null;\n  reflectivity = 1;\n  refractionRatio = 0.98;\n  fog = true;\n  wireframe = false;\n  wireframeLinewidth = 1;\n  wireframeLinecap = \"round\";\n  wireframeLinejoin = \"round\";\n  shading = Shading.SmoothShading;\n  shaderID = \"instanced\";\n  vertexColors = Coloring.NoColors;\n  skinning = false;\n  sphere = null;\n  constructor(parameters?: any) {\n    super();\n    this.setValues(parameters);\n  }\n\n  clone<T extends this>(material: T = new InstancedMaterial() as T): T {\n    super.clone.call(this, material as T);\n\n    material.color.copy(this.color);\n    material.ambient.copy(this.ambient);\n    material.emissive.copy(this.emissive);\n\n    material.wrapAround = this.wrapAround;\n    material.wrapRGB.copy(this.wrapRGB);\n\n    material.map = this.map;\n\n    material.lightMap = this.lightMap;\n\n    material.specularMap = this.specularMap;\n\n    material.envMap = this.envMap;\n    material.combine = this.combine;\n    material.reflectivity = this.reflectivity;\n    material.refractionRatio = this.refractionRatio;\n\n    material.fog = this.fog;\n\n    material.shading = this.shading;\n    material.shaderID = this.shaderID;\n    material.vertexColors = this.vertexColors;\n\n    material.skinning = this.skinning;\n    material.morphTargets = this.morphTargets;\n    material.morphNormals = this.morphNormals;\n\n    material.sphere = this.sphere;\n\n    return material;\n  }\n}\n","import { Color } from \"../../colors\";\nimport { Material } from \"./Material\";\n//Line basic material\n/* @constructor */\nexport class LineBasicMaterial extends Material {\n  color = new Color(0xffffff);\n  linewidth = 1;\n  linecap = \"round\";\n  linejoin = \"round\";\n  vertexColors = false;\n  fog = true;\n  shaderID = \"basic\";\n  constructor(parameters?: any) {\n    super();\n    this.setValues(parameters);\n  }\n\n  clone<T extends this>(material: T = new LineBasicMaterial() as T): T {\n\n    super.clone.call(this, material);\n\n    material.color.copy(this.color);\n    return material as T;\n  }\n}\n","import {FrontSide}  from \"../constants/Sides\";\nimport { EventDispatcher } from \"../core\";\nimport type { Texture } from \"../core\";\nimport { Vector2, Vector3 } from \"../math\";\nimport { Color } from \"../../colors\";\n/*\n * Line and Mesh material types\n * @constructor\n */\nexport class Material extends EventDispatcher {\n  id = MaterialIdCount++;\n  name = \"\";\n  overdraw: any;\n  color?: Color;\n  map?: Texture;\n  useScreenCoordinates?: boolean;\n  alignment?: Vector2;\n  screenOffset?: Vector2;\n  uvScale?: Vector2;\n  uvOffset?: Vector2;\n  scaleByViewport?: boolean;\n  fog?: unknown;\n  uniforms?: any;\n\n  side = FrontSide;\n  opacity = 1;\n  transparent = false;\n  depthTest = true;\n  depthWrite = true;\n  polygonOffset = false;\n  polygonOffsetFactor = 0;\n  polygonOffsetUnits = 0;\n  alphaTest = 0;\n  visible = true;\n  needsUpdate = true;\n  outline = false;\n  wireframe = false;\n  shaded = false;\n\n  setValues(\n    values: Partial<Record<keyof Material, any>> = {} as any\n  ) {\n    if (values === undefined) return;\n\n    for (var key in values) {\n      var newValue: Material[keyof Material] = values[key as keyof Material];\n\n      if (newValue === undefined) {\n        console.warn(\"$3Dmol.Material: '\" + key + \"' parameter is undefined.\");\n        continue;\n      }\n\n      if (key in this) {\n        var currentValue = this[key as keyof Material];\n\n        if (currentValue instanceof Color && newValue instanceof Color) {\n          currentValue.copy(newValue);\n        } else if (currentValue instanceof Color) {\n          currentValue.set(newValue as unknown as Color);\n        } else if (\n          currentValue instanceof Vector3 &&\n          newValue instanceof Vector3\n        ) {\n          currentValue.copy(newValue);\n        } else {\n          (this as any)[key] = newValue;\n        }\n      }\n    }\n  }\n\n  //TODO: might want to look into blending equations\n  clone<T extends this>(material = new Material() as T): T {\n    material.name = this.name;\n\n    material.side = this.side;\n\n    material.opacity = this.opacity;\n    material.transparent = this.transparent;\n\n    material.depthTest = this.depthTest;\n    material.depthWrite = this.depthWrite;\n\n    material.polygonOffset = this.polygonOffset;\n    material.polygonOffsetFactor = this.polygonOffsetFactor;\n    material.polygonOffsetUnits = this.polygonOffsetUnits;\n\n    material.alphaTest = this.alphaTest;\n\n    material.overdraw = this.overdraw;\n\n    material.visible = this.visible;\n\n    return material;\n  }\n\n  makeShaded(sTex: number) {\n    this.shaded = true;\n    if(this.uniforms) {\n      this.uniforms.shading = { type: 'i', value: sTex };\n      this.uniforms.vWidth = { type: 'f', value: 1.0 };\n      this.uniforms.vHeight = { type: 'f', value: 1.0 };\n    }\n  }\n  dispose() {\n    this.dispatchEvent({ type: \"dispose\" });\n  }\n}\n\nexport let MaterialIdCount = 0;\n","import { DoubleSide } from \"./../constants/Sides\";\nimport { MeshLambertMaterial } from \"./MeshLambertMaterial\";\n//Double sided Mesh Lambert material\n/* @constructor */\nexport class MeshDoubleLambertMaterial extends MeshLambertMaterial {\n  shaderID = \"lambertdouble\";\n  side = DoubleSide;\n  outline = false;\n  \n  constructor(parameters?: any) {\n    super(parameters);\n  }\n\n  clone<T extends this>(material: T = new MeshDoubleLambertMaterial() as T): T {\n    super.clone.call(this, material);\n    return material;\n  }\n}\n","import { Coloring } from \"./../constants/Coloring\";\nimport { Shading } from \"./../constants/Shading\";\nimport { Material } from \"./Material\";\n//Mesh Lambert material\n\nimport { Color } from \"../../colors\";\nimport { Vector3 } from \"../math\";\n\n/* @constructor */\nexport class MeshLambertMaterial extends Material {\n  combine: any;\n  morphTargets: any;\n  morphNormals: any;\n\n  color = new Color(0xffffff);\n  ambient = new Color(0xfffff);\n  emissive = new Color(0x000000);\n\n  //TODO: Which of these instance variables do I really need?\n  wrapAround = false;\n  wrapRGB = new Vector3(1, 1, 1);\n  map = undefined;\n  lightMap = null;\n  specularMap = null;\n  envMap = null;\n  reflectivity = 1;\n  refractionRatio = 0.98;\n  fog = true;\n  wireframe = false;\n  wireframeLinewidth = 1;\n  wireframeLinecap = \"round\";\n  wireframeLinejoin = \"round\";\n  shading = Shading.SmoothShading;\n  shaderID = \"lambert\";\n  vertexColors = Coloring.NoColors;\n  skinning = false;\n\n  voldata:any;\n  volscheme:any;\n\n  constructor(parameters?: any) {\n    super();\n    this.setValues(parameters);\n  }\n\n  clone<T extends this>(material: T = new MeshLambertMaterial() as T): T {\n    super.clone.call(this, material);\n\n    material.color.copy(this.color);\n    material.ambient.copy(this.ambient);\n    material.emissive.copy(this.emissive);\n\n    material.wrapAround = this.wrapAround;\n    material.wrapRGB.copy(this.wrapRGB);\n\n    material.map = this.map;\n\n    material.lightMap = this.lightMap;\n\n    material.specularMap = this.specularMap;\n\n    material.envMap = this.envMap;\n    material.combine = this.combine;\n    material.reflectivity = this.reflectivity;\n    material.refractionRatio = this.refractionRatio;\n\n    material.fog = this.fog;\n\n    material.shading = this.shading;\n    material.shaderID = this.shaderID;\n    material.vertexColors = this.vertexColors;\n\n    material.skinning = this.skinning;\n    material.morphTargets = this.morphTargets;\n    material.morphNormals = this.morphNormals;\n\n    return material as T;\n  }\n}\n","import { Color } from \"../../colors\";\nimport { Material } from \"./Material\";\n//Outlined Mesh Lamert material\n/* @constructor */\nexport class MeshOutlineMaterial extends Material {\n  fog: boolean;\n  shaderID: string;\n  wireframe: boolean;\n  outlineColor: any;\n  outlineWidth: any;\n  outlinePushback: any;\n  constructor(parameters?: any) {\n    super();\n    parameters = parameters || {};\n    this.fog = true;\n    this.shaderID = \"outline\";\n    this.wireframe = false;\n    this.outlineColor = parameters.color || new Color(0.0, 0.0, 0.0);\n    this.outlineWidth = parameters.width || 0.1;\n    this.outlinePushback = parameters.pushback || 1.0;\n  }\n  clone<T extends this>(material: T = new MeshOutlineMaterial() as T): T {\n    super.clone.call(this, material);\n    material.fog = this.fog;\n    material.shaderID = this.shaderID;\n    material.wireframe = this.wireframe;\n    return material;\n  }\n}\n","import { ImposterMaterial } from \"./ImposterMaterial\";\n\nexport class SphereImposterMaterial extends ImposterMaterial {\n  shaderID = \"sphereimposter\";\n  constructor(parameters?: any) {\n    super(parameters);\n    this.setValues(parameters);\n  }\n\n  clone<T extends this>(material: T = new SphereImposterMaterial() as T): T {\n    super.clone.call(this, material);\n    return material;\n  }\n}\n","import { Color } from \"../../colors\";\nimport { ImposterMaterial } from \"./ImposterMaterial\";\n\nexport class SphereImposterOutlineMaterial extends ImposterMaterial {\n  outlineColor: Color;\n  outlineWidth: number;\n  outlinePushback: number;\n  \n  constructor(parameters?: any) {\n    super(parameters);\n    parameters = parameters || {};\n\n    this.shaderID = \"sphereimposteroutline\";\n    this.outlineColor = parameters.color || new Color(0.0, 0.0, 0.0);\n    this.outlineWidth = parameters.width || 0.1;\n    this.outlinePushback = parameters.pushback || 1.0;\n\n    this.setValues(parameters);\n  }\n\n  clone<T extends this>(material: T = new SphereImposterOutlineMaterial() as T): T {\n    super.clone.call(this, material);\n    material.outlineColor = this.outlineColor;\n    material.outlineWidth = this.outlineWidth;\n    material.outlinePushback = this.outlinePushback;\n    return material;\n  }\n}\n","import { SpriteAlignment } from \"../constants/SpriteAlignment\";\nimport { Texture } from \"../core/Texture\";\nimport { Color } from \"../../colors\";\nimport { Vector2 } from \"../math\";\nimport { Material } from \"./Material\";\nexport class SpriteMaterial extends Material {\n  sizeAttenuation: boolean;\n  screenOffset: any;\n  scaleByViewPort: boolean;\n  alignment: any;\n  scaleByViewport: any;\n\n  color = new Color(0xffffff);\n  map = new Texture();\n  useScreenCoordinates = true;\n  fog = false; // use scene fog\n  uvOffset = new Vector2(0, 0);\n  uvScale = new Vector2(1, 1);\n  \n  constructor(parameters?: any) {\n    super();\n    this.depthTest = !this.useScreenCoordinates;\n    this.sizeAttenuation = !this.useScreenCoordinates;\n    this.screenOffset = this.screenOffset;\n    this.scaleByViewPort = !this.sizeAttenuation;\n    this.alignment = SpriteAlignment.center.clone();\n\n    this.setValues(parameters);\n\n    parameters = parameters || {};\n\n    if (parameters.depthTest === undefined)\n      this.depthTest = !this.useScreenCoordinates;\n    if (parameters.sizeAttenuation === undefined)\n      this.sizeAttenuation = !this.useScreenCoordinates;\n    if (parameters.scaleByViewPort === undefined)\n      this.scaleByViewPort = !this.sizeAttenuation;\n  }\n\n  clone<T extends this>(material = new SpriteMaterial() as T): T {\n    super.clone.call(this, material);\n\n    material.color.copy(this.color);\n    material.map = this.map;\n\n    material.useScreenCoordinates = this.useScreenCoordinates;\n    material.screenOffset = this.screenOffset;\n    material.sizeAttenuation = this.sizeAttenuation;\n    material.scaleByViewport = this.scaleByViewPort;\n    material.alignment.copy(this.alignment);\n\n    material.uvOffset.copy(this.uvOffset);\n\n    return material;\n  }\n}\n","import { ImposterMaterial } from \"./ImposterMaterial\";\nexport class StickImposterMaterial extends ImposterMaterial {\n  shaderID = \"stickimposter\";\n\n  constructor(parameters?: any) {\n    super(parameters);\n    this.setValues(parameters);\n  }\n\n  clone<T extends this>(material = new StickImposterMaterial() as T): T {\n    super.clone.call(this, material);\n    return material;\n  }\n}\n","import { Color } from \"../../colors\";\nimport { ImposterMaterial } from \"./ImposterMaterial\";\nexport class StickImposterOutlineMaterial extends ImposterMaterial {\n  shaderID = \"stickimposteroutline\";\n  outlineColor = new Color(0.0, 0.0, 0.0);\n  outlineWidth = 0.1;\n  outlinePushback = 1.0;\n  constructor(\n    parameters: Record<keyof StickImposterOutlineMaterial, unknown> & {\n      width?: number;\n      pushback?: number;\n    } = {} as any\n  ) {\n    super(parameters);\n    if (parameters.color) this.outlineColor = parameters.color as Color;\n    if (parameters.width) this.outlineWidth = parameters.width as number;\n    if (parameters.pushback)\n      this.outlinePushback = parameters.pushback as number;\n\n    this.setValues(parameters);\n  }\n\n  clone<T extends this>(material = new StickImposterOutlineMaterial() as T): T {\n    super.clone.call(this, material);\n    material.outlineColor = this.outlineColor;\n    material.outlineWidth = this.outlineWidth;\n    material.outlinePushback = this.outlinePushback;\n    return material;\n  }\n}\n","//Volumetric material\n\nimport { FrontSide } from \"../constants/Sides\";\nimport { Color } from \"../../colors\";\nimport { Material } from \"./Material\";\n\n/* @constructor */\nexport class VolumetricMaterial extends Material {\n  transparent = false;\n  volumetric = true;\n  color = new Color(0xffffff);\n  transferfn = null;\n  map = undefined;\n  extent = [];\n  maxdepth = 100.0;\n  unit = 0;\n  texmatrix = null;\n  transfermin = -1.0;\n  transfermax = 1.0;\n  subsamples = 5.0;\n  shaderID = \"volumetric\";\n  side = FrontSide;\n\n  constructor(parameters?: any) {\n    super();\n    // this.fog = true; // TODO: to integrate the new shader with the fog stuff\n    this.setValues(parameters);\n  }\n  clone<T extends this>(material = new VolumetricMaterial() as T): T {\n    super.clone.call(this, material);\n    material.transparent = this.transparent;\n    material.volumetric = this.volumetric;\n    material.color = this.color;\n    material.transferfn = this.transferfn;\n    material.map = this.map;\n    material.extent = this.extent;\n    material.maxdepth = this.maxdepth;\n    material.unit = this.unit;\n    material.texmatrix = this.texmatrix;\n    material.transfermin = this.transfermin;\n    material.transfermax = this.transfermax;\n    material.subsamples = this.subsamples;\n    material.shaderID = this.shaderID;\n    material.side = this.side;\n    return material;\n  }\n}\n","// Quaternion\nexport interface Quaternion {\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n}\n\n/** @class \n *  @subcategory  Math\n * */ \nexport class Quaternion {\n  x: number;\n  y: number;\n  z: number;\n  w: number;\n  constructor(x?: number, y?: number, z?: number, w?: number) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n    this.w = w !== undefined ? w : 1;\n  }\n\n  set(x: number, y: number, z: number, w: number) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n\n    return this;\n  }\n\n  copy(q: Quaternion) {\n    this.x = q.x;\n    this.y = q.y;\n    this.z = q.z;\n    this.w = q.w;\n\n    return this;\n  }\n\n  conjugate() {\n    this.x *= -1;\n    this.y *= -1;\n    this.z *= -1;\n\n    return this;\n  }\n\n  inverse() {\n    return this.conjugate().normalize();\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n  }\n\n  lengthxyz() {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  }\n\n  normalize() {\n    let l = this.length();\n\n    if (l === 0) {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n      this.w = 1;\n    } else {\n      l = 1 / l;\n\n      this.x *= l;\n      this.y *= l;\n      this.z *= l;\n      this.w *= l;\n    }\n\n    return this;\n  }\n\n  multiply(q: any) {\n    return this.multiplyQuaternions(this, q);\n  }\n\n  multiplyScalar(s: number) {\n    this.x *= s;\n    this.y *= s;\n    this.z *= s;\n    this.w *= s;\n    return this;\n  }\n\n  multiplyQuaternions(a: Quaternion, b: Quaternion) {\n    const qax = a.x;\n    const qay = a.y;\n    const qaz = a.z;\n    const qaw = a.w;\n    const qbx = b.x;\n    const qby = b.y;\n    const qbz = b.z;\n    const qbw = b.w;\n\n    this.x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n    this.y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n    this.z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n    this.w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n    return this;\n  }\n\n  sub(q: Quaternion) {\n    this.x -= q.x;\n    this.y -= q.y;\n    this.z -= q.z;\n    this.w -= q.w;\n    return this;\n  }\n\n  clone() {\n    return new Quaternion(this.x, this.y, this.z, this.w);\n  }\n\n  setFromEuler(e: Quaternion) {\n    const c1 = Math.cos(e.x / 2);\n    const c2 = Math.cos(e.y / 2);\n    const c3 = Math.cos(e.z / 2);\n    const s1 = Math.sin(e.x / 2);\n    const s2 = Math.sin(e.y / 2);\n    const s3 = Math.sin(e.z / 2);\n\n    this.x = s1 * c2 * c3 + c1 * s2 * s3;\n    this.y = c1 * s2 * c3 - s1 * c2 * s3;\n    this.z = c1 * c2 * s3 + s1 * s2 * c3;\n    this.w = c1 * c2 * c3 - s1 * s2 * s3;\n\n    return this;\n  }\n}","/** @class \n *  @subcategory  Math\n * */ \nexport class Vector2 {\n    x: number;\n    y: number;\n\n    constructor(x: number, y: number) {\n      this.x = x || 0.0;\n      this.y = y || 0.0;\n    }\n  \n    set(x: any, y: any) {\n      this.x = x;\n      this.y = y;\n  \n      return this;\n    }\n  \n    subVectors(a: { x: number; y: number; }, b: { x: number; y: number; }) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n  \n      return this;\n    }\n  \n    copy(v: { x: any; y: any; }) {\n      this.x = v.x;\n      this.y = v.y;\n  \n      return this;\n    }\n  \n    clone() {\n      return new Vector2(this.x, this.y);\n    }\n  }","import { Quaternion } from \"./Quaternion\";\nimport { degToRad } from \"./utils/degToRad\";\nimport { clamp } from \"./utils/clamp\";\nimport { Sphere } from \"../shapes\";\n\nvar mRotation: Matrix4;\nvar mScale: Matrix4;\nvar x: Vector3;\nvar y: Vector3;\nvar z: Vector3;\n\n/** @class \n *  @subcategory  Math\n * */ \nexport class Matrix4 {\n  elements: Float32Array;\n  constructor(n11: Array<number>);\n  constructor(\n    n11?: number,\n    n12?: number,\n    n13?: number,\n    n14?: number,\n    n21?: number,\n    n22?: number,\n    n23?: number,\n    n24?: number,\n    n31?: number,\n    n32?: number,\n    n33?: number,\n    n34?: number,\n    n41?: number,\n    n42?: number,\n    n43?: number,\n    n44?: number\n  );\n  constructor(\n    n11: Array<number> | number = 1,\n    n12: number = 0,\n    n13: number = 0,\n    n14: number = 0,\n    n21: number = 0,\n    n22: number = 1,\n    n23: number = 0,\n    n24: number = 0,\n    n31: number = 0,\n    n32: number = 0,\n    n33: number = 1,\n    n34: number = 0,\n    n41: number = 0,\n    n42: number = 0,\n    n43: number = 0,\n    n44: number = 1\n  ) {\n    if (typeof n11 !== \"undefined\" && typeof n11 !== \"number\") {\n      // passing list like initialization\n      this.elements = new Float32Array(n11);\n    } else {\n      this.elements = new Float32Array(16);\n      this.elements[0] = n11;\n      this.elements[4] = n12;\n      this.elements[8] = n13;\n      this.elements[12] = n14;\n      this.elements[1] = n21;\n      this.elements[5] = n22;\n      this.elements[9] = n23;\n      this.elements[13] = n24;\n      this.elements[2] = n31;\n      this.elements[6] = n32;\n      this.elements[10] = n33;\n      this.elements[14] = n34;\n      this.elements[3] = n41;\n      this.elements[7] = n42;\n      this.elements[11] = n43;\n      this.elements[15] = n44;\n    }\n  }\n\n  // eslint-disable-next-line no-unused-vars, class-methods-use-this\n  makeScale(x: any, y: any, z: any) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  set(\n    n11: number,\n    n12: number,\n    n13: number,\n    n14: number,\n    n21: number,\n    n22: number,\n    n23: number,\n    n24: number,\n    n31: number,\n    n32: number,\n    n33: number,\n    n34: number,\n    n41: number,\n    n42: number,\n    n43: number,\n    n44: number\n  ) {\n    const te = this.elements;\n\n    te[0] = n11;\n    te[4] = n12;\n    te[8] = n13;\n    te[12] = n14;\n    te[1] = n21;\n    te[5] = n22;\n    te[9] = n23;\n    te[13] = n24;\n    te[2] = n31;\n    te[6] = n32;\n    te[10] = n33;\n    te[14] = n34;\n    te[3] = n41;\n    te[7] = n42;\n    te[11] = n43;\n    te[15] = n44;\n\n    return this;\n  }\n\n  identity() {\n    this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\n    return this;\n  }\n\n  copy(m: { elements: any }) {\n    const me = m.elements;\n\n    this.set(\n      me[0],\n      me[4],\n      me[8],\n      me[12],\n      me[1],\n      me[5],\n      me[9],\n      me[13],\n      me[2],\n      me[6],\n      me[10],\n      me[14],\n      me[3],\n      me[7],\n      me[11],\n      me[15]\n    );\n\n    return this;\n  }\n\n  matrix3FromTopLeft() {\n    const te = this.elements;\n    return new Matrix3(\n      te[0],\n      te[4],\n      te[8],\n      te[1],\n      te[5],\n      te[9],\n      te[2],\n      te[6],\n      te[10]\n    );\n  }\n\n  setRotationFromEuler(v: Vector3, order?: string) {\n    const te = this.elements;\n\n    const { x, y, z } = v;\n    const a = Math.cos(x);\n    const b = Math.sin(x);\n    const c = Math.cos(y);\n    const d = Math.sin(y);\n    const e = Math.cos(z);\n    const f = Math.sin(z);\n\n    if (order === undefined || order === \"XYZ\") {\n      const ae = a * e;\n      const af = a * f;\n      const be = b * e;\n      const bf = b * f;\n\n      te[0] = c * e;\n      te[4] = -c * f;\n      te[8] = d;\n\n      te[1] = af + be * d;\n      te[5] = ae - bf * d;\n      te[9] = -b * c;\n\n      te[2] = bf - ae * d;\n      te[6] = be + af * d;\n      te[10] = a * c;\n    } else\n      console.error(`Error with matrix4 setRotationFromEuler. Order: ${order}`);\n\n    return this;\n  }\n\n  setRotationFromQuaternion(q: Quaternion) {\n    const te = this.elements;\n\n    const { x, y, z, w } = q;\n    const x2 = x + x;\n    const y2 = y + y;\n    const z2 = z + z;\n    const xx = x * x2;\n    const xy = x * y2;\n    const xz = x * z2;\n    const yy = y * y2;\n    const yz = y * z2;\n    const zz = z * z2;\n    const wx = w * x2;\n    const wy = w * y2;\n    const wz = w * z2;\n\n    te[0] = 1 - (yy + zz);\n    te[4] = xy - wz;\n    te[8] = xz + wy;\n\n    te[1] = xy + wz;\n    te[5] = 1 - (xx + zz);\n    te[9] = yz - wx;\n\n    te[2] = xz - wy;\n    te[6] = yz + wx;\n    te[10] = 1 - (xx + yy);\n\n    return this;\n  }\n\n  multiplyMatrices(a: { elements: any }, b: Matrix4) {\n    const ae = a.elements;\n    const be = b.elements;\n    const te = this.elements;\n\n    const a11 = ae[0];\n    const a12 = ae[4];\n    const a13 = ae[8];\n    const a14 = ae[12];\n    const a21 = ae[1];\n    const a22 = ae[5];\n    const a23 = ae[9];\n    const a24 = ae[13];\n    const a31 = ae[2];\n    const a32 = ae[6];\n    const a33 = ae[10];\n    const a34 = ae[14];\n    const a41 = ae[3];\n    const a42 = ae[7];\n    const a43 = ae[11];\n    const a44 = ae[15];\n\n    const b11 = be[0];\n    const b12 = be[4];\n    const b13 = be[8];\n    const b14 = be[12];\n    const b21 = be[1];\n    const b22 = be[5];\n    const b23 = be[9];\n    const b24 = be[13];\n    const b31 = be[2];\n    const b32 = be[6];\n    const b33 = be[10];\n    const b34 = be[14];\n    const b41 = be[3];\n    const b42 = be[7];\n    const b43 = be[11];\n    const b44 = be[15];\n\n    te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n    te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n    te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n    te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n    te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n    te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n    te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n    te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n    te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n    te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n    te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n    te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n    te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n    te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n    te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n    te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n    return this;\n  }\n\n  multiplyScalar(s: number) {\n    const te = this.elements;\n\n    te[0] *= s;\n    te[4] *= s;\n    te[8] *= s;\n    te[12] *= s;\n    te[1] *= s;\n    te[5] *= s;\n    te[9] *= s;\n    te[13] *= s;\n    te[2] *= s;\n    te[6] *= s;\n    te[10] *= s;\n    te[14] *= s;\n    te[3] *= s;\n    te[7] *= s;\n    te[11] *= s;\n    te[15] *= s;\n\n    return this;\n  }\n\n  makeTranslation(x: any, y: any, z: any) {\n    this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n\n    return this;\n  }\n\n  // snap values close to integers to their integer value\n  // useful and identifying identity matrices\n  snap(digits: number) {\n    if (!digits) digits = 4;\n    const mult = 10 ** 4;\n    const te = this.elements;\n    for (let i = 0; i < 16; i++) {\n      const rounded = Math.round(te[i]);\n      if (rounded === Math.round(te[i] * mult) / mult) {\n        te[i] = rounded;\n      }\n    }\n    return this;\n  }\n\n  transpose() {\n    const te = this.elements;\n    let tmp: any;\n\n    tmp = te[1];\n    te[1] = te[4];\n    te[4] = tmp;\n    tmp = te[2];\n    te[2] = te[8];\n    te[8] = tmp;\n    tmp = te[6];\n    te[6] = te[9];\n    te[9] = tmp;\n\n    tmp = te[3];\n    te[3] = te[12];\n    te[12] = tmp;\n    tmp = te[7];\n    te[7] = te[13];\n    te[13] = tmp;\n    tmp = te[11];\n    te[11] = te[14];\n    te[14] = tmp;\n\n    return this;\n  }\n\n  setPosition(v: Vector3) {\n    const te = this.elements;\n\n    te[12] = v.x;\n    te[13] = v.y;\n    te[14] = v.z;\n\n    return this;\n  }\n\n  translate(v: Vector3) {\n    const te = this.elements;\n\n    te[12] += v.x;\n    te[13] += v.y;\n    te[14] += v.z;\n\n    return this;\n  }\n\n  getInverse(m: Matrix4, throwOnInvertible?: boolean) {\n    // based on\n    // http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n    const te = this.elements;\n    const me = m.elements;\n\n    const n11 = me[0];\n    const n12 = me[4];\n    const n13 = me[8];\n    const n14 = me[12];\n    const n21 = me[1];\n    const n22 = me[5];\n    const n23 = me[9];\n    const n24 = me[13];\n    const n31 = me[2];\n    const n32 = me[6];\n    const n33 = me[10];\n    const n34 = me[14];\n    const n41 = me[3];\n    const n42 = me[7];\n    const n43 = me[11];\n    const n44 = me[15];\n\n    te[0] =\n      n23 * n34 * n42 -\n      n24 * n33 * n42 +\n      n24 * n32 * n43 -\n      n22 * n34 * n43 -\n      n23 * n32 * n44 +\n      n22 * n33 * n44;\n    te[4] =\n      n14 * n33 * n42 -\n      n13 * n34 * n42 -\n      n14 * n32 * n43 +\n      n12 * n34 * n43 +\n      n13 * n32 * n44 -\n      n12 * n33 * n44;\n    te[8] =\n      n13 * n24 * n42 -\n      n14 * n23 * n42 +\n      n14 * n22 * n43 -\n      n12 * n24 * n43 -\n      n13 * n22 * n44 +\n      n12 * n23 * n44;\n    te[12] =\n      n14 * n23 * n32 -\n      n13 * n24 * n32 -\n      n14 * n22 * n33 +\n      n12 * n24 * n33 +\n      n13 * n22 * n34 -\n      n12 * n23 * n34;\n    te[1] =\n      n24 * n33 * n41 -\n      n23 * n34 * n41 -\n      n24 * n31 * n43 +\n      n21 * n34 * n43 +\n      n23 * n31 * n44 -\n      n21 * n33 * n44;\n    te[5] =\n      n13 * n34 * n41 -\n      n14 * n33 * n41 +\n      n14 * n31 * n43 -\n      n11 * n34 * n43 -\n      n13 * n31 * n44 +\n      n11 * n33 * n44;\n    te[9] =\n      n14 * n23 * n41 -\n      n13 * n24 * n41 -\n      n14 * n21 * n43 +\n      n11 * n24 * n43 +\n      n13 * n21 * n44 -\n      n11 * n23 * n44;\n    te[13] =\n      n13 * n24 * n31 -\n      n14 * n23 * n31 +\n      n14 * n21 * n33 -\n      n11 * n24 * n33 -\n      n13 * n21 * n34 +\n      n11 * n23 * n34;\n    te[2] =\n      n22 * n34 * n41 -\n      n24 * n32 * n41 +\n      n24 * n31 * n42 -\n      n21 * n34 * n42 -\n      n22 * n31 * n44 +\n      n21 * n32 * n44;\n    te[6] =\n      n14 * n32 * n41 -\n      n12 * n34 * n41 -\n      n14 * n31 * n42 +\n      n11 * n34 * n42 +\n      n12 * n31 * n44 -\n      n11 * n32 * n44;\n    te[10] =\n      n12 * n24 * n41 -\n      n14 * n22 * n41 +\n      n14 * n21 * n42 -\n      n11 * n24 * n42 -\n      n12 * n21 * n44 +\n      n11 * n22 * n44;\n    te[14] =\n      n14 * n22 * n31 -\n      n12 * n24 * n31 -\n      n14 * n21 * n32 +\n      n11 * n24 * n32 +\n      n12 * n21 * n34 -\n      n11 * n22 * n34;\n    te[3] =\n      n23 * n32 * n41 -\n      n22 * n33 * n41 -\n      n23 * n31 * n42 +\n      n21 * n33 * n42 +\n      n22 * n31 * n43 -\n      n21 * n32 * n43;\n    te[7] =\n      n12 * n33 * n41 -\n      n13 * n32 * n41 +\n      n13 * n31 * n42 -\n      n11 * n33 * n42 -\n      n12 * n31 * n43 +\n      n11 * n32 * n43;\n    te[11] =\n      n13 * n22 * n41 -\n      n12 * n23 * n41 -\n      n13 * n21 * n42 +\n      n11 * n23 * n42 +\n      n12 * n21 * n43 -\n      n11 * n22 * n43;\n    te[15] =\n      n12 * n23 * n31 -\n      n13 * n22 * n31 +\n      n13 * n21 * n32 -\n      n11 * n23 * n32 -\n      n12 * n21 * n33 +\n      n11 * n22 * n33;\n\n    const det = n11 * te[0] + n21 * te[4] + n31 * te[8] + n41 * te[12];\n\n    if (det === 0) {\n      const msg = \"Matrix4.getInverse(): can't invert matrix, determinant is 0\";\n\n      if (throwOnInvertible || false) {\n        throw new Error(msg);\n      } else {\n        console.warn(msg);\n      }\n\n      this.identity();\n\n      return this;\n    }\n\n    this.multiplyScalar(1 / det);\n\n    return this;\n  }\n\n  isReflected() {\n    const te = this.elements;\n\n    const m0 = te[0];\n    const m3 = te[4];\n    const m6 = te[8];\n    const m1 = te[1];\n    const m4 = te[5];\n    const m7 = te[9];\n    const m2 = te[2];\n    const m5 = te[6];\n    const m8 = te[10];\n\n    const determinant =\n      m0 * m4 * m8 + // +aei\n      m1 * m5 * m6 + // +bfg\n      m2 * m3 * m7 - // +cdh\n      m2 * m4 * m6 - // -ceg\n      m1 * m3 * m8 - // -bdi\n      m0 * m5 * m7; // -afh\n\n    return determinant < 0;\n  }\n\n  scale(v: { x?: any; y?: any; z?: any }) {\n    const te = this.elements;\n    const { x } = v;\n    const { y } = v;\n    const { z } = v;\n\n    te[0] *= x;\n    te[4] *= y;\n    te[8] *= z;\n    te[1] *= x;\n    te[5] *= y;\n    te[9] *= z;\n    te[2] *= x;\n    te[6] *= y;\n    te[10] *= z;\n    te[3] *= x;\n    te[7] *= y;\n    te[11] *= z;\n\n    return this;\n  }\n\n  getMaxScaleOnAxis() {\n    const te = this.elements;\n\n    const scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n    const scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n    const scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n\n    return Math.sqrt(Math.max(scaleXSq, Math.max(scaleYSq, scaleZSq)));\n  }\n\n  makeFrustum(\n    left: number,\n    right: number,\n    bottom: number,\n    top: number,\n    near: number,\n    far: number\n  ) {\n    const te = this.elements;\n\n    const x = (2 * near) / (right - left);\n    const y = (2 * near) / (top - bottom);\n\n    const a = (right + left) / (right - left);\n    const b = (top + bottom) / (top - bottom);\n    const c = -(far + near) / (far - near);\n    const d = (-2 * far * near) / (far - near);\n\n    te[0] = x;\n    te[4] = 0;\n    te[8] = a;\n    te[12] = 0;\n    te[1] = 0;\n    te[5] = y;\n    te[9] = b;\n    te[13] = 0;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = c;\n    te[14] = d;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = -1;\n    te[15] = 0;\n\n    return this;\n  }\n\n  makePerspective(fov: number, aspect: number, near: number, far: any) {\n    const ymax = near * Math.tan(degToRad(fov * 0.5));\n    const ymin = -ymax;\n    const xmin = ymin * aspect;\n    const xmax = ymax * aspect;\n\n    return this.makeFrustum(xmin, xmax, ymin, ymax, near, far);\n  }\n\n  makeOrthographic(\n    left: number,\n    right: number,\n    top: number,\n    bottom: number,\n    near: number,\n    far: number\n  ) {\n    const te = this.elements;\n    const w = 1.0 / (right - left);\n    const h = 1.0 / (top - bottom);\n    const p = 1.0 / (far - near);\n\n    const x = (right + left) * w;\n    const y = (top + bottom) * h;\n    const z = (far + near) * p;\n\n    te[0] = 2 * w;\n    te[4] = 0;\n    te[8] = 0;\n    te[12] = -x;\n    te[1] = 0;\n    te[5] = 2 * h;\n    te[9] = 0;\n    te[13] = -y;\n    te[2] = 0;\n    te[6] = 0;\n    te[10] = -2 * p;\n    te[14] = -z;\n    te[3] = 0;\n    te[7] = 0;\n    te[11] = 0;\n    te[15] = 1;\n\n    return this;\n  }\n\n  isEqual(m: { elements: any }) {\n    const me = m.elements;\n    const te = this.elements;\n\n    if (\n      te[0] === me[0] &&\n      te[4] === me[4] &&\n      te[8] === me[8] &&\n      te[12] === me[12] &&\n      te[1] === me[1] &&\n      te[5] === me[5] &&\n      te[9] === me[9] &&\n      te[13] === me[13] &&\n      te[2] === me[2] &&\n      te[6] === me[6] &&\n      te[10] === me[10] &&\n      te[14] === me[14] &&\n      te[3] === me[3] &&\n      te[7] === me[7] &&\n      te[11] === me[11] &&\n      te[15] === me[15]\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  clone() {\n    const te = this.elements;\n\n    return new Matrix4(\n      te[0],\n      te[4],\n      te[8],\n      te[12],\n      te[1],\n      te[5],\n      te[9],\n      te[13],\n      te[2],\n      te[6],\n      te[10],\n      te[14],\n      te[3],\n      te[7],\n      te[11],\n      te[15]\n    );\n  }\n\n  isIdentity() {\n    const te = this.elements;\n\n    if (\n      te[0] === 1 &&\n      te[4] === 0 &&\n      te[8] === 0 &&\n      te[12] === 0 &&\n      te[1] === 0 &&\n      te[5] === 1 &&\n      te[9] === 0 &&\n      te[13] === 0 &&\n      te[2] === 0 &&\n      te[6] === 0 &&\n      te[10] === 1 &&\n      te[14] === 0 &&\n      te[3] === 0 &&\n      te[7] === 0 &&\n      te[11] === 0 &&\n      te[15] === 1\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  // return true if elements are with digits of identity\n  isNearlyIdentity(digits: any) {\n    const snapped = this.clone().snap(digits);\n    return snapped.isIdentity();\n  }\n\n\n  getScale(scale?: Vector3): Vector3 {\n    const te = this.elements;\n    scale = scale || new Vector3();\n    // grab the axis vectors\n    x.set(te[0], te[1], te[2]);\n    y.set(te[4], te[5], te[6]);\n    z.set(te[8], te[9], te[10]);\n\n    scale.x = x.length();\n    scale.y = y.length();\n    scale.z = z.length();\n\n    return scale;\n  }\n\n  lookAt(eye: Vector3, target: Vector3, up: Vector3) {\n    const te = this.elements;\n\n    z.subVectors(eye, target).normalize();\n\n    if (z.length() === 0) {\n      z.z = 1;\n    }\n\n    x.crossVectors(up, z).normalize();\n\n    if (x.length() === 0) {\n      z.x += 0.0001;\n      x.crossVectors(up, z).normalize();\n    }\n\n    y.crossVectors(z, x);\n\n    te[0] = x.x;\n    te[4] = y.x;\n    te[8] = z.x;\n    te[1] = x.y;\n    te[5] = y.y;\n    te[9] = z.y;\n    te[2] = x.z;\n    te[6] = y.z;\n    te[10] = z.z;\n\n    return this;\n  }\n\n  compose(translation: Vector3, rotation: Quaternion, scale: Vector3) {\n    const te = this.elements;\n\n    mRotation.identity();\n    mRotation.setRotationFromQuaternion(rotation);\n\n    mScale.makeScale(scale.x, scale.y, scale.z);\n\n    this.multiplyMatrices(mRotation, mScale);\n\n    te[12] = translation.x;\n    te[13] = translation.y;\n    te[14] = translation.z;\n\n    return this;\n  }\n}\n\nmRotation = new Matrix4();\nmScale = new Matrix4();\n\n/**\n * @interface\n */\nexport interface XYZ {\n  /**  */\n  x: number;\n  /**  */\n  y: number;\n  /**  */\n  z: number;\n}\n\n/** @class \n *  @subcategory  Math\n * */ \nexport class Vector3 {\n  // unaccounted for assignents to vector3 properties in other parts of the code\n  // look in glcartoon.js for example\n  color?: any;\n  resi?: any;\n  style?: any;\n  smoothen?: any;\n  atom?: any;\n  skip?: any;\n  atomid?: undefined;\n\n  x: number;\n  y: number;\n  z: number;\n\n  constructor(x?: number, y?: number, z?: number) {\n    this.x = x || 0.0;\n    this.y = y || 0.0;\n    this.z = z || 0.0;\n    this.atomid = undefined;\n  }\n\n  set(x: any, y: any, z: any) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n\n    return this;\n  }\n\n  copy(v: { x: any; y: any; z: any }) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n\n    return this;\n  }\n\n  add(v: { x: any; y: any; z: any }) {\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n\n    return this;\n  }\n\n  addVectors(a: { x: any; y: any; z: any }, b: { x: any; y: any; z: any }) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n\n    return this;\n  }\n\n  multiplyVectors(\n    a: { x: number; y: number; z: number },\n    b: { x: number; y: number; z: number }\n  ) {\n    // elementwise\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n\n    return this;\n  }\n\n  sub(v: { x: number; y: number; z: number }) {\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n\n    return this;\n  }\n\n  subVectors(\n    a: { x: number; y: number; z: number },\n    b: { x: number; y: number; z: number }\n  ) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n\n    return this;\n  }\n\n  multiplyScalar(s: number) {\n    this.x *= s;\n    this.y *= s;\n    this.z *= s;\n\n    return this;\n  }\n\n  divideScalar(s: number) {\n    if (s !== 0) {\n      this.x /= s;\n      this.y /= s;\n      this.z /= s;\n    } else {\n      this.x = 0;\n      this.y = 0;\n      this.z = 0;\n    }\n\n    return this;\n  }\n\n  // accumulate maximum\n  max(s: { x: number; y: number; z: number }) {\n    this.x = Math.max(this.x, s.x);\n    this.y = Math.max(this.y, s.y);\n    this.z = Math.max(this.z, s.z);\n\n    return this;\n  }\n\n  // accumulate min\n  min(s: { x: number; y: number; z: number }) {\n    this.x = Math.min(this.x, s.x);\n    this.y = Math.min(this.y, s.y);\n    this.z = Math.min(this.z, s.z);\n\n    return this;\n  }\n\n  distanceTo(v: any) {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n\n  distanceToSquared(v: { x: number; y: number; z: number }) {\n    const dx = this.x - v.x;\n    const dy = this.y - v.y;\n    const dz = this.z - v.z;\n\n    return dx * dx + dy * dy + dz * dz;\n  }\n\n  applyMatrix3(m: { elements: any }) {\n    const { x } = this;\n    const { y } = this;\n    const { z } = this;\n\n    const e = m.elements;\n    // column major ordering\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n\n    return this;\n  }\n\n  applyMatrix4(m: { elements: any }) {\n    const { x } = this;\n    const { y } = this;\n    const { z } = this;\n\n    const e = m.elements;\n\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12];\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13];\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14];\n\n    return this;\n  }\n\n  applyProjection(m: { elements: any }) {\n    // input: Matrix4 projection matrix\n    const { x } = this;\n    const { y } = this;\n    const { z } = this;\n\n    const e = m.elements;\n    const d = e[3] * x + e[7] * y + e[11] * z + e[15];\n\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) / d;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) / d;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) / d;\n\n    return this;\n  }\n\n  applyQuaternion(q: Quaternion): Vector3 {\n    // save values\n    const { x } = this;\n    const { y } = this;\n    const { z } = this;\n\n    const qx = q.x;\n    const qy = q.y;\n    const qz = q.z;\n    const qw = q.w;\n\n    // compute this as\n    // t = 2 * cross(q.xyz, v)\n    // newv = v + q.w * t + cross(q.xyz, t)\n    // this from molecularmusings\n    // http://molecularmusings.wordpress.com/2013/05/24/a-faster-quaternion-vector-multiplication/\n    const t: { x?: number; y?: number; z?: number } = {};\n    t.x = 2 * (y * qz - z * qy);\n    t.y = 2 * (z * qx - x * qz);\n    t.z = 2 * (x * qy - y * qx);\n\n    // cross t with q\n    const t2: { x?: number; y?: number; z?: number } = {};\n    t2.x = t.y * qz - t.z * qy;\n    t2.y = t.z * qx - t.x * qz;\n    t2.z = t.x * qy - t.y * qx;\n\n    this.x = x + qw * t.x + t2.x;\n    this.y = y + qw * t.y + t2.y;\n    this.z = z + qw * t.z + t2.z;\n\n    return this;\n  }\n\n  negate() {\n    return this.multiplyScalar(-1);\n  }\n\n  dot(v: Vector3) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  }\n\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  }\n\n  lengthSq() {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  }\n\n  normalize() {\n    return this.divideScalar(this.length());\n  }\n\n  cross(v: Vector3) {\n    const { x } = this;\n    const { y } = this;\n    const { z } = this;\n\n    this.x = y * v.z - z * v.y;\n    this.y = z * v.x - x * v.z;\n    this.z = x * v.y - y * v.x;\n\n    return this;\n  }\n\n  crossVectors(a: Vector3, b: Vector3) {\n    this.x = a.y * b.z - a.z * b.y;\n    this.y = a.z * b.x - a.x * b.z;\n    this.z = a.x * b.y - a.y * b.x;\n\n    return this;\n  }\n\n  equals(b: Vector3) {\n    return this.x == b.x && this.y == b.y && this.z == b.z;\n  }\n  \n  getPositionFromMatrix(m: Matrix4) {\n    this.x = m.elements[12];\n    this.y = m.elements[13];\n    this.z = m.elements[14];\n\n    return this;\n  }\n\n  setEulerFromRotationMatrix(m: Matrix4, order: string) {\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n    const te = m.elements;\n    const m11 = te[0];\n    const m12 = te[4];\n    const m13 = te[8];\n    // var m21 = te[1];\n    const m22 = te[5];\n    const m23 = te[9];\n    // var m31 = te[2];\n    const m32 = te[6];\n    const m33 = te[10];\n\n    if (order === undefined || order === \"XYZ\") {\n      this.y = Math.asin(clamp(m13, -1, 1));\n\n      if (Math.abs(m13) < 0.99999) {\n        this.x = Math.atan2(-m23, m33);\n        this.z = Math.atan2(-m12, m11);\n      } else {\n        this.x = Math.atan2(m32, m22);\n        this.z = 0;\n      }\n    } else {\n      console.error(\n        `Error with vector's setEulerFromRotationMatrix: Unknown order: ${order}`\n      );\n    }\n\n    return this;\n  }\n\n  rotateAboutVector(axis: Vector3, ang: number) {\n    axis.normalize();\n    const cosang = Math.cos(ang);\n    const sinang = Math.sin(ang);\n    // Rodrigues' rotation formula, from wikipedia\n    const term1 = this.clone().multiplyScalar(cosang);\n    const term2 = axis.clone().cross(this).multiplyScalar(sinang);\n    const term3 = axis\n      .clone()\n      .multiplyScalar(axis.clone().dot(this))\n      .multiplyScalar(1 - cosang);\n\n    const rot = term1.add(term2).add(term3);\n\n    this.x = rot.x;\n    this.y = rot.y;\n    this.z = rot.z;\n\n    return this;\n  }\n\n  setFromMatrixPosition(m: { elements: any }) {\n    const e = m.elements;\n\n    this.x = e[12];\n    this.y = e[13];\n    this.z = e[14];\n\n    return this;\n  }\n\n  // unproject is defined after Matrix4\n  transformDirection(m: { elements: any }) {\n    // input: THREE.Matrix4 affine matrix\n    // vector interpreted as a direction\n    const { x } = this;\n    const { y } = this;\n    const { z } = this;\n    const e = m.elements;\n\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n\n    return this.normalize();\n  }\n\n  clone() {\n    return new Vector3(this.x, this.y, this.z);\n  }\n\n  unproject(camera: { matrixWorld: any; projectionMatrix: any }) {\n    const mat4 = mRotation;\n    mat4.multiplyMatrices(\n      camera.matrixWorld,\n      mat4.getInverse(camera.projectionMatrix)\n    );\n    return this.applyMatrix4(mat4);\n  }\n}\n\nx = new Vector3();\ny = new Vector3();\nz = new Vector3();\n\n/* \n * @interface Matrix3\n */\nexport interface Matrix3 {\n  elements: Float32Array;\n}\n\n/** @class \n *  @subcategory  Math\n * */ \nexport class Matrix3 {\n  constructor(\n    n11: number = 1,\n    n12: number = 0,\n    n13: number = 0,\n    n21: number = 0,\n    n22: number = 1,\n    n23: number = 0,\n    n31: number = 0,\n    n32: number = 0,\n    n33: number = 1\n  ) {\n    this.elements = new Float32Array(9);\n    this.set(n11, n12, n13, n21, n22, n23, n31, n32, n33);\n  }\n\n  set(\n    n11: number,\n    n12: number,\n    n13: number,\n    n21: number,\n    n22: number,\n    n23: number,\n    n31: number,\n    n32: number,\n    n33: number\n  ) {\n    const te = this.elements;\n\n    te[0] = n11;\n    te[3] = n12;\n    te[6] = n13;\n    te[1] = n21;\n    te[4] = n22;\n    te[7] = n23;\n    te[2] = n31;\n    te[5] = n32;\n    te[8] = n33;\n\n    return this;\n  }\n\n  identity() {\n    this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n\n    return this;\n  }\n\n  copy(m: { elements: any }) {\n    const me = m.elements;\n\n    this.set(me[0], me[3], me[6], me[1], me[4], me[7], me[2], me[5], me[8]);\n  }\n\n  multiplyScalar(s: number) {\n    const te = this.elements;\n\n    te[0] *= s;\n    te[3] *= s;\n    te[6] *= s;\n    te[1] *= s;\n    te[4] *= s;\n    te[7] *= s;\n    te[2] *= s;\n    te[5] *= s;\n    te[8] *= s;\n\n    return this;\n  }\n\n  getInverse3(matrix: { elements: any }) {\n    // input: Matrix3\n    const me = matrix.elements;\n    const te = this.elements;\n\n    te[0] = me[4] * me[8] - me[5] * me[7];\n    te[3] = me[6] * me[5] - me[3] * me[8];\n    te[6] = me[3] * me[7] - me[6] * me[4];\n    te[1] = me[7] * me[2] - me[1] * me[8];\n    te[4] = me[0] * me[8] - me[6] * me[2];\n    te[7] = me[1] * me[6] - me[0] * me[7];\n    te[2] = me[1] * me[5] - me[2] * me[4];\n    te[5] = me[2] * me[3] - me[0] * me[5];\n    te[8] = me[0] * me[4] - me[1] * me[3];\n\n    const det = me[0] * te[0] + me[3] * te[1] + me[6] * te[2];\n    this.multiplyScalar(1.0 / det);\n\n    return this;\n  }\n\n  getInverse(matrix: { elements: any }, throwOnInvertible: any) {\n    // input: Matrix4\n    const me = matrix.elements;\n    const te = this.elements;\n\n    te[0] = me[10] * me[5] - me[6] * me[9];\n    te[1] = -me[10] * me[1] + me[2] * me[9];\n    te[2] = me[6] * me[1] - me[2] * me[5];\n    te[3] = -me[10] * me[4] + me[6] * me[8];\n    te[4] = me[10] * me[0] - me[2] * me[8];\n    te[5] = -me[6] * me[0] + me[2] * me[4];\n    te[6] = me[9] * me[4] - me[5] * me[8];\n    te[7] = -me[9] * me[0] + me[1] * me[8];\n    te[8] = me[5] * me[0] - me[1] * me[4];\n\n    const det = me[0] * te[0] + me[1] * te[3] + me[2] * te[6];\n\n    // no inverse\n    if (det === 0) {\n      const msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\n\n      if (throwOnInvertible || false) {\n        throw new Error(msg);\n      } else {\n        console.warn(msg);\n      }\n\n      this.identity();\n\n      return this;\n    }\n\n    this.multiplyScalar(1.0 / det);\n\n    return this;\n  }\n\n  // https://en.wikipedia.org/wiki/Determinant\n  getDeterminant() {\n    const m = this.elements;\n\n    /*\n     * |a b c| |d e f| |g h i|\n     */\n    const determinant =\n      m[0] * m[4] * m[8] + // +aei\n      m[1] * m[5] * m[6] + // +bfg\n      m[2] * m[3] * m[7] - // +cdh\n      m[2] * m[4] * m[6] - // -ceg\n      m[1] * m[3] * m[8] - // -bdi\n      m[0] * m[5] * m[7]; // -afh\n    return determinant;\n  }\n\n  transpose() {\n    let tmp: any;\n    const m = this.elements;\n\n    tmp = m[1];\n    m[1] = m[3];\n    m[3] = tmp;\n    tmp = m[2];\n    m[2] = m[6];\n    m[6] = tmp;\n    tmp = m[5];\n    m[5] = m[7];\n    m[7] = tmp;\n\n    return this;\n  }\n\n  clone() {\n    const te = this.elements;\n\n    return new Matrix3(\n      te[0],\n      te[3],\n      te[6],\n      te[1],\n      te[4],\n      te[7],\n      te[2],\n      te[5],\n      te[8]\n    );\n  }\n\n  getMatrix4() {\n    const m = this.elements;\n    return new Matrix4(\n      m[0],\n      m[3],\n      m[6],\n      0,\n      m[1],\n      m[4],\n      m[7],\n      0,\n      m[2],\n      m[5],\n      m[8],\n      0\n    );\n  }\n}\n\n/** @class \n *  @subcategory  Math\n * */ \nexport class Ray {\n  origin: Vector3;\n  direction: Vector3;\n\n  constructor(origin?: Vector3, direction?: Vector3) {\n    this.origin = origin !== undefined ? origin : new Vector3();\n    this.direction = direction !== undefined ? direction : new Vector3();\n  }\n\n  set(origin: Vector3, direction: Vector3) {\n    this.origin.copy(origin);\n    this.direction.copy(direction);\n\n    return this;\n  }\n\n  copy(ray: Ray) {\n    this.origin.copy(ray.origin);\n    this.direction.copy(ray.direction);\n\n    return this;\n  }\n\n  at(t: number, optionalTarget: Vector3) {\n    const result = optionalTarget || new Vector3();\n\n    return result.copy(this.direction).multiplyScalar(t).add(this.origin);\n  }\n\n  recast(t: any) {\n    const v1 = x;\n    this.origin.copy(this.at(t, v1));\n\n    return this;\n  }\n\n  closestPointToPoint(point: Vector3, optionalTarget: Vector3) {\n    const result = optionalTarget || new Vector3();\n    result.subVectors(point, this.origin);\n    const directionDistance = result.dot(this.direction);\n\n    // returns a point on this ray\n    return result\n      .copy(this.direction)\n      .multiplyScalar(directionDistance)\n      .add(this.origin);\n  }\n\n  distanceToPoint(point: Vector3) {\n    const v1 = x;\n    const directionDistance = v1\n      .subVectors(point, this.origin)\n      .dot(this.direction);\n    v1.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n    return v1.distanceTo(point);\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  isIntersectionCylinder() {}\n\n  isIntersectionSphere(sphere: Sphere) {\n    return this.distanceToPoint(sphere.center) <= sphere.radius;\n  }\n\n  isIntersectionPlane(plane: any) {\n    const denominator = plane.normal.dot(this.direction);\n\n    // plane and ray are not perpendicular\n    if (denominator !== 0) return true;\n\n    if (plane.distanceToPoint(this.origin) === 0) return true;\n\n    return false;\n  }\n\n  distanceToPlane(plane: any) {\n    const denominator = plane.normal.dot(this.direction);\n    if (denominator === 0) {\n      // line is coplanar\n      if (plane.distanceToPoint(this.origin) === 0) return 0;\n\n      // ray is parallel\n      return undefined;\n    }\n\n    const t = -(this.origin.dot(plane.normal) + plane.constant) / denominator;\n\n    return t;\n  }\n\n  intersectPlane(plane: any, optionalTarget: any) {\n    const t = this.distanceToPlane(plane);\n\n    if (t === undefined) return undefined;\n\n    return this.at(t, optionalTarget);\n  }\n\n  applyMatrix4(matrix4: any) {\n    this.direction.add(this.origin).applyMatrix4(matrix4);\n    this.origin.applyMatrix4(matrix4);\n    this.direction.sub(this.origin);\n\n    return this;\n  }\n\n  clone() {\n    return new Ray().copy(this);\n  }\n}\n","/*\n * math-like functionality\n * quaternion, vector, matrix\n */\nexport function clamp(x: number, min: number, max: number) {\n  return Math.min(Math.max(x, min), max);\n}","// return conversion matrix given crystal unit cell parameters\n\nimport { Matrix3 } from \"../math\";\n\n/**\n *\n * @param {number} a\n * @param {number} b\n * @param {number} c\n * @param {number} alpha\n * @param {number} beta\n * @param {number} gamma\n * @returns {Matrix3}\n */\nexport function conversionMatrix3(\n  a: number,\n  b: number,\n  c: number,\n  alpha: number,\n  beta: number,\n  gamma: number\n) {\n  // Convert to radians\n  alpha = (alpha * Math.PI) / 180;\n  beta = (beta * Math.PI) / 180;\n  gamma = (gamma * Math.PI) / 180;\n  const sqr = (x: number) => {\n    return x*x\n  };\n  const cosAlpha = Math.cos(alpha);\n  const cosBeta = Math.cos(beta);\n  const cosGamma = Math.cos(gamma);\n  const sinGamma = Math.sin(gamma);\n  const conversionMatrix = new Matrix3(\n    a,\n    b * cosGamma,\n    c * cosBeta,\n    0,\n    b * sinGamma,\n    (c * (cosAlpha - cosBeta * cosGamma)) / sinGamma,\n    0,\n    0,\n    (c *\n      Math.sqrt(\n        1 -\n          sqr(cosAlpha) -\n          sqr(cosBeta) -\n          sqr(cosGamma) +\n          2 * cosAlpha * cosBeta * cosGamma\n      )) /\n      sinGamma\n  );\n  return conversionMatrix;\n}\n","const degreeToRadiansFactor = Math.PI / 180;\n\nexport function degToRad(deg: number) {\n  return deg * degreeToRadiansFactor;\n}","import { Material, LineBasicMaterial } from \"../materials\";\nimport type { Geometry } from \"../core\";\nimport { Object3D } from \"../core\";\n\nexport enum LineStyle {\n  LineStrip = 0,\n  LinePieces = 1,\n}\n\nexport class Line extends Object3D {\n  type: any;\n  geometry: Geometry;\n  material: Material;\n  constructor(\n    geometry: Geometry,\n    material: Material = new LineBasicMaterial({\n      color: Math.random() * 0xffffff,\n    }) as Material,\n    type: LineStyle = LineStyle.LineStrip\n  ) {\n    super();\n\n    this.geometry = geometry;\n    //TODO: update material and type to webgl\n    this.material = material;\n    this.type = type;\n  }\n\n  clone<T extends this>(\n    object = new Line(this.geometry, this.material, this.type) as T\n  ): T {\n    super.clone.call(this, object);\n    return object;\n  }\n}\n\n\n","import type { Material } from \"../materials\";\nimport type { Geometry } from \"../core\";\nimport { Object3D } from \"../core\";\n//Mesh Object\n/* @constructor */\nexport class Mesh extends Object3D {\n  geometry: Geometry;\n  material: Material;\n  constructor(\n    geometry: Geometry,\n    material: Material\n  ) {\n    super();\n    this.geometry = geometry;\n    this.material = material;\n  }\n\n  clone(object: Mesh): Mesh {\n    if (object === undefined) object = new Mesh(this.geometry, this.material);\n\n    super.clone.call(this, object);\n\n    return object;\n  }\n}\n","import { Material } from './../materials/Material';\nimport { SpriteMaterial } from '../materials';\nimport { Object3D } from \"../core\";\nimport { Vector3 } from '../math';\n//Sprite object\n/* @constructor */\nexport class Sprite extends Object3D {\n  rotation3d: Vector3;\n  _modelViewMatrix: any;\n  z?: number;\n  material?: Material;\n\n  constructor(material = new SpriteMaterial() as Material) {\n    super();\n    this.material = material as Material;\n    this.rotation3d = this.rotation as Vector3;\n    this.rotation = 0;\n  }\n\n  updateMatrix() {\n    this.matrix.setPosition(this.position);\n    this.rotation3d.set(0, 0, this.rotation);\n    this.matrix.setRotationFromEuler(this.rotation3d);\n\n    if (this.scale.x !== 1 || this.scale.y !== 1) this.matrix.scale(this.scale);\n    this.matrixWorldNeedsUpdate = true;\n  }\n\n  clone<T extends this>(object = new Sprite(this.material)): Sprite  {\n    Object3D.prototype.clone.call(this, object);\n    return object;\n  }\n}\n","import { uniforms } from './uniforms';\nimport { Shader } from '../../ShaderType';\nimport fragmentShader from './basic.frag';\nimport vertexShader from './basic.vert';\n\nexport const basic: Shader = {\n    vertexShader: vertexShader.replace(\"#define GLSLIFY 1\", \"\"),\n    fragmentShader: fragmentShader.replace(\"#define GLSLIFY 1\", \"\"),\n    uniforms\n}","import { Color } from \"../../../../colors\";\n\nexport const uniforms = {\n    opacity: { type: 'f', value: 1.0 },\n    fogColor: { type: 'c', value: new Color(1.0, 1.0, 1.0) },\n    fogNear: { type: 'f', value: 1.0 },\n    fogFar: { type: 'f', value: 2000}\n}","import { Shader } from '../../ShaderType';\nimport { uniforms } from './uniforms';\nimport fragmentShader from './blur.frag';\nimport vertexShader from './blur.vert';\n\nexport const blur: Shader = {\n    fragmentShader: fragmentShader,\n    vertexShader: vertexShader,\n    uniforms\n}","\nexport const uniforms = {\n};\n","export * from \"./basic\"\nexport * from \"./instanced\"\nexport * from \"./lambert\"\nexport * from \"./lambertdouble\"\nexport * from \"./outline\"\nexport * from \"./screen\"\nexport * from \"./screenaa\"\nexport * from \"./sphereimposter\"\nexport * from \"./sphereimposteroutline\"\nexport * from \"./sprite\"\nexport * from \"./stickimposter\"\nexport * from \"./stickimposteroutline\"\nexport * from \"./volumetric\"\n\nimport { Shader } from '../ShaderType';\nimport { basic } from \"./basic\"\nimport { instanced } from \"./instanced\"\nimport { lambert } from \"./lambert\"\nimport { lambertdouble } from \"./lambertdouble\"\nimport { outline } from \"./outline\"\nimport { screen } from \"./screen\"\nimport { screenaa } from \"./screenaa\"\nimport { ssao } from \"./ssao\"\nimport { sphereimposter } from \"./sphereimposter\"\nimport { sphereimposteroutline } from \"./sphereimposteroutline\"\nimport { sprite } from \"./sprite\"\nimport { stickimposter } from \"./stickimposter\"\nimport { stickimposteroutline } from \"./stickimposteroutline\"\nimport { volumetric } from \"./volumetric\"\nimport {blur } from \"./blur\"\n\nexport const ShaderLib: Record<string, Shader> = {\n    basic,\n    blur,\n    instanced,\n    lambert,\n    lambertdouble,\n    outline,\n    screen,\n    screenaa,\n    ssao,\n    sphereimposter,\n    sphereimposteroutline,\n    sprite,\n    stickimposter,\n    stickimposteroutline,\n    volumetric,\n}","import { Shader } from '../../ShaderType';\nimport { uniforms } from './uniforms';\nimport fragmentShader from './instanced.frag';\nimport vertexShader from './instanced.vert';\n\n//import fs from \"fs\"\n//\n//const fragmentShader = fs.readFileSync(__dirname + \"./instanced.frag\", \"utf8\")\n//const vertexShader = fs.readFileSync(__dirname + \"./instanced.vert\", \"utf8\") \n\nexport const instanced: Shader = {\n    fragmentShader: fragmentShader.replace(\"#define GLSLIFY 1\", \"\"),\n    vertexShader: vertexShader.replace(\"#define GLSLIFY 1\", \"\"),\n    uniforms,\n}","import { Color } from \"../../../../colors\";\n\nexport const uniforms = {\n    opacity: { type: 'f', value: 1.0 },\n    fogColor: { type: 'c', value: new Color(1.0, 1.0, 1.0) },\n    fogNear: { type: 'f', value: 1.0 },\n    fogFar: { type: 'f', value: 2000},\n    directionalLightColor: { type: 'fv', value: [] as number[] },\n    directionalLightDirection: { type: 'fv', value: [] as number[] }\n}\n","import { Shader } from '../../ShaderType';\nimport { uniforms } from './uniforms';\nimport fragmentShader from './lambert.frag';\nimport vertexShader from './lambert.vert';\n//import fs from 'fs';\n//\n//const fragmentShader = fs.readFileSync(__dirname + '/lambert.frag', 'utf8');\n//const vertexShader = fs.readFileSync(__dirname + '/lambert.vert', 'utf8');\n\nexport const lambert: Shader = {\n    fragmentShader: fragmentShader.replace('#define GLSLIFY 1', ''),\n    vertexShader: vertexShader.replace('#define GLSLIFY 1', ''),\n    uniforms,\n}","import { Color } from \"../../../../colors\";\n\nexport const  uniforms = {\n    opacity: { type: 'f', value: 1.0 },\n    fogColor: { type: 'c', value: new Color(1.0, 1.0, 1.0) },\n    fogNear: { type: 'f', value: 1.0 },\n    fogFar: { type: 'f', value: 2000},\n    directionalLightColor: { type: 'fv', value: [] },\n    directionalLightDirection: { type: 'fv', value: [] },\n}","import { Shader } from '../../ShaderType';\nimport { uniforms } from './uniforms';\nimport fragmentShader from './lambertdouble.frag';\nimport vertexShader from './lambertdouble.vert';\n//import fs from 'fs';\n//\n//const fragmentShader = fs.readFileSync(__dirname + '/lambertdouble.frag', 'utf8');\n//const vertexShader = fs.readFileSync(__dirname + '/lambertdouble.vert', 'utf8');\n\nexport const lambertdouble: Shader = {\n    fragmentShader: fragmentShader.replace('#define GLSLIFY 1', ''),\n    vertexShader: vertexShader.replace('#define GLSLIFY 1', ''),\n    uniforms\n}","import { Color } from \"../../../../colors\";\n\nexport const uniforms = {\n    opacity: { type: 'f', value: 1.0 },\n    fogColor: { type: 'c', value: new Color(1.0, 1.0, 1.0) },\n    fogNear: { type: 'f', value: 1.0 },\n    fogFar: { type: 'f', value: 2000},\n    directionalLightColor: { type: 'fv', value: [] as number[] },\n    directionalLightDirection: { type: 'fv', value: [] as number[] }\n}\n","import { Shader } from '../../ShaderType';\nimport { uniforms } from \"./uniforms\";\nimport fragmentShader from \"./outline.frag\";\nimport vertexShader from \"./outline.vert\";\n\n//import fs from \"fs\";\n//\n//const fragmentShader = fs.readFileSync(__dirname + \"/outline.frag\", \"utf8\");\n//const vertexShader = fs.readFileSync(__dirname + \"/outline.vert\", \"utf8\");\n\nexport const outline: Shader = {\n  fragmentShader: fragmentShader.replace(\"#define GLSLIFY 1\", \"\"),\n  vertexShader: vertexShader.replace(\"#define GLSLIFY 1\", \"\"),\n  uniforms,\n};\n","import { Color } from \"../../../../colors\";\n\nexport const uniforms = {\n  opacity: { type: \"f\", value: 1.0 },\n  outlineColor: { type: \"c\", value: new Color(0.0, 0.0, 0.0) },\n  fogColor: { type: \"c\", value: new Color(1.0, 1.0, 1.0) },\n  fogNear: { type: \"f\", value: 1.0 },\n  fogFar: { type: \"f\", value: 2000 },\n  outlineWidth: { type: \"f\", value: 0.1 },\n  outlinePushback: { type: \"f\", value: 1.0 },\n};\n","import { Shader } from '../../ShaderType';\nimport { uniforms } from './uniforms';\nimport fragmentShader from './screen.frag';\nimport vertexShader from './screen.vert';\n\nexport const screen: Shader = {\n    fragmentShader: fragmentShader.replace(\"#define GLSLIFY 1\", \"\"),\n    vertexShader: vertexShader.replace(\"#define GLSLIFY 1\", \"\"),\n    uniforms\n}","export const uniforms = {}\n","import { Shader } from '../../ShaderType';\nimport { uniforms } from \"./uniforms\"\nimport fragmentShader from \"./screenaa.frag\"\nimport vertexShader from \"./screenaa.vert\"\n\n\n//import fs from \"fs\"\n//\n//const fragmentShader = fs.readFileSync(__dirname + \"/screenaa.frag\", \"utf8\")\n//const vertexShader = fs.readFileSync(__dirname + \"/screenaa.vert\", \"utf8\")\n\nexport const screenaa: Shader = {\n    fragmentShader: fragmentShader.replace(\"#define GLSLIFY 1\", \"\"),\n    vertexShader: vertexShader.replace(\"#define GLSLIFY 1\", \"\"),\n    uniforms\n}\n","export const uniforms = {}\n","import { uniforms } from './uniforms';\nimport { Shader } from '../../ShaderType';\nimport fragmentShader from './sphereimposter.frag';\nimport vertexShader from './sphereimposter.vert';\n\n//import fs from \"fs\"\n//\n//const fragmentShader = fs.readFileSync(__dirname + \"./sphereimposter.frag\", \"utf8\");\n//const vertexShader = fs.readFileSync(__dirname + \"./sphereimposter.vert\", \"utf8\");\n\n\nexport const sphereimposter: Shader = {\n    vertexShader: vertexShader.replace(\"#define GLSLIFY 1\", \"\"),\n    fragmentShader: fragmentShader.replace(\"#define GLSLIFY 1\", \"\"),\n    uniforms\n}","import { Color } from \"../../../../colors\";\n\nexport const uniforms = {\n    opacity: { type: 'f', value: 1.0 },\n    fogColor: { type: 'c', value: new Color(1.0, 1.0, 1.0) },\n    fogNear: { type: 'f', value: 1.0 },\n    fogFar: { type: 'f', value: 2000},\n    directionalLightColor: { type: 'fv', value: [] as number[] },\n    directionalLightDirection: { type: 'fv', value: [] as number[] }\n}\n","import { Shader } from '../../ShaderType';\nimport { uniforms } from \"./uniforms\";\nimport fragmentShader from \"./sphereimposteroutline.frag\";\nimport vertexShader from \"./sphereimposteroutline.vert\";\n//import fs from 'fs';\n//const fragmentShader = fs.readFileSync(__dirname + \"/sphereimposteroutline.frag\", \"utf8\");\n//const vertexShader = fs.readFileSync(__dirname + \"/sphereimposteroutline.vert\", \"utf8\");\n\nexport const sphereimposteroutline: Shader = {\n    fragmentShader: fragmentShader.replace(\"#define GLSLIFY 1\", \"\"),\n    vertexShader: vertexShader.replace(\"#define GLSLIFY 1\", \"\"),\n    uniforms\n}","import { Color } from \"../../../../colors\";\n\nexport const uniforms = {\n    opacity: { type: 'f', value: 1.0 },\n    outlineColor: { type: 'c', value: new Color(0.0, 0.0, 0.0) },\n    fogColor: { type: 'c', value: new Color(1.0, 1.0, 1.0) },\n    fogNear: { type: 'f', value: 1.0 },\n    fogFar: { type: 'f', value: 2000},\n    outlineWidth: { type: 'f', value: 0.1 },\n    outlinePushback: { type: 'f', value: 1.0 },\n}","import { Shader } from '../../ShaderType';\nimport { uniforms } from \"./uniforms\"\n//import { fragmentShader, vertexShader } from \"./shaders\"\nimport fragmentShader from \"./sprite.frag\"\nimport vertexShader from \"./sprite.vert\"\n\n\n//const fragmentShader = fs.readFileSync(path.resove(__dirname, \"./sprite.frag\"), \"utf8\")\n//const vertexShader = fs.readFileSync(path.resove(__dirname, \"./sprite.vert\"), \"utf8\")\n\nexport const sprite: Shader = {\n    fragmentShader: fragmentShader.replace(\"#define GLSLIFY 1\", \"\"),\n    vertexShader: vertexShader.replace(\"#define GLSLIFY 1\", \"\"),\n    uniforms\n}","export const uniforms = {}","import { Shader } from '../../ShaderType';\nimport { uniforms } from './uniforms';\nimport fragmentShader from './ssao.frag';\nimport vertexShader from './ssao.vert';\n\nexport const ssao: Shader = {\n    fragmentShader: fragmentShader,\n    vertexShader: vertexShader,\n    uniforms\n}","import { Matrix4 } from \"WebGL/math\";\n\nexport const uniforms = {\n    total_strength: { type: 'f', value: 1.0 },\n    radius: { type: 'f', value: 5},    \n    projinv: { type: 'mat4', value: [] as Matrix4[] },\n\n};\n","import { Shader } from '../../ShaderType';\nimport { uniforms } from './uniforms';\nimport stickimposterFragmentShaderStart from './stickimposterFragmentShader.partial.frag';\nimport stickimposterFragmentShaderEnd from './stickimposter.partial.frag';\nimport vertexShader from './stickimposter.vert';\n\nconst fragmentShader = [stickimposterFragmentShaderStart, stickimposterFragmentShaderEnd].join('\\n');\n\nexport const stickimposter: Shader = {\n    fragmentShader: fragmentShader,\n    vertexShader: vertexShader,\n    uniforms\n}","import { Color } from \"../../../../colors\";\n\nexport const uniforms = {\n    opacity: { type: 'f', value: 1.0 },\n    fogColor: { type: 'c', value: new Color(1.0, 1.0, 1.0) },\n    fogNear: { type: 'f', value: 1.0 },\n    fogFar: { type: 'f', value: 2000},\n    directionalLightColor: { type: 'fv', value: [] as number[] },\n    directionalLightDirection: { type: 'fv', value: [] as number[] }\n}\n","import { Shader } from '../../ShaderType';\nimport { uniforms } from './uniforms';\nimport stickimposterFragmentShaderStart from \"../stickimposter/stickimposterFragmentShader.partial.frag\";\nimport vertexShader from \"./stickimposteroutline.vert\";\n\nconst fragmentShader = stickimposterFragmentShaderStart + 'gl_FragColor = vec4(color,1.0);}';\n\nexport const stickimposteroutline: Shader = {\n    fragmentShader: fragmentShader,\n    vertexShader: vertexShader,\n    uniforms\n}","import { Color } from \"../../../../colors\";\n\nexport const uniforms = {\n    opacity: { type: 'f', value: 1.0 },\n    fogColor: { type: 'c', value: new Color(1.0, 1.0, 1.0) },\n    fogNear: { type: 'f', value: 1.0 },\n    fogFar: { type: 'f', value: 2000},\n    outlineColor: { type: 'c', value: new Color(0.0, 0.0, 0.0) },\n    outlineWidth: { type: 'f', value: 0.1 },\n    outlinePushback: { type: 'f', value: 1.0 },\n}","import { uniforms } from \"./uniforms\";\nimport { Shader } from '../../ShaderType';\nimport fragmentShader from \"./volumetric.frag\";\nimport vertexShader from \"./volumetric.vert\";\n//import fs from \"fs\";\n//\n//const fragmentShader = fs.readFileSync(__dirname + \"/volumetric.frag\", \"utf8\");\n//const vertexShader = fs.readFileSync(__dirname + \"/volumetric.vert\", \"utf8\");\n\nexport const volumetric: Shader = {\n    fragmentShader: fragmentShader.replace(\"#define GLSLIFY 1\", \"\"),\n    vertexShader: vertexShader.replace(\"#define GLSLIFY 1\", \"\"),\n    uniforms\n}","import { Matrix4 } from \"WebGL/math\";\nimport { Color } from \"../../../../colors\";\n\nexport const uniforms = {\n    opacity: { type: 'f', value: 1.0 },\n    fogColor: { type: 'c', value: new Color(1.0, 1.0, 1.0) },\n    fogNear: { type: 'f', value: 1.0 },\n    fogFar: { type: 'f', value: 2000},\n    data: { type: 'i', value: 3 },\n    colormap: { type: 'i', value: 4 },\n    depthmap: { type: 'i', value: 5 },\n    step: { type: 'f', value: 1.0 }, //length of a step\n    maxdepth: {type: 'f',value: 100.0}, //how far to step along ray before stopping\n    subsamples: { type: 'f', value: 5.0}, //how many substeps to take\n    textmat: { type: 'mat4', value: [] as Matrix4[]  },\n    projinv: { type: 'mat4', value: [] as Matrix4[] },\n    transfermin: {type: 'f', value: -0.2 },\n    transfermax: {type: 'f', value: 0.2},\n}\n","import { Color } from \"../../../colors\";\n\nexport type Uniform = Record<any, { type?: unknown; value?: unknown }>\n\nexport function clone(\n  uniforms_src: Uniform\n) {\n  let uniforms_clone: Uniform = {};\n\n  for (const u in uniforms_src) {\n    uniforms_clone[u] = {};\n    uniforms_clone[u].type = uniforms_src[u].type;\n\n    var srcValue = uniforms_src[u].value;\n\n    if (srcValue instanceof Color) uniforms_clone[u].value = srcValue.clone();\n    else if (typeof srcValue === \"number\") uniforms_clone[u].value = srcValue;\n    else if (srcValue instanceof Array) uniforms_clone[u].value = [];\n    else\n      console.error(\n        \"Error copying shader uniforms from ShaderLib: unknown type for uniform\"\n      );\n  }\n\n  return uniforms_clone;\n}\n","import { clone } from \"./clone\"\n\nexport * from \"./clone\"\nexport const ShaderUtils = {\n    clone\n}","import type { Matrix4 } from '../math';\nimport { Vector3 } from '../math';\nlet vector = new Vector3()\n\n//Bounding cylinder for stick render\n/** @class \n *  @subcategory  Math\n * */ \nexport class Cylinder {\n  c1: Vector3\n  c2: Vector3\n  direction: Vector3\n  radius: number\n\n  constructor(c1:Vector3 = new Vector3(), c2:Vector3 = new Vector3(), radius:number = 0) {\n    this.c1 = c1;\n    this.c2 = c2;\n    this.radius = radius;\n    this.direction = new Vector3()\n      .subVectors(this.c2, this.c1)\n      .normalize();\n  }\n\n  copy(cylinder:Cylinder):Cylinder {\n    this.c1.copy(cylinder.c1);\n    this.c2.copy(cylinder.c2);\n    this.direction.copy(cylinder.direction);\n    this.radius = cylinder.radius;\n    return this;\n  }\n\n  lengthSq():number { \n    return vector.subVectors(this.c2, this.c1).lengthSq();\n  }\n\n  applyMatrix4(matrix:Matrix4):Cylinder {\n    this.direction.add(this.c1).applyMatrix4(matrix);\n    this.c1.applyMatrix4(matrix);\n    this.c2.applyMatrix4(matrix);\n    this.direction.sub(this.c1).normalize();\n    this.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n    return this;\n  }\n}\n","import { Matrix4 } from '../math';\nimport { Vector3, XYZ } from '../math';\n//Intersection sphere and box shapes.\n\n//Intersection sphere for sphere, stick render\n/** @class \n *  @subcategory  Math\n * */ \nexport class Sphere {\n  center: Vector3\n  radius: number\n  box?: any;\n\n  constructor(center: XYZ = {x:0,y:0,z:0}, radius = 0) {\n    this.center = new Vector3(center.x,center.y,center.z);\n    this.radius = radius;\n  }\n\n  set(center: Vector3, radius: number): Sphere {\n    this.center.copy(center);\n    this.radius = radius;\n    return this;\n  }\n\n  copy(sphere: Sphere): Sphere {\n    this.center.copy(sphere.center);\n    this.radius = sphere.radius;\n    return this;\n  }\n\n  applyMatrix4(matrix: Matrix4): Sphere {\n    this.center.applyMatrix4(matrix);\n    this.radius = this.radius * matrix.getMaxScaleOnAxis();\n    return this;\n  }\n\n  translate(offset: Vector3): Sphere {\n    this.center.add(offset);\n    return this;\n  }\n\n  equals(sphere: Sphere): boolean {\n    return sphere.center.equals(this.center) && sphere.radius === this.radius;\n  }\n\n  clone(): Sphere {\n    return new Sphere().copy(this);\n  }\n}\n","import type { Matrix4 } from \"../math\";\nimport { Vector3 } from \"../math\";\n\nconst v1 = new Vector3();\n\n\n/**   plane specified by three points\n\n *  @class \n *  @subcategory  Math\n *  \n * \n */ \nexport class Triangle {\n  a: Vector3;\n  b: Vector3;\n  c: Vector3;\n\n  constructor(a = new Vector3(), b = new Vector3(), c = new Vector3()) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n  }\n\n  copy(triangle: Triangle): Triangle {\n    this.a.copy(triangle.a);\n    this.b.copy(triangle.b);\n    this.c.copy(triangle.c);\n\n    return this;\n  }\n\n  applyMatrix4(matrix: Matrix4): Triangle {\n    this.a.applyMatrix4(matrix);\n    this.b.applyMatrix4(matrix);\n    this.c.applyMatrix4(matrix);\n\n    return this;\n  }\n\n  getNormal(): Vector3 {\n    var norm = this.a.clone();\n    norm.sub(this.b);\n    v1.subVectors(this.c, this.b);\n\n    norm.cross(v1);\n    norm.normalize();\n\n    return norm;\n  }\n}\n","//auto-initialization\n\nimport { GLViewer, createViewer } from \"./GLViewer\";\nimport { SurfaceType } from \"./ProteinSurface4\";\nimport { get, getbin, specStringToObject } from \"./utilities\";\nimport { CC } from \"./colors\";\n\nexport var autoinit = false;\nexport var processing_autoinit = false;\n\n/**\n * Contains a dictionary of embedded viewers created from HTML elements\n * with a the viewer_3Dmoljs css class indexed by their id (or numerically\n * if they do not have an id).\n*/\nexport var viewers: any = {};\n\n//Create embedded viewer from HTML attributes if true\n//viewer and callback are used by the testing harness\nexport function autoload(viewer?: any, callback?: (arg0: any) => void) {\n    var i: string | number, dataname: string, type: string;\n    if (document.querySelector(\".viewer_3Dmoljs\") != null)\n        autoinit = true;\n\n    if (autoinit) {\n        processing_autoinit = true;\n        viewer = (viewer != undefined) ? viewer : null;\n        var nviewers = 0;\n        document.querySelectorAll<HTMLInputElement>(\".viewer_3Dmoljs\").forEach(viewerdiv => {\n            var datauri = [];\n            var datatypes = [];\n            var uri = '';\n\n            if (viewerdiv.style.position == 'static') {\n                //slight hack - canvas needs this element to be positioned\n                viewerdiv.style.position = 'relative';\n            }\n\n            var UI:any = null;\n\n            type = null;\n            if (viewerdiv.dataset.pdb) {\n                datauri.push(\"https://files.rcsb.org/view/\" + viewerdiv.dataset.pdb + \".pdb\");\n                datatypes.push(\"pdb\");\n            } else if (viewerdiv.dataset.cid) {\n                //this doesn't actually work since pubchem does have CORS enabled\n                datatypes.push(\"sdf\");\n                datauri.push(\"https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/\" + viewerdiv.dataset.cid +\n                    \"/SDF?record_type=3d\");\n            }\n            else if (viewerdiv.dataset.href || viewerdiv.dataset.url) {\n                if (viewerdiv.dataset.href)\n                    uri = viewerdiv.dataset.href;\n                else\n                    uri = viewerdiv.dataset.url;\n                datauri.push(uri);\n                type = uri.substring(uri.lastIndexOf('.') + 1);\n                if(type == 'gz') {\n                    let pos = uri.substring(0,uri.lastIndexOf('.')).lastIndexOf('.');\n                    type = uri.substring(pos+1);\n                }\n                datatypes.push(type);\n\n                var molName = uri.substring(uri.lastIndexOf('/') + 1, uri.lastIndexOf('.'));\n                if (molName == '/')\n                    molName = uri.substring(uri.lastIndexOf('/') + 1);\n\n                viewerdiv.dataset[datatypes[datatypes.length - 1]] = molName;\n            }\n\n            let divdata = viewerdiv.dataset;\n            for (i in divdata) {\n                if ((i.substring(0, 3) === \"pdb\" && (i !== \"pdb\"))) {\n                    datauri.push(\"https://files.rcsb.org/view/\" + divdata[i] + \".pdb\");\n                    datatypes.push('pdb');\n\n                } else if (i.substring(0, 4) === \"href\" && (i !== \"href\")) {\n                    uri = divdata[i];\n                    datauri.push(uri);\n                    datatypes.push(uri.substring(uri.lastIndexOf('.') + 1));\n                } else if (i.substring(0, 3) === \"cid\" && (i !== \"cid\")) {\n                    datauri.push(\"https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/\" + divdata[i] + \"/SDF?record_type=3d\");\n                    datatypes.push('sdf');\n                }\n            }\n            var options = {};\n            if (viewerdiv.dataset.options)\n                options = specStringToObject(viewerdiv.dataset.options);\n\n            //note that data tags must be lowercase\n            var bgcolor = CC.color(viewerdiv.dataset.backgroundcolor);\n            var bgalpha: string | number = viewerdiv.dataset.backgroundalpha;\n            bgalpha = (bgalpha == undefined) ? 1.0 : parseFloat(bgalpha);\n            var style = { line: {} };\n            if (viewerdiv.dataset.style) style = specStringToObject(viewerdiv.dataset.style);\n            var select = {};\n            if (viewerdiv.dataset.select) select = specStringToObject(viewerdiv.dataset.select);\n            var selectstylelist = [];\n            var surfaces = [];\n            var labels = [];\n            var zoomto = {};\n            var spin = null;\n            var d = viewerdiv.dataset;\n\n            //let users specify individual but matching select/style/surface tags, eg.\n            //data-select1 data-style1\n            var stylere = /style(.+)/;\n            var surfre = /surface(.*)/;\n            var reslabre = /labelres(.*)/;\n            var keys = [];\n            for (dataname in d) {\n                if (Object.prototype.hasOwnProperty.call(d, dataname)) {\n                    keys.push(dataname);\n                }\n            }\n            keys.sort();\n            for (i = 0; i < keys.length; i++) {\n                dataname = keys[i];\n                var m = stylere.exec(dataname);\n                var selname: string, newsel: any, styleobj: any;\n                if (m) {\n                    selname = \"select\" + m[1];\n                    newsel = specStringToObject(d[selname]);\n                    styleobj = specStringToObject(d[dataname]);\n                    selectstylelist.push([newsel, styleobj]);\n                }\n                m = surfre.exec(dataname);\n                if (m) {\n                    selname = \"select\" + m[1];\n                    newsel = specStringToObject(d[selname]);\n                    styleobj = specStringToObject(d[dataname]);\n                    surfaces.push([newsel, styleobj]);\n                }\n                m = reslabre.exec(dataname);\n                if (m) {\n                    selname = \"select\" + m[1];\n                    newsel = specStringToObject(d[selname]);\n                    styleobj = specStringToObject(d[dataname]);\n                    labels.push([newsel, styleobj]);\n                }\n                if (dataname == \"zoomto\") {\n                    zoomto = specStringToObject(d[dataname]);\n                }\n                if (dataname == \"spin\") {\n                    spin = specStringToObject(d[dataname]);\n                }\n            }\n\n            //apply all the selections/styles parsed out above to the passed viewer\n            var applyStyles = function (glviewer: GLViewer) {\n                glviewer.setStyle(select, style);\n\n                if (UI) {\n                    UI.createSelectionAndStyle(select, style);\n                }\n\n                for (i = 0; i < selectstylelist.length; i++) {\n                    let sel = selectstylelist[i][0] || {};\n                    let sty = selectstylelist[i][1] || { \"line\": {} };\n                    glviewer.setStyle(sel, sty);\n                    if (UI) {\n                        UI.createSelectionAndStyle(select, style);\n                    }\n                }\n                for (i = 0; i < surfaces.length; i++) {\n                    let sel = surfaces[i][0] || {};\n                    let sty = surfaces[i][1] || {};\n                    let viewer = glviewer;\n\n                    if (UI) {\n                        viewer.addSurface(SurfaceType.VDW, sty, sel, sel).then((surfid: any) => {\n                            UI.loadSurface(\"VDW\", sel, sty, surfid);\n                        });\n                    }\n                    else {\n                        glviewer.addSurface(SurfaceType.VDW, sty, sel, sel);\n                    }\n\n                }\n                for (i = 0; i < labels.length; i++) {\n                    let sel = labels[i][0] || {};\n                    let sty = labels[i][1] || {};\n                    glviewer.addResLabels(sel, sty);\n                }\n\n                glviewer.render();\n                glviewer.zoomTo(zoomto);\n\n                if (spin) {\n                    glviewer.spin(spin.axis, spin.speed);\n                }\n            };\n\n            let glviewer = viewer;\n            try {\n                var config: any = specStringToObject(viewerdiv.dataset.config) || {};\n                if (config.backgroundColor === undefined) config.backgroundColor = bgcolor;\n                if (config.backgroundAlpha === undefined) config.backgroundAlpha = bgalpha;\n                if (glviewer == null) {\n                    glviewer = viewers[viewerdiv.id || nviewers++] = createViewer(viewerdiv, config);\n                } else {\n                    glviewer.setBackgroundColor(bgcolor, bgalpha);\n                    glviewer.setConfig(config);\n                    if (UI) \n                        UI.initiateUI();\n                }\n\n                if(viewerdiv.dataset.ui && $3Dmol.StateManager) {\n                    UI = new $3Dmol.StateManager(glviewer); // Creates the UI state management tool\n                }\n            } catch (error) {\n                console.log(error);\n                //for autoload, provide a useful error message\n                viewerdiv.textContent = \"WebGL appears to be disabled.\";\n            }\n\n            if (datauri.length != 0) {\n                //load multiple data elements in serial\n                let i = 0;\n                let process = ((viewerdiv, glviewer) => function (moldata: any) {\n                    //add moldata to viewer and load next model\n                    uri = datauri[i]; //this is where the moldata came from\n                    var type = viewerdiv.dataset.type || viewerdiv.dataset.datatype || datatypes[i];\n                    glviewer.addModel(moldata, type, options);\n                    if (UI) {\n                        var modelName = viewerdiv.dataset[datatypes[i]];\n                        UI.setModelTitle(modelName);\n                    }\n                    i +=1;\n                    if (i < datauri.length) {\n                        get(datauri[i]).then(process);\n                    }\n                    else {\n                        // or finalize if this is the last model\n                        applyStyles(glviewer);\n                        if (viewerdiv.dataset.callback) {\n                            //evaluate javascript in the string, if it resolves to a function,\n                            //call it with the viewer\n                            /*jshint -W061 */ var runres = eval(viewerdiv.dataset.callback);\n                            if (typeof (runres) == 'function') {\n                                runres(glviewer);\n                            }\n                        }\n                        processing_autoinit = false;\n                        if (callback) callback(glviewer);\n                    }\n                })(viewerdiv,glviewer);\n\n                if(type && type.endsWith('gz')) {\n                    getbin(datauri[0]).then(process);\n                } else {\n                    get(datauri[0]).then(process);\n                }\n            }\n            else {\n\n                if (viewerdiv.dataset.element) {\n                    var moldataid = \"#\" + viewerdiv.dataset.element;\n                    var molelem = document.querySelector(moldataid);\n                    var moldata = molelem ? molelem.textContent : \"\";\n                    type = viewerdiv.dataset.type || viewerdiv.dataset.datatype;\n                    glviewer.addModel(moldata, type, options);\n                }\n\n                applyStyles(glviewer);\n                if (viewerdiv.dataset.callback) {\n                    //evaluate javascript in the string, if it resolves to a function,\n                    //call it with the viewer\n                    /*jshint -W061 */ var runres = eval(viewerdiv.dataset.callback);\n                    if (typeof (runres) == 'function') {\n                        runres(glviewer);\n                    }\n                }\n                processing_autoinit = false;\n                if (callback)\n                    callback(glviewer);\n            }\n        });\n    }\n};\n\n\n\ndocument.onreadystatechange = () => {\n    if (document.readyState === \"complete\") {\n        autoload();\n    }\n};\n","import { GradientType } from \"./Gradient\";\n\n/* @interface\n *\n */\nexport interface Colored {\n  r: number;\n  g: number;\n  b: number;\n  a?: number;\n}\n\nexport type ColorConstructorArg = number | Color | Colored | undefined;\n\n\n/**\n * @class\n   *\n   * @param r red 8bit number or numeric value of full color\n   * @param g green 8bit number\n   * @param b blue 8bit number\n   */\n\nexport class Color implements Colored {\n  r: number = 0.0;\n  g: number = 0.0;\n  b: number = 0.0;\n\n\n  constructor(r?: ColorConstructorArg, g?: number, b?: number) {\n    if (arguments.length > 1 && typeof r === \"number\") {\n      this.r = r || 0.0;\n      this.g = g || 0.0;\n      this.b = b || 0.0;\n\n      return this;\n    }\n\n    return this.set(r || 0.0);\n  }\n\n  set<T extends Colored>(val: Color | number | T): Color {\n    if (val instanceof Color) return val.clone();\n    else if (typeof val === \"number\") this.setHex(val);\n    else if (typeof val === \"object\") {\n      this.r = val?.r || 0.0;\n      this.g = val?.g || 0.0;\n      this.b = val?.b || 0.0;\n    }\n    return this;\n  }\n\n  setHex(hex: number): Color {\n    hex = Math.floor(hex);\n\n    this.r = ((hex >> 16) & 255) / 255;\n    this.g = ((hex >> 8) & 255) / 255;\n    this.b = (hex & 255) / 255;\n\n    return this;\n  }\n\n  getHex(): number {\n    var R = Math.round(this.r * 255);\n    var G = Math.round(this.g * 255);\n    var B = Math.round(this.b * 255);\n    return (R << 16) | (G << 8) | B;\n  }\n\n  clone(): Color {\n    return new Color(this.r, this.g, this.b);\n  }\n\n  copy(color: Color): Color {\n    this.r = color.r;\n    this.g = color.g;\n    this.b = color.b;\n\n    return this;\n  }\n\n  //return object that represents color components from 0 to 255\n  scaled<T extends Colored>(): Colored {\n    var ret: Partial<T> = {};\n    ret.r = Math.round(this.r * 255);\n    ret.g = Math.round(this.g * 255);\n    ret.b = Math.round(this.b * 255);\n    ret.a = 1.0;\n    return ret as T;\n  }\n}\n\n// in an attempt to reduce memory overhead, cache all $3Dmol.Colors\n// this makes things a little faster\nexport class CC {\n  static rgbRegEx =\n    /rgb(a?)\\(\\s*([^ ,\\)\\t]+)\\s*,\\s*([^ ,\\)\\t]+)\\s*,\\s*([^ ,\\)\\t]+)/i;\n  static cache: Record<number, Color> = { 0: new Color(0) };\n  static color(hex: undefined): Color;\n  static color(hex: number): Color;\n  static color(hex: string): Color;\n  static color(hex: number[]): Color[];\n  static color(hex: Color): Color;\n  static color(hex: ColorSpec): Color;\n  static color(hex: ColorSpec[]): Color[];\n  static color(hex: ColorSpec|ColorSpec[]): Color|Color[];\n  static color(hex?: unknown): unknown {\n    // Undefined values default to black\n    if (!hex) return CC.cache[0];\n    //noop\n    if ( hex instanceof Color ) {\n      return hex;\n    }\n    // cache hits\n    if (typeof hex === \"number\" && typeof CC.cache[hex] !== \"undefined\")\n      return CC.cache[hex];\n\n    // arrays\n    if (hex && Array.isArray(hex))\n      // parse elements recursively\n      return hex.map(CC.color as (hex: number) => Color);\n\n    // numbers and hex strings\n    let hexval = CC.getHex(hex as (string | number));\n    let c = new Color(hexval);\n    CC.cache[hexval] = c;\n    return c;\n  }\n\n  static getHex(hex: Array<string | number>): number[];\n  static getHex(hex: string | number): number;\n  static getHex(hex: unknown): unknown {\n    if (Array.isArray(hex)) return hex.map(CC.getHex) as number[];\n    if (typeof hex === \"string\") {\n      let hexs: string = hex as string;\n      if (!isNaN(parseInt(hexs))) return parseInt(hexs);\n      hexs = hexs.trim();\n\n      if (hexs.length == 4 && hexs[0] == \"#\") {\n        hexs = \"#\" + hexs[1] + hexs[1] + hexs[2] + hexs[2] + hexs[3] + hexs[3]; //expand to full hex number\n      }\n\n      if (hexs.length == 7 && hexs[0] == \"#\") {\n        return parseInt(hexs.substring(1), 16);\n      }\n\n      let m = CC.rgbRegEx.exec(hexs);\n      if (m) {\n        if (m[1] != \"\") {\n          console.log(\n            \"WARNING: Opacity value in rgba ignored.  Specify separately as opacity attribute.\"\n          );\n        }\n        let ret = 0;\n        for (let i = 2; i < 5; i++) {\n          ret *= 256;\n          let val = m[i].endsWith(\"%\")\n            ? (255 * parseFloat(m[i])) / 100\n            : parseFloat(m[i]);\n          ret += Math.round(val);\n        }\n        return ret;\n      }\n      return (window as any)?.$3Dmol?.htmlColors[hex.toLowerCase()] || 0x000000;\n    }\n    return hex as number;\n  }\n}\n\n\nexport const htmlColors: Record<string, ColorSpec> = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgrey: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  grey: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgrey: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32,\n};\n\n/**\n * Color representation. A hex number, html color name, or object with r/g/b properties\n */\nexport type ColorSpec =  number | string | Colored;\n\n/**\n*  Colorscheme specification.\n*  @see builtinColorSchemes\n*/\nexport type ColorschemeSpec = string | {\n  gradient?: GradientType|string;\n  min?: number;\n  max?: number;\n  /**  {AtomSpec} property to use for gradient calculation.  E.g., 'b' for temperature factors of a PDB. */\n  prop?: string;\n  /** mid point value for gradient (for rwb) */\n  mid?: number;\n  /** Custom colors for gradient (for {@link CustomLinear}) */\n  colors?: Array<ColorSpec>;\n  /** map of a certain {@link AtomSpec} property to a color of the form `{'prop': 'elem', map:elementColors.greenCarbon}` Allows the user to provide a mapping of elements to colors to the colorscheme.  This can be done with any properties, and not just 'elem'.\n */\n  map?: Record<string, unknown>\n};\n\n/** Preset secondary structure color scheme\n * @struct\n */\nexport const ssColors = {\n  //names are in helix-sheet-coil order\n  pyMol: { h: 0xff0000, s: 0xffff00, c: 0x00ff00 },\n  Jmol: { h: 0xff0080, s: 0xffc800, c: 0xffffff },\n};\n\nconst rasmol: Record<string, ColorSpec> = {\n  H: 0xffffff,\n  He: 0xffc0cb,\n  HE: 0xffc0cb,\n  Li: 0xb22222,\n  LI: 0xb22222,\n  B: 0x00ff00,\n  C: 0xc8c8c8,\n  N: 0x8f8fff,\n  O: 0xf00000,\n  F: 0xdaa520,\n  Na: 0x0000ff,\n  NA: 0x0000ff,\n  Mg: 0x228b22,\n  MG: 0x228b22,\n  Al: 0x808090,\n  AL: 0x808090,\n  Si: 0xdaa520,\n  SI: 0xdaa520,\n  P: 0xffa500,\n  S: 0xffc832,\n  Cl: 0x00ff00,\n  CL: 0x00ff00,\n  Ca: 0x808090,\n  CA: 0x808090,\n  Ti: 0x808090,\n  TI: 0x808090,\n  Cr: 0x808090,\n  CR: 0x808090,\n  Mn: 0x808090,\n  MN: 0x808090,\n  Fe: 0xffa500,\n  FE: 0xffa500,\n  Ni: 0xa52a2a,\n  NI: 0xa52a2a,\n  Cu: 0xa52a2a,\n  CU: 0xa52a2a,\n  Zn: 0xa52a2a,\n  ZN: 0xa52a2a,\n  Br: 0xa52a2a,\n  BR: 0xa52a2a,\n  Ag: 0x808090,\n  AG: 0x808090,\n  I: 0xa020f0,\n  Ba: 0xffa500,\n  BA: 0xffa500,\n  Au: 0xdaa520,\n  AU: 0xdaa520,\n};\n\n/** Preset element coloring - from individual element colors to entire mappings (e.g. 'elementColors.Jmol' colors atoms with Jmol stylings)\n * @struct\n */\nexport const elementColors = {\n  defaultColor: 0xff1493,\n  /** Jmol-like element colors*/\n  Jmol: {\n    H: 0xffffff,\n    He: 0xd9ffff,\n    HE: 0xd9ffff,\n    Li: 0xcc80ff,\n    LI: 0xcc80ff,\n    Be: 0xc2ff00,\n    BE: 0xc2ff00,\n    B: 0xffb5b5,\n    C: 0x909090,\n    N: 0x3050f8,\n    O: 0xff0d0d,\n    F: 0x90e050,\n    Ne: 0xb3e3f5,\n    NE: 0xb3e3f5,\n    Na: 0xab5cf2,\n    NA: 0xab5cf2,\n    Mg: 0x8aff00,\n    MG: 0x8aff00,\n    Al: 0xbfa6a6,\n    AL: 0xbfa6a6,\n    Si: 0xf0c8a0,\n    SI: 0xf0c8a0,\n    P: 0xff8000,\n    S: 0xffff30,\n    Cl: 0x1ff01f,\n    CL: 0x1ff01f,\n    Ar: 0x80d1e3,\n    AR: 0x80d1e3,\n    K: 0x8f40d4,\n    Ca: 0x3dff00,\n    CA: 0x3dff00,\n    Sc: 0xe6e6e6,\n    SC: 0xe6e6e6,\n    Ti: 0xbfc2c7,\n    TI: 0xbfc2c7,\n    V: 0xa6a6ab,\n    Cr: 0x8a99c7,\n    CR: 0x8a99c7,\n    Mn: 0x9c7ac7,\n    MN: 0x9c7ac7,\n    Fe: 0xe06633,\n    FE: 0xe06633,\n    Co: 0xf090a0,\n    CO: 0xf090a0,\n    Ni: 0x50d050,\n    NI: 0x50d050,\n    Cu: 0xc88033,\n    CU: 0xc88033,\n    Zn: 0x7d80b0,\n    ZN: 0x7d80b0,\n    Ga: 0xc28f8f,\n    GA: 0xc28f8f,\n    Ge: 0x668f8f,\n    GE: 0x668f8f,\n    As: 0xbd80e3,\n    AS: 0xbd80e3,\n    Se: 0xffa100,\n    SE: 0xffa100,\n    Br: 0xa62929,\n    BR: 0xa62929,\n    Kr: 0x5cb8d1,\n    KR: 0x5cb8d1,\n    Rb: 0x702eb0,\n    RB: 0x702eb0,\n    Sr: 0x00ff00,\n    SR: 0x00ff00,\n    Y: 0x94ffff,\n    Zr: 0x94e0e0,\n    ZR: 0x94e0e0,\n    Nb: 0x73c2c9,\n    NB: 0x73c2c9,\n    Mo: 0x54b5b5,\n    MO: 0x54b5b5,\n    Tc: 0x3b9e9e,\n    TC: 0x3b9e9e,\n    Ru: 0x248f8f,\n    RU: 0x248f8f,\n    Rh: 0x0a7d8c,\n    RH: 0x0a7d8c,\n    Pd: 0x006985,\n    PD: 0x006985,\n    Ag: 0xc0c0c0,\n    AG: 0xc0c0c0,\n    Cd: 0xffd98f,\n    CD: 0xffd98f,\n    In: 0xa67573,\n    IN: 0xa67573,\n    Sn: 0x668080,\n    SN: 0x668080,\n    Sb: 0x9e63b5,\n    SB: 0x9e63b5,\n    Te: 0xd47a00,\n    TE: 0xd47a00,\n    I: 0x940094,\n    Xe: 0x429eb0,\n    XE: 0x429eb0,\n    Cs: 0x57178f,\n    CS: 0x57178f,\n    Ba: 0x00c900,\n    BA: 0x00c900,\n    La: 0x70d4ff,\n    LA: 0x70d4ff,\n    Ce: 0xffffc7,\n    CE: 0xffffc7,\n    Pr: 0xd9ffc7,\n    PR: 0xd9ffc7,\n    Nd: 0xc7ffc7,\n    ND: 0xc7ffc7,\n    Pm: 0xa3ffc7,\n    PM: 0xa3ffc7,\n    Sm: 0x8fffc7,\n    SM: 0x8fffc7,\n    Eu: 0x61ffc7,\n    EU: 0x61ffc7,\n    Gd: 0x45ffc7,\n    GD: 0x45ffc7,\n    Tb: 0x30ffc7,\n    TB: 0x30ffc7,\n    Dy: 0x1fffc7,\n    DY: 0x1fffc7,\n    Ho: 0x00ff9c,\n    HO: 0x00ff9c,\n    Er: 0x00e675,\n    ER: 0x00e675,\n    Tm: 0x00d452,\n    TM: 0x00d452,\n    Yb: 0x00bf38,\n    YB: 0x00bf38,\n    Lu: 0x00ab24,\n    LU: 0x00ab24,\n    Hf: 0x4dc2ff,\n    HF: 0x4dc2ff,\n    Ta: 0x4da6ff,\n    TA: 0x4da6ff,\n    W: 0x2194d6,\n    Re: 0x267dab,\n    RE: 0x267dab,\n    Os: 0x266696,\n    OS: 0x266696,\n    Ir: 0x175487,\n    IR: 0x175487,\n    Pt: 0xd0d0e0,\n    PT: 0xd0d0e0,\n    Au: 0xffd123,\n    AU: 0xffd123,\n    Hg: 0xb8b8d0,\n    HG: 0xb8b8d0,\n    Tl: 0xa6544d,\n    TL: 0xa6544d,\n    Pb: 0x575961,\n    PB: 0x575961,\n    Bi: 0x9e4fb5,\n    BI: 0x9e4fb5,\n    Po: 0xab5c00,\n    PO: 0xab5c00,\n    At: 0x754f45,\n    AT: 0x754f45,\n    Rn: 0x428296,\n    RN: 0x428296,\n    Fr: 0x420066,\n    FR: 0x420066,\n    Ra: 0x007d00,\n    RA: 0x007d00,\n    Ac: 0x70abfa,\n    AC: 0x70abfa,\n    Th: 0x00baff,\n    TH: 0x00baff,\n    Pa: 0x00a1ff,\n    PA: 0x00a1ff,\n    U: 0x008fff,\n    Np: 0x0080ff,\n    NP: 0x0080ff,\n    Pu: 0x006bff,\n    PU: 0x006bff,\n    Am: 0x545cf2,\n    AM: 0x545cf2,\n    Cm: 0x785ce3,\n    CM: 0x785ce3,\n    Bk: 0x8a4fe3,\n    BK: 0x8a4fe3,\n    Cf: 0xa136d4,\n    CF: 0xa136d4,\n    Es: 0xb31fd4,\n    ES: 0xb31fd4,\n    Fm: 0xb31fba,\n    FM: 0xb31fba,\n    Md: 0xb30da6,\n    MD: 0xb30da6,\n    No: 0xbd0d87,\n    NO: 0xbd0d87,\n    Lr: 0xc70066,\n    LR: 0xc70066,\n    Rf: 0xcc0059,\n    RF: 0xcc0059,\n    Db: 0xd1004f,\n    DB: 0xd1004f,\n    Sg: 0xd90045,\n    SG: 0xd90045,\n    Bh: 0xe00038,\n    BH: 0xe00038,\n    Hs: 0xe6002e,\n    HS: 0xe6002e,\n    Mt: 0xeb0026,\n    MT: 0xeb0026,\n  } as Record<string, ColorSpec>,\n  /** rasmol-like element colors */\n  rasmol,\n  defaultColors: {\n    ...rasmol,\n  } as Record<string, ColorSpec>,\n  greenCarbon: {\n    ...rasmol,\n    C: 0x00ff00,\n  } as Record<string, ColorSpec>,\n  cyanCarbon: {\n    ...rasmol,\n    C: 0x00ffff,\n  } as Record<string, ColorSpec>,\n  magentaCarbon: {\n    ...rasmol,\n    C: 0xff00ff,\n  } as Record<string, ColorSpec>,\n  yellowCarbon: {\n    ...rasmol,\n    C: 0xffff00,\n  } as Record<string, ColorSpec>,\n  whiteCarbon: {\n    ...rasmol,\n    C: 0xffffff,\n  } as Record<string, ColorSpec>,\n  orangeCarbon: {\n    ...rasmol,\n    C: 0xffa500,\n  } as Record<string, ColorSpec>,\n  purpleCarbon: {\n    ...rasmol,\n    C: 0x800080,\n  } as Record<string, ColorSpec>,\n  blueCarbon: {\n    ...rasmol,\n    C: 0x0000ff,\n  } as Record<string, ColorSpec>,\n};\n\nexport const residues = {\n  /** @property standard amino acid color scheme*/\n\n  amino: {\n    ALA: 0xc8c8c8,\n    ARG: 0x145aff,\n    ASN: 0x00dcdc,\n    ASP: 0xe60a0a,\n    CYS: 0xe6e600,\n    GLN: 0x00dcdc,\n    GLU: 0xe60a0a,\n    GLY: 0xebebeb,\n    HIS: 0x8282d2,\n    ILE: 0x0f820f,\n    LEU: 0x0f820f,\n    LYS: 0x145aff,\n    MET: 0xe6e600,\n    PHE: 0x3232aa,\n    PRO: 0xdc9682,\n    SER: 0xfa9600,\n    THR: 0xfa9600,\n    TRP: 0xb45ab4,\n    TYR: 0x3232aa,\n    VAL: 0x0f820f,\n    ASX: 0xff69b4,\n    GLX: 0xff69b4,\n  } as Record<string, ColorSpec>,\n\n  /** @property shapely amino acid color scheme*/\n  shapely: {\n    ALA: 0x8cff8c,\n    ARG: 0x00007c,\n    ASN: 0xff7c70,\n    ASP: 0xa00042,\n    CYS: 0xffff70,\n    GLN: 0xff4c4c,\n    GLU: 0x660000,\n    GLY: 0xffffff,\n    HIS: 0x7070ff,\n    ILE: 0x004c00,\n    LEU: 0x455e45,\n    LYS: 0x4747b8,\n    MET: 0xb8a042,\n    PHE: 0x534c52,\n    PRO: 0x525252,\n    SER: 0xff7042,\n    THR: 0xb84c00,\n    TRP: 0x4f4600,\n    TYR: 0x8c704c,\n    VAL: 0xff8cff,\n    ASX: 0xff00ff,\n    GLX: 0xff00ff,\n  } as Record<string, ColorSpec>,\n\n  /** @property nucleic acid color scheme*/\n  nucleic: {\n    A: 0xa0a0ff,\n    G: 0xff7070,\n    I: 0x80ffff,\n    C: 0xff8c4b,\n    T: 0xa0ffa0,\n    U: 0xff8080,\n  } as Record<string, ColorSpec>,\n};\n\nexport const chains = {\n  /** @property chain based standard color scheme */\n  atom: {\n    A: 0xc0d0ff,\n    B: 0xb0ffb0,\n    C: 0xffc0c8,\n    D: 0xffff80,\n    E: 0xffc0ff,\n    F: 0xb0f0f0,\n    G: 0xffd070,\n    H: 0xf08080,\n    I: 0xf5deb3,\n    J: 0x00bfff,\n    K: 0xcd5c5c,\n    L: 0x66cdaa,\n    M: 0x9acd32,\n    N: 0xee82ee,\n    O: 0x00ced1,\n    P: 0x00ff7f,\n    Q: 0x3cb371,\n    R: 0x00008b,\n    S: 0xbdb76b,\n    T: 0x006400,\n    U: 0x800000,\n    V: 0x808000,\n    W: 0x800080,\n    X: 0x008080,\n    Y: 0xb8860b,\n    Z: 0xb22222,\n  } as Record<string, ColorSpec>,\n\n  /** @property hetatm color scheme */\n  hetatm: {\n    A: 0x90a0cf,\n    B: 0x80cf98,\n    C: 0xcf90b0,\n    D: 0xcfcf70,\n    E: 0xcf90cf,\n    F: 0x80c0c0,\n    G: 0xcfa060,\n    H: 0xc05070,\n    I: 0xc5ae83,\n    J: 0x00a7cf,\n    K: 0xb54c4c,\n    L: 0x56b592,\n    M: 0x8ab52a,\n    N: 0xbe72be,\n    O: 0x00b6a1,\n    P: 0x00cf6f,\n    Q: 0x349b61,\n    R: 0x0000bb,\n    S: 0xa59f5b,\n    T: 0x009400,\n    U: 0xb00000,\n    V: 0xb0b000,\n    W: 0xb000b0,\n    X: 0x00b0b0,\n    Y: 0xe8b613,\n    Z: 0xc23232,\n  } as Record<string, ColorSpec>,\n};\n\n/**\n * built in color schemes\n * The user can pass these strings directly as the colorscheme\n * @prop ssPyMol - pymol secondary structure\n * @prop  ssJmol - jmol secondary structure\n   @prop Jmol - jmol element defaults\n   @prop amino - amino acid coloring\n   @prop shapely - amino acid coloring\n   @prop nucleic - nucleic acid coloring\n   @prop chain - color by chain\n   @prop rasmol - rasmol default element coloring\n   @prop default - default element coloring\n   @prop greenCarbon - default element coloring with green carbon\n   @prop cyanCarbon - default element coloring with cyan carbon\n   @prop magentaCarbon - default element coloring with magenta carbon\n   @prop purpleCarbon - default element coloring with purple carbon\n   @prop whiteCarbon - default element coloring with white carbon\n   @prop orangeCarbon - default element coloring with orange carbon\n   @prop yellowCarbon - default element coloring with yellow carbon\n   @prop blueCarbon - default element coloring with blue carbon\n   @prop chainHetatm - color chains\n *\n * @example window.$3Dmol.download(\"pdb:4UAA\",viewer,{},function(){\n *    viewer.setBackgroundColor(0xffffffff);\n *    var colorAsSnake = function(atom) {\n *      return atom.resi % 2 ? 'white': 'green'\n *    };\n *    viewer.setStyle( {chain:'A'}, { cartoon: {colorfunc: colorAsSnake }});\n *    viewer.setStyle( {chain:'B'}, { stick: {colorscheme: 'yellowCarbon'}});\n *    viewer.render();\n *  });\n  */\nexport const builtinColorSchemes = {\n  /** secondary structure pymol */\n  ssPyMol: { prop: \"ss\", map: ssColors.pyMol },\n  ssJmol: { prop: \"ss\", map: ssColors.Jmol },\n  Jmol: { prop: \"elem\", map: elementColors.Jmol },\n  amino: { prop: \"resn\", map: residues.amino },\n  shapely: { prop: \"resn\", map: residues.shapely },\n  nucleic: { prop: \"resn\", map: residues.nucleic },\n  chain: { prop: \"chain\", map: chains.atom },\n  rasmol: { prop: \"elem\", map: elementColors.rasmol },\n  default: { prop: \"elem\", map: elementColors.defaultColors },\n  greenCarbon: { prop: \"elem\", map: elementColors.greenCarbon },\n  chainHetatm: { prop: \"chain\", map: chains.hetatm },\n  cyanCarbon: { prop: \"elem\", map: elementColors.cyanCarbon },\n  magentaCarbon: { prop: \"elem\", map: elementColors.magentaCarbon },\n  purpleCarbon: { prop: \"elem\", map: elementColors.purpleCarbon },\n  whiteCarbon: { prop: \"elem\", map: elementColors.whiteCarbon },\n  orangeCarbon: { prop: \"elem\", map: elementColors.orangeCarbon },\n  yellowCarbon: { prop: \"elem\", map: elementColors.yellowCarbon },\n  blueCarbon: { prop: \"elem\", map: elementColors.blueCarbon },\n};\n","//glcartoon.js\n//This contains all the routines for rendering a cartoon given a set\n//of atoms with assigned secondary structure\n\nimport { Vector3 } from \"./WebGL/math\";\nimport { Triangle, Sphere } from \"./WebGL/shapes\";\nimport { MeshDoubleLambertMaterial, Mesh, Geometry, Material, Coloring } from \"./WebGL\";\nimport { Gradient } from \"./Gradient\";\nimport { CC, ColorSpec, ColorschemeSpec } from \"./colors\";\nimport { GLDraw } from \"./GLDraw\";\nimport { isNumeric, getColorFromStyle } from \"./utilities\";\n\n/**\n * A visualization of protein or nucleic acid secondary structure.  Applying this to other molecules will not show anything.\n  In nucleic acids, the base cylinders obtain their color from the  atom to which the cylinder is drawn, which is 'N1' for purines (resn: 'A', 'G', 'DA', 'DG') and \n  'N3' for pyrimidines (resn: 'C', 'U', 'DC', 'DT'). \n  The different nucleobases can therefore be distinguished as by setting the colors \n  of each of these atoms. The backbone color is set from the 'P' atoms ('O5' for the 5' terminus).\n\n * \n * @example $3Dmol.download(\"pdb:4ZD3\",viewer,{},function(){\n                  viewer.setBackgroundColor(0xffffffff);\n                  viewer.setViewStyle({style:\"outline\"});\n                  viewer.setStyle({},{cartoon:{}});\n                  viewer.render();\n              });\n */\nexport interface CartoonStyleSpec {\n    /** do not show  */\n    hidden?: boolean;\n    /** colorscheme to use on atoms; overrides color */\n    colorscheme?: ColorschemeSpec;    \n    /** strand color, may specify as 'spectrum' which will apply reversed gradient based on residue number */\n    color?: ColorSpec;\n    /**  Allows the user to provide a function for setting the colorschemes. */\n    colorfunc?: Function;    \n    /**  style of cartoon rendering (trace, oval, rectangle (default), parabola, edged) */\n    style?: string;\n    /**  whether to use constant strand width, disregarding\n    *       secondary structure; use thickness to adjust radius */\n    ribbon?: boolean;\n    /** whether to add arrows showing beta-sheet\n    *       directionality; does not apply to trace or ribbon */\n    arrows?: boolean;\n    /** whether to display alpha helices as simple cylinders;\n    *       does not apply to trace */\n    tubes?: boolean;\n    /** cartoon strand thickness, default is 0.4 */\n    thickness?: number;\n    /** cartoon strand width, default is secondary\n    *       structure-dependent; does not apply to trace or ribbon */\n    width?: number;\n    /** set opacity from 0-1; transparency is set per-chain\n    *       with a warning outputted in the event of ambiguity */\n    opacity?: number\n};\n\n// helper functions\n// Catmull-Rom subdivision\nexport function subdivide_spline(_points, DIV) { // points as Vector3\n    var ret = [];\n    var points = _points;\n    points = []; // Smoothing test\n    points.push(_points[0]);\n\n    var i, lim, size;\n    var p0, p1, p2, p3, v0, v1;\n\n    for (i = 1, lim = _points.length - 1; i < lim; i++) {\n        p1 = _points[i];\n        p2 = _points[i + 1];\n        if (p1.smoothen) {\n            var np = new Vector3((p1.x + p2.x) / 2,\n                (p1.y + p2.y) / 2, (p1.z + p2.z) / 2);\n            np.atom = p1.atom;\n            points.push(np);\n        }\n        else\n            points.push(p1);\n    }\n    points.push(_points[_points.length - 1]);\n\n    for (i = -1, size = points.length; i <= size - 3; i++) {\n        p0 = points[(i === -1) ? 0 : i];\n        p1 = points[i + 1];\n        p2 = points[i + 2];\n        p3 = points[(i === size - 3) ? size - 1 : i + 3];\n        v0 = new Vector3().subVectors(p2, p0).multiplyScalar(0.5);\n        v1 = new Vector3().subVectors(p3, p1).multiplyScalar(0.5);\n        if (p2.skip)\n            continue;\n\n        for (var j = 0; j < DIV; j++) {\n            var t = 1.0 / DIV * j;\n            var x = p1.x + t * v0.x + t * t *\n                (-3 * p1.x + 3 * p2.x - 2 * v0.x - v1.x) + t * t * t *\n                (2 * p1.x - 2 * p2.x + v0.x + v1.x);\n            var y = p1.y + t * v0.y + t * t *\n                (-3 * p1.y + 3 * p2.y - 2 * v0.y - v1.y) + t * t * t *\n                (2 * p1.y - 2 * p2.y + v0.y + v1.y);\n            var z = p1.z + t * v0.z + t * t *\n                (-3 * p1.z + 3 * p2.z - 2 * v0.z - v1.z) + t * t * t *\n                (2 * p1.z - 2 * p2.z + v0.z + v1.z);\n\n            var pt = new Vector3(x, y, z);\n            if (j < DIV / 2) {\n                pt.atom = p1.atom;\n            } else {\n                pt.atom = p2.atom;\n            }\n\n            ret.push(pt);\n        }\n    }\n    ret.push(points[points.length - 1]);\n    return ret;\n};\n\n\nconst coilWidth = 0.5;\nconst helixSheetWidth = 1.3;\nconst nucleicAcidWidth = 0.8;\nconst defaultThickness = 0.4;\nconst baseThickness    = 0.4;\n\nfunction drawThinStrip(geo: Geometry, p1, p2, colors) {\n\n    var offset, vertoffset;\n    var color, colori;\n\n    for (var i = 0, lim = p1.length; i < lim; i++) {\n\n        colori = Math.round(i * (colors.length - 1) / lim);\n        color = CC.color(colors[colori]);\n\n        var geoGroup = geo.updateGeoGroup(2);\n        var vertexArray = geoGroup.vertexArray;\n        var colorArray = geoGroup.colorArray;\n        var faceArray = geoGroup.faceArray;\n        offset = geoGroup.vertices;\n        vertoffset = offset * 3;\n\n        vertexArray[vertoffset] = p1[i].x;\n        vertexArray[vertoffset + 1] = p1[i].y;\n        vertexArray[vertoffset + 2] = p1[i].z;\n\n        vertexArray[vertoffset + 3] = p2[i].x;\n        vertexArray[vertoffset + 4] = p2[i].y;\n        vertexArray[vertoffset + 5] = p2[i].z;\n\n        for (var j = 0; j < 6; ++j) {\n            colorArray[vertoffset + 3 * j] = color.r;\n            colorArray[vertoffset + 1 + 3 * j] = color.g;\n            colorArray[vertoffset + 2 + 3 * j] = color.b;\n        }\n\n        if (i > 0) {\n            var faces = [offset, offset + 1, offset - 1, offset - 2];\n            var faceoffset = geoGroup.faceidx;\n\n            faceArray[faceoffset] = faces[0];\n            faceArray[faceoffset + 1] = faces[1];\n            faceArray[faceoffset + 2] = faces[3];\n            faceArray[faceoffset + 3] = faces[1];\n            faceArray[faceoffset + 4] = faces[2];\n            faceArray[faceoffset + 5] = faces[3];\n\n            geoGroup.faceidx += 6;\n        }\n\n        geoGroup.vertices += 2;\n    }\n\n};\n\nfunction drawShapeStrip(geo: Geometry, points, colors, div, thickness, opacity, shape) {\n\n    // points is a 2D array, dimensionality given by [num = cross-sectional\n    // resolution][len = length of strip]\n    var i, j, num, len;\n    num = points.length;\n    if (num < 2 || points[0].length < 2)\n        return;\n\n    for (i = 0; i < num; i++) { // spline to generate greater length-wise\n        // resolution\n        points[i] = subdivide_spline(points[i], div);\n    }\n    len = points[0].length;\n\n    if (!thickness) // if thickness is 0, we can use a smaller geometry than\n        // this function generates\n        return drawThinStrip(geo, points[0], points[num - 1], colors);\n\n    var axis, cs_shape, cs_bottom, cs_top, last_cs_bottom, last_cs_top;\n\n    // cache the available cross-sectional shapes\n    var cs_ellipse = [], cs_rectangle = [], cs_parabola = [];\n    for (j = 0; j < num; j++) {\n        cs_ellipse.push(0.25 + 1.5 *\n            Math.sqrt((num - 1) * j - Math.pow(j, 2)) / (num - 1));\n        cs_rectangle.push(0.5);\n        cs_parabola.push(2 * (Math.pow(j / num, 2) - j / num) + 0.6);\n    }\n\n    /*\n     * face_refs array is used to generate faces from vertexArray\n     * iteratively. As we move through each cross-sectional segment of\n     * points, we draw lateral faces backwards to the previous\n     * cross-sectional segment.\n     * \n     * To correctly identify the points needed to make each face we use this\n     * array as a lookup table for the relative indices of each needed point\n     * in the vertices array.\n     * \n     * 4 points are used to create 2 faces.\n     */\n\n    var face_refs = [];\n    for (j = 0; j < num * 2 - 1; j++) {\n        /*\n         * [curr vertex in curr cross-section, next vertex in curr\n         * cross-section, next vertex in prev cross-section, curr vertex in\n         * prev cross-section]\n         */\n        face_refs[j] = [j, j + 1, j + 1 - 2 * num, j - 2 * num];\n    }\n    // last face is different. easier to conceptualize this by drawing a\n    // diagram\n    face_refs[num * 2 - 1] = [j, j + 1 - 2 * num, j + 1 - 4 * num,\n        j - 2 * num];\n\n    var v_offset, va_offset, f_offset;\n    var currentAtom;\n    var color, colori;\n    var vertexArray, colorArray, faceArray, face;\n    let geoGroup = geo.updateGeoGroup();\n\n    for (i = 0; i < len; i++) {\n        let gnum = geo.groups;\n        let replicating = false;\n        geoGroup = geo.updateGeoGroup(2 * num); // ensure vertex capacity\n        if (gnum != geo.groups && i > 0) {\n            //we created a new geo - need to replicate vertices at edge \n            //(but not faces)\n            i = i - 1;\n            replicating = true;\n        }\n        colori = Math.round(i * (colors.length - 1) / len);\n        color = CC.color(colors[colori]);\n\n        last_cs_bottom = cs_bottom;\n        last_cs_top = cs_top;\n        cs_bottom = [];\n        cs_top = [];\n        axis = [];\n\n        if (points[0][i].atom !== undefined) // TODO better edge case\n        // handling\n        {\n            currentAtom = points[0][i].atom;\n            if (shape === \"oval\")\n                cs_shape = cs_ellipse;\n            else if (shape === \"rectangle\")\n                cs_shape = cs_rectangle;\n            else if (shape === \"parabola\")\n                cs_shape = cs_parabola;\n        }\n        if (!cs_shape)\n            cs_shape = cs_rectangle;\n\n        // calculate thickness at each width point, from cross-sectional\n        // shape\n        var toNext, toSide;\n        for (j = 0; j < num; j++) {\n            if (i < len - 1)\n                toNext = points[j][i + 1].clone().sub(points[j][i]);\n            else\n                toNext = points[j][i - 1].clone().sub(points[j][i])\n                    .negate();\n\n            if (j < num - 1)\n                toSide = points[j + 1][i].clone().sub(points[j][i]);\n            else\n                toSide = points[j - 1][i].clone().sub(points[j][i])\n                    .negate();\n\n            axis[j] = toSide.cross(toNext).normalize().multiplyScalar(\n                thickness * cs_shape[j]);\n        }\n\n        // generate vertices by applying cross-sectional shape thickness to\n        // input points\n        for (j = 0; j < num; j++)\n            cs_bottom[j] = points[j][i].clone().add(\n                axis[j].clone().negate());\n        for (j = 0; j < num; j++)\n            cs_top[j] = points[j][i].clone().add(axis[j]);\n\n        /*\n         * Until this point the vertices have been dealt with as\n         * Vector3() objects, but we need to serialize them into the\n         * geoGroup.vertexArray, where every three indices represents the\n         * next vertex. The colorArray is analogous.\n         * \n         * In the following for-loops, j iterates through VERTICES so we\n         * need to index them in vertexArray by 3*j + either 0, 1, or 2 for\n         * xyz or rgb component.\n         */\n\n        vertexArray = geoGroup.vertexArray;\n        colorArray = geoGroup.colorArray;\n        faceArray = geoGroup.faceArray;\n        v_offset = geoGroup.vertices;\n        va_offset = v_offset * 3; // in case geoGroup already contains\n        // vertices\n\n        // bottom edge of cross-section, vertices [0, num)\n        for (j = 0; j < num; j++) {\n            vertexArray[va_offset + 3 * j + 0] = cs_bottom[j].x;\n            vertexArray[va_offset + 3 * j + 1] = cs_bottom[j].y;\n            vertexArray[va_offset + 3 * j + 2] = cs_bottom[j].z;\n        }\n\n        // top edge of cross-section, vertices [num, 2*num)\n        // add these backwards, so that each cross-section's vertices are\n        // added sequentially to vertexArray\n        for (j = 0; j < num; j++) {\n            vertexArray[va_offset + 3 * j + 0 + 3 * num] = cs_top[num - 1 - j].x;\n            vertexArray[va_offset + 3 * j + 1 + 3 * num] = cs_top[num - 1 - j].y;\n            vertexArray[va_offset + 3 * j + 2 + 3 * num] = cs_top[num - 1 - j].z;\n        }\n\n        for (j = 0; j < 2 * num; ++j) {\n            colorArray[va_offset + 3 * j + 0] = color.r;\n            colorArray[va_offset + 3 * j + 1] = color.g;\n            colorArray[va_offset + 3 * j + 2] = color.b;\n        }\n\n        if (i > 0 && !replicating) {\n\n            for (j = 0; j < num * 2; j++) {\n\n                // get VERTEX indices of the 4 points of a rectangular face\n                // (as opposed to literal vertexArray indices)\n                face = [v_offset + face_refs[j][0],\n                v_offset + face_refs[j][1],\n                v_offset + face_refs[j][2],\n                v_offset + face_refs[j][3]];\n\n                f_offset = geoGroup.faceidx;\n\n                // need 2 triangles to draw a face between 4 points\n                faceArray[f_offset] = face[0];\n                faceArray[f_offset + 1] = face[1];\n                faceArray[f_offset + 2] = face[3];\n\n                faceArray[f_offset + 3] = face[1];\n                faceArray[f_offset + 4] = face[2];\n                faceArray[f_offset + 5] = face[3];\n\n                geoGroup.faceidx += 6;\n\n                // TODO implement clickable the right way. midpoints of\n                // strand between consecutive atoms\n            }\n\n            if (currentAtom.clickable || currentAtom.hoverable) {\n                var faces = [];\n\n                faces.push(new Triangle(last_cs_bottom[0],\n                    cs_bottom[0], cs_bottom[num - 1]));\n                faces.push(new Triangle(last_cs_bottom[0],\n                    cs_bottom[num - 1], last_cs_bottom[num - 1]));\n\n                faces.push(new Triangle(last_cs_bottom[num - 1],\n                    cs_bottom[num - 1], cs_top[num - 1]));\n                faces.push(new Triangle(last_cs_bottom[num - 1],\n                    cs_top[num - 1], last_cs_top[num - 1]));\n\n                faces.push(new Triangle(cs_top[0], last_cs_top[0],\n                    last_cs_top[num - 1]));\n                faces.push(new Triangle(cs_top[num - 1], cs_top[0],\n                    last_cs_top[num - 1]));\n\n                faces.push(new Triangle(cs_bottom[0],\n                    last_cs_bottom[0], last_cs_top[0]));\n                faces.push(new Triangle(cs_top[0], cs_bottom[0],\n                    last_cs_top[0]));\n\n                for (j in faces) {\n                    currentAtom.intersectionShape.triangle.push(faces[j]);\n                }\n            }\n        }\n\n        geoGroup.vertices += 2 * num;\n    }\n\n    // for terminal faces\n    vertexArray = geoGroup.vertexArray;\n    colorArray = geoGroup.colorArray;\n    faceArray = geoGroup.faceArray;\n    v_offset = geoGroup.vertices;\n    va_offset = v_offset * 3;\n    f_offset = geoGroup.faceidx;\n\n    for (i = 0; i < num - 1; i++) // \"rear\" face\n    {\n        face = [i, i + 1, 2 * num - 2 - i, 2 * num - 1 - i];\n\n        f_offset = geoGroup.faceidx;\n\n        faceArray[f_offset] = face[0];\n        faceArray[f_offset + 1] = face[1];\n        faceArray[f_offset + 2] = face[3];\n\n        faceArray[f_offset + 3] = face[1];\n        faceArray[f_offset + 4] = face[2];\n        faceArray[f_offset + 5] = face[3];\n\n        geoGroup.faceidx += 6;\n    }\n\n    for (i = 0; i < num - 1; i++) // \"front\" face\n    {\n        face = [v_offset - 1 - i, v_offset - 2 - i,\n        v_offset - 2 * num + i + 1, v_offset - 2 * num + i];\n\n        f_offset = geoGroup.faceidx;\n\n        faceArray[f_offset] = face[0];\n        faceArray[f_offset + 1] = face[1];\n        faceArray[f_offset + 2] = face[3];\n\n        faceArray[f_offset + 3] = face[1];\n        faceArray[f_offset + 4] = face[2];\n        faceArray[f_offset + 5] = face[3];\n\n        geoGroup.faceidx += 6;\n    }\n\n};\n\nfunction drawPlainStrip(geo, points, colors, div, thickness, opacity) {\n    if ((points.length) < 2)\n        return;\n\n    var p1, p2;\n    p1 = points[0];\n    p2 = points[points.length - 1];\n\n    p1 = subdivide_spline(p1, div);\n    p2 = subdivide_spline(p2, div);\n    if (!thickness)\n        return drawThinStrip(geo, p1, p2, colors);\n\n    // var vs = geo.vertices, fs = geo.faces;\n    var vs = [];\n    var axis, p1v, p2v, a1v, a2v;\n\n    var faces = [[0, 2, -6, -8], [-4, -2, 6, 4], [7, -1, -5, 3],\n    [-3, 5, 1, -7]];\n\n    var offset, vertoffset, faceoffset;\n    var color, colori;\n    var currentAtom, lastAtom;\n    var i, lim, j;\n    var face1, face2, face3;\n    var geoGroup, vertexArray, colorArray, faceArray;\n\n    for (i = 0, lim = p1.length; i < lim; i++) {\n\n        colori = Math.round(i * (colors.length - 1) / lim);\n        color = CC.color(colors[colori]);\n\n        vs.push(p1v = p1[i]); // 0\n        vs.push(p1v); // 1\n        vs.push(p2v = p2[i]); // 2\n        vs.push(p2v); // 3\n        if (i < lim - 1) {\n            var toNext = p1[i + 1].clone().sub(p1[i]);\n            var toSide = p2[i].clone().sub(p1[i]);\n            axis = toSide.cross(toNext).normalize().multiplyScalar(\n                thickness);\n        }\n        vs.push(a1v = p1[i].clone().add(axis)); // 4\n        vs.push(a1v); // 5\n        vs.push(a2v = p2[i].clone().add(axis)); // 6\n        vs.push(a2v); // 7\n\n        if (p1v.atom !== undefined)\n            currentAtom = p1v.atom;\n\n        geoGroup = geo.updateGeoGroup(8);\n        vertexArray = geoGroup.vertexArray;\n        colorArray = geoGroup.colorArray;\n        faceArray = geoGroup.faceArray;\n        offset = geoGroup.vertices;\n        vertoffset = offset * 3;\n\n        vertexArray[vertoffset] = p1v.x;\n        vertexArray[vertoffset + 1] = p1v.y;\n        vertexArray[vertoffset + 2] = p1v.z;\n        vertexArray[vertoffset + 3] = p1v.x;\n        vertexArray[vertoffset + 4] = p1v.y;\n        vertexArray[vertoffset + 5] = p1v.z;\n        vertexArray[vertoffset + 6] = p2v.x;\n        vertexArray[vertoffset + 7] = p2v.y;\n        vertexArray[vertoffset + 8] = p2v.z;\n        vertexArray[vertoffset + 9] = p2v.x;\n        vertexArray[vertoffset + 10] = p2v.y;\n        vertexArray[vertoffset + 11] = p2v.z;\n        vertexArray[vertoffset + 12] = a1v.x;\n        vertexArray[vertoffset + 13] = a1v.y;\n        vertexArray[vertoffset + 14] = a1v.z;\n        vertexArray[vertoffset + 15] = a1v.x;\n        vertexArray[vertoffset + 16] = a1v.y;\n        vertexArray[vertoffset + 17] = a1v.z;\n        vertexArray[vertoffset + 18] = a2v.x;\n        vertexArray[vertoffset + 19] = a2v.y;\n        vertexArray[vertoffset + 20] = a2v.z;\n        vertexArray[vertoffset + 21] = a2v.x;\n        vertexArray[vertoffset + 22] = a2v.y;\n        vertexArray[vertoffset + 23] = a2v.z;\n\n        for (j = 0; j < 8; ++j) {\n            colorArray[vertoffset + 3 * j] = color.r;\n            colorArray[vertoffset + 1 + 3 * j] = color.g;\n            colorArray[vertoffset + 2 + 3 * j] = color.b;\n        }\n\n        if (i > 0) {\n\n            // both points have distinct atoms\n            var diffAtoms = ((lastAtom !== undefined && currentAtom !== undefined) && lastAtom.serial !== currentAtom.serial);\n\n            for (j = 0; j < 4; j++) {\n\n                var face = [offset + faces[j][0], offset + faces[j][1],\n                offset + faces[j][2], offset + faces[j][3]];\n\n                faceoffset = geoGroup.faceidx;\n\n                faceArray[faceoffset] = face[0];\n                faceArray[faceoffset + 1] = face[1];\n                faceArray[faceoffset + 2] = face[3];\n                faceArray[faceoffset + 3] = face[1];\n                faceArray[faceoffset + 4] = face[2];\n                faceArray[faceoffset + 5] = face[3];\n\n                geoGroup.faceidx += 6;\n\n                if (currentAtom.clickable || lastAtom.clickable || currentAtom.hoverable || lastAtom.hoverable) {\n\n                    var p1a = vs[face[3]].clone(), p1b = vs[face[0]]\n                        .clone(), p2a = vs[face[2]].clone(), p2b = vs[face[1]]\n                            .clone();\n\n                    p1a.atom = vs[face[3]].atom || null; // should be\n                    // same\n                    p2a.atom = vs[face[2]].atom || null;\n\n                    p1b.atom = vs[face[0]].atom || null; // should be\n                    // same\n                    p2b.atom = vs[face[1]].atom || null;\n\n                    if (diffAtoms) {\n                        var m1 = p1a.clone().add(p1b).multiplyScalar(0.5);\n                        var m2 = p2a.clone().add(p2b).multiplyScalar(0.5);\n                        var m = p1a.clone().add(p2b).multiplyScalar(0.5);\n\n                        if (j % 2 === 0) {\n                            if (lastAtom.clickable || lastAtom.hoverable) {\n                                face1 = new Triangle(m1, m, p1a);\n                                face2 = new Triangle(m2, p2a, m);\n                                face3 = new Triangle(m, p2a, p1a);\n                                lastAtom.intersectionShape.triangle\n                                    .push(face1);\n                                lastAtom.intersectionShape.triangle\n                                    .push(face2);\n                                lastAtom.intersectionShape.triangle\n                                    .push(face3);\n                            }\n\n                            if (currentAtom.clickable || currentAtom.hoverable) {\n                                face1 = new Triangle(p1b, p2b, m);\n                                face2 = new Triangle(p2b, m2, m);\n                                face3 = new Triangle(p1b, m, m1);\n                                currentAtom.intersectionShape.triangle\n                                    .push(face1);\n                                currentAtom.intersectionShape.triangle\n                                    .push(face2);\n                                currentAtom.intersectionShape.triangle\n                                    .push(face3);\n                            }\n                        } else {\n                            if (currentAtom.clickable || currentAtom.hoverable) {\n                                face1 = new Triangle(m1, m, p1a);\n                                face2 = new Triangle(m2, p2a, m);\n                                face3 = new Triangle(m, p2a, p1a);\n                                currentAtom.intersectionShape.triangle\n                                    .push(face1);\n                                currentAtom.intersectionShape.triangle\n                                    .push(face2);\n                                currentAtom.intersectionShape.triangle\n                                    .push(face3);\n                            }\n\n                            if (lastAtom.clickable || lastAtom.hoverable) {\n                                face1 = new Triangle(p1b, p2b, m);\n                                face2 = new Triangle(p2b, m2, m);\n                                face3 = new Triangle(p1b, m, m1);\n                                lastAtom.intersectionShape.triangle\n                                    .push(face1);\n                                lastAtom.intersectionShape.triangle\n                                    .push(face2);\n                                lastAtom.intersectionShape.triangle\n                                    .push(face3);\n                            }\n                        }\n\n                    }\n\n                    // face for single atom\n                    else if (currentAtom.clickable || currentAtom.hoverable) {\n                        face1 = new Triangle(p1b, p2b, p1a);\n                        face2 = new Triangle(p2b, p2a, p1a);\n                        currentAtom.intersectionShape.triangle.push(face1);\n                        currentAtom.intersectionShape.triangle.push(face2);\n                    }\n\n                }\n\n            }\n        }\n\n        geoGroup.vertices += 8;\n        lastAtom = currentAtom;\n    }\n\n    var vsize = vs.length - 8; // Cap\n\n    geoGroup = geo.updateGeoGroup(8);\n    vertexArray = geoGroup.vertexArray;\n    colorArray = geoGroup.colorArray;\n    faceArray = geoGroup.faceArray;\n    offset = geoGroup.vertices;\n    vertoffset = offset * 3;\n    faceoffset = geoGroup.faceidx;\n\n    for (i = 0; i < 4; i++) {\n        vs.push(vs[i * 2]);\n        vs.push(vs[vsize + i * 2]);\n\n        var v1 = vs[i * 2], v2 = vs[vsize + i * 2];\n\n        vertexArray[vertoffset + 6 * i] = v1.x;\n        vertexArray[vertoffset + 1 + 6 * i] = v1.y;\n        vertexArray[vertoffset + 2 + 6 * i] = v1.z;\n        vertexArray[vertoffset + 3 + 6 * i] = v2.x;\n        vertexArray[vertoffset + 4 + 6 * i] = v2.y;\n        vertexArray[vertoffset + 5 + 6 * i] = v2.z;\n\n        colorArray[vertoffset + 6 * i] = color.r;\n        colorArray[vertoffset + 1 + 6 * i] = color.g;\n        colorArray[vertoffset + 2 + 6 * i] = color.b;\n        colorArray[vertoffset + 3 + 6 * i] = color.r;\n        colorArray[vertoffset + 4 + 6 * i] = color.g;\n        colorArray[vertoffset + 5 + 6 * i] = color.b;\n\n    }\n\n    vsize += 8;\n\n    face1 = [offset, offset + 2, offset + 6, offset + 4];\n    face2 = [offset + 1, offset + 5, offset + 7, offset + 3];\n\n    faceArray[faceoffset] = face1[0];\n    faceArray[faceoffset + 1] = face1[1];\n    faceArray[faceoffset + 2] = face1[3];\n    faceArray[faceoffset + 3] = face1[1];\n    faceArray[faceoffset + 4] = face1[2];\n    faceArray[faceoffset + 5] = face1[3];\n    faceArray[faceoffset + 6] = face2[0];\n    faceArray[faceoffset + 7] = face2[1];\n    faceArray[faceoffset + 8] = face2[3];\n    faceArray[faceoffset + 9] = face2[1];\n    faceArray[faceoffset + 10] = face2[2];\n    faceArray[faceoffset + 11] = face2[3];\n\n    geoGroup.faceidx += 12;\n    geoGroup.vertices += 8;\n\n    // TODO: Add intersection planes for caps\n};\n\n\nfunction drawStrip(geo, points, colors, div, thickness, opacity, shape) {\n    if (!shape || shape === \"default\")\n        shape = \"rectangle\";\n    if (shape === 'edged')\n        drawPlainStrip(geo, points, colors, div, thickness, opacity);\n    else if (shape === \"rectangle\" || shape === \"oval\" || shape === \"parabola\")\n        drawShapeStrip(geo, points, colors, div, thickness, opacity, shape);\n};\n\n// check if given atom is an alpha carbon\nfunction isAlphaCarbon(atom) {\n    return atom && atom.elem === \"C\" && atom.atom === \"CA\"; // note that\n    // calcium is\n    // also CA\n};\n\n// check whether two atoms are members of the same residue or subsequent,\n// connected residues (a before b)\nfunction inConnectedResidues(a, b) {\n    if (a && b && a.chain === b.chain) {\n        if (!a.hetflag && !b.hetflag && (a.reschain === b.reschain) &&\n            (a.resi === b.resi || a.resi === b.resi - 1))\n            return true;\n        if (a.resi < b.resi) {\n            // some PDBs have gaps in the numbering but the residues are\n            // still connected\n            // assume if within 4A they are connected\n            var dx = a.x - b.x;\n            var dy = a.y - b.y;\n            var dz = a.z - b.z;\n            var dist = dx * dx + dy * dy + dz * dz;\n            if (a.atom == \"CA\" && b.atom == \"CA\" && dist < 16.0) //protein residues not connected\n                return true; // calpha dist\n            else if ((a.atom == \"P\" || b.atom == \"P\") && dist < 64.0) //dna\n                return true;\n        }\n    }\n\n    return false;\n};\n\n// add geo to the group\nfunction setGeo(group, geo, opacity, outline, setNormals) {\n\n    if (geo == null || geo.vertices == 0) return;\n    if (setNormals) {\n        geo.initTypedArrays();\n        geo.setUpNormals();\n    }\n\n    var cartoonMaterial = new MeshDoubleLambertMaterial();\n    cartoonMaterial.vertexColors = Coloring.FaceColors;\n    if (typeof (opacity) === \"number\" && opacity >= 0 && opacity < 1) {\n        cartoonMaterial.transparent = true;\n        cartoonMaterial.opacity = opacity;\n    }\n    cartoonMaterial.outline = outline;\n    var cartoonMesh = new Mesh(geo, cartoonMaterial as Material);\n    group.add(cartoonMesh);\n};\n\nfunction addBackbonePoints(points, num, smoothen, backbonePt,\n    orientPt, prevOrientPt, backboneAtom, atoms, atomi) {\n    var widthScalar, i, delta, v, addArrowPoints, testStyle;\n\n    if (!backbonePt || !orientPt || !backboneAtom)\n        return;\n\n    // the side vector points along the axis from backbone atom to\n    // orientation atom (eg. CA to O, in peptides)\n    var sideVec = orientPt.sub(backbonePt);\n    sideVec.normalize();\n\n    //find next atom like this one\n    var forwardVec = atoms[atomi];\n    for (i = atomi + 1; i < atoms.length; i++) {\n        forwardVec = atoms[i];\n        if (forwardVec.atom == backboneAtom.atom)\n            break;\n    }\n    // the forward vector points along the axis from backbone atom to next\n    // backbone atom\n    forwardVec = forwardVec ? new Vector3(forwardVec.x,\n        forwardVec.y, forwardVec.z) : new Vector3(0, 0, 0);\n    forwardVec.sub(backbonePt);\n\n    // adjustments for proper beta arrow appearance\n    if (backboneAtom.ss === \"arrow start\") {\n        var adjustment = forwardVec.clone().multiplyScalar(0.3).cross(\n            orientPt); // adjust perpendicularly to strand face\n        backbonePt.add(adjustment);\n\n        var upVec = forwardVec.clone().cross(sideVec).normalize();\n        sideVec.rotateAboutVector(upVec, 0.43);\n    }\n\n    // determine from cartoon style or secondary structure how wide the\n    // strand should be here\n    // ribbon shape should have same width as thickness\n    if (backboneAtom.style.cartoon.ribbon) {\n        widthScalar = backboneAtom.style.cartoon.thickness || defaultThickness;\n\n    } else // depending on secondary structure, multiply the orientation\n    // vector by some scalar\n    {\n        if (!backboneAtom.style.cartoon.width) {\n            if (backboneAtom.ss === \"c\") {\n                if (backboneAtom.atom === \"P\")\n                    widthScalar = nucleicAcidWidth;\n                else\n                    widthScalar = coilWidth;\n            } else if (backboneAtom.ss === \"arrow start\") {\n                widthScalar = helixSheetWidth;\n                addArrowPoints = true;\n\n            } else if (backboneAtom.ss === \"arrow end\")\n                widthScalar = coilWidth;\n\n            else if (backboneAtom.ss === \"h\" &&\n                backboneAtom.style.cartoon.tubes ||\n                backboneAtom.ss === \"tube start\")\n                widthScalar = coilWidth;\n\n            else\n                widthScalar = helixSheetWidth;\n        } else\n            widthScalar = backboneAtom.style.cartoon.width;\n    }\n\n    // make sure the strand orientation doesn't twist more than 90 degrees\n    if (prevOrientPt != null && sideVec.dot(prevOrientPt) < 0)\n        sideVec.negate();\n\n    sideVec.multiplyScalar(widthScalar);\n    for (i = 0; i < num; i++) {\n        // produces NUM incremental points from backbone atom minus\n        // orientation vector\n        // to backbone atom plus orientation vector\n        delta = -1 + i * 2 / (num - 1); // -1 to 1 incrementing by num\n        v = new Vector3(backbonePt.x + delta * sideVec.x,\n            backbonePt.y + delta * sideVec.y, backbonePt.z + delta * sideVec.z);\n        v.atom = backboneAtom;\n        if (smoothen && backboneAtom.ss === \"s\")\n            v.smoothen = true;\n        points[i].push(v); // a num-length array of arrays, where each\n        // inner array contains length-wise points\n        // along the backbone offset by some constant pertaining to its cell\n        // in the outer array\n    }\n\n    if (addArrowPoints) {\n\n        sideVec.multiplyScalar(2);\n        for (i = 0; i < num; i++) {\n            delta = -1 + i * 2 / (num - 1); // -1 to 1 incrementing by num\n            v = new Vector3(backbonePt.x + delta * sideVec.x,\n                backbonePt.y + delta * sideVec.y, backbonePt.z + delta * sideVec.z);\n            v.atom = backboneAtom;\n            v.smoothen = false;\n            v.skip = true;\n            points[i].push(v);\n        }\n    }\n\n    // make sure the strand is all the same style\n    testStyle = backboneAtom.style.cartoon.style || 'default';\n    if (points.style) {\n        if (points.style != testStyle) {\n            console\n                .log(\"Warning: a cartoon chain's strand-style is ambiguous\");\n            points.style = 'default';\n        }\n\n    } else\n        points.style = testStyle;\n\n    // revert ss keywords used for arrow rendering back to original value\n    if (backboneAtom.ss === \"arrow start\" || backboneAtom.ss === \"arrow end\")\n        backboneAtom.ss = \"s\";\n\n    return addArrowPoints;\n};\n\n// proteins na backbone na terminus nucleobases\nconst cartoonAtoms = {\n    \"C\": true, \"CA\": true, \"O\": true, \"P\": true, \"OP2\": true,\n    \"O2P\": true, \"O5'\": true, \"O3'\": true, \"C5'\": true,\n    \"C2'\": true, \"O5*\": true, \"O3*\": true, \"C5*\": true,\n    \"C2*\": true, \"N1\": true, \"N3\": true\n};\nconst purResns = { \"DA\": true, \"DG\": true, \"A\": true, \"G\": true };\nconst pyrResns = { \"DT\": true, \"DC\": true, \"U\": true, \"C\": true, \"T\": true };\nconst naResns = { \"DA\": true, \"DG\": true, \"A\": true, \"G\": true, \"DT\": true, \"DC\": true, \"U\": true, \"C\": true, \"T\": true };\n\n\nexport function drawCartoon(group, atomList, gradientrange, quality = 10) {\n\n    let num = quality;\n    let div = quality;\n\n    var cartoon, prev, curr, next, currColor, nextColor, thickness, i;\n    var backbonePt, orientPt, prevOrientPt, terminalPt, termOrientPt, baseStartPt, baseEndPt;\n    var tubeStart, tubeEnd, drawingTube;\n    var shapeGeo = new Geometry(true); // for shapes that don't need normals computed\n    var geo = new Geometry(true);\n    var colors = [];\n    var points: any = [];\n    var opacity = 1;\n    var outline = false;\n\n    var gradients: any = {};\n    for (var g in Gradient.builtinGradients) {\n        if (Gradient.builtinGradients.hasOwnProperty(g)) {\n            //COUNTER INTUITIVE - spectrum reverses direction to gradient to match other tools\n            gradients[g] = new Gradient.builtinGradients[g](gradientrange[1], gradientrange[0]);\n        }\n    }\n\n    var cartoonColor = function (next, cartoon) { //atom and cartoon style object\n        if (gradientrange && cartoon.color === 'spectrum') {\n            if (cartoon.colorscheme in gradients) {\n                return gradients[cartoon.colorscheme].valueToHex(next.resi);\n            } else {\n                return gradients.sinebow.valueToHex(next.resi);\n            }\n        }\n        else {\n            return getColorFromStyle(next, cartoon).getHex();\n        }\n    };\n\n    for (i = 0; i < num; i++)\n        points[i] = [];\n\n    // first determine where beta sheet arrows and alpha helix tubes belong\n    var inSheet = false;\n    var inHelix = false; //only considering tube styled helices\n    var atoms = [];\n    for (i in atomList) {\n        next = atomList[i];\n        if (next.elem === 'C' && next.atom === 'CA') {\n            var connected = inConnectedResidues(curr, next);\n\n            // last two residues in a beta sheet become arrowhead\n            if (connected && next.ss === \"s\") {\n                inSheet = true;\n            } else if (inSheet) {\n                if (curr && prev && curr.style.cartoon.arrows && prev.style.cartoon.arrows) {\n                    curr.ss = \"arrow end\";\n                    prev.ss = \"arrow start\";\n                }\n                inSheet = false;\n            }\n\n            // first and last residues in a helix are used to draw tube\n            if (connected && (curr.ss === \"h\" || curr.ss == \"tube start\") && curr.style.cartoon.tubes) {\n                if (!inHelix && curr.ss != \"tube start\" && next.style.cartoon.tubes) {\n                    next.ss = \"tube start\";\n                    inHelix = true;\n                }\n            } else if (inHelix) {\n                if (curr.ss === \"tube start\") {\n                    curr.ss = \"tube end\"; //only one residue\n                } else if (prev && prev.style.cartoon.tubes) {\n                    prev.ss = \"tube end\";\n                }\n                inHelix = false;\n            }\n            prev = curr;\n            curr = next;\n        }\n        if (next && next.atom in cartoonAtoms) {\n            atoms.push(next);\n        }\n    }\n    if (inHelix && curr.style.cartoon.tubes) {\n        curr.ss = \"tube end\";\n        inHelix = false;\n    }\n\n    var flushGeom = function (connect) {\n        //write out points, update geom,etc\n        if (points[0].length > 0) {\n            drawStrip(geo, points, colors, div, thickness, opacity, points.style);\n        }\n\n        var saved = [], savedc = null;\n        if (connect) {\n            //recycle last point to first point of next points array\n            for (i = 0; i < num; i++) {\n                saved[i] = points[i][points[i].length - 1];\n            }\n            savedc = colors[colors.length - 1];\n        }\n        points = [];\n        for (i = 0; i < num; i++)\n            points[i] = [];\n        colors = [];\n\n        if (connect) {\n            for (i = 0; i < num; i++) {\n                points[i].push(saved[i]);\n            }\n            colors.push(savedc);\n        }\n\n        setGeo(group, geo, opacity, outline, true);\n        setGeo(group, shapeGeo, opacity, outline, false);\n        geo = new Geometry(true);\n        shapeGeo = new Geometry(true);\n    };\n\n    // then accumulate points\n    curr = undefined;\n    for (var a = 0; a < atoms.length; a++) {\n        next = atoms[a];\n\n        var nextresn = next.resn.trim();\n        var inNucleicAcid = nextresn in naResns;\n        opacity = 1;\n        // determine cartoon style\n        cartoon = next.style.cartoon;\n        if (curr && curr.style.cartoon)\n            opacity = curr.style.cartoon.opacity;\n        if (curr && curr.style.cartoon && curr.style.cartoon.outline)\n            outline = curr.style.cartoon.outline;\n\n        // create a new geometry when opacity changes\n        //this should work fine if opacity is set by chain, but will\n        //break if it changes within the chain\n        if (curr && curr.style.cartoon && (!next.style.cartoon ||\n            curr.style.cartoon.opacity != next.style.cartoon.opacity)) {\n            flushGeom(curr.chain == next.chain);\n        }\n\n        if (cartoon.style === \"trace\") // draw cylinders connecting\n        // consecutive 'backbone' atoms\n        {\n            /*\n             * \"trace\" style just draws cylinders between consecutive\n             * 'backbone' atoms, such as alpha carbon for polypeptides and\n             * phosphorus for DNA.\n             */\n            if (next.hetflag) {\n                ; //ignore non-protein atoms\n            } else if (next.elem === 'C' && next.atom === 'CA' ||\n                inNucleicAcid && next.atom === \"P\" ||\n                next.atom === 'BB') {\n                // determine cylinder color\n                nextColor = cartoonColor(next, cartoon);\n\n                // determine cylinder thickness\n                if (isNumeric(cartoon.thickness))\n                    thickness = cartoon.thickness;\n                else\n                    thickness = defaultThickness;\n\n                if (inConnectedResidues(curr, next)) {\n                    // if both atoms are same color, draw single cylinder\n                    if (nextColor == currColor) {\n                        var color = CC.color(nextColor);\n                        GLDraw.drawCylinder(shapeGeo, curr, next,\n                            thickness, color, 2, 2);\n                    }\n\n                    else // otherwise draw cylinders for each color\n                    // (split down the middle)\n                    {\n                        var midpoint = new Vector3().addVectors(\n                            curr, next).multiplyScalar(0.5);\n                        var color1 = CC.color(currColor);\n                        var color2 = CC.color(nextColor);\n                        GLDraw.drawCylinder(shapeGeo, curr,\n                            midpoint, thickness, color1, 2, 0);\n                        GLDraw.drawCylinder(shapeGeo, midpoint,\n                            next, thickness, color2, 0, 2);\n                    } // note that an atom object can be duck-typed as a\n                    // Vector3 in this case\n                }\n\n                if ((next.clickable === true || next.hoverable) && (next.intersectionShape !== undefined)) {\n                    //can click on joints to get alpha carbons\n                    var center = new Vector3(next.x, next.y, next.z);\n                    next.intersectionShape.sphere.push(new Sphere(center, thickness));\n                }\n\n                curr = next;\n                currColor = nextColor;\n            }\n        } else // draw default-style cartoons based on secondary structure\n        {\n            // draw backbone through these atoms\n            if (isAlphaCarbon(next) || inNucleicAcid && (next.atom === \"P\" || next.atom.indexOf('O5') == 0)) {\n                if (drawingTube) {\n                    if (next.ss === \"tube end\") {\n                        drawingTube = false;\n                        tubeEnd = new Vector3(next.x, next.y, next.z);\n                        GLDraw.drawCylinder(shapeGeo, tubeStart,\n                            tubeEnd, 2, CC.color(currColor), 1,\n                            1);\n                        next.ss = \"h\";\n\n                    }\n                    else if (curr.chain != next.chain || curr.ss === \"tube end\") { //don't span chains no matter what, check for short tubes (less than ideal)\n                        drawingTube = false;\n                        curr.ss = \"h\";\n                        tubeEnd = new Vector3(curr.x, curr.y, curr.z);\n                        GLDraw.drawCylinder(shapeGeo, tubeStart,\n                            tubeEnd, 2, CC.color(currColor), 1,\n                            1);\n                    }\n                    else\n                        continue; // don't accumulate strand points while\n                    // in the middle of drawing a tube\n                }\n\n                // end of a chain of connected residues (of same style)\n                if (curr && (!inConnectedResidues(curr, next) || curr.ss === \"tube start\")) {\n                    if (curr.ss === \"tube start\") {\n                        drawingTube = true;\n                        tubeStart = new Vector3(curr.x, curr.y,\n                            curr.z);\n                        curr.ss = \"h\";\n                    }\n\n                    if (baseEndPt) // draw the last base if it's a NA chain\n                    {\n                        if (terminalPt)\n                            baseStartPt = new Vector3().addVectors(\n                                curr, terminalPt).multiplyScalar(0.5);\n                        else\n                            baseStartPt = new Vector3(curr.x,\n                                curr.y, curr.z);\n\n                        GLDraw.drawCylinder(shapeGeo, baseStartPt,\n                            baseEndPt, baseThickness, CC\n                                .color(baseEndPt.color), 0, 2);\n                        addBackbonePoints(points, num,\n                            true, terminalPt, termOrientPt,\n                            prevOrientPt, curr, atoms, a);\n                        colors.push(nextColor);\n\n                        baseStartPt = null;\n                        baseEndPt = null;\n                    }\n\n                    // draw accumulated strand points\n                    if (points[0].length > 0)\n                        drawStrip(geo, points, colors, div, thickness,\n                            opacity, points.style);\n\n                    // clear arrays for points and colors\n                    points = [];\n                    for (i = 0; i < num; i++)\n                        points[i] = [];\n                    colors = [];\n                }\n\n                // reached next residue (potentially the first residue)\n                if (curr === undefined || curr.rescode != next.rescode || curr.resi != next.resi) {\n                    if (baseEndPt && curr != undefined) // draw last NA residue's base\n                    {\n                        // start the cylinder at the midpoint between\n                        // consecutive backbone atoms\n                        baseStartPt = new Vector3().addVectors(curr,\n                            next).multiplyScalar(0.5);\n                        var startFix = baseStartPt.clone().sub(baseEndPt)\n                            .multiplyScalar(0.02); // TODO: apply this\n                        // as function of\n                        // thickness\n                        baseStartPt.add(startFix);\n\n                        GLDraw.drawCylinder(shapeGeo, baseStartPt,\n                            baseEndPt, baseThickness, CC\n                                .color(baseEndPt.color), 0, 2);\n                        baseStartPt = null;\n                        baseEndPt = null;\n                    }\n\n                    // determine color and thickness of the next strand\n                    // segment\n                    nextColor = cartoonColor(next, cartoon);\n                    colors.push(nextColor);\n                    if (isNumeric(cartoon.thickness))\n                        thickness = cartoon.thickness;\n                    else\n                        thickness = defaultThickness;\n\n                    curr = next; // advance backbone\n                    backbonePt = new Vector3(curr.x, curr.y, curr.z);\n                    backbonePt.resi = curr.resi;\n                    currColor = nextColor;\n                }\n\n                // click handling\n                if ((next.clickable === true || next.hoverable === true) &&\n                    (next.intersectionShape === undefined || next.intersectionShape.triangle === undefined))\n                    next.intersectionShape = {\n                        sphere: null,\n                        cylinder: [],\n                        line: [],\n                        triangle: []\n                    };\n            }\n            // atoms used to orient the backbone strand\n            else if (curr != undefined && (isAlphaCarbon(curr) && next.atom === \"O\" ||\n                inNucleicAcid && curr.atom === \"P\" &&\n                (next.atom === \"OP2\" || next.atom === \"O2P\") ||\n                inNucleicAcid && curr.atom.indexOf(\"O5\") == 0 &&\n                next.atom.indexOf(\"C5\") == 0)) {\n                orientPt = new Vector3(next.x, next.y, next.z);\n                orientPt.resi = next.resi;\n                if (next.atom === \"OP2\" || next.atom === \"O2P\") // for NA 3'\n                    // terminus\n                    termOrientPt = new Vector3(next.x, next.y,\n                        next.z);\n            }\n\n            // NA 3' terminus is an edge case, need a vector for most recent\n            // O3'\n            else if (inNucleicAcid && next.atom.indexOf(\"O3\") == 0) {\n                terminalPt = new Vector3(next.x, next.y, next.z);\n            }\n\n            // atoms used for drawing the NA base cylinders (diff for\n            // purines and pyramidines)\n            else if ((next.atom === \"N1\" && (nextresn in purResns)) ||\n                (next.atom === \"N3\" && (nextresn in pyrResns))) {\n                baseEndPt = new Vector3(next.x, next.y, next.z);\n                baseEndPt.color = getColorFromStyle(next, cartoon)\n                    .getHex();\n            }\n\n            // when we have a backbone point and orientation point in the\n            // same residue, accumulate strand points\n            if (orientPt && backbonePt && orientPt.resi === backbonePt.resi) {\n                addBackbonePoints(points, num, true,\n                    backbonePt, orientPt, prevOrientPt, curr, atoms,\n                    a);\n                prevOrientPt = orientPt;\n                backbonePt = null;\n                orientPt = null;\n                colors.push(nextColor);\n            }\n        }\n\n    }\n\n    if (baseEndPt) // draw last NA base if needed\n    {\n        if (terminalPt)\n            baseStartPt = new Vector3().addVectors(curr, terminalPt)\n                .multiplyScalar(0.5);\n        else\n            baseStartPt = new Vector3(curr.x, curr.y, curr.z);\n\n        GLDraw.drawCylinder(shapeGeo, baseStartPt, baseEndPt, baseThickness,\n            CC.color(baseEndPt.color), 0, 2);\n        addBackbonePoints(points, num, true, terminalPt,\n            termOrientPt, prevOrientPt, curr, atoms, a);\n        colors.push(nextColor);\n    }\n\n    // for default style, draw the last strand\n    flushGeom(false);\n};\n\n\n\n","// Create the global $3Dmol \"namespace\"\n\n\nexport * from \"./Gradient\";\nexport * from \"./colors\";\nexport * from \"./Label\";\nexport * from \"./partialCharges\";\nexport * from \"./parsers\";\nexport * from \"./WebGL/math\";\nexport * from \"./WebGL/shapes\";\nexport * from \"./utilities\";\nexport * from \"./ProteinSurface4\"\nexport * from \"./VolumeData\"\nexport * from \"./VolumetricRender\"\nexport * from \"./GLShape\"\nexport * from \"./GLDraw\"\nexport * from \"./glcartoon\"\nexport * from \"./GLModel\"\nexport * from \"./GLViewer\"\nexport * from \"./autoload\"\nexport * from \"./specs\"\n\n//import * as $ from 'jquery';\ndeclare var __webpack_exports__: any;\n\nif (window) {\n    //this needs to be exported here so the webworker can see it\n    window.$3Dmol = __webpack_exports__;\n}\n","import { ParserOptionsSpec } from \"./ParserOptionsSpec\";\nimport { base64ToArray, inflateString } from \"../utilities\";\nimport { MMTFobj } from \"./MMTF\"\n//import { Matrix4 } from \"../WebGL\";\nimport { computeSecondaryStructure } from \"./utils/computeSecondaryStructure\";\nimport { processSymmetries } from \"./utils/processSymmetries\";\nimport { Category } from \"./cifutils/category\";\nimport { AtomSpec } from \"specs\";\nimport { assignPDBBonds } from \"./utils/assignPDBBonds\";\nimport { Matrix4 } from \"../WebGL\";\nimport { isEmpty } from \"./utils/isEmpty\";\n\ndeclare var MMTF: MMTFobj;\n\n\nclass Connectivity {\n  C: Record<string, Record<string, Record<string, number>>> = {};\n\n  constructor(comp_bond) {\n    if (comp_bond) {\n      let ids = comp_bond.getField('comp_id');\n      let a1s = comp_bond.getField('atom_id_1');\n      let a2s = comp_bond.getField('atom_id_2');\n      let orders = comp_bond.getField('value_order');\n\n      for (let i = 0; i < ids.length; i++) {\n        let resn = ids[i];\n        let a1 = a1s[i];\n        let a2 = a2s[i];\n        let oname = orders[i];\n        let o = 1;\n        if (oname == 'doub') o = 2;\n        else if (oname == 'trip') o = 3;\n\n        if (this.C[resn] == undefined) {\n          this.C[resn] = {};\n        }\n        if (this.C[resn][a1] == undefined) {\n          this.C[resn][a1] = {};\n        }\n        if (this.C[resn][a2] == undefined) {\n          this.C[resn][a2] = {};\n        }\n        this.C[resn][a1][a2] = o;\n        this.C[resn][a2][a1] = o;\n      }\n    }\n  }\n\n  //returns bond order, zero if not connected\n  order(resn: string, atom1: string, atom2: string): number {\n    if (this.C[resn] !== undefined) {\n      if (this.C[resn][atom1] !== undefined) {\n        if (this.C[resn][atom1][atom2] !== undefined) {\n          return this.C[resn][atom1][atom2];\n        }\n      }\n    }\n    return 0;\n  }\n}\n\n/* Class for recording inter-component connectivity */\nclass StructConn {\n  public C: [[string,number,string,string],[string,number,string,string],number][] = []; //chain,resi,resn,atomn\n\n  constructor(struct_conn) {\n    if(struct_conn) {\n      //have no idea what the deal with with ptnr3..\n      let types = struct_conn.getField('conn_type_id');\n      let chain1 = struct_conn.getField('ptnr1_label_asym_id');\n      let resi1 = struct_conn.getField('ptnr1_label_seq_id');\n      let resn1 = struct_conn.getField('ptnr1_label_comp_id');\n      let a1 = struct_conn.getField('ptnr1_label_atom_id');\n      let chain2 = struct_conn.getField('ptnr2_label_asym_id');\n      let resi2 = struct_conn.getField('ptnr2_label_seq_id');\n      let resn2 = struct_conn.getField('ptnr2_label_comp_id');\n      let a2 = struct_conn.getField('ptnr2_label_atom_id');\n      let bo = struct_conn.getField('pdbx_value_order');\n\n      for(let i = 0; i < types.length; i++) {\n        if(types[i] == 'disulf' || types[i] == 'covale') { //metal too?\n          let o = bo ? (bo[i] == \"\" ? 1: parseInt(bo[i])) : 1;\n          this.C.push([[chain1[i],resi1[i],resn1[i],a1[i]],[chain2[i],resi2[i],resn2[i],a2[i]],o]);\n        }\n      }\n\n    }\n  }\n}\n\n/* group atoms by chain/resid */\nclass Residues {\n  R: Record<string, Record<number, Record<string, Array<AtomSpec>>>> = {}; //chain, resid, resn (redundant), atom list\n  constructor() {\n\n  }\n\n  add(a: AtomSpec) {\n    if (this.R[a.lchain] == undefined) this.R[a.lchain] = {};\n    if (this.R[a.lchain][a.lresi] == undefined) this.R[a.lchain][a.lresi] = {};\n    if (this.R[a.lchain][a.lresi][a.lresn] == undefined) this.R[a.lchain][a.lresi][a.lresn] = [];\n    this.R[a.lchain][a.lresi][a.lresn].push(a);\n    this.R[a.lchain][a.lresi][a.lresn][a.atom] = a; //look up by atom name\n  }\n\n  private geta([ch,resi,resn,aname]: [string,number,string,string]) {\n    if(this.R[ch] !== undefined &&\n      this.R[ch][resi] !== undefined &&\n      this.R[ch][resi][resn] !== undefined) {\n        return this.R[ch][resi][resn][aname];\n      }\n    return undefined;\n  }\n\n  setBonds(C: Connectivity, SC: StructConn) {\n    for(let ch in this.R) {\n      for(let resi in this.R[ch]) {\n        for(let resn in this.R[ch][resi]) {\n          let atoms = this.R[ch][resi][resn];\n          for(let i = 0; i < atoms.length; i++) {\n            for(let j = i+1; j < atoms.length; j++) {\n              let a1 = atoms[i];\n              let a2 = atoms[j];\n              let bo = C.order(resn,a1.atom,a2.atom);\n              if(bo > 0) {\n                a1.bonds.push(a2.index);\n                a2.bonds.push(a1.index);\n                a1.bondOrder.push(bo);\n                a2.bondOrder.push(bo);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    for(let conn of SC.C) {\n      let a1 = conn[0];\n      let a2 = conn[1];\n      let bo = conn[2];\n      let atom1 = this.geta(a1);\n      let atom2 = this.geta(a2);\n      if(atom1 != undefined && atom2 != undefined) {\n        atom1.bonds.push(atom2.index);\n        atom2.bonds.push(atom1.index);\n        atom1.bondOrder.push(bo);\n        atom2.bondOrder.push(bo);      \n      }\n    }\n\n  }\n}\n\n\n/** \n * @param bindata - binary UInt8Array buffer or a base64 encoded string\n * @param ParserOptionsSpec\n * @category Parsers\n*/\nexport function BCIF(bindata: any, options: ParserOptionsSpec) {\n\n  var noH = !options.keepH; // suppress hydrogens by default\n  var selAltLoc = options.altLoc ? options.altLoc : 'A'; //default alternate location to select if present\n  var computeStruct = !options.noComputeSecondaryStructure;\n  //var assemblyIndex = options.assemblyIndex ? options.assemblyIndex : 0;\n  const noAssembly = !options.doAssembly; // don't assemble by default\n  const assignbonds =\n    options.assignBonds === undefined ? true : options.assignBonds;\n\n  if (typeof (bindata) == \"string\") {\n    //assume base64 encoded\n    try {\n      bindata = base64ToArray(bindata);\n    } catch (error) {\n      //not base64\n      const encoder = new TextEncoder();\n      bindata = encoder.encode(bindata);\n    }\n  } else {\n    bindata = new Uint8Array(bindata);\n  }\n\n  var bcifData = MMTF.decodeMsgpack(bindata);\n  if (bcifData == 31) {\n    //was gziped\n    bindata = inflateString(bindata, false);\n    bcifData = MMTF.decodeMsgpack(bindata);\n  }\n\n  var atoms: any[][] & Record<string, any> = [];\n  var modelData: any[] = atoms.modelData = [];\n\n\n  var numModels = bcifData.dataBlocks.length;\n  if (numModels == 0) return atoms;\n  if (!options.multimodel) numModels = 1; //first only\n\n\n\n  //loop over models\n  for (let m = 0; m < numModels; m++) {\n    let startm = atoms.length;\n    const serialToIndex: [number, number][] = []; // map from pdb serial to index in atoms\n    modelData.push({ symmetries: [] });\n    atoms.push([]);\n\n    const block = bcifData.dataBlocks[m];\n    const cats = Object.create(null);\n    for (const cat of block.categories) {\n      cats[cat.name.substr(1)] = Category(cat);\n    }\n\n    //extract secondary structure information\n\n    //helices\n    let sslookup = {}; //chain to residue range\n    let sshelix = cats.struct_conf;\n    if (sshelix) {\n      let htypes = sshelix.getField('conf_type_id');\n      let hchain = sshelix.getField('beg_label_asym_id');\n      let hstart = sshelix.getField('beg_label_seq_id');\n      let hend = sshelix.getField('end_label_seq_id');\n\n      for (let i = 0; i < htypes.length; i++) {\n        if (htypes[i].startsWith('H')) {\n          let ch = hchain[i];\n          let startResi = hstart[i];\n          let endResi = hend[i];\n          if (!(ch in sslookup)) {\n            sslookup[ch] = {};\n          }\n          sslookup[ch][startResi] = \"h1\";\n          for (let res = startResi + 1; res < endResi; res++) {\n            sslookup[ch][res] = \"h\";\n          }\n          sslookup[ch][endResi] = \"h2\";\n        }\n      }\n    }\n    //sheets\n    let sssheet = cats.struct_sheet_range;\n    if (sssheet) {\n      let sids = sssheet.getField('id');\n      let schain = sssheet.getField('beg_label_asym_id');\n      let sstart = sssheet.getField('beg_label_seq_id');\n      let send = sssheet.getField('end_label_seq_id');\n\n      for (let i = 0; i < sids.length; i++) {\n        let ch = schain[i];\n        let startResi = sstart[i];\n        let endResi = send[i];\n        if (!(ch in sslookup)) {\n          sslookup[ch] = {};\n        }\n        sslookup[ch][startResi] = \"s1\";\n        for (let res = startResi + 1; res < endResi; res++) {\n          sslookup[ch][res] = \"s\";\n        }\n        sslookup[ch][endResi] = \"s2\";\n\n      }\n    }\n\n    //symmetry operations\n    let structops = cats.pdbx_struct_oper_list;\n    let opids = structops.getField('id');\n    if (opids && !noAssembly) {\n      let matrix11 = structops.getField('matrix[1][1]');\n      let matrix12 = structops.getField('matrix[1][2]');\n      let matrix13 = structops.getField('matrix[1][3]');\n      let matrix21 = structops.getField('matrix[2][1]');\n      let matrix22 = structops.getField('matrix[2][2]');\n      let matrix23 = structops.getField('matrix[2][3]');\n      let matrix31 = structops.getField('matrix[3][1]');\n      let matrix32 = structops.getField('matrix[3][2]');\n      let matrix33 = structops.getField('matrix[3][3]');\n      let vector1 = structops.getField('vector[1]');\n      let vector2 = structops.getField('vector[2]');\n      let vector3 = structops.getField('vector[3]');\n\n      for (let i = 0; i < opids.length; i++) {\n        const matrix = new Matrix4(\n          matrix11[i],\n          matrix12[i],\n          matrix13[i],\n          vector1[i],\n          matrix21[i],\n          matrix22[i],\n          matrix23[i],\n          vector2[i],\n          matrix31[i],\n          matrix32[i],\n          matrix33[i],\n          vector3[i]\n        );\n        modelData[modelData.length - 1].symmetries.push(matrix);\n      }\n    }\n\n    //extract connectivity information\n    let connect = new Connectivity(cats.chem_comp_bond);\n    let residues = new Residues();\n    let sconnect = new StructConn(cats.struct_conn);\n\n    //atom info\n    let asites = cats.atom_site;\n    let atomCount = asites.rowCount;\n    let group_pdb = asites.getField('group_PDB')\n    let cartn_x = asites.getField('Cartn_x');\n    let cartn_y = asites.getField('Cartn_y');\n    let cartn_z = asites.getField('Cartn_z');\n    let auth_asym_id = asites.getField('auth_asym_id');\n    let label_asym_id = asites.getField('label_asym_id');\n    let auth_seq_id = asites.getField('auth_seq_id');\n    let label_seq_id = asites.getField('label_seq_id');\n    let auth_comp_id = asites.getField('auth_comp_id');\n    let label_comp_id = asites.getField('label_comp_id');\n    let auth_atom_id = asites.getField('auth_atom_id');\n    let label_atom_id = asites.getField('label_atom_id');\n    let type_symbol = asites.getField('type_symbol');\n    let bfactors = asites.getField(\"B_iso_or_equiv\");\n    let serials = asites.getField('id');\n    let icodes = asites.getField('label_alt_id');\n    let modelnums = asites.getField('pdbx_PDB_model_num');\n    let curmodel = modelnums ? modelnums[0] : 0;\n\n    for (let i = 0; i < atomCount; i++) {\n      if (group_pdb !== undefined &&\n        group_pdb[i] === \"TER\"\n      )\n        continue;\n\n      if (modelnums && modelnums[i] != curmodel) {\n        curmodel = modelnums[i];\n        if (options.multimodel) {\n          if (!options.onemol) {\n            atoms.push([]);\n            modelData.push(modelData[modelData.length - 1]);\n            curmodel = modelnums[i];\n            residues.setBonds(connect, sconnect);\n            residues = new Residues();\n          }\n        } else {\n          break; //first model only\n        }\n      }\n\n      const atom: AtomSpec = {};\n      atom.x = cartn_x[i];\n      atom.y = cartn_y[i];\n      atom.z = cartn_z[i];\n\n      atom.chain = auth_asym_id\n        ? auth_asym_id[i]\n        : label_asym_id\n          ? label_asym_id[i]\n          : undefined;\n      atom.lchain = label_asym_id\n        ? label_asym_id[i]\n        : undefined;\n      atom.resi = auth_seq_id\n        ? auth_seq_id[i]\n        : label_seq_id\n          ? label_seq_id[i]\n          : undefined;\n      atom.lresi = label_seq_id\n        ? label_seq_id[i]\n        : undefined;\n      atom.resn = auth_comp_id\n        ? auth_comp_id[i].trim()\n        : label_comp_id\n          ? label_comp_id[i].trim()\n          : undefined;\n      atom.lresn = label_comp_id ? label_comp_id[i].trim() : undefined;\n      atom.atom = auth_atom_id\n        ? auth_atom_id[i].replace(/\"/gm, \"\")\n        : label_atom_id\n          ? label_atom_id[i].replace(/\"/gm, \"\")\n          : undefined; //\"primed\" names are in quotes\n\n      atom.icode = icodes ? icodes[i] : undefined;\n      atom.altLoc = atom.icode;\n      atom.hetflag =\n        !group_pdb ||\n        group_pdb[i] === \"HETA\" ||\n        group_pdb[i] === \"HETATM\";\n      let elem = \"X\";\n      if (type_symbol) {\n        elem = type_symbol[i].replace(/\\(?\\+?\\d+.*/, \"\");\n      }\n\n      atom.elem = elem[0].toUpperCase() + elem.substring(1, 2).toLowerCase();\n      if (bfactors) atom.b = bfactors[i];\n\n      if (noH && atom.elem == 'H') {\n        continue;\n      }\n      if (atom.altLoc != '' && atom.altLoc != selAltLoc && selAltLoc != '*') {\n        continue;\n      }\n\n      atom.bonds = [];\n      atom.ss = \"c\";\n      atom.serial = serials[i];\n      atom.model = curmodel;\n      atom.bondOrder = [];\n      atom.properties = {};\n      atom.index = atoms[atoms.length - 1].length;\n      serialToIndex[atom.serial] = [atoms.length, atom.index];\n      atoms[atoms.length - 1].push(atom);\n      residues.add(atom);\n\n    }\n\n    residues.setBonds(connect, sconnect);\n    // Assign secondary structures from pdb file\n    if (!isEmpty(sslookup)) {\n      for (let mi = startm; mi < atoms.length; mi++) {\n        let matoms = atoms[mi];\n        for (let i = 0; i < matoms.length; i++) {\n          const atom = matoms[i];\n          if (atom === undefined) continue;\n          if (atom.lchain in sslookup && atom.lresi in sslookup[atom.lchain]) {\n            const code = sslookup[atom.lchain][atom.lresi];\n            atom.ss = code[0];\n            if (code.length > 1) {\n              if (code[1] == \"1\") atom.ssbegin = true;\n              else if (code[1] == \"2\") atom.ssend = true;\n            }\n          }\n        }\n      }\n    }\n\n    if (options.multimodel && m < numModels - 1) {\n      if (!options.onemol) {\n        atoms.push([]);\n        modelData.push({ symmetries: [] });\n      }\n    }\n  }\n\n  for (let i = 0; i < atoms.length; i++) {\n    if (\n      assignbonds &&\n      !(options.duplicateAssemblyAtoms && !options.dontConnectDuplicatedAtoms)\n    ) {\n      assignPDBBonds(atoms[i], options);\n    }\n\n    if (computeStruct) {\n      computeSecondaryStructure(atoms[i], options.hbondCutoff);\n    }\n\n    processSymmetries(\n      modelData[i].symmetries,\n      atoms[i],\n      options,\n      modelData[i].cryst\n    );\n    if (\n      options.duplicateAssemblyAtoms &&\n      !options.dontConnectDuplicatedAtoms &&\n      assignbonds\n    )\n      assignPDBBonds(atoms[i], options);\n  }\n  return atoms;\n\n};","import { ParserOptionsSpec } from \"./ParserOptionsSpec\";\n\n/** \n * This parses the ChemDoodle json file format. Although this is registered\n * for the json file extension, other chemical json file formats exist that\n * this can not parse. Check which one you have and do not assume that\n * .json can be parsed\n * \n * @param {string} str\n * @param {ParserOptionsSpec} options\n * @category Parsers\n*/\n\nexport function CDJSON(str: string, options: ParserOptionsSpec) {\n  var atoms: any[][] & Record<string, any> = [[]];\n  if (typeof str === \"string\") {\n    // Str is usually automatically parsed by JQuery\n    str = JSON.parse(str);\n  }\n  var molecules = (str as any).m;\n  var atomsInFile = molecules[0].a; // Assumes there is at least one\n  var bondsInFile = molecules[0].b; // molecule and ignores any more\n  // Ignores any shapes\n  var styles = molecules[0].s;\n  var parseStyle =\n    options !== undefined && options.parseStyle !== undefined\n      ? options.parseStyle\n      : styles !== undefined;\n\n  var offset = atoms[atoms.length - 1].length; // When adding atoms their index will be\n  // Offset by the number of existing atoms\n\n  for (var i = 0; i < atomsInFile.length; i++) {\n    var currentAtom = atomsInFile[i];\n    var atom: Record<string, any> = {};\n    atom.id = currentAtom.i; // Probably won't exist. Doesn't seem to\n    // break anything.\n    atom.x = currentAtom.x;\n    atom.y = currentAtom.y;\n    atom.z = currentAtom.z || 0; // Default value if file is 2D\n\n    atom.bonds = [];\n    atom.bondOrder = [];\n\n    var elem = currentAtom.l || \"C\";\n    atom.elem = elem[0].toUpperCase() + elem.substring(1).toLowerCase();\n\n    atom.serial = atoms[atoms.length - 1].length;\n    if (parseStyle) {\n      atom.style = styles[currentAtom.s || 0];\n    }\n    atoms[atoms.length - 1].push(atom);\n  }\n  for (let i = 0; i < bondsInFile.length; i++) {\n    let currentBond = bondsInFile[i];\n    let beginIndex = currentBond.b + offset;\n    let endIndex = currentBond.e + offset;\n    let bondOrder = currentBond.o || 1;\n\n    let firstAtom = atoms[atoms.length - 1][beginIndex];\n    let secondAtom = atoms[atoms.length - 1][endIndex];\n\n    firstAtom.bonds.push(endIndex);\n    firstAtom.bondOrder.push(bondOrder);\n    secondAtom.bonds.push(beginIndex);\n    secondAtom.bondOrder.push(bondOrder);\n  }\n  return atoms;\n}\n","import { ParserOptionsSpec } from \"./ParserOptionsSpec\";\n\nimport { computeSecondaryStructure } from \"./utils/computeSecondaryStructure\";\nimport { processSymmetries } from \"./utils/processSymmetries\";\nimport { conversionMatrix3, Matrix3, Matrix4, Vector3 } from \"../WebGL\";\nimport { assignPDBBonds } from \"./utils/assignPDBBonds\";\nimport { AtomSpec } from \"specs\";\n\n/**\n * Puts atoms specified in mmCIF fromat in str into atoms\n *\n * @param {string} str\n * @param {ParserOptionsSpec} options\n * @category Parsers\n */\n\n//coordinate conversion\nconst fractionalToCartesian = function (\n  cmat: Matrix3,\n  x: number,\n  y: number,\n  z: number\n) {\n  return new Vector3(x, y, z).applyMatrix3(cmat);\n};\n\nexport function CIF(str: string, options: ParserOptionsSpec = {}) {\n  const atoms: Array<AtomSpec[]> & { modelData?: unknown } = [];\n  const noAssembly = !options.doAssembly; // don't assemble by default\n  const modelData = (atoms.modelData = []);\n  const assignbonds =\n    options.assignBonds === undefined ? true : options.assignBonds;\n\n  // Used to handle quotes correctly\n  function splitRespectingQuotes(string: string, separator: string) {\n    const sections: string[] = [];\n    let sectionStart = 0;\n    let sectionEnd = 0;\n    while (sectionEnd < string.length) {\n      while (\n        string.substring(sectionEnd, sectionEnd + separator.length) !==\n          separator &&\n        sectionEnd < string.length\n      ) {\n        // currently does not support escaping quotes\n        if (string[sectionEnd] === \"'\") {\n          sectionEnd++;\n          while (sectionEnd < string.length && string[sectionEnd] !== \"'\") {\n            sectionEnd++;\n          }\n          //biopython apparently generates invalid string literals so if we think we are done but aren't at a separator keep going\n          while (\n            string.substring(sectionEnd, sectionEnd + separator.length) !==\n              separator &&\n            sectionEnd < string.length\n          ) {\n            sectionEnd++;\n          }\n        } else if (string[sectionEnd] === '\"') {\n          sectionEnd++;\n          while (sectionEnd < string.length && string[sectionEnd] !== '\"') {\n            sectionEnd++;\n          }\n          sectionEnd++;\n        } else {\n          sectionEnd++;\n        }\n      }\n      sections.push(string.substring(sectionStart, sectionEnd));\n      sectionStart = sectionEnd = sectionEnd + separator.length;\n    }\n    return sections;\n  }\n\n  const lines = str.split(/\\r?\\n|\\r/);\n  // Filter text to remove comments, trailing spaces, and empty lines\n  const linesFiltered: string[] = [];\n  let trimDisabled = false;\n  for (let lineNum = 0; lineNum < lines.length; lineNum++) {\n    // first remove comments\n    // incorrect if #'s are allowed in strings\n    // comments might only be allowed at beginning of line, not sure\n    var line = lines[lineNum].split(\"#\")[0];\n\n    // inside data blocks, the string must be left verbatim\n    // datablocks are started with a ';' at the beginning of a line\n    // and ended with a ';' on its own line.\n    if (trimDisabled) {\n      if (line[0] === \";\") {\n        trimDisabled = false;\n      }\n    } else {\n      if (line[0] === \";\") {\n        trimDisabled = true;\n      }\n    }\n\n    if (trimDisabled || line !== \"\") {\n      if (!trimDisabled) {\n        line = line.trim();\n        if (line[0] === \"_\") {\n          // Replace dot separating category from data item with underscore. Dots aren't guarenteed, to makes\n          // files consistent.\n          const dot = line.split(/\\s/)[0].indexOf(\".\");\n          if (dot > -1) {\n            let lineArr = line.split(\"\");\n            lineArr[dot] = \"_\";\n            line = lineArr.join(\"\");\n            line = line.substring(0, dot) + \"_\" + line.substring(dot + 1);\n          }\n        }\n      }\n      linesFiltered.push(line);\n    }\n  }\n\n  let lineNum = 0;\n  while (lineNum < linesFiltered.length) {\n    while (\n      !linesFiltered[lineNum].startsWith(\"data_\") ||\n      linesFiltered[lineNum] === \"data_global\"\n    ) {\n      lineNum++;\n    }\n    lineNum++;\n\n    // Process the lines and puts all of the data into an object.\n    const mmCIF: Record<string, any> = {};\n    while (\n      lineNum < linesFiltered.length &&\n      !linesFiltered[lineNum].startsWith(\"data_\")\n    ) {\n      if (linesFiltered[lineNum][0] === undefined) {\n        lineNum++;\n      } else if (linesFiltered[lineNum][0] === \"_\") {\n        const dataItemName = linesFiltered[lineNum]\n          .split(/\\s/)[0]\n          .toLowerCase();\n        const dataItem = (mmCIF[dataItemName] = mmCIF[dataItemName] || []);\n\n        // if nothing left on the line go to the next one\n        const restOfLine = linesFiltered[lineNum].substring(\n          linesFiltered[lineNum].indexOf(dataItemName) + dataItemName.length\n        );\n        if (restOfLine === \"\") {\n          lineNum++;\n          if (linesFiltered[lineNum][0] === \";\") {\n            let dataBlock = linesFiltered[lineNum].substring(1);\n            lineNum++;\n            while (linesFiltered[lineNum] !== \";\") {\n              dataBlock = dataBlock + \"\\n\" + linesFiltered[lineNum];\n              lineNum++;\n            }\n            dataItem.push(dataBlock);\n          } else {\n            dataItem.push(linesFiltered[lineNum]);\n          }\n        } else {\n          dataItem.push(restOfLine.trim());\n        }\n        lineNum++;\n      } else if (linesFiltered[lineNum].substring(0, 5) === \"loop_\") {\n        lineNum++;\n        const dataItems = [];\n        while (\n          linesFiltered[lineNum] === \"\" ||\n          linesFiltered[lineNum][0] === \"_\"\n        ) {\n          if (linesFiltered[lineNum] !== \"\") {\n            let dataItemName = linesFiltered[lineNum]\n              .split(/\\s/)[0]\n              .toLowerCase();\n            let dataItem = (mmCIF[dataItemName] = mmCIF[dataItemName] || []);\n            dataItems.push(dataItem);\n          }\n          lineNum++;\n        }\n\n        let currentDataItem = 0;\n        while (\n          lineNum < linesFiltered.length &&\n          linesFiltered[lineNum][0] !== \"_\" &&\n          !linesFiltered[lineNum].startsWith(\"loop_\") &&\n          !linesFiltered[lineNum].startsWith(\"data_\")\n        ) {\n          let line = splitRespectingQuotes(linesFiltered[lineNum], \" \");\n          for (let field = 0; field < line.length; field++) {\n            if (line[field] !== \"\") {\n              dataItems[currentDataItem].push(line[field]);\n              currentDataItem = (currentDataItem + 1) % dataItems.length;\n            }\n          }\n          lineNum++;\n        }\n      } else {\n        lineNum++;\n      }\n    }\n\n    modelData.push({ symmetries: [] });\n\n    // Pulls atom information out of the data\n    atoms.push([]);\n    const atomCount =\n      mmCIF._atom_site_id !== undefined\n        ? mmCIF._atom_site_id.length\n        : mmCIF._atom_site_label.length;\n\n    let conversionMatrix: Matrix3;\n    if (mmCIF._cell_length_a !== undefined) {\n      const a = parseFloat(mmCIF._cell_length_a);\n      const b = parseFloat(mmCIF._cell_length_b);\n      const c = parseFloat(mmCIF._cell_length_c);\n      const alpha_deg = parseFloat(mmCIF._cell_angle_alpha) || 90;\n      const beta_deg = parseFloat(mmCIF._cell_angle_beta) || 90;\n      const gamma_deg = parseFloat(mmCIF._cell_angle_gamma) || 90;\n\n      conversionMatrix = conversionMatrix3(\n        a,\n        b,\n        c,\n        alpha_deg,\n        beta_deg,\n        gamma_deg\n      );\n      modelData[modelData.length - 1].cryst = {\n        a: a,\n        b: b,\n        c: c,\n        alpha: alpha_deg,\n        beta: beta_deg,\n        gamma: gamma_deg,\n      };\n    }\n\n    for (let i = 0; i < atomCount; i++) {\n      if (\n        mmCIF._atom_site_group_pdb !== undefined &&\n        mmCIF._atom_site_group_pdb[i] === \"TER\"\n      )\n        continue;\n      const atom: AtomSpec = {};\n      if (mmCIF._atom_site_cartn_x !== undefined) {\n        atom.x = parseFloat(mmCIF._atom_site_cartn_x[i]);\n        atom.y = parseFloat(mmCIF._atom_site_cartn_y[i]);\n        atom.z = parseFloat(mmCIF._atom_site_cartn_z[i]);\n      } else {\n        const coords = fractionalToCartesian(\n          conversionMatrix,\n          parseFloat(mmCIF._atom_site_fract_x[i]),\n          parseFloat(mmCIF._atom_site_fract_y[i]),\n          parseFloat(mmCIF._atom_site_fract_z[i])\n        );\n        atom.x = coords.x;\n        atom.y = coords.y;\n        atom.z = coords.z;\n      }\n      atom.chain = mmCIF._atom_site_auth_asym_id\n        ? mmCIF._atom_site_auth_asym_id[i]\n        : mmCIF._atom_site_label_asym_id\n        ? mmCIF._atom_site_label_asym_id[i]\n        : undefined;\n      atom.resi = mmCIF._atom_site_auth_seq_id\n        ? parseInt(mmCIF._atom_site_auth_seq_id[i])\n        : mmCIF._atom_site_label_seq_id\n        ? mmCIF._atom_site_label_seq_id[i]\n        : undefined;\n      atom.resn = mmCIF._atom_site_auth_comp_id\n        ? mmCIF._atom_site_auth_comp_id[i].trim()\n        : mmCIF._atom_site_label_comp_id\n        ? mmCIF._atom_site_label_comp_id[i].trim()\n        : undefined;\n      atom.atom = mmCIF._atom_site_auth_atom_id\n        ? mmCIF._atom_site_auth_atom_id[i].replace(/\"/gm, \"\")\n        : mmCIF._atom_site_label_atom_id\n        ? mmCIF._atom_site_label_atom_id[i].replace(/\"/gm, \"\")\n        : undefined; //\"primed\" names are in quotes\n      atom.hetflag =\n        !mmCIF._atom_site_group_pdb ||\n        mmCIF._atom_site_group_pdb[i] === \"HETA\" ||\n        mmCIF._atom_site_group_pdb[i] === \"HETATM\";\n      if(mmCIF._atom_site_b_iso_or_equiv ) {\n        atom.b = parseFloat(mmCIF._atom_site_b_iso_or_equiv[i]);\n      }\n      let elem = \"X\";\n      if (mmCIF._atom_site_type_symbol) {\n        elem = mmCIF._atom_site_type_symbol[i].replace(/\\(?\\+?\\d+.*/, \"\");\n      } else if (mmCIF._atom_site_label) {\n        //first two components are concatenated, then separated by underscore\n        //best I can do is assume second component, if present, starts with a number\n        elem = mmCIF._atom_site_label[i].split(\"_\")[0].replace(/\\(?\\d+.*/, \"\");\n      }\n      atom.elem = elem[0].toUpperCase() + elem.substring(1, 2).toLowerCase();\n      atom.bonds = [];\n      atom.ss = \"c\";\n      atom.serial = i;\n      atom.bondOrder = [];\n      atom.properties = {};\n      atoms[atoms.length - 1].push(atom);\n    }\n\n    if (mmCIF._pdbx_struct_oper_list_id !== undefined && !noAssembly) {\n      for (let i = 0; i < mmCIF._pdbx_struct_oper_list_id.length; i++) {\n        const matrix11 = parseFloat(\n          mmCIF[\"_pdbx_struct_oper_list_matrix[1][1]\"][i]\n        );\n        const matrix12 = parseFloat(\n          mmCIF[\"_pdbx_struct_oper_list_matrix[1][2]\"][i]\n        );\n        const matrix13 = parseFloat(\n          mmCIF[\"_pdbx_struct_oper_list_matrix[1][3]\"][i]\n        );\n        const vector1 = parseFloat(\n          mmCIF[\"_pdbx_struct_oper_list_vector[1]\"][i]\n        );\n        const matrix21 = parseFloat(\n          mmCIF[\"_pdbx_struct_oper_list_matrix[2][1]\"][i]\n        );\n        const matrix22 = parseFloat(\n          mmCIF[\"_pdbx_struct_oper_list_matrix[2][2]\"][i]\n        );\n        const matrix23 = parseFloat(\n          mmCIF[\"_pdbx_struct_oper_list_matrix[2][3]\"][i]\n        );\n        const vector2 = parseFloat(\n          mmCIF[\"_pdbx_struct_oper_list_vector[2]\"][i]\n        );\n        const matrix31 = parseFloat(\n          mmCIF[\"_pdbx_struct_oper_list_matrix[3][1]\"][i]\n        );\n        const matrix32 = parseFloat(\n          mmCIF[\"_pdbx_struct_oper_list_matrix[3][2]\"][i]\n        );\n        const matrix33 = parseFloat(\n          mmCIF[\"_pdbx_struct_oper_list_matrix[3][3]\"][i]\n        );\n        const vector3 = parseFloat(\n          mmCIF[\"_pdbx_struct_oper_list_vector[3]\"][i]\n        );\n\n        const matrix = new Matrix4(\n          matrix11,\n          matrix12,\n          matrix13,\n          vector1,\n          matrix21,\n          matrix22,\n          matrix23,\n          vector2,\n          matrix31,\n          matrix32,\n          matrix33,\n          vector3\n        );\n        modelData[modelData.length - 1].symmetries.push(matrix);\n      }\n    }\n    const parseTerm = function (term: string) {\n      const negative = term.match(\"-\");\n      term = term.replace(/[-xyz]/g, \"\");\n      const fractionParts = term.split(\"/\");\n\n      let numerator: number, denominator: number;\n      if (fractionParts[1] === undefined) {\n        denominator = 1;\n      } else {\n        denominator = parseInt(fractionParts[1]);\n      }\n      if (fractionParts[0] === \"\") {\n        numerator = 1;\n      } else {\n        numerator = parseInt(fractionParts[0]);\n      }\n      return (numerator / denominator) * (negative ? -1 : 1);\n    };\n    if (mmCIF._symmetry_equiv_pos_as_xyz !== undefined && !noAssembly) {\n      for (let sym = 0; sym < mmCIF._symmetry_equiv_pos_as_xyz.length; sym++) {\n        const transform = mmCIF._symmetry_equiv_pos_as_xyz[sym].replace(\n          /[\"' ]/g,\n          \"\"\n        );\n        const componentStrings = transform\n          .split(\",\")\n          .map(function (val: string) {\n            return val.replace(/-/g, \"+-\");\n          });\n        let matrix = new Matrix4(\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          0,\n          1\n        );\n        for (let coord = 0; coord < 3; coord++) {\n          const terms = componentStrings[coord].split(\"+\");\n          for (let t = 0; t < terms.length; t++) {\n            const term = terms[t];\n            if (term === \"\") continue;\n            const coefficient = parseTerm(term);\n            if (term.match(\"x\")) {\n              matrix.elements[coord + 0] = coefficient;\n            } else if (term.match(\"y\")) {\n              matrix.elements[coord + 4] = coefficient;\n            } else if (term.match(\"z\")) {\n              matrix.elements[coord + 8] = coefficient;\n            } else {\n              matrix.elements[coord + 12] = coefficient;\n            }\n          }\n        }\n        const conversionMatrix4 = conversionMatrix.getMatrix4();\n        const conversionInverse = new Matrix4().getInverse(\n          conversionMatrix4,\n          true\n        );\n        matrix = new Matrix4().multiplyMatrices(matrix, conversionInverse);\n        matrix = new Matrix4().multiplyMatrices(conversionMatrix4, matrix);\n        modelData[modelData.length - 1].symmetries.push(matrix);\n      }\n    }\n  }\n  for (let i = 0; i < atoms.length; i++) {\n    if (\n      assignbonds &&\n      !(options.duplicateAssemblyAtoms && !options.dontConnectDuplicatedAtoms)\n    ) {\n      assignPDBBonds(atoms[i], options);\n    }\n    computeSecondaryStructure(atoms[i], options.hbondCutoff);\n    processSymmetries(\n      modelData[i].symmetries,\n      atoms[i],\n      options,\n      modelData[i].cryst\n    );\n    if (\n      options.duplicateAssemblyAtoms &&\n      !options.dontConnectDuplicatedAtoms &&\n      assignbonds\n    )\n      assignPDBBonds(atoms[i], options);\n  }\n\n  return atoms;\n}\n","import { Vector3, Matrix4 } from \"../WebGL\";\nimport { assignBonds } from \"./utils/assignBonds\";\nimport { anumToSymbol } from \"./utils/anumToSymbol\";\nimport { ParserOptionsSpec } from \"./ParserOptionsSpec\";\nimport { AtomSpec, Cryst } from \"specs\";\n\n/**\n * @param {string}\n *            str\n * @param {ParserOptionsSpec}\n *            options\n * @category Parsers\n */\nexport function CUBE(str: string, options: ParserOptionsSpec) {\n  options = options || {};\n  const atoms: Array<AtomSpec[]> & { modelData?: unknown } = [[]];\n  let lines = str.split(/\\r?\\n/);\n  const assignbonds =\n    options.assignBonds === undefined ? true : options.assignBonds;\n\n  if (lines.length < 6) return atoms;\n\n  let lineArr = lines[2].replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n\n  const natoms = Math.abs(parseFloat(lineArr[0]));\n\n  let cryst: Omit<Cryst, \"a\" | \"b\" | \"c\" | \"alpha\" | \"beta\" | \"gamma\"> = {\n    origin: undefined,\n    size: undefined,\n    unit: undefined,\n    matrix4: undefined,\n    matrix: undefined,\n  };\n\n  const origin = (cryst.origin = new Vector3(\n    parseFloat(lineArr[1]),\n    parseFloat(lineArr[2]),\n    parseFloat(lineArr[3])\n  ));\n\n  lineArr = lines[3].replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n  lineArr = lines[3].replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n\n  // might have to convert from bohr units to angstroms\n  // there is a great deal of confusion here:\n  // n>0 means angstroms: http://www.gaussian.com/g_tech/g_ur/u_cubegen.htm\n  // n<0 means angstroms: http://paulbourke.net/dataformats/cube/\n  // always assume bohr: openbabel source code\n  // always assume angstrom: http://www.ks.uiuc.edu/Research/vmd/plugins/molfile/cubeplugin.html\n  // we are going to go with n<0 means angstrom - note this is just the first n\n  const convFactor = (lineArr[0] as any) > 0 ? 0.529177 : 1;\n  origin.multiplyScalar(convFactor);\n\n  const nX = Math.abs(lineArr[0] as any);\n  const xVec = new Vector3(\n    parseFloat(lineArr[1]),\n    parseFloat(lineArr[2]),\n    parseFloat(lineArr[3])\n  ).multiplyScalar(convFactor);\n\n  lineArr = lines[4].replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n  const nY = Math.abs(lineArr[0] as any);\n  const yVec = new Vector3(\n    parseFloat(lineArr[1]),\n    parseFloat(lineArr[2]),\n    parseFloat(lineArr[3])\n  ).multiplyScalar(convFactor);\n\n  lineArr = lines[5].replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n  const nZ = Math.abs(lineArr[0] as any);\n  const zVec = new Vector3(\n    parseFloat(lineArr[1]),\n    parseFloat(lineArr[2]),\n    parseFloat(lineArr[3])\n  ).multiplyScalar(convFactor);\n\n  cryst.size = { x: nX, y: nY, z: nZ };\n  cryst.unit = new Vector3(xVec.x, yVec.y, zVec.z);\n\n  if (\n    xVec.y != 0 ||\n    xVec.z != 0 ||\n    yVec.x != 0 ||\n    yVec.z != 0 ||\n    zVec.x != 0 ||\n    zVec.y != 0\n  ) {\n    //need a transformation matrix\n    cryst.matrix4 = new Matrix4(\n      xVec.x,\n      yVec.x,\n      zVec.x,\n      0,\n      xVec.y,\n      yVec.y,\n      zVec.y,\n      0,\n      xVec.z,\n      yVec.z,\n      zVec.z,\n      0,\n      0,\n      0,\n      0,\n      1\n    );\n    // include translation in matrix\n    let t = new Matrix4().makeTranslation(origin.x, origin.y, origin.z);\n    cryst.matrix4 = cryst.matrix4.multiplyMatrices(t, cryst.matrix4);\n    cryst.matrix = cryst.matrix4.matrix3FromTopLeft();\n    // all translation and scaling done by matrix, so reset origin and unit\n    cryst.origin = new Vector3(0, 0, 0);\n    cryst.unit = new Vector3(1, 1, 1);\n  }\n\n  atoms.modelData = [{ cryst: cryst }];\n\n  // Extract atom portion; send to new GLModel...\n  lines = lines.splice(6, natoms);\n\n  var start = atoms[atoms.length - 1].length;\n  var end = start + lines.length;\n\n  for (var i = start; i < end; ++i) {\n    var atom: Record<string, any> = {};\n    atom.serial = i;\n    var line = lines[i - start];\n    var tokens = line.replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n    atom.elem = anumToSymbol[tokens[0]];\n    atom.x = parseFloat(tokens[2]) * convFactor;\n    atom.y = parseFloat(tokens[3]) * convFactor;\n    atom.z = parseFloat(tokens[4]) * convFactor;\n\n    atom.hetflag = true;\n    atom.bonds = [];\n    atom.bondOrder = [];\n    atom.properties = {};\n    atoms[atoms.length - 1].push(atom);\n  }\n\n  if (assignbonds) {\n    for (let i = 0; i < atoms.length; i++) assignBonds(atoms[i], options);\n  }\n  return atoms;\n}\n","import { AtomSpec } from \"specs\";\nimport { ParserOptionsSpec } from \"./ParserOptionsSpec\";\nimport { assignPDBBonds } from \"./utils/assignPDBBonds\";\nimport { atomNameToElem } from \"./utils/atomNameToElem\";\n\n/**\n * Parse a gro file from str and create atoms\n *\n * @param {string} str\n * @param {ParserOptionsSpec} options\n * @category Parsers\n * @returns {Array<AtomSpec[]>} - Returns a 2D array of type AtomSpec\n */\n\nexport function GRO(str: string, options: ParserOptionsSpec) {\n  const allatoms: AtomSpec[][] & { box?: string[] } = [];\n  const lines = str.split(/\\r?\\n|\\r/);\n  while (lines.length > 0) {\n    const atomCount = parseInt(lines[1]);\n    const breakCondition =\n      lines.length < 3 ||\n      isNaN(atomCount) ||\n      atomCount <= 0 ||\n      lines.length < atomCount + 3;\n    if (breakCondition) break;\n    const atoms: AtomSpec[] = [];\n    allatoms.push(atoms);\n    let offset = 2;\n    const start = atoms.length;\n    const end = start + atomCount;\n    for (let i = start; i < end; i++) {\n      const line = lines[offset++];\n      const atom: AtomSpec = {};\n      atom.serial = i;\n      atom.atom = line.slice(10, 15).trim();\n      atom.elem = atomNameToElem(atom.atom, true);\n      //coordinates are in nM, convert to A\n      atom.x = 10.0 * parseFloat(line.slice(20, 28));\n      atom.y = 10.0 * parseFloat(line.slice(28, 36));\n      atom.z = 10.0 * parseFloat(line.slice(36, 44));\n      atom.resi = parseInt(line.slice(0, 5));\n      atom.resn = line.slice(5, 10).trim();\n      atom.bonds = [];\n      atom.bondOrder = [];\n      atom.properties = {};\n      if (line.length > 44) {\n        atom.dx = 10.0 * parseFloat(line.slice(44, 52));\n        atom.dy = 10.0 * parseFloat(line.slice(52, 60));\n        atom.dz = 10.0 * parseFloat(line.slice(60, 68));\n      }\n      atoms[i] = atom;\n    } //for all atoms\n\n    if (lines.length <= offset + 3) {\n      //single line left, assume it is the box\n      const last = lines[offset++];\n      const box = last.trim().split(/\\s+/);\n      if (box.length === 3) {\n        for (let b = 0; b < 3; b++) {\n          box[b] = (parseFloat(box[b]) * 10.0).toString();\n        }\n        allatoms.box = box;\n      }\n    }\n    lines.splice(0, ++offset);\n  }\n\n  for (let i = 0; i < allatoms.length; i++) {\n    assignPDBBonds(allatoms[i], options);\n  }\n  return allatoms;\n}\n","import { AtomSpec } from \"specs\";\nimport { ParserOptionsSpec } from \"./ParserOptionsSpec\";\nimport { assignBonds } from \"./utils/assignBonds\";\n\n/**\n * Parse a lammps trajectory file from str and create atoms\n * \n * @category Parsers\n*/\nconst dic: Record<string,string> = {\n    id: \"serial\",\n    type: \"atom\",\n    element: \"elem\",\n    q: \"charge\",\n    radius: \"radius\",\n    x: \"x\",\n    xu: \"x\",\n    xs: \"x\",\n    xsu: \"x\",\n    y: \"y\",\n    yu: \"y\",\n    ys: \"y\",\n    ysu: \"y\",\n    z: \"z\",\n    zu: \"z\",\n    zs: \"z\",\n    zsu: \"z\",\n  };\n\nexport function LAMMPSTRJ(str: string, options: ParserOptionsSpec) {\n  const atoms: AtomSpec[][] = [];\n  const lines = str.split(/\\r?\\n|\\r/);\n  let offset = 0;\n  let atomCount = 0;\n  let start = 0;\n  while (start < lines.length - 9) {\n    for (var j = start; j < lines.length; j++) {\n      if (lines[j].match(/ITEM: NUMBER OF ATOMS/))\n        atomCount = parseInt(lines[j + 1]);\n      if (lines[j].match(/ITEM: ATOMS/)) {\n        offset = j + 1;\n        break;\n      }\n    }\n    const types = lines[offset - 1].replace(\"ITEM: ATOMS \", \"\").split(\" \");\n    atoms.push([]);\n    for (let j = offset; j < offset + atomCount; j++) {\n      const atom: AtomSpec = {};\n      const properties = {};\n      const tokens = lines[j].split(\" \");\n      for (let k = 0; k < tokens.length; k++) {\n        const prop = dic[types[k]];\n        if (prop !== undefined) {\n          if (prop === \"serial\") atom[prop] = parseInt(tokens[k]);\n          else if (prop === \"x\" || prop === \"y\" || prop === \"z\")\n            atom[prop] = parseFloat(tokens[k]);\n          else if (prop === \"charge\" || prop === \"radius\")\n            properties[prop] = parseFloat(tokens[k]);\n          else atom[prop] = tokens[k];\n        }\n        atom.properties = properties;\n        atom.bonds = [];\n        atom.bondOrder = [];\n      }\n      atoms[atoms.length - 1][j - offset] = atom;\n    }\n    start = offset + atomCount - 1;\n  }\n  if (options.assignBonds) {\n    for (let i = 0; i < atoms.length; i++) assignBonds(atoms[i], options);\n  }\n  return atoms;\n}\n","import { base64ToArray } from \"../utilities\";\nimport { Matrix4 } from \"../WebGL\";\nimport { ParserOptionsSpec } from \"./ParserOptionsSpec\";\nimport { computeSecondaryStructure } from \"./utils/computeSecondaryStructure\";\nimport { processSymmetries } from \"./utils/processSymmetries\";\n\nexport interface MMTFobj {\n    decode(data: Uint8Array | ArrayBuffer): any;\n    decodeMsgpack(data: Uint8Array | ArrayBuffer): any;\n}\ndeclare var MMTF: MMTFobj;\n\nvar fromCharCode = function (charCodeArray: any) {\n    return String.fromCharCode.apply(null, charCodeArray).replace(/\\0/g, '');\n};\n\nvar convertSS = function (val: number | boolean) {\n    // Convert mmtf code to 3dmol code\n    /*    \n      0:  pi helix\n      1:  bend\n      2:  alpha helix\n      3:  sheet extended\n      4:  3-10 helix\n      5:  bridge\n      6:  turn\n      7:  coil\n     */\n    if (val == 0 || val == 2 || val == 4) return 'h';\n    if (val == 3) return 's';\n    return 'c';\n};\n\nlet mmtfHETATMtypes = new Set([\n    \"D-SACCHARIDE\",\n    \"D-SACCHARIDE 1,4 AND 1,4 LINKING\",\n    \"D-SACCHARIDE 1,4 AND 1,6 LINKING\",\n    \"L-SACCHARIDE\",\n    \"L-SACCHARIDE 1,4 AND 1,4 LINKING\",\n    \"L-SACCHARIDE 1,4 AND 1,6 LINKING\",\n    \"NON-POLYMER\",\n    \"OTHER\",\n    \"PEPTIDE-LIKE\",\n    \"SACCHARIDE\"]);\n\n/** \n * @param bindata - binary UInt8Array buffer or a base64 encoded string\n * @param ParserOptionsSpec\n * @category Parsers\n*/\nexport function MMTFparser(bindata: any, options: ParserOptionsSpec) {\n\n    var noH = !options.keepH; // suppress hydrogens by default\n    var selAltLoc = options.altLoc ? options.altLoc : 'A'; //default alternate location to select if present\n    var ignoreStruct = !!options.noSecondaryStructure;\n    var computeStruct = !options.noComputeSecondaryStructure;\n    //extract symmetries - only take first assembly, apply to all models (ignoring changes for now)\n    var noAssembly = !options.doAssembly; // don't assemble by default\n    var assemblyIndex = options.assemblyIndex ? options.assemblyIndex : 0;\n\n    if (typeof (bindata) == \"string\") {\n        //assume base64 encoded\n        bindata = base64ToArray(bindata);\n    } else {\n        bindata = new Uint8Array(bindata);\n    }\n\n    var mmtfData = MMTF.decode(bindata);\n\n    var atoms: any[][] & Record<string, any> = [[]];\n    var modelData: any[] = atoms.modelData = [];\n\n    // setup index counters\n    var chainIndex = 0;\n    var groupIndex = 0;\n    var atomIndex = 0;\n\n    // setup optional fields\n    var secStructList = mmtfData.secStructList;\n    var bFactorList = mmtfData.bFactorList;\n    var altLocList = mmtfData.altLocList;\n    var occupancyList = mmtfData.occupancyList;\n    var bondAtomList = mmtfData.bondAtomList;\n    var bondOrderList = mmtfData.bondOrderList;\n\n    var numModels = mmtfData.numModels;\n    if (numModels == 0) return atoms;\n    if (!options.multimodel) numModels = 1; //first only\n    // hoisted loop variables\n    var i: number, j: number, k: number, kl: number, m: number, n: number;\n\n\n\n    var symmetries: Matrix4[] = [];\n    if (!noAssembly && mmtfData.bioAssemblyList && mmtfData.bioAssemblyList.length > 0) {\n        var transforms = mmtfData.bioAssemblyList[assemblyIndex].transformList;\n        for (i = 0, n = transforms.length; i < n; i++) {\n            var matrix = new Matrix4(transforms[i].matrix);\n            matrix.transpose();\n            symmetries.push(matrix);\n        }\n    }\n    var unitCell = null as Record<string, number> | null;\n    //unit cell info\n    if (mmtfData.unitCell) {\n        var u = mmtfData.unitCell;\n        unitCell = { 'a': u[0], 'b': u[1], 'c': u[2], 'alpha': u[3], 'beta': u[4], 'gamma': u[5] };\n    }\n\n    let chainIsPolymer: boolean[] = [];\n    mmtfData.entityList.forEach((entity: { chainIndexList: any[]; type: string; }) => {\n        entity.chainIndexList.forEach(ch => {\n            chainIsPolymer[ch] = entity.type == \"polymer\";\n        });\n    });\n    var bondAtomListStart = 0; //for current model\n    //loop over models, \n    for (m = 0; m < numModels; m++) {\n        var modelChainCount = mmtfData.chainsPerModel[m];\n        var matoms = atoms[atoms.length - 1];\n        var serialToIndex: number[] = []; // map to matoms index, needed for noh\n\n        modelData.push({ symmetries: symmetries, cryst: unitCell });\n        for (i = 0; i < modelChainCount; ++i) {\n\n            var chainGroupCount = mmtfData.groupsPerChain[chainIndex];\n            var chainId = fromCharCode(\n                mmtfData.chainIdList.subarray(chainIndex * 4, chainIndex * 4 + 4)\n            );\n            if (mmtfData.chainNameList) {\n                chainId = fromCharCode(\n                    mmtfData.chainNameList.subarray(chainIndex * 4, chainIndex * 4 + 4)\n                );\n            }\n\n            var startGroup = groupIndex;\n            var prevSS = '';\n            for (j = 0; j < chainGroupCount; ++j) { //over residues (groups)\n\n                var groupData = mmtfData.groupList[mmtfData.groupTypeList[groupIndex]];\n                var groupAtomCount = groupData.atomNameList.length;\n                var secStruct = 0;\n                var secStructBegin = false;\n                var secStructEnd = false;\n\n                if (secStructList) {\n                    secStruct = secStructList[groupIndex];\n                    var sscode = convertSS(secStruct);\n                    if (groupIndex == 0 || sscode != prevSS) {\n                        secStructBegin = true;\n                    }\n                    prevSS = sscode;\n                    var nextgroup = groupIndex + 1;\n                    if (nextgroup >= secStructList.length || convertSS(secStructList[nextgroup] != sscode)) {\n                        secStructEnd = true;\n                    }\n                }\n                var groupId = mmtfData.groupIdList[groupIndex];\n                var groupName = groupData.groupName;\n                let groupType = groupData.chemCompType;\n                var startAtom = atomIndex;\n                // Note the following is not identical to respecting HETATM records\n                // this information isn't available in MMTF.  \n                let isHETATM = mmtfHETATMtypes.has(groupType) || !chainIsPolymer[chainIndex];\n\n                for (k = 0; k < groupAtomCount; ++k) {\n\n                    var element = groupData.elementList[k];\n                    if (noH && element == 'H') {\n                        atomIndex += 1;\n                        continue;\n                    }\n\n                    var bFactor = '';\n                    if (bFactorList) {\n                        bFactor = bFactorList[atomIndex];\n                    }\n                    var altLoc = '';\n                    if (altLocList && altLocList[atomIndex]) { //not zero\n                        altLoc = String.fromCharCode(altLocList[atomIndex]);\n                    }\n                    var occupancy = '';\n                    if (occupancyList) {\n                        occupancy = occupancyList[atomIndex];\n                    }\n\n                    if (altLoc != '' && altLoc != selAltLoc && selAltLoc != '*') {\n                        atomIndex += 1;\n                        continue;\n                    }\n\n                    var atomId = mmtfData.atomIdList[atomIndex];\n                    var atomName = groupData.atomNameList[k];\n                    var atomCharge = 0;\n                    if (groupData.atomChargeList) atomCharge = groupData.atomChargeList[k];\n                    var xCoord = mmtfData.xCoordList[atomIndex];\n                    var yCoord = mmtfData.yCoordList[atomIndex];\n                    var zCoord = mmtfData.zCoordList[atomIndex];\n\n                    serialToIndex[atomIndex] = matoms.length;\n                    matoms.push({\n                        'resn': groupName,\n                        'x': xCoord,\n                        'y': yCoord,\n                        'z': zCoord,\n                        'elem': element,\n                        'hetflag': isHETATM,\n                        'chain': chainId,\n                        'resi': groupId,\n                        'icode': altLoc,\n                        'rescode': groupId + (altLoc != ' ' ? \"^\" + altLoc : \"\"), // combo\n                        // resi\n                        // and\n                        // icode\n                        'serial': atomId,\n                        'altLoc': altLoc,\n                        'index': atomIndex,\n                        'atom': atomName,\n                        'bonds': [],\n                        'ss': convertSS(secStruct),\n                        'ssbegin': secStructBegin,\n                        'ssend': secStructEnd,\n                        'bondOrder': [],\n                        'properties': { charge: atomCharge, occupancy: occupancy },\n                        'b': bFactor,\n                    });\n\n                    atomIndex += 1;\n                }\n\n                // intra group bonds\n                var groupBondAtomList = groupData.bondAtomList;\n                for (k = 0, kl = groupData.bondOrderList.length; k < kl; ++k) {\n                    var atomIndex1 = startAtom + groupBondAtomList[k * 2];\n                    var atomIndex2 = startAtom + groupBondAtomList[k * 2 + 1];\n                    var bondOrder = groupData.bondOrderList[k];\n\n                    //I assume bonds are only recorded once\n                    var i1 = serialToIndex[atomIndex1];\n                    var i2 = serialToIndex[atomIndex2];\n                    var a1 = matoms[i1];\n                    var a2 = matoms[i2];\n                    if (a1 && a2) {\n                        a1.bonds.push(i2);\n                        a1.bondOrder.push(bondOrder);\n                        a2.bonds.push(i1);\n                        a2.bondOrder.push(bondOrder);\n                    }\n                }\n\n                groupIndex += 1;\n            }\n\n            //reset for bonds\n            groupIndex = startGroup;\n            for (j = 0; j < chainGroupCount; ++j) { //over residues (groups)\n\n                groupIndex += 1;\n\n            }\n\n            chainIndex += 1;\n        }\n\n\n        // inter group bonds\n        if (bondAtomList) {\n            for (let k = bondAtomListStart, kl = bondAtomList.length; k < kl; k += 2) {\n                let atomIndex1 = bondAtomList[k];\n                let atomIndex2 = bondAtomList[k + 1];\n                let bondOrder = bondOrderList ? bondOrderList[k / 2] : 1;\n\n                if (atomIndex1 >= atomIndex) {\n                    bondAtomListStart = k;\n                    break; //on next model\n                }\n                //I assume bonds are only recorded once\n                let i1 = serialToIndex[atomIndex1];\n                let i2 = serialToIndex[atomIndex2];\n                let a1 = matoms[i1];\n                let a2 = matoms[i2];\n                if (a1 && a2) {\n                    a1.bonds.push(i2);\n                    a1.bondOrder.push(bondOrder);\n                    a2.bonds.push(i1);\n                    a2.bondOrder.push(bondOrder);\n                }\n            }\n        }\n\n        if (options.multimodel) {\n            if (!options.onemol) atoms.push([]);\n        }\n    }\n\n    if (!noAssembly) {\n        for (let n = 0; n < atoms.length; n++) {\n            processSymmetries(modelData[n].symmetries, atoms[n], options, modelData[n].cryst);\n        }\n    }\n\n    if (computeStruct && !ignoreStruct) {\n        computeSecondaryStructure(atoms as any, options.hbondCutoff);\n    }\n\n    return atoms;\n};","import { ParserOptionsSpec } from \"./ParserOptionsSpec\";\n\nlet SYBYLtoElem:any = {\n  'C.1': 'C',\n  'C1': 'C',\n  'C.2': 'C',\n  'C2': 'C',\n  'C.3': 'C',\n  'C3': 'C',  \n  'C.ar': 'C',\n  'Car': 'C',\n  'C.cat': 'C',\n  'Ccat': 'C',\n  'H.spc' :'H',\n  'Hspc':'H',\n  'H.t3p':'H',\n  'Ht3p': 'H',\n  'N.1':'N',\n  'N1':'N',\n  'N.2':'N',\n  'N2':'N',\n  'N.3':'N',\n  'N3':'N',\n  'N.4':'N',\n  'N4':'N',\n  'N.am':'N',\n  'Nam':'N',\n  'N.ar':'N',\n  'Nar':'N',\n  'N.p13':'N',\n  'Np13':'N',    \n  'O.2':'O',\n  'O2':'O',\n  'O.3':'O',\n  'O3':'O',\n  'O.co2':'O',\n  'Oco2':'O',\n  'O.spc':'O',\n  'Ospc':'O',    \n  'O.t3p':'O',\n  'Ot3p':'O',  \n  'P.3':'P',\n  'P3':'P',\n  'S.2':'S',\n  'S2':'S',  \n  'S.3':'S',\n  'S3':'S',  \n  'S.o':'S',\n  'So':'S',  \n  'S.o2':'S',\n  'So2':'S'\n};\n\n// Parse SYBYL mol2 file from string - assumed to only contain one molecule tag\n\n/**\n * @param {string}\n *            str\n * @param {ParserOptionsSpec}\n *            options\n * @category Parsers\n*/\n\nexport function MOL2(str: string, options: ParserOptionsSpec) {\n  var atoms: any[][] & Record<string,any> = [[]];\n  var noH = false;\n  if (typeof options.keepH !== \"undefined\") noH = !options.keepH;\n\n  // Note: these regex's work, though they don't match '<TRIPOS>'\n  // correctly - something to do with angle brackets\n  var mol_pos = str.search(/@<TRIPOS>MOLECULE/);\n  var atom_pos = str.search(/@<TRIPOS>ATOM/);\n\n  // Assuming both Molecule and Atom sections exist\n  if (mol_pos == -1 || atom_pos == -1) return atoms;\n\n  var lines = str.substring(mol_pos).split(/\\r?\\n|\\r/);\n  while (lines.length > 0) {\n    // serial is atom's index in file; index is atoms index in 'atoms'\n    var serialToIndex: number[] = [];\n    var tokens = lines[2].replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n    var natoms = parseInt(tokens[0]);\n    var nbonds = 0;\n\n    if (tokens.length > 1) nbonds = parseInt(tokens[1]);\n\n    var offset = 4;\n    var i: number;\n    // Continue until 'Atom' section\n    for (i = 3; i < lines.length; i++) {\n      if (lines[i] == \"@<TRIPOS>ATOM\") {\n        offset = i + 1;\n        break;\n      }\n    }\n\n    var start = atoms[atoms.length - 1].length;\n    var end = start + natoms;\n    var line: string;\n    // Process ATOMS\n    for (i = start; i < end; i++) {\n      line = lines[offset++];\n      tokens = line.replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n      var atom: Record<string, any> = {};\n      // get element\n      var elem = tokens[5];\n      if(SYBYLtoElem[elem] !== undefined) {        \n        elem = SYBYLtoElem[elem];\n      } else {\n        elem = elem.split(\".\")[0];\n        elem = elem[0].toUpperCase() + elem.substring(1).toLowerCase();\n      }\n\n      atom.atom = tokens[1];\n      atom.elem = elem;\n        \n      if (atom.elem == \"H\" && noH) {\n        // ignore\n      } else {\n        // 'index' is this atom's index in 'atoms'; 'serial' is this\n        // atom's\n        // serial id in mol2 file\n        var index = atoms[atoms.length - 1].length;\n        var serial = parseInt(tokens[0]);\n        atom.serial = serial;\n        // atom.serial = i;\n\n        atom.x = parseFloat(tokens[2]);\n        atom.y = parseFloat(tokens[3]);\n        atom.z = parseFloat(tokens[4]);\n        atom.atom = tokens[5];\n        var charge = parseFloat(tokens[8]);\n\n        atom.index = index;\n        atom.bonds = [];\n        atom.bondOrder = [];\n        atom.properties = {\n          charge: charge,\n          partialCharge: charge,\n        };\n        serialToIndex[serial] = index;\n\n        atoms[atoms.length - 1].push(atom);\n      }\n    }\n\n    // Process BONDS\n    var bonds_found = false;\n    while (offset < lines.length) {\n      if (lines[offset++] == \"@<TRIPOS>BOND\") {\n        bonds_found = true;\n        break;\n      }\n    }\n\n    if (bonds_found && nbonds) {\n      for (i = 0; i < nbonds; i++) {\n        line = lines[offset++];\n\n        tokens = line.replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n        var from = parseInt(tokens[1]);\n        var fromAtom = atoms[atoms.length - 1][serialToIndex[from]];\n        var to = parseInt(tokens[2]);\n        var toAtom = atoms[atoms.length - 1][serialToIndex[to]];\n\n        // Won't be able to read aromatic bonds correctly...\n        var order = parseInt(tokens[3]);\n        if (isNaN(order)) order = 1;\n\n        if (fromAtom !== undefined && toAtom !== undefined) {\n          fromAtom.bonds.push(serialToIndex[to]);\n          fromAtom.bondOrder.push(order);\n          toAtom.bonds.push(serialToIndex[from]);\n          toAtom.bondOrder.push(order);\n        }\n      }\n    }\n    if (options.multimodel) {\n      if (!options.onemol) atoms.push([]);\n      lines.splice(0, offset);\n      str = lines.join(\"\\n\"); //update for str.search\n      continue;\n    } else {\n      break;\n    }\n  }\n  return atoms;\n}\n","import { ParserOptionsSpec } from \"./ParserOptionsSpec\";\nimport { getSinglePDB } from \"./utils/getSinglePDB\";\n\n/**\n * Parse pdb file from str and create atoms if computeStruct is true will always perform secondary structure analysis, \n * otherwise only do analysis of SHEET/HELIX comments are missing\n * \n * @param {string} str\n * @param {ParserOptionsSpec} options - keepH (do not strip hydrogens), noSecondaryStructure,\n *            assignbonds (default true, calculate implicit bonds)\n *            (do not compute ss), altLoc (which alternate location to select, if present; '*' to load all)\n * @category Parsers\n * \n*/\n\nexport function PDB(str: string, options: ParserOptionsSpec) {\n  options = options || {};\n  var atoms: any[] & Record<string, any> = []; //a separate list for each model\n  var sslookup = {}; //stores SHEET and HELIX info, which is shared across models\n  atoms.modelData = [];\n  var lines: any = str.split(/\\r?\\n|\\r/);\n  while (lines.length > 0) {\n    var pdbinfo = getSinglePDB(lines, options, sslookup);\n    var modelatoms = pdbinfo[0];\n    var modelData = pdbinfo[1];\n    lines = pdbinfo[2];\n\n    if (modelatoms.length == 0) {\n      continue; //happens when there are blank lines\n    }\n    if (options.multimodel && options.onemol && atoms.length > 0) {\n      //merge into existing atoms\n      var inc = atoms[0].length;\n      for (var i = 0; i < modelatoms.length; i++) {\n        //renumber\n        var atom = modelatoms[i];\n        atom.index = i;\n        for (var b = 0; b < atom.bonds.length; b++) {\n          atom.bonds[b] += inc;\n        }\n        atoms[0].push(atom);\n      }\n    } else {\n      atoms.modelData.push(modelData);\n      atoms.push(modelatoms);\n    }\n\n    if (!options.multimodel) {\n      break;\n    }\n  }\n\n  return atoms;\n}\n","import { ParserOptionsSpec } from \"./ParserOptionsSpec\";\nimport { assignPDBBonds } from \"./utils/assignPDBBonds\";\nimport { computeSecondaryStructure } from \"./utils/computeSecondaryStructure\";\n\n\n/**\n * Parse a pqr file from str and create atoms. A pqr file is assumed to be a whitespace delimited PDB with charge and radius fields.\n * \n * @param {string}\n *            str\n * @param {ParserOptionsSpec}\n *            options - noSecondaryStructure (do not compute ss)\n * @category Parsers \n*/\n\nexport function PQR(str: string, options: ParserOptionsSpec) {\n      var atoms: any[][] & Record<string, any> = [[]];\n      var computeStruct = !options.noSecondaryStructure;\n      atoms.modelData = [{symmetries:[]}];\n      var serialToIndex: number[] = []; // map from pdb serial to index in atoms\n      var lines = str.split(/\\r?\\n|\\r/);\n      var line: string | string[];\n      for (let i = 0; i < lines.length; i++) {\n          line = lines[i].replace(/^\\s*/, ''); // remove indent\n          var recordName = line.substring(0, 6);\n          \n          if (recordName.indexOf(\"END\") == 0) {\n              if (options.multimodel) {\n                  if (!options.onemol)\n                      atoms.push([]);\n                  continue;\n              }\n              else {\n                  break;\n              }\n          }\n          else if (recordName == 'ATOM  ' || recordName == 'HETATM') {\n              // I would have liked to split based solely on whitespace, but\n              // it seems that there is no guarantee that all the fields will\n              // be filled out (e.g. the chain) so this doesn't work\n              var hetflag: boolean;\n              let serial = parseInt(line.substring(6, 11));\n              let atom = line.substring(12, 16).replace(/ /g, \"\");\n              let resn = line.substring(17, 20).trim();\n              let chain = line.substring(21, 22);\n              let resi = parseInt(line.substring(22, 26));\n              // however let's split the coordinates, charge and radius by\n              // whitespace\n              // to support extra precision\n              var vals = line.substring(30).trim().split(/\\s+/);\n              var x = parseFloat(vals[0]);\n              var y = parseFloat(vals[1]);\n              var z = parseFloat(vals[2]);\n              var charge = parseFloat(vals[3]);\n              var radius = parseFloat(vals[4]);\n\n              var elem = atom[0];\n              if (atom.length > 1 && atom[1].toUpperCase() != atom[1]) {\n                  // slight hack - identify two character elements by the\n                  // second character in the atom name being lowercase\n                  elem = atom.substring(0, 2);\n              }\n\n              if (line[0] == 'H')\n                  hetflag = true;\n              else\n                  hetflag = false;\n              serialToIndex[serial] = atoms[atoms.length-1].length;\n              atoms[atoms.length-1].push({\n                  'resn' : resn,\n                  'x' : x,\n                  'y' : y,\n                  'z' : z,\n                  'elem' : elem,\n                  'hetflag' : hetflag,\n                  'chain' : chain,\n                  'resi' : resi,\n                  'serial' : serial,\n                  'atom' : atom,\n                  'bonds' : [],\n                  'ss' : 'c',\n                  'bondOrder' : [],\n                  'properties' : {\n                      'charge' : charge,\n                      'partialCharge' : charge,\n                      'radius' : radius\n                  },\n                  'pdbline' : line\n              });\n          } else if (recordName == 'CONECT') {\n              // MEMO: We don't have to parse SSBOND, LINK because both are\n              // also\n              // described in CONECT. But what about 2JYT???\n              var from = parseInt(line.substring(6, 11));\n              var fromAtom = atoms[atoms.length-1][serialToIndex[from]];\n              for (let j = 0; j < 4; j++) {\n                  var to = parseInt(line.substring([ 11, 16, 21, 26 ][j], [ 11, 16, 21, 26 ][j] + 5));\n                  var toAtom = atoms[atoms.length-1][serialToIndex[to]];\n                  if (fromAtom !== undefined && toAtom !== undefined) {\n                      fromAtom.bonds.push(serialToIndex[to]);\n                      fromAtom.bondOrder.push(1);\n                  }\n              }\n          }\n      }\n\n      // assign bonds - yuck, can't count on connect records\n      for (let i = 0; i < atoms.length; i++) {\n          assignPDBBonds(atoms[i],options);\n          if (computeStruct)\n              computeSecondaryStructure(atoms[i],options.hbondCutoff);\n      }\n      \n      return atoms;\n  };","// @ts-nocheck\n\n/**\n * Parse a prmtop file from str and create atoms\n * \n * @param {string}\n *            str\n * @param {ParserOptionsSpec}\n *            options - noSecondaryStructure (do not compute ss)\n * @category Parsers\n*/\n\nexport function PRMTOP(str: string /*, options*/) {\n  var atoms = [];\n  var atomIndex: number;\n  var count = 0;\n  var lines = str.split(/\\r?\\n|\\r/);\n  if (lines.length > 0 && lines[0].includes(\"VERSION\")) {\n    var sectionList = lines.filter(function (line) {\n      //store the relevant section lists\n      return (\n        line.includes(\"POINTERS\") ||\n        line.includes(\"ATOM_NAME\") ||\n        line.includes(\"CHARGE\") ||\n        line.includes(\"RADII\") ||\n        line.includes(\"BONDS_INC_HYDROGEN\") ||\n        line.includes(\"BONDS_WITHOUT_HYDROGEN\")\n      );\n    });\n    var index = getIndex(\"POINTERS\");\n    if (index == -1) return [];\n    var col = getColEleSize(index);\n    var atomCount = parseInt(lines[index + 1].slice(0, col[1]));\n    if (isNaN(atomCount) || atomCount <= 0) return [];\n    index = getIndex(\"ATOM_NAME\");\n    if (index == -1) return [];\n    col = getColEleSize(index);\n    var noOfCol = col[0];\n    for (let i = 0; i < atomCount / col[0]; i++) {\n      if (i == parseInt(atomCount / col[0])) noOfCol = atomCount % col[0];\n      for (let j = 0; j < noOfCol; j++) {\n        let atom = {};\n        let properties = { charge: \"\", radii: \"\" };\n        atom.serial = count;\n        atom.x = 0;\n        atom.y = 0;\n        atom.z = 0;\n        atom.atom = lines[index + 1].slice(col[1] * j, col[1] * (j + 1)).trim();\n        atom.elem = lines[index + 1].slice(col[1] * j, col[1] * j + 1).trim();\n        atom.properties = properties;\n        atom.bonds = [];\n        atom.bondOrder = [];\n        atoms.push(atom);\n        count++;\n      }\n      index++;\n    }\n    index = getIndex(\"CHARGE\");\n    if (index != -1) {\n      col = getColEleSize(index);\n      count = 0;\n      noOfCol = col[0];\n      for (let i = 0; i < atomCount / col[0]; i++) {\n        if (i == parseInt(atomCount / col[0])) noOfCol = atomCount % col[0];\n        for (let j = 0; j < noOfCol; j++) {\n          atoms[count].properties.charge = parseFloat(\n            lines[index + 1].slice(col[1] * j, col[1] * (j + 1))\n          );\n          count++;\n        }\n        index++;\n      }\n    }\n    index = getIndex(\"RADII\");\n    if (index != -1) {\n      col = getColEleSize(index);\n      count = 0;\n      noOfCol = col[0];\n      for (let i = 0; i < atomCount / col[0]; i++) {\n        if (i == parseInt(atomCount / col[0])) noOfCol = atomCount % col[0];\n        for (let j = 0; j < noOfCol; j++) {\n          atoms[count].properties.radii = parseFloat(\n            lines[index + 1].slice(col[1] * j, col[1] * (j + 1))\n          );\n          count++;\n        }\n        index++;\n      }\n    }\n    index = getIndex(\"BONDS_WITHOUT_HYDROGEN\");\n    if (index != -1) {\n      col = getColEleSize(index);\n      count = 0;\n      noOfCol = col[0];\n      index = index + 1;\n      while (!lines[index].match(/^%FLAG/)) {\n        if (lines[index + 1].match(/^%FLAG/))\n          //its the last line\n          noOfCol = atomCount % col[0];\n        for (let j = 0; j < noOfCol; j++) {\n          if (count % 3 == 0) {\n            atomIndex = parseInt(\n              lines[index].slice(col[1] * j, col[1] * (j + 1)) / 3\n            );\n          } else if (count % 3 == 1) {\n            atoms[atomIndex].bonds.push(\n              parseInt(lines[index].slice(col[1] * j, col[1] * (j + 1)) / 3)\n            );\n          }\n          count++;\n        }\n        index++;\n      }\n    }\n    index = getIndex(\"BONDS_INC_HYDROGEN\");\n    if (index != -1) {\n      col = getColEleSize(index);\n      count = 0;\n      noOfCol = col[0];\n      index = index + 1;\n      while (!lines[index].match(/^%FLAG/)) {\n        if (lines[index + 1].match(/^%FLAG/))\n          //its the last line\n          noOfCol = atomCount % col[0];\n        for (let j = 0; j < noOfCol; j++) {\n          if (count % 3 == 0) {\n            atomIndex = parseInt(\n              lines[index].slice(col[1] * j, col[1] * (j + 1)) / 3\n            );\n          } else if (count % 3 == 1) {\n            atoms[atomIndex].bonds.push(\n              parseInt(lines[index].slice(col[1] * j, col[1] * (j + 1)) / 3)\n            );\n          }\n          count++;\n        }\n        index++;\n      }\n    }\n  } else {\n    return [];\n  }\n\n  function getIndex(section) {\n    var index = lines.indexOf(\n      sectionList.filter(function (line) {\n        return line.includes(section);\n      })[0]\n    ); //returns the index of the line containing FLAG POINTERS\n    if (Number.isInteger(index) && index > 0) {\n      while (!lines[index].includes(\"FORMAT\"))\n        //doing this so as to take comments into consideration\n        index++;\n      return index;\n    } else {\n      return -1;\n    }\n  }\n  function getColEleSize(i) {\n    var numberOfCol = lines[i].match(/\\((\\d*)\\S*/); // stores the number of columns\n    var elementSize = lines[i].match(/[a-zA-Z](\\d*)\\)\\s*/);\n    if (elementSize == null) {\n      elementSize = lines[i].match(/[a-zA-Z](\\d*)\\.\\d*\\)\\s*/); //stores the element size\n    }\n    return [numberOfCol[1], elementSize[1]];\n  }\n  return [atoms];\n}\n","import { ParserOptionsSpec } from \"./ParserOptionsSpec\";\n\nvar parseV2000 = function (lines: any, options: ParserOptionsSpec) {\n  var atoms: any & Record<string, any> = [[]];\n  var noH = false;\n  if (typeof options.keepH !== \"undefined\") noH = !options.keepH;\n\n  while (lines.length > 0) {\n    if (lines.length < 4) break;\n    var atomCount = parseInt(lines[3].substring(0, 3));\n    if (isNaN(atomCount) || atomCount <= 0) break;\n    var bondCount = parseInt(lines[3].substring(3, 6));\n    var offset = 4;\n    if (lines.length < 4 + atomCount + bondCount) break;\n\n    // Serial is atom's index in file; index is atoms index in 'atoms'\n    var serialToIndex: number[] = [];\n    var start = atoms[atoms.length - 1].length;\n    var end = start + atomCount;\n    var i: number, line: string;\n    for (i = start; i < end; i++, offset++) {\n      line = lines[offset];\n      var atom: Record<string, any> = {};\n      var elem = line.substring(31, 34).replace(/ /g, \"\");\n      atom.atom = atom.elem =\n        elem[0].toUpperCase() + elem.substring(1).toLowerCase();\n\n      if (atom.elem !== \"H\" || !noH) {\n        atom.serial = i;\n        serialToIndex[i] = atoms[atoms.length - 1].length;\n        atom.x = parseFloat(line.substring(0, 10));\n        atom.y = parseFloat(line.substring(10, 20));\n        atom.z = parseFloat(line.substring(20, 30));\n        atom.hetflag = true;\n        atom.bonds = [];\n        atom.bondOrder = [];\n        atom.properties = {};\n        atom.index = atoms[atoms.length - 1].length;\n        atoms[atoms.length - 1].push(atom);\n      }\n    }\n\n    for (i = 0; i < bondCount; i++, offset++) {\n      line = lines[offset];\n      var from = serialToIndex[parseInt(line.substring(0, 3)) - 1 + start];\n      var to = serialToIndex[parseInt(line.substring(3, 6)) - 1 + start];\n      var order = parseFloat(line.substring(6));\n      if (typeof from != \"undefined\" && typeof to != \"undefined\") {\n        atoms[atoms.length - 1][from].bonds.push(to);\n        atoms[atoms.length - 1][from].bondOrder.push(order);\n        atoms[atoms.length - 1][to].bonds.push(from);\n        atoms[atoms.length - 1][to].bondOrder.push(order);\n      }\n    }\n    if (options.multimodel) {\n      if (!options.onemol) atoms.push([]);\n      while (lines[offset] !== \"$$$$\" && offset < lines.length) offset++;\n      lines.splice(0, ++offset);\n    } else {\n      break;\n    }\n  }\n  return atoms;\n};\n\n/**\n * @param {!Array.<string>} lines\n * @param {ParserOptionsSpec} options\n * @returns {!Array.<!Array<!Object>>}\n*/\n\nvar parseV3000 = function (lines: any, options: ParserOptionsSpec) {\n  var atoms: any[][] & Record<string, any> = [[]];\n  var noH = false;\n  if (typeof options.keepH !== \"undefined\") noH = !options.keepH;\n\n  while (lines.length > 0) {\n    if (lines.length < 8) break;\n\n    if (!lines[4].startsWith(\"M  V30 BEGIN CTAB\")) break;\n    if (!lines[5].startsWith(\"M  V30 COUNTS\") || lines[5].length < 14) break;\n\n    var counts = lines[5].substring(13).match(/\\S+/g);\n\n    if (counts.length < 2) break;\n\n    var atomCount = parseInt(counts[0]);\n    if (isNaN(atomCount) || atomCount <= 0) break;\n    var bondCount = parseInt(counts[1]);\n    var offset = 7;\n\n    if (lines.length < 8 + atomCount + bondCount)\n      //header, bgn+end CTAB, counts, END\n      break;\n\n    // serial is atom's index in file; index is atoms index in 'atoms'\n    var serialToIndex: number[] = [];\n    var start = atoms[atoms.length - 1].length;\n    var end = start + atomCount;\n    var i: number, line: string;\n    for (i = start; i < end; i++, offset++) {\n      line = lines[offset];\n      var atomParts = line.substring(6).match(/\\S+/g);\n      if (atomParts!.length > 4) {\n        var atom: Record<string, any> = {};\n        var elem = atomParts![1].replace(/ /g, \"\");\n        atom.atom = atom.elem =\n          elem[0].toUpperCase() + elem.substring(1).toLowerCase();\n\n        if (atom.elem !== \"H\" || !noH) {\n          atom.serial = i;\n          serialToIndex[i] = atoms[atoms.length - 1].length;\n          atom.x = parseFloat(atomParts![2]);\n          atom.y = parseFloat(atomParts![3]);\n          atom.z = parseFloat(atomParts![4]);\n          atom.hetflag = true;\n          atom.bonds = [];\n          atom.bondOrder = [];\n          atom.properties = {};\n          atom.index = atoms[atoms.length - 1].length;\n          atoms[atoms.length - 1].push(atom);\n        }\n      }\n    }\n\n    if (lines[offset] === \"M  V30 END ATOM\") offset++;\n    else break;\n\n    if (bondCount !== 0 && lines[offset] === \"M  V30 BEGIN BOND\") offset++;\n    else break;\n\n    for (i = 0; i < bondCount; i++, offset++) {\n      line = lines[offset];\n      var bondParts = line.substring(6).match(/\\S+/g);\n      if (bondParts!.length > 3) {\n        var from = serialToIndex[parseInt(bondParts![2]) - 1 + start];\n        var to = serialToIndex[parseInt(bondParts![3]) - 1 + start];\n        var order = parseFloat(bondParts![1]);\n        if (typeof from != \"undefined\" && typeof to != \"undefined\") {\n          atoms[atoms.length - 1][from].bonds.push(to);\n          atoms[atoms.length - 1][from].bondOrder.push(order);\n          atoms[atoms.length - 1][to].bonds.push(from);\n          atoms[atoms.length - 1][to].bondOrder.push(order);\n        }\n      }\n    }\n    if (options.multimodel) {\n      if (!options.onemol) {\n        atoms.push([]);\n      }\n      while (lines[offset] !== \"$$$$\" && offset < lines.length) {\n        offset++;\n      }\n      lines.splice(0, ++offset);\n    } else {\n      break;\n    }\n  }\n  return atoms;\n};\n\n/**\n * @param {string}\n *            str\n * @param {ParserOptionsSpec}\n *            options\n * @category Parsers\n*/\n\nexport function SDF(str: string, options: ParserOptionsSpec) {\n  var molformat = \"V2000\";\n  var lines = str.split(/\\r?\\n|\\r/);\n  if (lines.length > 3 && lines[3].length > 38) {\n    molformat = lines[3].substring(34, 39);\n  }\n  if (molformat === \"V2000\") {\n    return parseV2000(lines, options);\n  } else if (molformat === \"V3000\") {\n    return parseV3000(lines, options);\n  }\n  return [['']];\n}\n","\nimport { Matrix3 } from \"../WebGL\";\n\nimport { assignBonds } from \"./utils/assignBonds\";\nimport { ParserOptionsSpec } from \"./ParserOptionsSpec\";\n\n/**\n * @param {string}\n *            str\n * @param {ParserOptionsSpec}\n *            options\n * @category Parsers\n*/\n\nexport function VASP(str: string, options: ParserOptionsSpec = {}) {\n  var atoms: any[][] & Record<string, any> = [[]];\n  var lattice: Record<string, number | Float32Array> = {};\n  const assignbonds =\n    options.assignBonds === undefined ? true : options.assignBonds;\n\n  var lines = str.replace(/^\\s+/, \"\").split(/\\r?\\n/);\n\n  if (lines.length < 3) {\n    return atoms;\n  }\n\n  if (lines[1].match(/\\d+/)) {\n    lattice.length = parseFloat(lines[1]);\n  } else {\n    console.log(\n      \"Warning: second line of the vasp structure file must be a number\"\n    );\n    return atoms;\n  }\n\n  if (lattice.length < 0) {\n    console.log(\n      \"Warning: Vasp implementation for negative lattice lengths is not yet available\"\n    );\n    return atoms;\n  }\n\n  lattice.xVec = new Float32Array((lines[2] as any).replace(/^\\s+/, \"\").split(/\\s+/));\n  lattice.yVec = new Float32Array((lines[3] as any).replace(/^\\s+/, \"\").split(/\\s+/));\n  lattice.zVec = new Float32Array((lines[4] as any).replace(/^\\s+/, \"\").split(/\\s+/));\n\n  var matrix = new Matrix3(\n    lattice.xVec[0],\n    lattice.xVec[1],\n    lattice.xVec[2],\n    lattice.yVec[0],\n    lattice.yVec[1],\n    lattice.yVec[2],\n    lattice.zVec[0],\n    lattice.zVec[1],\n    lattice.zVec[2]\n  );\n\n  matrix.multiplyScalar(lattice.length);\n  atoms.modelData = [{ symmetries: [], cryst: { matrix: matrix } }];\n  var atomSymbols = lines[5]\n    .replace(/\\s+/, \"\")\n    .replace(/\\s+$/, \"\")\n    .split(/\\s+/);\n  var atomSpeciesNumber = new Int16Array(\n    (lines[6] as any).replace(/^\\s+/, \"\").split(/\\s+/)\n  );\n  var vaspMode = lines[7].replace(/\\s+/, \"\");\n\n  var selective = false\n  if (vaspMode.match(/S/)) {\n    selective = true\n    vaspMode = lines[8].replace(/\\s+/, \"\");\n  }\n\n  if (vaspMode.match(/C/)) {\n    vaspMode = \"cartesian\";\n  } else if (vaspMode.match(/D/)) {\n    vaspMode = \"direct\";\n  } else {\n    console.log(\n      \"Warning: Unknown vasp mode in POSCAR file: mode must be either C(artesian) or D(irect)\"\n    );\n    return atoms;\n  }\n\n  if (atomSymbols.length != atomSpeciesNumber.length) {\n    console.log(\"Warning: declaration of atomary species wrong:\");\n    console.log(atomSymbols);\n    console.log(atomSpeciesNumber);\n    return atoms;\n  }\n\n  if (selective) {\n    lines.splice(0, 9);\n  }\n  else {\n    lines.splice(0, 8);\n  }\n\n  var atomCounter = 0;\n\n  for (var i = 0, len = atomSymbols.length; i < len; i++) {\n    var atomSymbol = atomSymbols[i];\n    for (var j = 0, atomLen = atomSpeciesNumber[i]; j < atomLen; j++) {\n      var coords = new Float32Array(\n        (lines[atomCounter + j] as any).replace(/^\\s+/, \"\").split(/\\s+/)\n      );\n\n      var atom: Record<string, number | []> = {};\n      (atom.elem as any) = atomSymbol;\n      if (vaspMode == \"cartesian\") {\n        atom.x = lattice.length * coords[0];\n        atom.y = lattice.length * coords[1];\n        atom.z = lattice.length * coords[2];\n      } else {\n        atom.x =\n          lattice.length *\n          (coords[0] * lattice.xVec[0] +\n            coords[1] * lattice.yVec[0] +\n            coords[2] * lattice.zVec[0]);\n        atom.y =\n          lattice.length *\n          (coords[0] * lattice.xVec[1] +\n            coords[1] * lattice.yVec[1] +\n            coords[2] * lattice.zVec[1]);\n        atom.z =\n          lattice.length *\n          (coords[0] * lattice.xVec[2] +\n            coords[1] * lattice.yVec[2] +\n            coords[2] * lattice.zVec[2]);\n      }\n\n      atom.bonds = [];\n      atom.bondOrder = [];\n\n      atoms[0].push(atom);\n    }\n    atomCounter += atomSpeciesNumber[i];\n  }\n\n  if (assignbonds) {\n    for (let i = 0; i < atoms.length; i++) {\n      assignBonds(atoms[i], options);\n    }\n  }\n  return atoms;\n}\n","import { ParserOptionsSpec } from './ParserOptionsSpec';\n\nimport { Matrix3 } from \"../WebGL\";\nimport { assignBonds } from \"./utils/assignBonds\";\n\n/**\n * Read an XYZ file from str and return result\n * \n * @param {string} str\n * @param {ParserOptionsSpec} options\n * @category Parsers\n*/\n\nexport function XYZ(str: string, options: ParserOptionsSpec) {\n  options = options || {};\n  var atoms: any[][] & Record<string, any> = [[]];\n  var assignbonds =\n    options.assignBonds === undefined ? true : options.assignBonds;\n  var lines = str.split(/\\r?\\n|\\r/);\n  while (lines.length > 0) {\n    if (lines.length < 3) break;\n    var atomCount = parseInt(lines[0]);\n    if (isNaN(atomCount) || atomCount <= 0) break;\n    if (lines.length < atomCount + 2) break;\n\n    var lattice_re = /Lattice\\s*=\\s*[\"\\{\\}]([^\"\\{\\}]+)[\"\\{\\}]\\s*/gi;\n    var lattice_match = lattice_re.exec(lines[1]);\n    if (lattice_match != null && lattice_match.length > 1) {\n      var lattice = new Float32Array(lattice_match[1].split(/\\s+/) as any);\n      var matrix = new Matrix3(\n        lattice[0],\n        lattice[3],\n        lattice[6],\n        lattice[1],\n        lattice[4],\n        lattice[7],\n        lattice[2],\n        lattice[5],\n        lattice[8]\n      );\n      atoms.modelData = [{ cryst: { matrix: matrix } }];\n    }\n\n    var offset = 2;\n    var start = atoms[atoms.length - 1].length;\n    var end = start + atomCount;\n    for (var i = start; i < end; i++) {\n      var line = lines[offset++];\n      var tokens = line.replace(/^\\s+/, \"\").replace(/\\s+/g, \" \").split(\" \");\n      var atom: Record<string, any> = {};\n      atom.serial = i;\n      var elem = tokens[0];\n      atom.atom = atom.elem =\n        elem[0].toUpperCase() + elem.substring(1, 2).toLowerCase();\n      atom.x = parseFloat(tokens[1]);\n      atom.y = parseFloat(tokens[2]);\n      atom.z = parseFloat(tokens[3]);\n      atom.hetflag = true;\n      atom.bonds = [];\n      atom.bondOrder = [];\n      atom.properties = {};\n      atoms[atoms.length - 1][i] = atom;\n      if (tokens.length >= 7) {\n        atom.dx = parseFloat(tokens[4]);\n        atom.dy = parseFloat(tokens[5]);\n        atom.dz = parseFloat(tokens[6]);\n      }\n    }\n\n    if (options.multimodel) {\n      atoms.push([]);\n      lines.splice(0, offset);\n    } else {\n      break;\n    }\n  }\n\n  if (assignbonds) {\n    for (let i = 0; i < atoms.length; i++) {\n      assignBonds(atoms[i], options);\n    }\n  }\n\n  if (options.onemol) {\n    var temp = atoms;\n    atoms = [];\n    atoms.push(temp[0]);\n    for (let i = 1; i < temp.length; i++) {\n      let offset = atoms[0].length;\n      for (let j = 0; j < temp[i].length; j++) {\n        let a = temp[i][j];\n        for (let k = 0; k < a.bonds.length; k++) {\n          a.bonds[k] = a.bonds[k] + offset;\n        }\n        a.index = atoms[0].length;\n        a.serial = atoms[0].length;\n        atoms[0].push(a);\n      }\n    }\n  }\n\n  return atoms;\n}\n","/* Note - all code in this directory is adapted from molstar -dkoes */\nimport { EncodedCategory } from \"./encoding\";\nimport { decode } from './decoder';\n\nexport function Category(data: EncodedCategory) {\n  const map = Object.create(null);\n  const cache = Object.create(null);\n  for (const col of data.columns) map[col.name] = col;\n  return {\n      rowCount: data.rowCount,\n      name: data.name.substring(1),\n      fieldNames: data.columns.map(c => c.name),\n      getField(name) {\n          const col = map[name];\n          if (!col) return void 0;\n          if (!!cache[name]) return cache[name];\n          cache[name] = decode(col.data);\n          return cache[name];\n      }\n  };\n}","/**\n * Copyright (c) 2017-2024 mol* contributors, licensed under MIT, See LICENSE file for more info.\n *\n * From CIFTools.js\n * @author David Sehnal <david.sehnal@gmail.com>\n */\n\nimport { Encoding, EncodedData } from './encoding';\n\nconst IsNativeEndianLittle = new Uint16Array(new Uint8Array([0x12, 0x34]).buffer)[0] === 0x3412;\n\nfunction flipByteOrder(data: Uint8Array, bytes: number) {\n  const buffer = new ArrayBuffer(data.length);\n  const ret = new Uint8Array(buffer);\n  for (let i = 0, n = data.length; i < n; i += bytes) {\n    for (let j = 0; j < bytes; j++) {\n      ret[i + bytes - j - 1] = data[i + j];\n    }\n  }\n  return buffer;\n}\n\n/**\n * Fixed point, delta, RLE, integer packing adopted from https://github.com/rcsb/mmtf-javascript/\n * by Alexander Rose <alexander.rose@weirdbyte.de>, MIT License, Copyright (c) 2016\n */\n\nexport function decode(data: EncodedData): any[] {\n  let current: any = data.data;\n  for (let i = data.encoding.length - 1; i >= 0; i--) {\n    current = decodeStep(current, data.encoding[i]);\n  }\n  return current as any[];\n}\n\nfunction decodeStep(data: any, encoding: Encoding): any {\n  switch (encoding.kind) {\n    case 'ByteArray': {\n      switch (encoding.type) {\n        case Encoding.IntDataType.Uint8: return data;\n        case Encoding.IntDataType.Int8: return int8(data);\n        case Encoding.IntDataType.Int16: return int16(data);\n        case Encoding.IntDataType.Uint16: return uint16(data);\n        case Encoding.IntDataType.Int32: return int32(data);\n        case Encoding.IntDataType.Uint32: return uint32(data);\n        case Encoding.FloatDataType.Float32: return float32(data);\n        case Encoding.FloatDataType.Float64: return float64(data);\n        default: throw new Error('unreachable');\n      }\n    }\n    case 'FixedPoint': return fixedPoint(data, encoding);\n    case 'IntervalQuantization': return intervalQuantization(data, encoding);\n    case 'RunLength': return runLength(data, encoding);\n    case 'Delta': return delta(data, encoding);\n    case 'IntegerPacking': return integerPacking(data, encoding);\n    case 'StringArray': return stringArray(data, encoding);\n  }\n}\n\nfunction getIntArray(type: Encoding.IntDataType, size: number) {\n  switch (type) {\n    case Encoding.IntDataType.Int8: return new Int8Array(size);\n    case Encoding.IntDataType.Int16: return new Int16Array(size);\n    case Encoding.IntDataType.Int32: return new Int32Array(size);\n    case Encoding.IntDataType.Uint8: return new Uint8Array(size);\n    case Encoding.IntDataType.Uint16: return new Uint16Array(size);\n    case Encoding.IntDataType.Uint32: return new Uint32Array(size);\n    default: return new Int32Array(size);\n  }\n}\n\nfunction getFloatArray(type: Encoding.FloatDataType, size: number) {\n  switch (type) {\n    case Encoding.FloatDataType.Float32: return new Float32Array(size);\n    case Encoding.FloatDataType.Float64: return new Float64Array(size);\n    default: return new Float64Array(size);\n  }\n}\n\nfunction int8(data: Uint8Array) { return new Int8Array(data.buffer, data.byteOffset); }\n\nfunction view<T>(data: Uint8Array, byteSize: number, c: new (buffer: ArrayBuffer) => T) {\n  if (data.byteOffset != 0 || data.byteLength != data.buffer.byteLength) { //dkoes - extract from larger buffer if needed\n    data = new Uint8Array(data);\n  }\n  if (IsNativeEndianLittle) return new c(data.buffer);\n  return new c(flipByteOrder(data, byteSize));\n}\n\nfunction int16(data: Uint8Array) { return view(data, 2, Int16Array); }\nfunction uint16(data: Uint8Array) { return view(data, 2, Uint16Array); }\nfunction int32(data: Uint8Array) { return view(data, 4, Int32Array); }\nfunction uint32(data: Uint8Array) { return view(data, 4, Uint32Array); }\nfunction float32(data: Uint8Array) { return view(data, 4, Float32Array); }\nfunction float64(data: Uint8Array) { return view(data, 8, Float64Array); }\n\nfunction fixedPoint(data: Int32Array, encoding: Encoding.FixedPoint) {\n  const n = data.length;\n  const output = getFloatArray(encoding.srcType, n);\n  const f = 1 / encoding.factor;\n  for (let i = 0; i < n; i++) {\n    output[i] = f * data[i];\n  }\n  return output;\n}\n\nfunction intervalQuantization(data: Int32Array, encoding: Encoding.IntervalQuantization) {\n  const n = data.length;\n  const output = getFloatArray(encoding.srcType, n);\n  const delta = (encoding.max - encoding.min) / (encoding.numSteps - 1);\n  const min = encoding.min;\n  for (let i = 0; i < n; i++) {\n    output[i] = min + delta * data[i];\n  }\n  return output;\n}\n\nfunction runLength(data: Int32Array, encoding: Encoding.RunLength) {\n  const output = getIntArray(encoding.srcType, encoding.srcSize);\n  let dataOffset = 0;\n  for (let i = 0, il = data.length; i < il; i += 2) {\n    const value = data[i]; // value to be repeated\n    const length = data[i + 1]; // number of repeats\n    for (let j = 0; j < length; ++j) {\n      output[dataOffset++] = value;\n    }\n  }\n  return output;\n}\n\nfunction delta(data: (Int8Array | Int16Array | Int32Array), encoding: Encoding.Delta) {\n  const n = data.length;\n  const output = getIntArray(encoding.srcType, n);\n  if (!n) return data;\n  output[0] = data[0] + (encoding.origin | 0);\n  for (let i = 1; i < n; ++i) {\n    output[i] = data[i] + output[i - 1];\n  }\n  return output;\n}\n\nfunction integerPackingSigned(data: (Int8Array | Int16Array), encoding: Encoding.IntegerPacking) {\n  const upperLimit = encoding.byteCount === 1 ? 0x7F : 0x7FFF;\n  const lowerLimit = -upperLimit - 1;\n  const n = data.length;\n  const output = new Int32Array(encoding.srcSize);\n  let i = 0;\n  let j = 0;\n  while (i < n) {\n    let value = 0, t = data[i];\n    while (t === upperLimit || t === lowerLimit) {\n      value += t;\n      i++;\n      t = data[i];\n    }\n    value += t;\n    output[j] = value;\n    i++;\n    j++;\n  }\n  return output;\n}\n\nfunction integerPackingUnsigned(data: (Uint8Array | Uint16Array), encoding: Encoding.IntegerPacking) {\n  const upperLimit = encoding.byteCount === 1 ? 0xFF : 0xFFFF;\n  const n = data.length;\n  const output = new Int32Array(encoding.srcSize);\n  let i = 0;\n  let j = 0;\n  while (i < n) {\n    let value = 0, t = data[i];\n    while (t === upperLimit) {\n      value += t;\n      i++;\n      t = data[i];\n    }\n    value += t;\n    output[j] = value;\n    i++;\n    j++;\n  }\n  return output;\n}\n\nfunction integerPacking(data: (Int8Array | Int16Array | Uint8Array | Uint16Array), encoding: Encoding.IntegerPacking) {\n  if (data.length === encoding.srcSize) return data;\n  return encoding.isUnsigned ? integerPackingUnsigned(data as any, encoding) : integerPackingSigned(data as any, encoding);\n}\n\nfunction stringArray(data: Uint8Array, encoding: Encoding.StringArray) {\n  const offsets = decode({ encoding: encoding.offsetEncoding, data: encoding.offsets });\n  const indices = decode({ encoding: encoding.dataEncoding, data });\n\n  const str = encoding.stringData;\n  const strings = new Array(offsets.length);\n  strings[0] = '';\n  for (let i = 1, _i = offsets.length; i < _i; i++) {\n    strings[i] = str.substring(offsets[i - 1], offsets[i]);\n  }\n\n  let offset = 0;\n  const result = new Array(indices.length);\n  for (let i = 0, _i = indices.length; i < _i; i++) {\n    result[offset++] = strings[indices[i] + 1];\n  }\n  return result;\n}","/*\n * Copyright (c) 2017 mol* contributors, licensed under MIT, See LICENSE file for more info.\n *\n * From CIFTools.js\n * @author David Sehnal <david.sehnal@gmail.com>\n * \n * Note: all files in this directory are adapted from molstar - dkoes\n */\n\nexport type TypedIntArray = Int8Array | Int16Array | Int32Array | Uint8Array | Uint16Array | Uint32Array\nexport type TypedFloatArray = Float32Array | Float64Array\nexport const VERSION = '0.3.0';\n\nexport type Encoding =\n    | Encoding.ByteArray\n    | Encoding.FixedPoint\n    | Encoding.RunLength\n    | Encoding.Delta\n    | Encoding.IntervalQuantization\n    | Encoding.IntegerPacking\n    | Encoding.StringArray;\n\n\nexport interface EncodedDataBlock {\n    header: string,\n    categories: EncodedCategory[],\n}\n\nexport interface EncodedCategory {\n    name: string,\n    rowCount: number,\n    columns: EncodedColumn[],\n}\n\nexport interface EncodedColumn {\n    name: string,\n    data: EncodedData,\n\n    /**\n     * The mask represents the presence or absent of particular \"CIF value\".\n     * If the mask is not set, every value is present.\n     *\n     * 0 = Value is present\n     * 1 = . = value not specified\n     * 2 = ? = value unknown\n     */\n    mask?: EncodedData\n}\n\nexport interface EncodedData {\n    encoding: Encoding[],\n    data: Uint8Array\n}\n\nexport namespace Encoding {\n\n    export enum IntDataType {\n        Int8 = 1,\n        Int16 = 2,\n        Int32 = 3,\n        Uint8 = 4,\n        Uint16 = 5,\n        Uint32 = 6,\n    }\n\n    export enum FloatDataType {\n        Float32 = 32,\n        Float64 = 33\n    }\n\n    export type DataType = IntDataType | FloatDataType\n\n    export function getDataType(data: TypedIntArray | TypedFloatArray): DataType {\n        let srcType: DataType;\n        if (data instanceof Int8Array) srcType = Encoding.IntDataType.Int8;\n        else if (data instanceof Int16Array) srcType = Encoding.IntDataType.Int16;\n        else if (data instanceof Int32Array) srcType = Encoding.IntDataType.Int32;\n        else if (data instanceof Uint8Array) srcType = Encoding.IntDataType.Uint8;\n        else if (data instanceof Uint16Array) srcType = Encoding.IntDataType.Uint16;\n        else if (data instanceof Uint32Array) srcType = Encoding.IntDataType.Uint32;\n        else if (data instanceof Float32Array) srcType = Encoding.FloatDataType.Float32;\n        else if (data instanceof Float64Array) srcType = Encoding.FloatDataType.Float64;\n        else srcType = Encoding.IntDataType.Int32; // throw new Error('Unsupported integer data type.');\n        return srcType;\n    }\n\n    export function isSignedIntegerDataType(data: TypedIntArray) {\n        if (data instanceof Int8Array || data instanceof Int16Array || data instanceof Int32Array) return true;\n        for (let i = 0, _i = data.length; i < _i; i++) {\n            if (i < 0) return false;\n        }\n        return true;\n    }\n\n    // type[] -> Uint8[]\n    export interface ByteArray {\n        kind: 'ByteArray',\n        type: DataType\n    }\n\n    // (Float32 | Float64)[] -> Int32[]\n    export interface FixedPoint {\n        kind: 'FixedPoint',\n        factor: number,\n        srcType: FloatDataType\n    }\n\n    // (Float32|Float64)[] -> Int32\n    export interface IntervalQuantization {\n        kind: 'IntervalQuantization',\n        min: number,\n        max: number,\n        numSteps: number,\n        srcType: FloatDataType\n    }\n\n    // (Uint8 | Int8 | Int16 | Int32)[] -> Int32[]\n    export interface RunLength {\n        kind: 'RunLength',\n        srcType: IntDataType,\n        srcSize: number\n    }\n\n    // T=(Int8Array | Int16Array | Int32Array)[] -> T[]\n    export interface Delta {\n        kind: 'Delta',\n        origin: number,\n        srcType: IntDataType\n    }\n\n    // Int32[] -> (Int8 | Int16 | Uint8 | Uint16)[]\n    export interface IntegerPacking {\n        kind: 'IntegerPacking',\n        byteCount: number,\n        isUnsigned: boolean,\n        srcSize: number\n    }\n\n    // string[] -> Uint8[]\n    // stores 0 and indices of ends of strings:\n    // stringData = '123456'\n    // offsets = [0,2,5,6]\n    // encodes ['12','345','6']\n    export interface StringArray {\n        kind: 'StringArray',\n        dataEncoding: Encoding[],\n        stringData: string,\n        offsetEncoding: Encoding[],\n        offsets: Uint8Array\n    }\n\n}","import { ParserOptionsSpec } from './ParserOptionsSpec';\nimport { VASP } from \"./VASP\";\nimport { CUBE } from \"./CUBE\";\nimport { XYZ } from \"./XYZ\";\nimport { SDF } from \"./SDF\";\nimport { CDJSON } from \"./CDJSON\";\nimport { CIF } from \"./CIF\";\nimport { MOL2 } from \"./MOL2\";\nimport { PDB } from \"./PDB\";\nimport { PQR } from \"./PQR\";\nimport { MMTFparser } from \"./MMTF\";\nimport { PRMTOP } from \"./PRMTOP\";\nimport { GRO } from \"./GRO\";\nimport { LAMMPSTRJ } from \"./LAMMPSTRJ\";\nimport {BCIF} from \"./BCIF\";\n\nexport { bondLength, setBondLength } from './utils/bondLength';\n\n// @category Parsers\nexport const Parsers = {\n  vasp: VASP,\n  VASP,\n  cube: CUBE,\n  CUBE,\n  xyz: XYZ,\n  XYZ,\n  sdf: SDF,\n  SDF,\n  json: CDJSON,\n  cdjson: CDJSON,\n  CDJSON,\n  mcif: CIF,\n  cif: CIF,\n  CIF,\n  mol2: MOL2,\n  MOL2,\n  pdb: PDB,\n  PDB,\n  pdbqt: PDB,\n  PDBQT: PDB,\n  pqr: PQR,\n  PQR,\n  mmtf:MMTFparser, //need to avoid name collision\n  MMTF:MMTFparser,\n  prmtop: PRMTOP,\n  PRMTOP,\n  gro: GRO,\n  GRO,\n  lammpstrj: LAMMPSTRJ,\n  LAMMPSTRJ,\n  bcif: BCIF,\n  BCIF\n} as Record<string, (str: string, options: ParserOptionsSpec) => any>;\n","export const anumToSymbol:Record<string, string> = {\n  1: 'H',                                                                                                                                2: 'He',\n  3:'Li',4:'Be',                                                                                  5: 'B', 6: 'C', 7:'N', 8:'O', 9:'F',  10: 'Ne',\n  11: 'Na',12:'Mg',                                                                               13: 'Al',14:'Si',15:'P',16:'S',17:'Cl',18:'Ar',\n  19: 'K',20:'Ca',21:'Sc',22:'Ti',23:'V',24:'Cr',25:'Mn',26:'Fe',27:'Co',28:'Ni',29:'Cu',30:'Zn',31:'Ga',32:'Ge',33:'As',34:'Se',35:'Br',36:'Kr',\n  37:'Rb',38:'Sr',39:'Y',40:'Zr',41:'Nb',42:'Mo',43:'Tc',44:'Ru',45:'Rh',46:'Pd',47:'Ag',48:'Cd',49:'In',50:'Sn',51:'Sb',52:'Te',53:'I', 54:'Xe',\n  55:'Cs',56:'Ba',71:'Lu',72:'Hf',73:'Ta',74:'W',75:'Re',76:'Os',77:'Ir',78:'Pt',79:'Au',80:'Hg',81:'Tl',82:'Pb',83:'Bi',84:'Po',85:'At',86:'Rn',\n  87:'Fr',88:'Ra',104:'Rf',105:'Db',106:'Sg',107:'Bh',108:'Hs',109:'Mt',110:'Ds',111:'Rg',112:'Cn',113:'Nh',114:'Fl',115:'Mc',116:'Lv',117:'Ts',118:'Og',\n  \n  57:'La',58:'Ce',59:'Pr',60:'Nd',61:'Pm',62:'Sm',63:'Eu',64:'Gd',65:'Tb',66:'Dy',67:'Ho',68:'Er',69:'Tm',70:'Yb',\n  89:'Ac',90:'Th',91:'Pa',92:'U',93:'Np',94:'Pu',95:'Am',96:'Cm',97:'Bk',98:'Cf',99:'Es',100:'Fm',101:'Md',102:'No',\n};","import { AtomSpec } from \"specs\";\nimport { bondLength } from \"./bondLength\";\nimport { ParserOptionsSpec } from \"parsers/ParserOptionsSpec\";\n\nconst cations = new Set([\"Na\",\"K\",\"Ca\",\"Mg\",\"Mn\",\"Sr\"]);\n\n/*\n * Return true if atom1 and atom2 are probably bonded to each other based on distance alone\n */\nexport function areConnected(atom1: AtomSpec, atom2: AtomSpec, options: ParserOptionsSpec) {\n  if(options && options.unboundCations && (cations.has(atom1.elem) || cations.has(atom2.elem))) {\n    return false;\n  }\n  let maxsq = bondLength(atom1.elem) + bondLength(atom2.elem);\n  maxsq += 0.25; // fudge factor, especially important for md frames, also see 1i3d\n  maxsq *= maxsq;\n\n  let xdiff = atom1.x - atom2.x;\n  xdiff *= xdiff;\n  if (xdiff > maxsq) return false;\n  let ydiff = atom1.y - atom2.y;\n  ydiff *= ydiff;\n  if (ydiff > maxsq) return false;\n  let zdiff = atom1.z - atom2.z;\n  zdiff *= zdiff;\n  if (zdiff > maxsq) return false;\n\n  const distSquared = xdiff + ydiff + zdiff;\n\n  if (\n    isNaN(distSquared) ||\n    distSquared < 0.5 ||\n    distSquared > maxsq ||\n    (atom1.altLoc !== atom2.altLoc && atom1.altLoc.trim() !== \"\" && atom2.altLoc.trim() !== \"\")\n  )\n    return false;\n\n    \n  return true;\n}\n","// This will identify all hydrogen bonds between backbone\n// atoms; assume atom names are correct, only identifies\n// single closest hbond\n\nimport { AtomSpec } from \"specs\";\n// interface Atoms {index: number; atom: string; hbondDistanceSq: number; hbondOther: any; hetflag:any}\nexport function assignBackboneHBonds(\n  atomsarray: Array<AtomSpec>,\n  hbondCutoff: number\n) {\n  const maxlength = hbondCutoff || 3.2;\n  const maxlengthSq = maxlength * maxlength;\n  const atoms = [];\n\n  for (let i = 0, n = atomsarray.length; i < n; i++) {\n    atomsarray[i].index = i;\n    // only consider 'N' and 'O'\n    const atom = atomsarray[i];\n    if (!atom.hetflag && (atom.atom === \"N\" || atom.atom === \"O\")) {\n      atoms.push(atom);\n      atom.hbondOther = null;\n      atom.hbondDistanceSq = Number.POSITIVE_INFINITY;\n    }\n  }\n\n  atoms.sort(function (a, b) {\n    return a.z - b.z;\n  });\n  for (let i = 0, n = atoms.length; i < n; i++) {\n    const ai = atoms[i];\n\n    for (let j = i + 1; j < n; j++) {\n      const aj = atoms[j];\n      const zdiff = aj.z - ai.z;\n      if (zdiff > maxlength)\n        // can't be connected\n        break;\n      if (aj.atom == ai.atom) continue; // can't be connected, but later might be\n      const ydiff = Math.abs(aj.y - ai.y);\n      if (ydiff > maxlength) continue;\n      const xdiff = Math.abs(aj.x - ai.x);\n      if (xdiff > maxlength) continue;\n      const dist = xdiff * xdiff + ydiff * ydiff + zdiff * zdiff;\n      if (dist > maxlengthSq) continue;\n\n      if (aj.chain == ai.chain && Math.abs(aj.resi - ai.resi) < 4) continue; // ignore bonds between too close residues\n      // select closest hbond\n      if (dist < ai.hbondDistanceSq) {\n        ai.hbondOther = aj;\n        ai.hbondDistanceSq = dist;\n      }\n      if (dist < aj.hbondDistanceSq) {\n        aj.hbondOther = ai;\n        aj.hbondDistanceSq = dist;\n      }\n    }\n  }\n}\n","import { AtomSpec } from \"specs\";\nimport { areConnected } from \"./areConnected\";\nimport { ParserOptionsSpec } from \"parsers/ParserOptionsSpec\";\n\n/**\n * @param {AtomSpec[]} atoms\n */\nconst OFFSETS = [\n  { x: 0, y: 0, z: 1 },\n  { x: 0, y: 1, z: -1 },\n  { x: 0, y: 1, z: 0 },\n  { x: 0, y: 1, z: 1 },\n  { x: 1, y: -1, z: -1 },\n  { x: 1, y: -1, z: 0 },\n  { x: 1, y: -1, z: 1 },\n  { x: 1, y: 0, z: -1 },\n  { x: 1, y: 0, z: 0 },\n  { x: 1, y: 0, z: 1 },\n  { x: 1, y: 1, z: -1 },\n  { x: 1, y: 1, z: 0 },\n  { x: 1, y: 1, z: 1 },\n];\nconst MAX_BOND_LENGTH = 4.95; // (largest bond length, Cs) 2.25 * 2 * 1.1 (fudge factor)\n\nexport function assignBonds(atoms: AtomSpec[], options: ParserOptionsSpec) {\n  // Assign bonds - yuck, can't count on connect records\n\n  for (let i = 0, n = atoms.length; i < n; i++) {\n    // Don't reindex if atoms are already indexed\n    if (!atoms[i].index) atoms[i].index = i;\n  }\n\n  const grid: {\n    x: {\n      y: {\n        z: AtomSpec[];\n      };\n    };\n  } = {\n    x: {\n      y: {\n        z: [],\n      },\n    },\n  };\n\n  for (let index = 0; index < atoms.length; index++) {\n    const atom = atoms[index];\n    const x = Math.floor(atom.x / MAX_BOND_LENGTH);\n    const y = Math.floor(atom.y / MAX_BOND_LENGTH);\n    const z = Math.floor(atom.z / MAX_BOND_LENGTH);\n    if (!grid[x]) {\n      grid[x] = {};\n    }\n    if (!grid[x][y]) {\n      grid[x][y] = {};\n    }\n    if (!grid[x][y][z]) {\n      grid[x][y][z] = [];\n    }\n\n    grid[x][y][z].push(atom);\n  }\n\n  function findConnections(\n    points: Array<AtomSpec>,\n    otherPoints: Array<AtomSpec>\n  ) {\n    for (let i = 0; i < points.length; i++) {\n      const atom1 = points[i];\n      for (let j = 0; j < otherPoints.length; j++) {\n        const atom2 = otherPoints[j];\n\n        if (areConnected(atom1, atom2, options)) {\n          //gracefully handle one-sided bonds\n          const a2i = atom1.bonds.indexOf(atom2.index);\n          const a1i = atom2.bonds.indexOf(atom1.index);\n          if (a2i === -1 && a1i === -1) {\n            atom1.bonds.push(atom2.index);\n            atom1.bondOrder.push(1);\n            atom2.bonds.push(atom1.index);\n            atom2.bondOrder.push(1);\n          } else if (a2i === -1) {\n            atom1.bonds.push(atom2.index);\n            atom1.bondOrder.push(atom2.bondOrder[a1i]);\n          } else if (a1i === -1) {\n            atom2.bonds.push(atom1.index);\n            atom2.bondOrder.push(atom1.bondOrder[a2i]);\n          }\n        }\n      }\n    }\n  }\n\n  for (let xg in grid) {\n    const x = parseInt(xg);\n    for (let yg in grid[x]) {\n      const y = parseInt(yg);\n      for (let zg in grid[x][y]) {\n        const z = parseInt(zg);\n        const points = grid[x][y][z];\n\n        for (let i = 0; i < points.length; i++) {\n          const atom1 = points[i];\n          for (let j = i + 1; j < points.length; j++) {\n            const atom2 = points[j];\n            if (areConnected(atom1, atom2,options)) {\n              if (atom1.bonds.indexOf(atom2.index) == -1) {\n                atom1.bonds.push(atom2.index);\n                atom1.bondOrder.push(1);\n                atom2.bonds.push(atom1.index);\n                atom2.bondOrder.push(1);\n              }\n            }\n          }\n        }\n\n        for (let o = 0; o < OFFSETS.length; o++) {\n          const offset = OFFSETS[o];\n          if (\n            !grid[x + offset.x] ||\n            !grid[x + offset.x][y + offset.y] ||\n            !grid[x + offset.x][y + offset.y][z + offset.z]\n          )\n            continue;\n\n          const otherPoints = grid[x + offset.x][y + offset.y][z + offset.z];\n          findConnections(points, otherPoints);\n        }\n      }\n    }\n  }\n}\n","// This is optimized for proteins where it is assumed connected atoms are on the same or next residue\n\nimport { AtomSpec } from \"specs\";\nimport { areConnected } from \"./areConnected\";\nimport { assignBonds } from \"./assignBonds\";\nimport { standardResidues } from \"./standardResidues\";\nimport { ParserOptionsSpec } from \"parsers/ParserOptionsSpec\";\n\n\n/**\n * @param {AtomSpec[]}\n *            atomsarray\n */\n\nexport function assignPDBBonds(atomsarray: AtomSpec[], options: ParserOptionsSpec) {\n  // assign bonds - yuck, can't count on connect records\n  const protatoms: Array<AtomSpec> = [];\n  const hetatoms: Array<AtomSpec> = [];\n  for (let i = 0, n = atomsarray.length; i < n; i++) {\n    const atom = atomsarray[i];\n    atom.index = i;\n    if (atom.hetflag || !standardResidues.has(atom.resn)) hetatoms.push(atom);\n    else protatoms.push(atom);\n  }\n\n  assignBonds(hetatoms, options);\n\n  // sort by resid\n  protatoms.sort(function (a, b) {\n    if (a.chain !== b.chain) return a.chain < b.chain ? -1 : 1;\n    return a.resi - b.resi;\n  });\n\n  // for identifying connected residues\n  let currentResi = -1;\n  let reschain = -1;\n  let lastResConnected: boolean;\n\n  for (let i = 0, n = protatoms.length; i < n; i++) {\n    const ai = protatoms[i];\n\n    if (ai.resi !== currentResi) {\n      currentResi = ai.resi;\n      if (!lastResConnected) reschain++;\n\n      lastResConnected = false;\n    }\n\n    ai.reschain = reschain;\n\n    for (let j = i + 1; j < protatoms.length; j++) {\n      const aj = protatoms[j];\n      if (aj.chain !== ai.chain || aj.resi - ai.resi > 1) break;\n\n      if (areConnected(ai, aj, options)) {\n        if (ai.bonds.indexOf(aj.index) === -1) {\n          // only add if not already there\n          ai.bonds.push(aj.index);\n          ai.bondOrder.push(1);\n          aj.bonds.push(ai.index);\n          aj.bondOrder.push(1);\n        }\n\n        if (ai.resi !== aj.resi) lastResConnected = true;\n      }\n    }\n  }\n}\n","import { bondTable } from \"./bondLength\";\n\n// Attempts to infer atomic element from an atom name\nexport function atomNameToElem(name: string, nothetero: boolean) {\n  let elem = name.replace(/ /g, \"\");\n  if (\n    elem.length > 0 &&\n    elem[0] === \"H\" &&\n    elem !== \"Hg\" &&\n    elem !== \"He\" &&\n    elem !== \"Hf\" &&\n    elem !== \"Hs\" &&\n    elem !== \"Ho\"\n  ) {\n    elem = \"H\"; //workaround weird hydrogen names from MD, note mercury must use lowercase\n  }\n  if (elem.length > 1) {\n    elem = elem[0].toUpperCase() + elem.substring(1).toLowerCase();\n    if (bondTable[elem] === undefined) {\n      //not a known element, probably should just use first letter\n      elem = elem[0];\n    } else if (nothetero) {\n      if (elem === \"Ca\") {\n        //alpha carbon, not calcium\n        elem = \"C\";\n      } else if (elem === \"Cd\") {\n        elem = \"C\";\n      }\n    }\n  }\n  return elem;\n}\n","// Covalent radii lookup table used to identify bonds in assignBonds\nexport let bondTable: Record<string, number> = {\n  H :0.37,                                                                                                                                He:0.32,\n  Li:1.34,Be:0.90,                                                                                B :0.82,C :0.77,N :0.75,O :0.73,F :0.71,Ne:0.69,\n  Na:1.54,Mg:1.30,                                                                                Al:1.18,Si:1.11,P :1.06,S :1.02,Cl:0.99,Ar:0.97,\n  K :1.96,Ca:1.74,Sc:1.44,Ti:1.56,V :1.25,/* Cr */Mn:1.39,Fe:1.25,Co:1.26,Ni:1.21,Cu:1.38,Zn:1.31,Ga:1.26,Ge:1.22,/* As */Se:1.16,Br:1.14,Kr:1.10,\n  Rb:2.11,Sr:1.92,Y :1.62,Zr:1.48,Nb:1.37,Mo:1.45,Tc:1.56,Ru:1.26,Rh:1.35,Pd:1.31,Ag:1.53,Cd:1.48,In:1.44,Sn:1.41,Sb:1.38,Te:1.35,I :1.33,Xe:1.30,\n  Cs:2.25,Ba:1.98,Lu:1.60,Hf:1.50,Ta:1.38,W :1.46,Re:1.59,Os:1.44,Ir:1.37,Pt:1.28,Au:1.44,Hg:1.49,Tl:1.48,Pb:1.47,Bi:1.46,/* Po *//* At */Rn:1.45,\n\n  // None of the bottom row or any of the Lanthanides have bond lengths\n};\n\n// Get the length used for bond identification for the specified element.\nexport function bondLength(elem: string | number) {\n  return bondTable[elem] || 1.6;\n}\n\n// Set the length used for bond identification for the specified element.\nexport function setBondLength(elem: string, radius: number) {\n  if (radius < 0) radius = 0;\n  bondTable[elem] = radius;\n}\n","import { AtomSpec } from \"specs\";\nimport { assignBackboneHBonds } from \"./assignBackboneHBonds\";\n\nexport function computeSecondaryStructure(atomsarray: Array<AtomSpec>, hbondCutoff: number) {\n  assignBackboneHBonds(atomsarray, hbondCutoff);\n\n  // compute, per residue, what the secondary structure is\n  const chres = {}; // lookup by chain and resid\n  let i: number, il: number, c: string | number, r: number; // i: used in for loop, il: length of atomsarray\n  let atom: AtomSpec, val: string;\n\n  //identify helices first\n  for (i = 0, il = atomsarray.length; i < il; i++) {\n    atom = atomsarray[i];\n\n    if (chres[atom.chain] === undefined) chres[atom.chain] = [];\n\n    if (isFinite(atom.hbondDistanceSq)) {\n      const other = atom.hbondOther;\n      if (chres[other.chain] === undefined) chres[other.chain] = [];\n\n      if (Math.abs(other.resi - atom.resi) === 4) {\n        // helix\n        chres[atom.chain][atom.resi] = \"h\";\n      }\n    }\n  }\n\n  // plug gaps in helices\n  for (c in chres) {\n    for (r = 1; r < chres[c].length - 1; r++) {\n      const valbefore = chres[c][r - 1];\n      const valafter = chres[c][r + 1];\n      val = chres[c][r];\n      if (valbefore == \"h\" && valbefore == valafter && val != valbefore) {\n        chres[c][r] = valbefore;\n      }\n    }\n  }\n\n  //now potential sheets - but only if mate not part of helix\n  for (i = 0, il = atomsarray.length; i < il; i++) {\n    atom = atomsarray[i];\n\n    if (\n      isFinite(atom.hbondDistanceSq) &&\n      chres[atom.chain][atom.resi] != \"h\" &&\n      atom.ss !== \"h\"\n    ) {\n      chres[atom.chain][atom.resi] = \"maybesheet\";\n    }\n  }\n\n  //sheets must bond to other sheets\n  for (let i = 0, il = atomsarray.length; i < il; i++) {\n    atom = atomsarray[i];\n\n    if (\n      isFinite(atom.hbondDistanceSq) &&\n      chres[atom.chain][atom.resi] == \"maybesheet\"\n    ) {\n      let other = atom.hbondOther;\n      let otherval = chres[other.chain][other.resi];\n      if (otherval == \"maybesheet\" || otherval == \"s\") {\n        // true sheet\n        chres[atom.chain][atom.resi] = \"s\";\n        chres[other.chain][other.resi] = \"s\";\n      }\n    }\n  }\n\n  // plug gaps in sheets and remove singletons\n  for (let c in chres) {\n    for (let r = 1; r < chres[c].length - 1; r++) {\n      const valbefore = chres[c][r - 1];\n      const valafter = chres[c][r + 1];\n      val = chres[c][r];\n      if (valbefore == \"s\" && valbefore == valafter && val != valbefore) {\n        chres[c][r] = valbefore;\n      }\n    }\n    for (let r = 0; r < chres[c].length; r++) {\n      const val = chres[c][r];\n      if (val == \"h\" || val == \"s\") {\n        if (chres[c][r - 1] != val && chres[c][r + 1] != val)\n          delete chres[c][r];\n      }\n    }\n  }\n\n  // assign to all atoms in residue, keep track of start\n  for (i = 0, il = atomsarray.length; i < il; i++) {\n    atom = atomsarray[i];\n    val = chres[atom.chain][atom.resi];\n\n    //clear hbondOther to eliminate circular references that prohibit serialization\n    delete atom.hbondOther;\n    delete atom.hbondDistanceSq;\n    if (val === undefined || val === \"maybesheet\") continue;\n    atom.ss = val;\n    if (chres[atom.chain][atom.resi - 1] != val) atom.ssbegin = true;\n    if (chres[atom.chain][atom.resi + 1] != val) atom.ssend = true;\n  }\n}\n","import { Matrix4 } from \"../../WebGL\";\nimport { atomNameToElem } from \"./atomNameToElem\";\nimport { bondTable } from \"./bondLength\";\nimport { computeSecondaryStructure } from \"./computeSecondaryStructure\";\nimport { isEmpty } from \"./isEmpty\";\nimport { processSymmetries } from \"./processSymmetries\";\nimport { assignPDBBonds } from \"./assignPDBBonds\";\nimport { validateBonds } from \"./validateBonds\";\nimport { ParserOptionsSpec } from \"../ParserOptionsSpec\";\nimport { AtomSpec, Cryst } from \"specs\";\n// Return one model worth of pdb, returns atoms, modelData, and remaining lines\nexport function getSinglePDB(\n  lines: string[],\n  options: ParserOptionsSpec,\n  sslookup: { [x: string]: { [x: string]: string }; hasOwnProperty?: any }\n): [\n    AtomSpec[],\n    {\n      symmetries: Matrix4[];\n      cryst: Omit<Cryst, \"origin\" | \"size\" | \"unit\" | \"matrix4\" | \"matrix\">;\n    },\n    string[]\n  ] {\n  const atoms: AtomSpec[] = [];\n  const assignbonds =\n    options.assignBonds === undefined ? true : options.assignBonds;\n  const noH = !options.keepH; // suppress hydrogens by default\n  const ignoreStruct = !!options.noSecondaryStructure;\n  const computeStruct = !options.noComputeSecondaryStructure;\n  const noAssembly = !options.doAssembly; // don't assemble by default\n  const selAltLoc = options.altLoc ? options.altLoc : \"A\"; //default alternate location to select if present\n  const modelData: {\n    symmetries: Matrix4[];\n    cryst: Omit<Cryst, \"origin\" | \"size\" | \"unit\" | \"matrix4\" | \"matrix\">;\n  } = { symmetries: [], cryst: undefined };\n  //atom name\n  let atom: string;\n  let remainingLines = [];\n\n  const serialToIndex: number[] = []; // map from pdb serial to index in atoms\n  let line: string | string[];\n  const seenbonds: Record<string, number> = {}; //sometimes connect records are duplicated as an unofficial means of relaying bond orders\n\n  for (let i = 0; i < lines.length; i++) {\n    line = lines[i].replace(/^\\s*/, \"\"); // remove indent\n    const recordName = line.substring(0, 6);\n\n    let startChain: string, startResi: number, endResi: number;\n\n    if (recordName.indexOf(\"END\") === 0) {\n      remainingLines = lines.slice(i + 1);\n      if (recordName === \"END\") {\n        //as opposed to ENDMDL\n        //reset secondary structure\n        for (const prop in sslookup) {\n          if (sslookup.hasOwnProperty(prop)) {\n            delete sslookup[prop];\n          }\n        }\n      }\n      break;\n    } else if (recordName === \"ATOM  \" || recordName === \"HETATM\") {\n      let resn: string,\n        chain: any,\n        resi: string | number,\n        icode: string,\n        x: number,\n        y: number,\n        z: number,\n        hetflag: boolean,\n        elem: string | string[],\n        serial: number,\n        altLoc: string,\n        b: number;\n      altLoc = line.substring(16, 17);\n      if (altLoc !== \" \" && altLoc !== selAltLoc && selAltLoc !== \"*\") continue;\n      serial = parseInt(line.substring(6, 11));\n      atom = line.substring(12, 16).replace(/ /g, \"\");\n      resn = line.substring(17, 20).replace(/ /g, \"\");\n      chain = line.substring(21, 22);\n      resi = parseInt(line.substring(22, 26));\n      icode = line.substring(26, 27);\n      x = parseFloat(line.substring(30, 38));\n      y = parseFloat(line.substring(38, 46));\n      z = parseFloat(line.substring(46, 54));\n      b = parseFloat(line.substring(60, 68));\n      elem = line.substring(76, 78).replace(/ /g, \"\");\n      if (elem === \"\" || bondTable[elem] === undefined) {\n        // for some incorrect PDB files\n        elem = atomNameToElem(line.substring(12, 14), line[0] == \"A\");\n      } else {\n        elem = elem[0].toUpperCase() + elem.substring(1).toLowerCase();\n      }\n\n      if (elem === \"H\" && noH) continue;\n      if (recordName[0] == \"H\") hetflag = true;\n      else hetflag = false;\n      serialToIndex[serial] = atoms.length;\n      atoms.push({\n        resn,\n        x,\n        y,\n        z,\n        elem,\n        hetflag,\n        altLoc,\n        chain,\n        resi,\n        icode: icode,\n        rescode: resi + (icode !== \" \" ? \"^\" + icode : \"\"), // combo\n        // resi\n        // and\n        // icode\n        serial,\n        atom,\n        bonds: [],\n        ss: \"c\",\n        bondOrder: [],\n        properties: {},\n        b,\n        pdbline: line,\n      });\n    } else if (recordName === \"SHEET \") {\n      startChain = line.substring(21, 22);\n      startResi = parseInt(line.substring(22, 26));\n      endResi = parseInt(line.substring(33, 37));\n      if (!(startChain in sslookup)) {\n        sslookup[startChain] = {};\n      }\n      //mark start and end with additional character\n      sslookup[startChain][startResi] = \"s1\";\n      for (let res = startResi + 1; res < endResi; res++) {\n        sslookup[startChain][res] = \"s\";\n      }\n      sslookup[startChain][endResi] = \"s2\";\n    } else if (recordName === \"CONECT\") {\n      // MEMO: We don't have to parse SSBOND, LINK because both are\n      // also\n      // described in CONECT. But what about 2JYT???\n      const from = parseInt(line.substring(6, 11));\n      const fromindex = serialToIndex[from];\n      const fromAtom = atoms[fromindex];\n      const coffsets = [11, 16, 21, 26];\n      for (let j = 0; j < 4; j++) {\n        const to = parseInt(line.substring(coffsets[j], coffsets[j] + 5));\n        const toindex = serialToIndex[to];\n        let from_to = fromindex + \":\" + toindex;\n        const toAtom = atoms[toindex];\n        if (fromAtom !== undefined && toAtom !== undefined) {\n          // duplicated conect records indicate bond order\n          if (!seenbonds[from_to]) {\n            seenbonds[from_to] = 1;\n            if (\n              fromAtom.bonds.length == 0 ||\n              fromAtom.bonds[fromAtom.bonds.length - 1] !== toindex\n            ) {\n              fromAtom.bonds.push(toindex);\n              fromAtom.bondOrder.push(1);\n            }\n          } else {\n            //update bond order\n            seenbonds[from_to] += 1;\n\n            for (let bi = 0; bi < fromAtom.bonds.length; bi++) {\n              if (fromAtom.bonds[bi] == toindex) {\n                const newbo = seenbonds[from_to];\n                if (newbo >= 4) {\n                  //aromatic\n                  fromAtom.bondOrder[bi] = 1;\n                } else {\n                  fromAtom.bondOrder[bi] = newbo;\n                }\n              }\n            }\n          }\n        }\n      }\n    } else if (recordName === \"HELIX \") {\n      startChain = line.substring(19, 20);\n      startResi = parseInt(line.substring(21, 25));\n      endResi = parseInt(line.substring(33, 37));\n      if (!(startChain in sslookup)) {\n        sslookup[startChain] = {};\n      }\n      sslookup[startChain][startResi] = \"h1\";\n      for (let res = startResi + 1; res < endResi; res++) {\n        sslookup[startChain][res] = \"h\";\n      }\n      sslookup[startChain][endResi] = \"h2\";\n    } else if (\n      !noAssembly &&\n      recordName === \"REMARK\" &&\n      line.substring(13, 18) === \"BIOMT\"\n    ) {\n      let n: number;\n      let matrix = new Matrix4();\n      for (n = 1; n <= 3; n++) {\n        line = lines[i].replace(/^\\s*/, \"\");\n        if (parseInt(line.substring(18, 19)) == n) {\n          // check for all\n          // three lines\n          // by matching #\n          // @ end of\n          // \"BIOMT\" to n\n          matrix.elements[n - 1] = parseFloat(line.substring(23, 33));\n          matrix.elements[n - 1 + 4] = parseFloat(line.substring(33, 43));\n          matrix.elements[n - 1 + 8] = parseFloat(line.substring(43, 53));\n          matrix.elements[n - 1 + 12] = parseFloat(line.substring(53));\n          i++;\n        } else {\n          while (line.substring(13, 18) === \"BIOMT\") {\n            i++;\n            line = lines[i].replace(/^\\s*/, \"\");\n          }\n        }\n      }\n      matrix.elements[3] = 0;\n      matrix.elements[7] = 0;\n      matrix.elements[11] = 0;\n      matrix.elements[15] = 1;\n      modelData.symmetries.push(matrix);\n      i--; // set i back\n    } else if (recordName === \"CRYST1\") {\n      let a: number,\n        b: number,\n        c: number,\n        alpha: number,\n        beta: number,\n        gamma: number;\n      a = parseFloat(line.substring(7, 15));\n      b = parseFloat(line.substring(16, 24));\n      c = parseFloat(line.substring(25, 33));\n      alpha = parseFloat(line.substring(34, 40));\n      beta = parseFloat(line.substring(41, 47));\n      gamma = parseFloat(line.substring(48, 54));\n      modelData.cryst = {\n        a,\n        b,\n        c,\n        alpha,\n        beta,\n        gamma,\n      };\n    } else if (recordName === \"ANISOU\") {\n      const serial = parseInt(line.substring(6, 11));\n      const anisouAtomIndex = serialToIndex[serial];\n      const anisouAtom = atoms[anisouAtomIndex];\n      if (anisouAtom) {\n        const vals = line.substring(30).trim().split(/\\s+/);\n        const uMat = {\n          u11: parseInt(vals[0]),\n          u22: parseInt(vals[1]),\n          u33: parseInt(vals[2]),\n          u12: parseInt(vals[3]),\n          u13: parseInt(vals[4]),\n          u23: parseInt(vals[5]),\n        };\n\n        anisouAtom.uMat = uMat;\n      }\n    }\n  }\n\n  //fix any \"one-way\" bonds in CONECT records\n  validateBonds(atoms, serialToIndex);\n  // assign bonds - yuck, can't count on connect records\n  if (assignbonds) assignPDBBonds(atoms, options);\n\n  if (!noAssembly)\n    processSymmetries(modelData.symmetries, atoms, options, modelData.cryst);\n\n  if (computeStruct && !ignoreStruct) {\n    computeSecondaryStructure(atoms, options.hbondCutoff);\n  }\n\n  // Assign secondary structures from pdb file\n  if (!isEmpty(sslookup)) {\n    for (let i = 0; i < atoms.length; i++) {\n      const atom = atoms[i];\n      if (atom === undefined) continue;\n      if (atom.chain in sslookup && atom.resi in sslookup[atom.chain]) {\n        const code = sslookup[atom.chain][atom.resi];\n        atom.ss = code[0];\n        if (code.length > 1) {\n          if (code[1] == \"1\") atom.ssbegin = true;\n          else if (code[1] == \"2\") atom.ssend = true;\n        }\n      }\n    }\n  }\n  //console.log(\"assign structure \" + ((new Date()).getTime() - starttime));\n\n  return [atoms, modelData, remainingLines];\n}\n","export function isEmpty(obj: {\n  [x: string]: { [x: string]: unknown };\n  hasOwnProperty?: any;\n}) {\n  for (const _ in obj) {\n    return false;\n  }\n  return true;\n}\n","import { ParserOptionsSpec } from \"parsers/ParserOptionsSpec\";\nimport { Matrix3, conversionMatrix3, Vector3 } from \"../../WebGL\";\nimport { AtomSpec, Cryst } from \"specs\";\n// Adds symmetry info to either duplicate and rotate/translate biological unit later or add extra atoms now\n// matrices may be modified if normalization is requested\n\nexport function processSymmetries(\n  copyMatrices: string[] | any[],\n  atoms: AtomSpec[],\n  options: ParserOptionsSpec,\n  cryst: Omit<Cryst, \"origin\" | \"size\" | \"unit\" | \"matrix4\" | \"matrix\">\n) {\n  const dontDuplicate = !options.duplicateAssemblyAtoms;\n  const end = atoms.length;\n  let offset = end;\n\n  let modifiedIdentity = -1;\n  let conversionMatrix = null;\n  let toFrac = null;\n\n  if ((options.normalizeAssembly || options.wrapAtoms) && cryst) {\n    conversionMatrix = conversionMatrix3(\n      cryst.a,\n      cryst.b,\n      cryst.c,\n      cryst.alpha,\n      cryst.beta,\n      cryst.gamma\n    );\n    toFrac = new Matrix3();\n    toFrac.getInverse3(conversionMatrix);\n  }\n\n  let getAdjustment = function (v: Vector3) {\n    let c = v.clone().applyMatrix3(toFrac);\n    const coord = [c.x, c.y, c.z];\n    const adjustment = [0.0, 0.0, 0.0];\n    for (let i = 0; i < 3; i++) {\n      while (coord[i] < -0.001) {\n        coord[i] += 1.0;\n        adjustment[i] += 1.0;\n      }\n      while (coord[i] > 1.001) {\n        coord[i] -= 1.0;\n        adjustment[i] -= 1.0;\n      }\n    }\n    //convert adjustment to non-fractional\n    const adjustmentVec = new Vector3(\n      adjustment[0],\n      adjustment[1],\n      adjustment[2]\n    );\n    adjustmentVec.applyMatrix3(conversionMatrix);\n    return adjustmentVec;\n  };\n\n  if (options.normalizeAssembly && cryst) {\n    //to normalize, translate every symmetry so that the centroid is\n    //in the unit cell.  To do this, convert back to fractional coordinates,\n    //compute the centroid, calculate any adjustment needed to get it in [0,1],\n    //convert the adjustment to a cartesian translation, and then add it to\n    //the symmetry matrix\n\n    for (let t = 0; t < copyMatrices.length; t++) {\n      //transform with the symmetry, and then back to fractional coordinates\n      const center = new Vector3(0, 0, 0);\n      for (let n = 0; n < end; n++) {\n        const xyz = new Vector3(atoms[n].x, atoms[n].y, atoms[n].z);\n        xyz.applyMatrix4(copyMatrices[t]);\n        //figure out\n        center.add(xyz);\n      }\n      center.divideScalar(end);\n\n      const adjustmentVec = getAdjustment(center);\n      //modify symmetry matrix to include translation\n      if (\n        copyMatrices[t].isNearlyIdentity() &&\n        adjustmentVec.lengthSq() > 0.001\n      ) {\n        modifiedIdentity = t; //keep track of which matrix was identity\n      }\n      copyMatrices[t].translate(adjustmentVec);\n    }\n  }\n  if (!dontDuplicate) {\n    // do full assembly\n    for (let n = 0; n < end; n++) {\n      atoms[n].sym = -1; //if identity matrix is present, original labeled -1\n    }\n    for (let t = 0; t < copyMatrices.length; t++) {\n      if (!copyMatrices[t].isNearlyIdentity() && modifiedIdentity != t) {\n        let xyz = new Vector3();\n        for (let n = 0; n < end; n++) {\n          const bondsArr: number[] = [];\n          for (let l = 0; l < atoms[n].bonds.length; l++) {\n            bondsArr.push(atoms[n].bonds[l] + offset);\n          }\n          xyz.set(atoms[n].x, atoms[n].y, atoms[n].z);\n          xyz.applyMatrix4(copyMatrices[t]);\n\n          if (options.wrapAtoms && cryst) {\n            //wrap per-atom instead of per matrix using the centroid\n            let adjustment = getAdjustment(xyz);\n            xyz.add(adjustment);\n          }\n\n          const newAtom: Record<string, unknown> = {};\n          for (const i in atoms[n]) {\n            newAtom[i] = atoms[n][i];\n          }\n          newAtom.x = xyz.x;\n          newAtom.y = xyz.y;\n          newAtom.z = xyz.z;\n          newAtom.bonds = bondsArr;\n          newAtom.sym = t; //so symmetries can be selected\n          newAtom.index = atoms.length;\n          atoms.push(newAtom);\n        }\n        offset = atoms.length;\n      } else {\n        for (let n = 0; n < end; n++) {\n          atoms[n].sym = t;\n        }\n      }\n    }\n    if (options.wrapAtoms && cryst) {\n      //wrap reference coordinates, because the world isn't kind enough\n      //to ensure these are in the box\n      let xyz = new Vector3();\n      for (let n = 0; n < end; n++) {\n        xyz.set(atoms[n].x, atoms[n].y, atoms[n].z);\n        //wrap per-atom instead of per matrix using the centroid\n        let adjustment = getAdjustment(xyz);\n        xyz.add(adjustment);\n        atoms[n].x = xyz.x;\n        atoms[n].y = xyz.y;\n        atoms[n].z = xyz.z;\n      }\n    }\n    if (modifiedIdentity >= 0) {\n      //after applying the other transformations, apply this one in place\n      const xyz = new Vector3();\n      for (let n = 0; n < end; n++) {\n        xyz.set(atoms[n].x, atoms[n].y, atoms[n].z);\n        xyz.applyMatrix4(copyMatrices[modifiedIdentity]);\n        atoms[n].x = xyz.x;\n        atoms[n].y = xyz.y;\n        atoms[n].z = xyz.z;\n      }\n    }\n    //we have explicitly duplicated the atoms, remove model symmetry information\n    (copyMatrices as any).length = 0;\n  } else if (copyMatrices.length > 1) {\n    for (let t = 0; t < atoms.length; t++) {\n      var symmetries: Vector3[] = [];\n      for (let l = 0; l < copyMatrices.length; l++) {\n        if (!copyMatrices[l].isNearlyIdentity()) {\n          var newXYZ = new Vector3();\n          newXYZ.set(atoms[t].x, atoms[t].y, atoms[t].z);\n          newXYZ.applyMatrix4(copyMatrices[l]);\n          symmetries.push(newXYZ);\n        }\n      }\n      atoms[t].symmetries = symmetries;\n    }\n  }\n}\n","export const standardResidues: Set<string> = new Set([\n  \"ABU\",\n  \"ACD\",\n  \"ALA\",\n  \"ALB\",\n  \"ALI\",\n  \"ARG\",\n  \"AR0\",\n  \"ASN\",\n  \"ASP\",\n  \"ASX\",\n  \"BAS\",\n  \"CYS\",\n  \"CYH\",\n  \"CYX\",\n  \"CSS\",\n  \"CSH\",\n  \"GLN\",\n  \"GLU\",\n  \"GLX\",\n  \"GLY\",\n  \"HIS\",\n  \"HIE\",\n  \"HID\",\n  \"HIP\",\n  \"HYP\",\n  \"ILE\",\n  \"ILU\",\n  \"LEU\",\n  \"LYS\",\n  \"MET\",\n  \"PCA\",\n  \"PGA\",\n  \"PHE\",\n  \"PR0\",\n  \"PRO\",\n  \"PRZ\",\n  \"SER\",\n  \"THR\",\n  \"TRP\",\n  \"TYR\",\n  \"VAL\",\n  \"A\",\n  \"1MA\",\n  \"C\",\n  \"5MC\",\n  \"OMC\",\n  \"G\",\n  \"1MG\",\n  \"2MG\",\n  \"M2G\",\n  \"7MG\",\n  \"OMG\",\n  \"YG\",\n  \"I\",\n  \"T\",\n  \"U\",\n  \"+U\",\n  \"H2U\",\n  \"5MU\",\n  \"PSU\",\n  \"ACE\",\n  \"F0R\",\n  \"H2O\",\n  \"HOH\",\n  \"WAT\",\n]);\n","import { AtomSpec } from \"specs\";\n\n// Make sure bonds are actually two way\nexport function validateBonds(atomsarray: AtomSpec[], serialToIndex: number[]) {\n  for (let i = 0, n = atomsarray.length; i < n; i++) {\n    const atom = atomsarray[i];\n    for (let b = 0; b < atom.bonds.length; b++) {\n      const a2i = atom.bonds[b];\n      const atom2 = atomsarray[a2i];\n      const atomi = serialToIndex[atom.serial];\n      if (atom2 && atomi) {\n        const a1i = atom2.bonds.indexOf(atomi);\n        if (a1i < 0) {\n          atom2.bonds.push(atomi);\n          atom2.bondOrder.push(atom.bondOrder[b]);\n        }\n      }\n    }\n  }\n}\n","//properties for mapping\n/* partial charges for proteins */\nexport const partialCharges = {\n\"ALA:N\": -0.15,\n\"ALA:CA\": 0.10,\n\"ALA:CB\": 0.00,\n\"ALA:C\": 0.60,\n\"ALA:O\": -0.55,\n\"ARG:N\": -0.15,\n\"ARG:CA\": 0.10,\n\"ARG:CB\": 0.00,\n\"ARG:CG\": 0.00,\n\"ARG:CD\": 0.10,\n\"ARG:NE\": -0.10,\n\"ARG:CZ\": 0.50,\n\"ARG:NH1\": 0.25,\n\"ARG:NH2\": 0.25,\n\"ARG:C\": 0.60,\n\"ARG:O\": -0.55,\n\"ASN:N\": -0.15,\n\"ASN:CA\": 0.10,\n\"ASN:CB\": 0.00,\n\"ASN:CG\": 0.55,\n\"ASN:OD1\": -0.55,\n\"ASN:ND2\": 0.00,\n\"ASN:C\": 0.60,\n\"ASN:O\": -0.55,\n\"ASP:N\": -0.15,\n\"ASP:CA\": 0.10,\n\"ASP:CB\": 0.00,\n\"ASP:CG\": 0.14,\n\"ASP:OD1\": -0.57,\n\"ASP:OD2\": -0.57,\n\"ASP:C\": 0.60,\n\"ASP:O\": -0.55,\n\"CYS:N\": -0.15,\n\"CYS:CA\": 0.10,\n\"CYS:CB\": 0.19,\n\"CYS:SG\": -0.19,\n\"CYS:C\": 0.60,\n\"CYS:O\": -0.55,\n\"GLN:N\": -0.15,\n\"GLN:CA\": 0.10,\n\"GLN:CB\": 0.00,\n\"GLN:CG\": 0.00,\n\"GLN:CD\": 0.55,\n\"GLN:OE1\": -0.55,\n\"GLN:NE2\": 0.00,\n\"GLN:C\": 0.60,\n\"GLN:O\": -0.55,\n\"GLU:N\": -0.15,\n\"GLU:CA\": 0.10,\n\"GLU:CB\": 0.00,\n\"GLU:CG\": 0.00,\n\"GLU:CD\": 0.14,\n\"GLU:OE1\": -0.57,\n\"GLU:OE2\": -0.57,\n\"GLU:C\": 0.60,\n\"GLU:O\": -0.55,\n\"GLY:N\": -0.15,\n\"GLY:CA\": 0.10,\n\"GLY:C\": 0.60,\n\"GLY:O\": -0.55,\n\"HIS:N\": -0.15,\n\"HIS:CA\": 0.10,\n\"HIS:CB\": 0.00,\n\"HIS:CG\": 0.10,\n\"HIS:ND1\": -0.10,\n\"HIS:CD2\": 0.10,\n\"HIS:NE2\": -0.40,\n\"HIS:CE1\": 0.30,\n\"HIS:C\": 0.60,\n\"HIS:O\": -0.55,\n\"ILE:N\": -0.15,\n\"ILE:CA\": 0.10,\n\"ILE:CB\": 0.00,\n\"ILE:CG2\": 0.00,\n\"ILE:CG1\": 0.00,\n\"ILE:CD\": 0.00,\n\"ILE:C\": 0.60,\n\"ILE:O\": -0.55,\n\"LEU:N\": -0.15,\n\"LEU:CA\": 0.10,\n\"LEU:CB\": 0.00,\n\"LEU:CG\": 0.00,\n\"LEU:CD1\": 0.00,\n\"LEU:CD2\": 0.00,\n\"LEU:C\": 0.60,\n\"LEU:O\": -0.55,\n\"LYS:N\": -0.15,\n\"LYS:CA\": 0.10,\n\"LYS:CB\": 0.00,\n\"LYS:CG\": 0.00,\n\"LYS:CD\": 0.00,\n\"LYS:CE\": 0.25,\n\"LYS:NZ\": 0.75,\n\"LYS:C\": 0.60,\n\"LYS:O\": -0.55,\n\"MET:N\": -0.15,\n\"MET:CA\": 0.10,\n\"MET:CB\": 0.00,\n\"MET:CG\": 0.06,\n\"MET:SD\": -0.12,\n\"MET:CE\": 0.06,\n\"MET:C\": 0.60,\n\"MET:O\": -0.55,\n\"PHE:N\": -0.15,\n\"PHE:CA\": 0.10,\n\"PHE:CB\": 0.00,\n\"PHE:CG\": 0.00,\n\"PHE:CD1\": 0.00,\n\"PHE:CD2\": 0.00,\n\"PHE:CE1\": 0.00,\n\"PHE:CE2\": 0.00,\n\"PHE:CZ\": 0.00,\n\"PHE:C\": 0.60,\n\"PHE:O\": -0.55,\n\"PRO:N\": -0.25,\n\"PRO:CD\": 0.10,\n\"PRO:CA\": 0.10,\n\"PRO:CB\": 0.00,\n\"PRO:CG\": 0.00,\n\"PRO:C\": 0.60,\n\"PRO:O\": -0.55,\n\"SER:N\": -0.15,\n\"SER:CA\": 0.10,\n\"SER:CB\": 0.25,\n\"SER:OG\": -0.25,\n\"SER:C\": 0.60,\n\"SER:O\": -0.55,\n\"THR:N\": -0.15,\n\"THR:CA\": 0.10,\n\"THR:CB\": 0.25,\n\"THR:OG1\": -0.25,\n\"THR:CG2\": 0.00,\n\"THR:C\": 0.60,\n\"THR:O\": -0.55,\n\"TRP:N\": -0.15,\n\"TRP:CA\": 0.10,\n\"TRP:CB\": 0.00,\n\"TRP:CG\": -0.03,\n\"TRP:CD2\": 0.10,\n\"TRP:CE2\": -0.04,\n\"TRP:CE3\": -0.03,\n\"TRP:CD1\": 0.06,\n\"TRP:NE1\": -0.06,\n\"TRP:CZ2\": 0.00,\n\"TRP:CZ3\": 0.00,\n\"TRP:CH2\": 0.00,\n\"TRP:C\": 0.60,\n\"TRP:O\": -0.55,\n\"TYR:N\": -0.15,\n\"TYR:CA\": 0.10,\n\"TYR:CB\": 0.00,\n\"TYR:CG\": 0.00,\n\"TYR:CD1\": 0.00,\n\"TYR:CE1\": 0.00,\n\"TYR:CD2\": 0.00,\n\"TYR:CE2\": 0.00,\n\"TYR:CZ\": 0.25,\n\"TYR:OH\": -0.25,\n\"TYR:C\": 0.60,\n\"TYR:O\": -0.55,\n\"VAL:N\": -0.15,\n\"VAL:CA\": 0.10,\n\"VAL:CB\": 0.00,\n\"VAL:CG1\": 0.00,\n\"VAL:CG2\": 0.00,\n\"VAL:C\": 0.60,\n\"VAL:O\": -0.55\n};\n    \n//this can be supplied to mapAtomProperties\nexport function applyPartialCharges(atom: Record<string, any>, keepexisting: boolean) {\n    if(!keepexisting || typeof(atom.partialCharge) === \"undefined\") {\n        if(atom.resn && atom.atom) {\n            var key = atom.resn+\":\"+atom.atom;\n            atom.properties.partialCharge = (partialCharges as any)[key];\n        }\n    }\n};\n","//a collection of miscellaneous utility functions\n\nimport { getGradient, Gradient, GradientType } from \"./Gradient\";\nimport { VolumeData } from \"./VolumeData\";\nimport { builtinColorSchemes, CC, elementColors, htmlColors, Color } from \"./colors\";\nimport { IsoSurfaceSpec } from \"GLShape\";\nimport { inflate, InflateFunctionOptions, Data } from \"pako\"\n\n//simplified version of jquery extend\nexport function extend(obj1, src1) {\n    for (var key in src1) {\n        if (src1.hasOwnProperty(key) && src1[key] !== undefined) {\n            obj1[key] = src1[key];\n        }\n    }\n    return obj1;\n};\n\n//deep copy, cannot deal with circular refs; undefined input becomes an empty object\n//https://medium.com/javascript-in-plain-english/how-to-deep-copy-objects-and-arrays-in-javascript-7c911359b089\nexport function deepCopy(inObject) {\n    let outObject, value, key;\n\n    if (inObject == undefined) {\n        return {};\n    }\n    if (typeof inObject !== \"object\" || inObject === null) {\n        return inObject; // Return the value if inObject is not an object\n    }\n\n    // Create an array or object to hold the values\n    outObject = Array.isArray(inObject) ? [] : {};\n\n    for (key in inObject) {\n        value = inObject[key];\n        // Recursively (deep) copy for nested objects, including arrays\n        outObject[key] = deepCopy(value);\n    }\n\n    return outObject;\n};\n\nexport function isNumeric(obj) {\n\n    var type = typeof (obj);\n    return (type === \"number\" || type === \"string\") &&\n        !isNaN(obj - parseFloat(obj));\n};\n\nexport function isEmptyObject(obj) {\n    var name;\n    for (name in obj) {\n        return false;\n    }\n    return true;\n};\n\nexport type Func = Function|string|undefined|null;\n\nexport function makeFunction(callback:Func) {\n    //for py3dmol let users provide callback as string\n    if (callback && typeof callback === \"string\") {\n        /* jshint ignore:start */\n        callback = eval(\"(\" + callback + \")\");\n        /* jshint ignore:end */\n    }\n    // report to console if callback is not a valid function\n    if (callback && typeof callback != \"function\") {\n        return null;\n    }\n    return callback;\n};\n\n//standardize voldata/volscheme in style\nexport function adjustVolumeStyle(style: IsoSurfaceSpec) {\n    if (style) {\n        if (style.volformat && !(style.voldata instanceof VolumeData)) {\n            style.voldata = new VolumeData(style.voldata, style.volformat);\n        }\n        if (style.volscheme) {\n            style.volscheme = Gradient.getGradient(style.volscheme);\n        }\n    }\n};\n\n\n/*\n * computes the bounding box around the provided atoms\n * @param {AtomSpec[]} atomlist\n * @return {Array}\n */\nexport function getExtent(atomlist, ignoreSymmetries?) {\n    var xmin, ymin, zmin, xmax, ymax, zmax, xsum, ysum, zsum, cnt;\n    var includeSym = !ignoreSymmetries;\n\n    xmin = ymin = zmin = 9999;\n    xmax = ymax = zmax = -9999;\n    xsum = ysum = zsum = cnt = 0;\n\n    if (atomlist.length === 0)\n        return [[0, 0, 0], [0, 0, 0], [0, 0, 0]];\n    for (var i = 0; i < atomlist.length; i++) {\n        var atom = atomlist[i];\n        if (typeof atom === 'undefined' || !isFinite(atom.x) ||\n            !isFinite(atom.y) || !isFinite(atom.z))\n            continue;\n        cnt++;\n        xsum += atom.x;\n        ysum += atom.y;\n        zsum += atom.z;\n\n        xmin = (xmin < atom.x) ? xmin : atom.x;\n        ymin = (ymin < atom.y) ? ymin : atom.y;\n        zmin = (zmin < atom.z) ? zmin : atom.z;\n        xmax = (xmax > atom.x) ? xmax : atom.x;\n        ymax = (ymax > atom.y) ? ymax : atom.y;\n        zmax = (zmax > atom.z) ? zmax : atom.z;\n\n        if (atom.symmetries && includeSym) {\n            for (var n = 0; n < atom.symmetries.length; n++) {\n                cnt++;\n                xsum += atom.symmetries[n].x;\n                ysum += atom.symmetries[n].y;\n                zsum += atom.symmetries[n].z;\n                xmin = (xmin < atom.symmetries[n].x) ? xmin : atom.symmetries[n].x;\n                ymin = (ymin < atom.symmetries[n].y) ? ymin : atom.symmetries[n].y;\n                zmin = (zmin < atom.symmetries[n].z) ? zmin : atom.symmetries[n].z;\n                xmax = (xmax > atom.symmetries[n].x) ? xmax : atom.symmetries[n].x;\n                ymax = (ymax > atom.symmetries[n].y) ? ymax : atom.symmetries[n].y;\n                zmax = (zmax > atom.symmetries[n].z) ? zmax : atom.symmetries[n].z;\n            }\n        }\n    }\n\n    return [[xmin, ymin, zmin], [xmax, ymax, zmax],\n    [xsum / cnt, ysum / cnt, zsum / cnt]];\n};\n\n\n/* get the min and max values of the specified property in the provided\n* @function $3Dmol.getPropertyRange\n* @param {AtomSpec[]} atomlist - list of atoms to evaluate\n* @param {string} prop - name of property \n* @return {Array} - [min, max] values\n*/\nexport function getPropertyRange(atomlist, prop) {\n    var min = Number.POSITIVE_INFINITY;\n    var max = Number.NEGATIVE_INFINITY;\n\n    for (var i = 0, n = atomlist.length; i < n; i++) {\n        var atom = atomlist[i];\n        var val = getAtomProperty(atom, prop);\n\n        if (val != null) {\n            if (val < min)\n                min = val;\n            if (val > max)\n                max = val;\n        }\n    }\n\n    if (!isFinite(min) && !isFinite(max))\n        min = max = 0;\n    else if (!isFinite(min))\n        min = max;\n    else if (!isFinite(max))\n        max = min;\n\n    return [min, max];\n};\n\n\n//adapted from https://stackoverflow.com/questions/3969475/javascript-pause-settimeout\nexport class PausableTimer {\n    ident: any;\n    total_time_run = 0;\n    start_time: number;\n    countdown: number;\n    fn: any;\n    arg: any;\n\n    constructor(fn, countdown, arg?) {\n        this.fn = fn;\n        this.arg = arg;\n        this.countdown = countdown;\n        this.start_time = new Date().getTime();\n        this.ident = setTimeout(fn, countdown, arg);\n    }\n\n    cancel() {\n        clearTimeout(this.ident);\n    }\n\n    pause() {\n        clearTimeout(this.ident);\n        this.total_time_run = new Date().getTime() - this.start_time;\n    }\n\n    resume() {\n        this.ident = setTimeout(this.fn, Math.max(0, this.countdown - this.total_time_run), this.arg);\n    }\n\n};\n\n/*\n * Convert a base64 encoded string to a Uint8Array\n * @param {string} base64 encoded string\n */\nexport function base64ToArray(base64) {\n    var binary_string = window.atob(base64);\n    var len = binary_string.length;\n    var bytes = new Uint8Array(len);\n    for (var i = 0; i < len; i++) {\n        bytes[i] = binary_string.charCodeAt(i);\n    }\n    return bytes;\n};\n\n//return the value of an atom property prop, or null if non existent\n// looks first in properties, then in the atom itself\nexport function getAtomProperty(atom, prop) {\n    var val = null;\n    if (atom.properties &&\n        typeof (atom.properties[prop]) != \"undefined\") {\n        val = atom.properties[prop];\n    } else if (typeof (atom[prop]) != 'undefined') {\n        val = atom[prop];\n    }\n    return val;\n};\n\n//Miscellaneous functions and classes - to be incorporated into $3Dmol proper\n/*\n * \n * @param {$3Dmol.Geometry} geometry\n * @param {$3Dmol.Mesh} mesh\n * @returns {undefined}\n */\nexport function mergeGeos(geometry, mesh) {\n\n    var meshGeo = mesh.geometry;\n\n    if (meshGeo === undefined)\n        return;\n\n    geometry.geometryGroups.push(meshGeo.geometryGroups[0]);\n\n};\n\n\n/*\n * Parse a string that represents a style or atom selection and convert it\n * into an object.  The goal is to make it easier to write out these specifications\n * without resorting to json. Objects cannot be defined recursively.\n * ; - delineates fields of the object \n * : - if the field has a value other than an empty object, it comes after a colon\n * , - delineates key/value pairs of a value object\n *     If the value object consists of ONLY keys (no = present) the keys are \n *     converted to a list.  Otherwise a object of key/value pairs is created with\n *     any missing values set to null\n * = OR ~ - separates key/value pairs of a value object, if not provided value is null\n *     twiddle is supported since = has special meaning in URLs\n * @param (String) str\n * @returns {Object}\n */\nexport function specStringToObject(str) {\n    if (typeof (str) === \"object\") {\n        return str; //not string, assume was converted already\n    }\n    else if (typeof (str) === \"undefined\" || str == null) {\n        return str;\n    }\n\n    //if this is a json string, parse it directly\n    try {\n        let parsed = JSON.parse(str);\n        return parsed;\n    } catch (error) {\n\n    }\n\n    str = str.replace(/%7E/g, '~'); //copy/pasting urls sometimes does this\n    //convert things that look like numbers into numbers\n    var massage = function (val) {\n        if (isNumeric(val)) {\n            //hexadecimal does not parse as float\n            if (Math.floor(parseFloat(val)) == parseInt(val)) {\n                return parseFloat(val);\n            }\n            else if (val.indexOf('.') >= 0) {\n                return parseFloat(val); // \".7\" for example, does not parseInt\n            }\n            else {\n                return parseInt(val);\n            }\n        }\n        //boolean conversions\n        else if (val === 'true') {\n            return true;\n        }\n        else if (val === 'false') {\n            return false;\n        }\n        return val;\n    };\n\n    var ret = {};\n    if (str === 'all') return ret;\n    var fields = str.split(';');\n    for (var i = 0; i < fields.length; i++) {\n        var fv = fields[i].split(':');\n        var f = fv[0];\n        var val = {};\n        var vstr = fv[1];\n        if (vstr) {\n            vstr = vstr.replace(/~/g, \"=\");\n            if (vstr.indexOf('=') !== -1) {\n                //has key=value pairs, must be object\n                var kvs = vstr.split(',');\n                for (var j = 0; j < kvs.length; j++) {\n                    var kv = kvs[j].split('=', 2);\n                    val[kv[0]] = massage(kv[1]);\n                }\n            }\n            else if (vstr.indexOf(',') !== -1) {\n                //has multiple values, must list\n                val = vstr.split(',');\n            }\n            else {\n                val = massage(vstr); //value itself\n            }\n        }\n        ret[f] = val;\n    }\n\n    return ret;\n};\n\n\n\nfunction checkStatus(response) {\n    if (!response.ok) {\n        throw new Error(`HTTP ${response.status} - ${response.statusText}`);\n    }\n    return response;\n}\n\n/**\n * Fetch data from URL\n * \n * @param uri URL\n * @param callback Function to call with data \n */\nexport function get(uri, callback?) {\n    var promise = fetch(uri).then(checkStatus).then((response) => response.text());\n    if (callback)\n        return promise.then(callback);\n    else\n        return promise;\n}\n\n/**\n * Download binary data (e.g. a gzipped file) into an array buffer and provide\n * arraybuffer to callback.\n * @param {string} uri - location of data\n * @param {Function} [callback] - Function to call with arraybuffer as argument.  \n * @param {string} [request] - type of request\n * @param {string} [postdata] - data for POST request\n * @return {Promise}\n */\nexport function getbin(uri, callback?, request?, postdata?) {\n    var promise;\n    if (request == \"POST\") {\n        promise = fetch(uri, { method: 'POST', body: postdata })\n            .then((response) => checkStatus(response))\n            .then((response) => response.arrayBuffer());\n    } else {\n        promise = fetch(uri).then((response) => checkStatus(response))\n            .then((response) => response.arrayBuffer());\n    }\n\n    if (callback) return promise.then(callback);\n    else return promise;\n};\n\n\n/**\n * Load a PDB/PubChem structure into existing viewer. Automatically calls 'zoomTo' and 'render' on viewer after loading model\n * @param {string} query - String specifying pdb or pubchem id; must be prefaced with \"pdb: \" or \"cid: \", respectively\n * @param {GLViewer} viewer - Add new model to existing viewer\n * @param {Object} options - Specify additional options\n *                           format: file format to download, if multiple are available, default format is pdb\n *                           pdbUri: URI to retrieve PDB files, default URI is http://www.rcsb.org/pdb/files/\n * @param {Function} [callback] - Function to call with model as argument after data is loaded.\n  \n * @return {GLModel} GLModel, Promise if callback is not provided\n * @example\n viewer.setBackgroundColor(0xffffffff);\n       $3Dmol.download('pdb:2nbd',viewer,{onemol: true,multimodel: true},function(m) {\n        m.setStyle({'cartoon':{colorscheme:{prop:'ss',map:$3Dmol.ssColors.Jmol}}});\n       viewer.zoomTo();\n       viewer.render(callback);\n    });\n */\nexport function download(query, viewer, options, callback?) {\n    var type = \"\";\n    var pdbUri = \"\";\n    var uri = \"\";\n    var promise = null;\n    var m = viewer.addModel();\n\n    if (query.indexOf(':') < 0) {\n        //no type specifier, guess\n        if (query.length == 4) {\n            query = 'pdb:' + query;\n        } else if (!isNaN(query)) {\n            query = 'cid:' + query;\n        } else {\n            query = 'url:' + query;\n        }\n    }\n    if (query.substring(0,5) == 'mmtf:') {\n        console.warn('WARNING: MMTF now deprecated.  Reverting to bcif.');\n        query = 'bcif:' + query.slice(5);\n    }\n    if (query.substring(0, 5) === 'bcif:') {\n        query = query.substring(5).toUpperCase();\n        uri = \"https://models.rcsb.org/\" + query + '.bcif.gz';\n        if (options && typeof options.noComputeSecondaryStructure === 'undefined') {\n            //when fetch directly from pdb, trust structure annotations\n            options.noComputeSecondaryStructure = true;\n        }\n        promise = new Promise(function (resolve) {\n            getbin(uri)\n                .then(function (ret) {\n                    m.addMolData(ret, 'bcif.gz', options);\n                    viewer.zoomTo();\n                    viewer.render();\n                    resolve(m);\n                }, function () { console.error(\"fetch of \" + uri + \" failed.\"); });\n        });\n    }\n    else {\n        if (query.substring(0, 4) === 'pdb:') {\n            type = 'bcif';\n            if (options && options.format) {\n                type = options.format; //can override and require pdb\n            }\n\n            if (options && typeof options.noComputeSecondaryStructure === 'undefined') {\n                //when fetch directly from pdb, trust structure annotations\n                options.noComputeSecondaryStructure = true;\n            }\n            query = query.substring(4).toUpperCase();\n            if (!query.match(/^[1-9][A-Za-z0-9]{3}$/)) {\n                alert(\"Wrong PDB ID\");\n                return;\n            }\n            if (type == 'bcif') {\n                uri = 'https://models.rcsb.org/' + query.toUpperCase() + '.bcif.gz';\n            }\n            else {\n                pdbUri = options && options.pdbUri ? options.pdbUri : \"https://files.rcsb.org/view/\";\n                uri = pdbUri + query + \".\" + type;\n            }\n\n        } else if (query.substring(0, 4) == 'cid:') {\n            type = \"sdf\";\n            query = query.substring(4);\n            if (!query.match(/^[0-9]+$/)) {\n                alert(\"Wrong Compound ID\"); return;\n            }\n            uri = \"https://pubchem.ncbi.nlm.nih.gov/rest/pug/compound/cid/\" + query +\n                \"/SDF?record_type=3d\";\n        } else if (query.substring(0, 4) == 'url:') {\n            uri = query.substring(4);\n            type = uri;\n        }\n\n        var handler = function (ret) {\n            m.addMolData(ret, type, options);\n            viewer.zoomTo();\n            viewer.render();\n        };\n        promise = new Promise(function (resolve) {\n            if (type == 'bcif') { //binary data\n                getbin(uri)\n                    .then(function (ret) {\n                        handler(ret);\n                        resolve(m);\n                    }).catch(function () {\n                        //if mmtf server is being annoying, fallback to text\n                        pdbUri = options && options.pdbUri ? options.pdbUri : \"https://files.rcsb.org/view/\";\n                        uri = pdbUri + query + \".pdb\";\n                        type = \"pdb\";\n                        console.warn(\"falling back to pdb format\");\n                        get(uri).then(function (data) {\n                            handler(data);\n                            resolve(m);\n                        }).catch(function (e) {\n                            handler(\"\");\n                            resolve(m);\n                            console.error(\"fetch of \" + uri + \" failed: \" + e.statusText);\n                        });\n                    }); //an error msg has already been printed\n            }\n            else {\n                get(uri).then(function (data) {\n                    handler(data);\n                    resolve(m);\n                }).catch(function (e) {\n                    handler(\"\");\n                    resolve(m);\n                    console.error(\"fetch of \" + uri + \" failed: \" + e.statusText);\n                });\n            }\n        });\n    }\n    if (callback) {\n        promise.then(function (m) {\n            callback(m);\n        });\n        return m;\n    }\n    else return promise;\n};\n\n\n/* Return proper color for atom given style\n * @param {AtomSpec} atom\n * @param {AtomStyle} style\n * @return {Color}\n */\nexport function getColorFromStyle(atom, style): Color {\n    let scheme = style.colorscheme;\n    if (typeof builtinColorSchemes[scheme] != \"undefined\") {\n        scheme = builtinColorSchemes[scheme];\n    } else if (typeof scheme == \"string\" && scheme.endsWith(\"Carbon\")) {\n        //any color you want of carbon\n        let ccolor = scheme\n            .substring(0, scheme.lastIndexOf(\"Carbon\"))\n            .toLowerCase();\n        if (typeof htmlColors[ccolor] != \"undefined\") {\n            let newscheme = { ...elementColors.defaultColors };\n            newscheme.C = htmlColors[ccolor];\n            builtinColorSchemes[scheme] = { prop: \"elem\", map: newscheme };\n            scheme = builtinColorSchemes[scheme];\n        }\n    }\n\n    let color = atom.color;\n    if (typeof style.color != \"undefined\" && style.color != \"spectrum\")\n        color = style.color;\n    if (typeof scheme != \"undefined\") {\n        let prop, val;\n        if (typeof elementColors[scheme] != \"undefined\") {\n            //name of builtin colorscheme\n            scheme = elementColors[scheme];\n            if (typeof scheme[atom[scheme.prop]] != \"undefined\") {\n                color = scheme.map[atom[scheme.prop]];\n            }\n        } else if (typeof scheme[atom[scheme.prop]] != \"undefined\") {\n            //actual color scheme provided\n            color = scheme.map[atom[scheme.prop]];\n        } else if (\n            typeof scheme.prop != \"undefined\" &&\n            typeof scheme.gradient != \"undefined\"\n        ) {\n            //apply a property mapping\n            prop = scheme.prop;\n            var grad = scheme.gradient; //redefining scheme\n            if(!(grad instanceof GradientType)) {\n                grad = getGradient(scheme);\n            }\n            let range = grad.range() || [-1, 1]; //sensible default\n            val = getAtomProperty(atom, prop);\n            if (val != null) {\n                color = grad.valueToHex(val, range);\n            }\n        } else if (\n            typeof scheme.prop != \"undefined\" &&\n            typeof scheme.map != \"undefined\"\n        ) {\n            //apply a discrete property mapping\n            prop = scheme.prop;\n            val = getAtomProperty(atom, prop);\n            if (typeof scheme.map[val] != \"undefined\") {\n                color = scheme.map[val];\n            }\n        } else if (typeof style.colorscheme[atom.elem] != \"undefined\") {\n            //actual color scheme provided\n            color = style.colorscheme[atom.elem];\n        } else {\n            console.warn(\"Could not interpret colorscheme \" + scheme);\n        }\n    } else if (typeof style.colorfunc != \"undefined\") {\n        //this is a user provided function for turning an atom into a color\n        color = style.colorfunc(atom);\n    }\n\n    let C = CC.color(color);\n    return C;\n};\n\n//given a string selector, element, or jquery object, return the HTMLElement\nexport function getElement(element): HTMLElement | null {\n    let ret = element;\n    if (typeof (element) === \"string\") {\n        ret = document.querySelector(\"#\" + element);\n    } else if (typeof element === 'object' && element.get) { //jquery\n        ret = element.get(0);\n    }\n    return ret;\n}\n\nexport function inflateString(str: string | ArrayBuffer, tostring: Boolean = true): (string | ArrayBuffer) {\n    let data: Data;\n\n    if (typeof str === 'string') {\n        const encoder = new TextEncoder();\n        data = encoder.encode(str);\n    } else {\n        data = new Uint8Array(str);\n    }\n\n    const inflatedData = inflate(data, {\n        to: tostring ? 'string' : null\n    } as InflateFunctionOptions & { to: 'string' });\n\n    return inflatedData;\n}\n","\n;(function(){\nvar UPNG = {};\n\n// Make available for import by `require()`\nvar pako;\nif (typeof module == \"object\") {module.exports = UPNG;}  else {window.UPNG = UPNG;}\nif (typeof require == \"function\") {pako = require(\"pako\");}  else {pako = window.pako;}\nfunction log() { if (typeof process==\"undefined\" || process.env.NODE_ENV==\"development\") console.log.apply(console, arguments);  }\n(function(UPNG, pako){\n\n\t\n\n\t\n\nUPNG.toRGBA8 = function(out)\n{\n\tvar w = out.width, h = out.height;\n\tif(out.tabs.acTL==null) return [UPNG.toRGBA8.decodeImage(out.data, w, h, out).buffer];\n\t\n\tvar frms = [];\n\tif(out.frames[0].data==null) out.frames[0].data = out.data;\n\t\n\tvar img, empty = new Uint8Array(w*h*4);\n\tfor(var i=0; i<out.frames.length; i++)\n\t{\n\t\tvar frm = out.frames[i];\n\t\tvar fx=frm.rect.x, fy=frm.rect.y, fw = frm.rect.width, fh = frm.rect.height;\n\t\tvar fdata = UPNG.toRGBA8.decodeImage(frm.data, fw,fh, out);\n\t\t\n\t\tif(i==0) img = fdata;\n\t\telse if(frm.blend  ==0) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 0);\n\t\telse if(frm.blend  ==1) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 1);\n\t\t\n\t\tfrms.push(img.buffer);  img = img.slice(0);\n\t\t\n\t\tif     (frm.dispose==0) {}\n\t\telse if(frm.dispose==1) UPNG._copyTile(empty, fw, fh, img, w, h, fx, fy, 0);\n\t\telse if(frm.dispose==2) {\n\t\t\tvar pi = i-1;\n\t\t\twhile(out.frames[pi].dispose==2) pi--;\n\t\t\timg = new Uint8Array(frms[pi]).slice(0);\n\t\t}\n\t}\n\treturn frms;\n}\nUPNG.toRGBA8.decodeImage = function(data, w, h, out)\n{\n\tvar area = w*h, bpp = UPNG.decode._getBPP(out);\n\tvar bpl = Math.ceil(w*bpp/8);\t// bytes per line\n\n\tvar bf = new Uint8Array(area*4), bf32 = new Uint32Array(bf.buffer);\n\tvar ctype = out.ctype, depth = out.depth;\n\tvar rs = UPNG._bin.readUshort;\n\t\n\t//console.log(ctype, depth);\n\n\tif     (ctype==6) { // RGB + alpha\n\t\tvar qarea = area<<2;\n\t\tif(depth== 8) for(var i=0; i<qarea;i++) {  bf[i] = data[i];  /*if((i&3)==3 && data[i]!=0) bf[i]=255;*/ }\n\t\tif(depth==16) for(var i=0; i<qarea;i++) {  bf[i] = data[i<<1];  }\n\t}\n\telse if(ctype==2) {\t// RGB\n\t\tvar ts=out.tabs[\"tRNS\"], tr=-1, tg=-1, tb=-1;\n\t\tif(ts) {  tr=ts[0];  tg=ts[1];  tb=ts[2];  }\n\t\tif(depth== 8) for(var i=0; i<area; i++) {  var qi=i<<2, ti=i*3;  bf[qi] = data[ti];  bf[qi+1] = data[ti+1];  bf[qi+2] = data[ti+2];  bf[qi+3] = 255;\n\t\t\tif(tr!=-1 && data[ti]   ==tr && data[ti+1]   ==tg && data[ti+2]   ==tb) bf[qi+3] = 0;  }\n\t\tif(depth==16) for(var i=0; i<area; i++) {  var qi=i<<2, ti=i*6;  bf[qi] = data[ti];  bf[qi+1] = data[ti+2];  bf[qi+2] = data[ti+4];  bf[qi+3] = 255;\n\t\t\tif(tr!=-1 && rs(data,ti)==tr && rs(data,ti+2)==tg && rs(data,ti+4)==tb) bf[qi+3] = 0;  }\n\t}\n\telse if(ctype==3) {\t// palette\n\t\tvar p=out.tabs[\"PLTE\"], ap=out.tabs[\"tRNS\"], tl=ap?ap.length:0;\n\t\t//console.log(p, ap);\n\t\tif(depth==1) for(var y=0; y<h; y++) {  var s0 = y*bpl, t0 = y*w;\n\t\t\tfor(var i=0; i<w; i++) { var qi=(t0+i)<<2, j=((data[s0+(i>>3)]>>(7-((i&7)<<0)))& 1), cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }\n\t\t}\n\t\tif(depth==2) for(var y=0; y<h; y++) {  var s0 = y*bpl, t0 = y*w;\n\t\t\tfor(var i=0; i<w; i++) { var qi=(t0+i)<<2, j=((data[s0+(i>>2)]>>(6-((i&3)<<1)))& 3), cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }\n\t\t}\n\t\tif(depth==4) for(var y=0; y<h; y++) {  var s0 = y*bpl, t0 = y*w;\n\t\t\tfor(var i=0; i<w; i++) { var qi=(t0+i)<<2, j=((data[s0+(i>>1)]>>(4-((i&1)<<2)))&15), cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }\n\t\t}\n\t\tif(depth==8) for(var i=0; i<area; i++ ) {  var qi=i<<2, j=data[i]                      , cj=3*j;  bf[qi]=p[cj];  bf[qi+1]=p[cj+1];  bf[qi+2]=p[cj+2];  bf[qi+3]=(j<tl)?ap[j]:255;  }\n\t}\n\telse if(ctype==4) {\t// gray + alpha\n\t\tif(depth== 8)  for(var i=0; i<area; i++) {  var qi=i<<2, di=i<<1, gr=data[di];  bf[qi]=gr;  bf[qi+1]=gr;  bf[qi+2]=gr;  bf[qi+3]=data[di+1];  }\n\t\tif(depth==16)  for(var i=0; i<area; i++) {  var qi=i<<2, di=i<<2, gr=data[di];  bf[qi]=gr;  bf[qi+1]=gr;  bf[qi+2]=gr;  bf[qi+3]=data[di+2];  }\n\t}\n\telse if(ctype==0) {\t// gray\n\t\tvar tr = out.tabs[\"tRNS\"] ? out.tabs[\"tRNS\"] : -1;\n\t\tif(depth== 1) for(var i=0; i<area; i++) {  var gr=255*((data[i>>3]>>(7 -((i&7)   )))& 1), al=(gr==tr*255)?0:255;  bf32[i]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }\n\t\tif(depth== 2) for(var i=0; i<area; i++) {  var gr= 85*((data[i>>2]>>(6 -((i&3)<<1)))& 3), al=(gr==tr* 85)?0:255;  bf32[i]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }\n\t\tif(depth== 4) for(var i=0; i<area; i++) {  var gr= 17*((data[i>>1]>>(4 -((i&1)<<2)))&15), al=(gr==tr* 17)?0:255;  bf32[i]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }\n\t\tif(depth== 8) for(var i=0; i<area; i++) {  var gr=data[i  ] , al=(gr           ==tr)?0:255;  bf32[i]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }\n\t\tif(depth==16) for(var i=0; i<area; i++) {  var gr=data[i<<1], al=(rs(data,i<<1)==tr)?0:255;  bf32[i]=(al<<24)|(gr<<16)|(gr<<8)|gr;  }\n\t}\n\treturn bf;\n}\n\n\n\nUPNG.decode = function(buff)\n{\n\tvar data = new Uint8Array(buff), offset = 8, bin = UPNG._bin, rUs = bin.readUshort, rUi = bin.readUint;\n\tvar out = {tabs:{}, frames:[]};\n\tvar dd = new Uint8Array(data.length), doff = 0;\t // put all IDAT data into it\n\tvar fd, foff = 0;\t// frames\n\t\n\tvar mgck = [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];\n\tfor(var i=0; i<8; i++) if(data[i]!=mgck[i]) throw \"The input is not a PNG file!\";\n\n\twhile(offset<data.length)\n\t{\n\t\tvar len  = bin.readUint(data, offset);  offset += 4;\n\t\tvar type = bin.readASCII(data, offset, 4);  offset += 4;\n\t\t//log(type,len);\n\t\t\n\t\tif     (type==\"IHDR\")  {  UPNG.decode._IHDR(data, offset, out);  }\n\t\telse if(type==\"IDAT\") {\n\t\t\tfor(var i=0; i<len; i++) dd[doff+i] = data[offset+i];\n\t\t\tdoff += len;\n\t\t}\n\t\telse if(type==\"acTL\")  {\n\t\t\tout.tabs[type] = {  num_frames:rUi(data, offset), num_plays:rUi(data, offset+4)  };\n\t\t\tfd = new Uint8Array(data.length);\n\t\t}\n\t\telse if(type==\"fcTL\")  {\n\t\t\tif(foff!=0) {  var fr = out.frames[out.frames.length-1];\n\t\t\t\tfr.data = UPNG.decode._decompress(out, fd.slice(0,foff), fr.rect.width, fr.rect.height);  foff=0;\n\t\t\t}\n\t\t\tvar rct = {x:rUi(data, offset+12),y:rUi(data, offset+16),width:rUi(data, offset+4),height:rUi(data, offset+8)};\n\t\t\tvar del = rUs(data, offset+22);  del = rUs(data, offset+20) / (del==0?100:del);\n\t\t\tvar frm = {rect:rct, delay:Math.round(del*1000), dispose:data[offset+24], blend:data[offset+25]};\n\t\t\t//console.log(frm);\n\t\t\tout.frames.push(frm);\n\t\t}\n\t\telse if(type==\"fdAT\") {\n\t\t\tfor(var i=0; i<len-4; i++) fd[foff+i] = data[offset+i+4];\n\t\t\tfoff += len-4;\n\t\t}\n\t\telse if(type==\"pHYs\") {\n\t\t\tout.tabs[type] = [bin.readUint(data, offset), bin.readUint(data, offset+4), data[offset+8]];\n\t\t}\n\t\telse if(type==\"cHRM\") {\n\t\t\tout.tabs[type] = [];\n\t\t\tfor(var i=0; i<8; i++) out.tabs[type].push(bin.readUint(data, offset+i*4));\n\t\t}\n\t\telse if(type==\"tEXt\") {\n\t\t\tif(out.tabs[type]==null) out.tabs[type] = {};\n\t\t\tvar nz = bin.nextZero(data, offset);\n\t\t\tvar keyw = bin.readASCII(data, offset, nz-offset);\n\t\t\tvar text = bin.readASCII(data, nz+1, offset+len-nz-1);\n\t\t\tout.tabs[type][keyw] = text;\n\t\t}\n\t\telse if(type==\"iTXt\") {\n\t\t\tif(out.tabs[type]==null) out.tabs[type] = {};\n\t\t\tvar nz = 0, off = offset;\n\t\t\tnz = bin.nextZero(data, off);\n\t\t\tvar keyw = bin.readASCII(data, off, nz-off);  off = nz + 1;\n\t\t\tvar cflag = data[off], cmeth = data[off+1];  off+=2;\n\t\t\tnz = bin.nextZero(data, off);\n\t\t\tvar ltag = bin.readASCII(data, off, nz-off);  off = nz + 1;\n\t\t\tnz = bin.nextZero(data, off);\n\t\t\tvar tkeyw = bin.readUTF8(data, off, nz-off);  off = nz + 1;\n\t\t\tvar text  = bin.readUTF8(data, off, len-(off-offset));\n\t\t\tout.tabs[type][keyw] = text;\n\t\t}\n\t\telse if(type==\"PLTE\") {\n\t\t\tout.tabs[type] = bin.readBytes(data, offset, len);\n\t\t}\n\t\telse if(type==\"hIST\") {\n\t\t\tvar pl = out.tabs[\"PLTE\"].length/3;\n\t\t\tout.tabs[type] = [];  for(var i=0; i<pl; i++) out.tabs[type].push(rUs(data, offset+i*2));\n\t\t}\n\t\telse if(type==\"tRNS\") {\n\t\t\tif     (out.ctype==3) out.tabs[type] = bin.readBytes(data, offset, len);\n\t\t\telse if(out.ctype==0) out.tabs[type] = rUs(data, offset);\n\t\t\telse if(out.ctype==2) out.tabs[type] = [ rUs(data,offset),rUs(data,offset+2),rUs(data,offset+4) ];\n\t\t\t//else console.log(\"tRNS for unsupported color type\",out.ctype, len);\n\t\t}\n\t\telse if(type==\"gAMA\") out.tabs[type] = bin.readUint(data, offset)/100000;\n\t\telse if(type==\"sRGB\") out.tabs[type] = data[offset];\n\t\telse if(type==\"bKGD\")\n\t\t{\n\t\t\tif     (out.ctype==0 || out.ctype==4) out.tabs[type] = [rUs(data, offset)];\n\t\t\telse if(out.ctype==2 || out.ctype==6) out.tabs[type] = [rUs(data, offset), rUs(data, offset+2), rUs(data, offset+4)];\n\t\t\telse if(out.ctype==3) out.tabs[type] = data[offset];\n\t\t}\n\t\telse if(type==\"IEND\") {\n\t\t\tif(foff!=0) {  var fr = out.frames[out.frames.length-1];\n\t\t\t\tfr.data = UPNG.decode._decompress(out, fd.slice(0,foff), fr.rect.width, fr.rect.height);  foff=0;\n\t\t\t}\t\n\t\t\tout.data = UPNG.decode._decompress(out, dd, out.width, out.height);  break;\n\t\t}\n\t\t//else {  log(\"unknown chunk type\", type, len);  }\n\t\toffset += len;\n\t\tvar crc = bin.readUint(data, offset);  offset += 4;\n\t}\n\tdelete out.compress;  delete out.interlace;  delete out.filter;\n\treturn out;\n}\n\nUPNG.decode._decompress = function(out, dd, w, h) {\n\tif(out.compress ==0) dd = UPNG.decode._inflate(dd);\n\n\tif     (out.interlace==0) dd = UPNG.decode._filterZero(dd, out, 0, w, h);\n\telse if(out.interlace==1) dd = UPNG.decode._readInterlace(dd, out);\n\treturn dd;\n}\n\nUPNG.decode._inflate = function(data) {  return pako[\"inflate\"](data);  }\n\nUPNG.decode._readInterlace = function(data, out)\n{\n\tvar w = out.width, h = out.height;\n\tvar bpp = UPNG.decode._getBPP(out), cbpp = bpp>>3, bpl = Math.ceil(w*bpp/8);\n\tvar img = new Uint8Array( h * bpl );\n\tvar di = 0;\n\n\tvar starting_row  = [ 0, 0, 4, 0, 2, 0, 1 ];\n\tvar starting_col  = [ 0, 4, 0, 2, 0, 1, 0 ];\n\tvar row_increment = [ 8, 8, 8, 4, 4, 2, 2 ];\n\tvar col_increment = [ 8, 8, 4, 4, 2, 2, 1 ];\n\n\tvar pass=0;\n\twhile(pass<7)\n\t{\n\t\tvar ri = row_increment[pass], ci = col_increment[pass];\n\t\tvar sw = 0, sh = 0;\n\t\tvar cr = starting_row[pass];  while(cr<h) {  cr+=ri;  sh++;  }\n\t\tvar cc = starting_col[pass];  while(cc<w) {  cc+=ci;  sw++;  }\n\t\tvar bpll = Math.ceil(sw*bpp/8);\n\t\tUPNG.decode._filterZero(data, out, di, sw, sh);\n\n\t\tvar y=0, row = starting_row[pass];\n\t\twhile(row<h)\n\t\t{\n\t\t\tvar col = starting_col[pass];\n\t\t\tvar cdi = (di+y*bpll)<<3;\n\n\t\t\twhile(col<w)\n\t\t\t{\n\t\t\t\tif(bpp==1) {\n\t\t\t\t\tvar val = data[cdi>>3];  val = (val>>(7-(cdi&7)))&1;\n\t\t\t\t\timg[row*bpl + (col>>3)] |= (val << (7-((col&3)<<0)));\n\t\t\t\t}\n\t\t\t\tif(bpp==2) {\n\t\t\t\t\tvar val = data[cdi>>3];  val = (val>>(6-(cdi&7)))&3;\n\t\t\t\t\timg[row*bpl + (col>>2)] |= (val << (6-((col&3)<<1)));\n\t\t\t\t}\n\t\t\t\tif(bpp==4) {\n\t\t\t\t\tvar val = data[cdi>>3];  val = (val>>(4-(cdi&7)))&15;\n\t\t\t\t\timg[row*bpl + (col>>1)] |= (val << (4-((col&1)<<2)));\n\t\t\t\t}\n\t\t\t\tif(bpp>=8) {\n\t\t\t\t\tvar ii = row*bpl+col*cbpp;\n\t\t\t\t\tfor(var j=0; j<cbpp; j++) img[ii+j] = data[(cdi>>3)+j];\n\t\t\t\t}\n\t\t\t\tcdi+=bpp;  col+=ci;\n\t\t\t}\n\t\t\ty++;  row += ri;\n\t\t}\n\t\tif(sw*sh!=0) di += sh * (1 + bpll);\n\t\tpass = pass + 1;\n\t}\n\treturn img;\n}\n\nUPNG.decode._getBPP = function(out) {\n\tvar noc = [1,null,3,1,2,null,4][out.ctype];\n\treturn noc * out.depth;\n}\n\nUPNG.decode._filterZero = function(data, out, off, w, h)\n{\n\tvar bpp = UPNG.decode._getBPP(out), bpl = Math.ceil(w*bpp/8), paeth = UPNG.decode._paeth;\n\tbpp = Math.ceil(bpp/8);\n\n\tfor(var y=0; y<h; y++)  {\n\t\tvar i = off+y*bpl, di = i+y+1;\n\t\tvar type = data[di-1];\n\n\t\tif     (type==0) for(var x=  0; x<bpl; x++) data[i+x] = data[di+x];\n\t\telse if(type==1) {\n\t\t\tfor(var x=  0; x<bpp; x++) data[i+x] = data[di+x];\n\t\t\tfor(var x=bpp; x<bpl; x++) data[i+x] = (data[di+x] + data[i+x-bpp])&255;\n\t\t}\n\t\telse if(y==0) {\n\t\t\tfor(var x=  0; x<bpp; x++) data[i+x] = data[di+x];\n\t\t\tif(type==2) for(var x=bpp; x<bpl; x++) data[i+x] = (data[di+x])&255;\n\t\t\tif(type==3) for(var x=bpp; x<bpl; x++) data[i+x] = (data[di+x] + (data[i+x-bpp]>>1) )&255;\n\t\t\tif(type==4) for(var x=bpp; x<bpl; x++) data[i+x] = (data[di+x] + paeth(data[i+x-bpp], 0, 0) )&255;\n\t\t}\n\t\telse {\n\t\t\tif(type==2) { for(var x=  0; x<bpl; x++) data[i+x] = (data[di+x] + data[i+x-bpl])&255;  }\n\n\t\t\tif(type==3) { for(var x=  0; x<bpp; x++) data[i+x] = (data[di+x] + (data[i+x-bpl]>>1))&255;\n\t\t\t              for(var x=bpp; x<bpl; x++) data[i+x] = (data[di+x] + ((data[i+x-bpl]+data[i+x-bpp])>>1) )&255;  }\n\n\t\t\tif(type==4) { for(var x=  0; x<bpp; x++) data[i+x] = (data[di+x] + paeth(0, data[i+x-bpl], 0))&255;\n\t\t\t\t\t\t  for(var x=bpp; x<bpl; x++) data[i+x] = (data[di+x] + paeth(data[i+x-bpp], data[i+x-bpl], data[i+x-bpp-bpl]) )&255;  }\n\t\t}\n\t}\n\treturn data;\n}\n\nUPNG.decode._paeth = function(a,b,c)\n{\n\tvar p = a+b-c, pa = Math.abs(p-a), pb = Math.abs(p-b), pc = Math.abs(p-c);\n\tif (pa <= pb && pa <= pc)  return a;\n\telse if (pb <= pc)  return b;\n\treturn c;\n}\n\nUPNG.decode._IHDR = function(data, offset, out)\n{\n\tvar bin = UPNG._bin;\n\tout.width  = bin.readUint(data, offset);  offset += 4;\n\tout.height = bin.readUint(data, offset);  offset += 4;\n\tout.depth     = data[offset];  offset++;\n\tout.ctype     = data[offset];  offset++;\n\tout.compress  = data[offset];  offset++;\n\tout.filter    = data[offset];  offset++;\n\tout.interlace = data[offset];  offset++;\n}\n\nUPNG._bin = {\n\tnextZero   : function(data,p)  {  while(data[p]!=0) p++;  return p;  },\n\treadUshort : function(buff,p)  {  return (buff[p]<< 8) | buff[p+1];  },\n\twriteUshort: function(buff,p,n){  buff[p] = (n>>8)&255;  buff[p+1] = n&255;  },\n\treadUint   : function(buff,p)  {  return (buff[p]*(256*256*256)) + ((buff[p+1]<<16) | (buff[p+2]<< 8) | buff[p+3]);  },\n\twriteUint  : function(buff,p,n){  buff[p]=(n>>24)&255;  buff[p+1]=(n>>16)&255;  buff[p+2]=(n>>8)&255;  buff[p+3]=n&255;  },\n\treadASCII  : function(buff,p,l){  var s = \"\";  for(var i=0; i<l; i++) s += String.fromCharCode(buff[p+i]);  return s;    },\n\twriteASCII : function(data,p,s){  for(var i=0; i<s.length; i++) data[p+i] = s.charCodeAt(i);  },\n\treadBytes  : function(buff,p,l){  var arr = [];   for(var i=0; i<l; i++) arr.push(buff[p+i]);   return arr;  },\n\tpad : function(n) { return n.length < 2 ? \"0\" + n : n; },\n\treadUTF8 : function(buff, p, l) {\n\t\tvar s = \"\", ns;\n\t\tfor(var i=0; i<l; i++) s += \"%\" + UPNG._bin.pad(buff[p+i].toString(16));\n\t\ttry {  ns = decodeURIComponent(s); }\n\t\tcatch(e) {  return UPNG._bin.readASCII(buff, p, l);  }\n\t\treturn  ns;\n\t}\n}\nUPNG._copyTile = function(sb, sw, sh, tb, tw, th, xoff, yoff, mode)\n{\n\tvar w = Math.min(sw,tw), h = Math.min(sh,th);\n\tvar si=0, ti=0;\n\tfor(var y=0; y<h; y++)\n\t\tfor(var x=0; x<w; x++)\n\t\t{\n\t\t\tif(xoff>=0 && yoff>=0) {  si = (y*sw+x)<<2;  ti = (( yoff+y)*tw+xoff+x)<<2;  }\n\t\t\telse                   {  si = ((-yoff+y)*sw-xoff+x)<<2;  ti = (y*tw+x)<<2;  }\n\t\t\t\n\t\t\tif     (mode==0) {  tb[ti] = sb[si];  tb[ti+1] = sb[si+1];  tb[ti+2] = sb[si+2];  tb[ti+3] = sb[si+3];  }\n\t\t\telse if(mode==1) {\n\t\t\t\tvar fa = sb[si+3]*(1/255), fr=sb[si]*fa, fg=sb[si+1]*fa, fb=sb[si+2]*fa; \n\t\t\t\tvar ba = tb[ti+3]*(1/255), br=tb[ti]*ba, bg=tb[ti+1]*ba, bb=tb[ti+2]*ba; \n\t\t\t\t\n\t\t\t\tvar ifa=1-fa, oa = fa+ba*ifa, ioa = (oa==0?0:1/oa);\n\t\t\t\ttb[ti+3] = 255*oa;  \n\t\t\t\ttb[ti+0] = (fr+br*ifa)*ioa;  \n\t\t\t\ttb[ti+1] = (fg+bg*ifa)*ioa;   \n\t\t\t\ttb[ti+2] = (fb+bb*ifa)*ioa;  \n\t\t\t}\n\t\t\telse if(mode==2){\t// copy only differences, otherwise zero\n\t\t\t\tvar fa = sb[si+3], fr=sb[si], fg=sb[si+1], fb=sb[si+2]; \n\t\t\t\tvar ba = tb[ti+3], br=tb[ti], bg=tb[ti+1], bb=tb[ti+2]; \n\t\t\t\tif(fa==ba && fr==br && fg==bg && fb==bb) {  tb[ti]=0;  tb[ti+1]=0;  tb[ti+2]=0;  tb[ti+3]=0;  }\n\t\t\t\telse {  tb[ti]=fr;  tb[ti+1]=fg;  tb[ti+2]=fb;  tb[ti+3]=fa;  }\n\t\t\t}\n\t\t\telse if(mode==3){\t// check if can be blended\n\t\t\t\tvar fa = sb[si+3], fr=sb[si], fg=sb[si+1], fb=sb[si+2]; \n\t\t\t\tvar ba = tb[ti+3], br=tb[ti], bg=tb[ti+1], bb=tb[ti+2]; \n\t\t\t\tif(fa==ba && fr==br && fg==bg && fb==bb) continue;\n\t\t\t\t//if(fa!=255 && ba!=0) return false;\n\t\t\t\tif(fa<220 && ba>20) return false;\n\t\t\t}\n\t\t}\n\treturn true;\n}\n\n\n\nUPNG.encode = function(bufs, w, h, ps, dels, forbidPlte)\n{\n\tif(ps==null) ps=0;\n\tif(forbidPlte==null) forbidPlte = false;\n\tvar data = new Uint8Array(bufs[0].byteLength*bufs.length+100);\n\tvar wr=[0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];\n\tfor(var i=0; i<8; i++) data[i]=wr[i];\n\tvar offset = 8,  bin = UPNG._bin, crc = UPNG.crc.crc, wUi = bin.writeUint, wUs = bin.writeUshort, wAs = bin.writeASCII;\n\n\tvar nimg = UPNG.encode.compressPNG(bufs, w, h, ps, forbidPlte);\n\n\twUi(data,offset, 13);     offset+=4;\n\twAs(data,offset,\"IHDR\");  offset+=4;\n\twUi(data,offset,w);  offset+=4;\n\twUi(data,offset,h);  offset+=4;\n\tdata[offset] = nimg.depth;  offset++;  // depth\n\tdata[offset] = nimg.ctype;  offset++;  // ctype\n\tdata[offset] = 0;  offset++;  // compress\n\tdata[offset] = 0;  offset++;  // filter\n\tdata[offset] = 0;  offset++;  // interlace\n\twUi(data,offset,crc(data,offset-17,17));  offset+=4; // crc\n\n\t// 9 bytes to say, that it is sRGB\n\twUi(data,offset, 1);      offset+=4;\n\twAs(data,offset,\"sRGB\");  offset+=4;\n\tdata[offset] = 1;  offset++;\n\twUi(data,offset,crc(data,offset-5,5));  offset+=4; // crc\n\n\tvar anim = bufs.length>1;\n\tif(anim) {\n\t\twUi(data,offset, 8);      offset+=4;\n\t\twAs(data,offset,\"acTL\");  offset+=4;\n\t\twUi(data,offset, bufs.length);      offset+=4;\n\t\twUi(data,offset, 0);      offset+=4;\n\t\twUi(data,offset,crc(data,offset-12,12));  offset+=4; // crc\n\t}\n\n\tif(nimg.ctype==3) {\n\t\tvar dl = nimg.plte.length;\n\t\twUi(data,offset, dl*3);  offset+=4;\n\t\twAs(data,offset,\"PLTE\");  offset+=4;\n\t\tfor(var i=0; i<dl; i++){\n\t\t\tvar ti=i*3, c=nimg.plte[i], r=(c)&255, g=(c>>8)&255, b=(c>>16)&255;\n\t\t\tdata[offset+ti+0]=r;  data[offset+ti+1]=g;  data[offset+ti+2]=b;\n\t\t}\n\t\toffset+=dl*3;\n\t\twUi(data,offset,crc(data,offset-dl*3-4,dl*3+4));  offset+=4; // crc\n\n\t\tif(nimg.gotAlpha) {\n\t\t\twUi(data,offset, dl);  offset+=4;\n\t\t\twAs(data,offset,\"tRNS\");  offset+=4;\n\t\t\tfor(var i=0; i<dl; i++)  data[offset+i]=(nimg.plte[i]>>24)&255;\n\t\t\toffset+=dl;\n\t\t\twUi(data,offset,crc(data,offset-dl-4,dl+4));  offset+=4; // crc\n\t\t}\n\t}\n\t\n\tvar fi = 0;\n\tfor(var j=0; j<nimg.frames.length; j++)\n\t{\n\t\tvar fr = nimg.frames[j];\n\t\tif(anim) {\n\t\t\twUi(data,offset, 26);     offset+=4;\n\t\t\twAs(data,offset,\"fcTL\");  offset+=4;\n\t\t\twUi(data, offset, fi++);   offset+=4;\n\t\t\twUi(data, offset, fr.rect.width );   offset+=4;\n\t\t\twUi(data, offset, fr.rect.height);   offset+=4;\n\t\t\twUi(data, offset, fr.rect.x);   offset+=4;\n\t\t\twUi(data, offset, fr.rect.y);   offset+=4;\n\t\t\twUs(data, offset, dels[j]);   offset+=2;\n\t\t\twUs(data, offset,  1000);   offset+=2;\n\t\t\tdata[offset] = fr.dispose;  offset++;\t// dispose\n\t\t\tdata[offset] = fr.blend  ;  offset++;\t// blend\n\t\t\twUi(data,offset,crc(data,offset-30,30));  offset+=4; // crc\n\t\t}\n\t\t\t\t\n\t\tvar imgd = fr.cimg, dl = imgd.length;\n\t\twUi(data,offset, dl+(j==0?0:4));     offset+=4;\n\t\tvar ioff = offset;\n\t\twAs(data,offset,(j==0)?\"IDAT\":\"fdAT\");  offset+=4;\n\t\tif(j!=0) {  wUi(data, offset, fi++);  offset+=4;  }\n\t\tfor(var i=0; i<dl; i++) data[offset+i] = imgd[i];\n\t\toffset += dl;\n\t\twUi(data,offset,crc(data,ioff,offset-ioff));  offset+=4; // crc\n\t}\n\n\twUi(data,offset, 0);     offset+=4;\n\twAs(data,offset,\"IEND\");  offset+=4;\n\twUi(data,offset,crc(data,offset-4,4));  offset+=4; // crc\n\n\treturn data.buffer.slice(0,offset);\n}\n\nUPNG.encode.compressPNG = function(bufs, w, h, ps, forbidPlte)\n{\n\tvar out = UPNG.encode.compress(bufs, w, h, ps, false, forbidPlte);\n\tfor(var i=0; i<bufs.length; i++) {\n\t\tvar frm = out.frames[i], nw=frm.rect.width, nh=frm.rect.height, bpl=frm.bpl, bpp=frm.bpp;\n\t\tvar fdata = new Uint8Array(nh*bpl+nh);\n\t\tfrm.cimg = UPNG.encode._filterZero(frm.img,nh,bpp,bpl,fdata);\n\t}\t\n\treturn out;\n}\n\nUPNG.encode.compress = function(bufs, w, h, ps, forGIF, forbidPlte)\n{\n\tif(forbidPlte==null) forbidPlte = false;\n\t\n\tvar ctype = 6, depth = 8, bpp = 4, alphaAnd=255\n\t\n\tfor(var j=0; j<bufs.length; j++)  {  // when not quantized, other frames can contain colors, that are not in an initial frame\n\t\tvar img = new Uint8Array(bufs[j]), ilen = img.length;\n\t\tfor(var i=0; i<ilen; i+=4) alphaAnd &= img[i+3];\n\t}\n\tvar gotAlpha = (alphaAnd)!=255;\n\t\n\tvar cmap={}, plte=[];  if(bufs.length!=0) {  cmap[0]=0;  plte.push(0);  if(ps!=0) ps--;  } \n\t\n\t\n\tif(ps!=0) {\n\t\tvar qres = UPNG.quantize(bufs, ps, forGIF);  bufs = qres.bufs;\n\t\tfor(var i=0; i<qres.plte.length; i++) {  var c=qres.plte[i].est.rgba;  if(cmap[c]==null) {  cmap[c]=plte.length;  plte.push(c);  }     }\n\t}\n\telse {\n\t\t// what if ps==0, but there are <=256 colors?  we still need to detect, if the palette could be used\n\t\tfor(var j=0; j<bufs.length; j++)  {  // when not quantized, other frames can contain colors, that are not in an initial frame\n\t\t\tvar img32 = new Uint32Array(bufs[j]), ilen = img32.length;\n\t\t\tfor(var i=0; i<ilen; i++) {\n\t\t\t\tvar c = img32[i];\n\t\t\t\tif((i<w || (c!=img32[i-1] && c!=img32[i-w])) && cmap[c]==null) {  cmap[c]=plte.length;  plte.push(c);  if(plte.length>=300) break;  }\n\t\t\t}\n\t\t}\n\t}\n\t\n\tvar brute = gotAlpha ? forGIF : false;\t\t// brute : frames can only be copied, not \"blended\"\n\tvar cc=plte.length;  //console.log(cc);\n\tif(cc<=256 && forbidPlte==false) {\n\t\tif(cc<= 2) depth=1;  else if(cc<= 4) depth=2;  else if(cc<=16) depth=4;  else depth=8;\n\t\tif(forGIF) depth=8;\n\t\tgotAlpha = true;\n\t}\n\t\n\t\n\tvar frms = [];\n\tfor(var j=0; j<bufs.length; j++)\n\t{\n\t\tvar cimg = new Uint8Array(bufs[j]), cimg32 = new Uint32Array(cimg.buffer);\n\t\t\n\t\tvar nx=0, ny=0, nw=w, nh=h, blend=0;\n\t\tif(j!=0 && !brute) {\n\t\t\tvar tlim = (forGIF || j==1 || frms[frms.length-2].dispose==2)?1:2, tstp = 0, tarea = 1e9;\n\t\t\tfor(var it=0; it<tlim; it++)\n\t\t\t{\n\t\t\t\tvar pimg = new Uint8Array(bufs[j-1-it]), p32 = new Uint32Array(bufs[j-1-it]);\n\t\t\t\tvar mix=w,miy=h,max=-1,may=-1;\n\t\t\t\tfor(var y=0; y<h; y++) for(var x=0; x<w; x++) {\n\t\t\t\t\tvar i = y*w+x;\n\t\t\t\t\tif(cimg32[i]!=p32[i]) {\n\t\t\t\t\t\tif(x<mix) mix=x;  if(x>max) max=x;\n\t\t\t\t\t\tif(y<miy) miy=y;  if(y>may) may=y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvar sarea = (max==-1) ? 1 : (max-mix+1)*(may-miy+1);\n\t\t\t\tif(sarea<tarea) {\n\t\t\t\t\ttarea = sarea;  tstp = it;  \n\t\t\t\t\tif(max==-1) {  nx=ny=0;  nw=nh=1;  }\n\t\t\t\t\telse {  nx = mix; ny = miy; nw = max-mix+1; nh = may-miy+1;  }\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar pimg = new Uint8Array(bufs[j-1-tstp]);\n\t\t\tif(tstp==1) frms[frms.length-1].dispose = 2;\n\t\t\t\n\t\t\tvar nimg = new Uint8Array(nw*nh*4), nimg32 = new Uint32Array(nimg.buffer);\n\t\t\tUPNG.   _copyTile(pimg,w,h, nimg,nw,nh, -nx,-ny, 0);\n\t\t\tif(UPNG._copyTile(cimg,w,h, nimg,nw,nh, -nx,-ny, 3)) {\n\t\t\t\tUPNG._copyTile(cimg,w,h, nimg,nw,nh, -nx,-ny, 2);  blend = 1;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tUPNG._copyTile(cimg,w,h, nimg,nw,nh, -nx,-ny, 0);  blend = 0;\n\t\t\t}\n\t\t\tcimg = nimg;  cimg32 = new Uint32Array(cimg.buffer);\n\t\t}\n\t\tvar bpl = 4*nw;\n\t\tif(cc<=256 && forbidPlte==false) {\n\t\t\tbpl = Math.ceil(depth*nw/8);\n\t\t\tvar nimg = new Uint8Array(bpl*nh);\n\t\t\tfor(var y=0; y<nh; y++) {  var i=y*bpl, ii=y*nw;\n\t\t\t\tif     (depth==8) for(var x=0; x<nw; x++) nimg[i+(x)   ]   =  (cmap[cimg32[ii+x]]             );\n\t\t\t\telse if(depth==4) for(var x=0; x<nw; x++) nimg[i+(x>>1)]  |=  (cmap[cimg32[ii+x]]<<(4-(x&1)*4));\n\t\t\t\telse if(depth==2) for(var x=0; x<nw; x++) nimg[i+(x>>2)]  |=  (cmap[cimg32[ii+x]]<<(6-(x&3)*2));\n\t\t\t\telse if(depth==1) for(var x=0; x<nw; x++) nimg[i+(x>>3)]  |=  (cmap[cimg32[ii+x]]<<(7-(x&7)*1));\n\t\t\t}\n\t\t\tcimg=nimg;  ctype=3;  bpp=1;\n\t\t}\n\t\telse if(gotAlpha==false && bufs.length==1) {\t// some next \"reduced\" frames may contain alpha for blending\n\t\t\tvar nimg = new Uint8Array(nw*nh*3), area=nw*nh;\n\t\t\tfor(var i=0; i<area; i++) { var ti=i*3, qi=i*4;  nimg[ti]=cimg[qi];  nimg[ti+1]=cimg[qi+1];  nimg[ti+2]=cimg[qi+2];  }\n\t\t\tcimg=nimg;  ctype=2;  bpp=3;  bpl=3*nw;\n\t\t}\n\t\tfrms.push({rect:{x:nx,y:ny,width:nw,height:nh}, img:cimg, bpl:bpl, bpp:bpp, blend:blend, dispose:brute?1:0});\n\t}\n\treturn {ctype:ctype, depth:depth, plte:plte, gotAlpha:gotAlpha, frames:frms  };\n}\n\nUPNG.encode._filterZero = function(img,h,bpp,bpl,data)\n{\n\tvar fls = [];\n\tfor(var t=0; t<5; t++) {  if(h*bpl>500000 && (t==2 || t==3 || t==4)) continue;\n\t\tfor(var y=0; y<h; y++) UPNG.encode._filterLine(data, img, y, bpl, bpp, t);\n\t\tfls.push(pako[\"deflate\"](data));  if(bpp==1) break;\n\t}\n\tvar ti, tsize=1e9;\n\tfor(var i=0; i<fls.length; i++) if(fls[i].length<tsize) {  ti=i;  tsize=fls[i].length;  }\n\treturn fls[ti];\n}\nUPNG.encode._filterLine = function(data, img, y, bpl, bpp, type)\n{\n\tvar i = y*bpl, di = i+y, paeth = UPNG.decode._paeth\n\tdata[di]=type;  di++;\n\n\tif(type==0) for(var x=0; x<bpl; x++) data[di+x] = img[i+x];\n\telse if(type==1) {\n\t\tfor(var x=  0; x<bpp; x++) data[di+x] =  img[i+x];\n\t\tfor(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x]-img[i+x-bpp]+256)&255;\n\t}\n\telse if(y==0) {\n\t\tfor(var x=  0; x<bpp; x++) data[di+x] = img[i+x];\n\n\t\tif(type==2) for(var x=bpp; x<bpl; x++) data[di+x] = img[i+x];\n\t\tif(type==3) for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x] - (img[i+x-bpp]>>1) +256)&255;\n\t\tif(type==4) for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x] - paeth(img[i+x-bpp], 0, 0) +256)&255;\n\t}\n\telse {\n\t\tif(type==2) { for(var x=  0; x<bpl; x++) data[di+x] = (img[i+x]+256 - img[i+x-bpl])&255;  }\n\t\tif(type==3) { for(var x=  0; x<bpp; x++) data[di+x] = (img[i+x]+256 - (img[i+x-bpl]>>1))&255;\n\t\t\t\t\t  for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x]+256 - ((img[i+x-bpl]+img[i+x-bpp])>>1))&255;  }\n\t\tif(type==4) { for(var x=  0; x<bpp; x++) data[di+x] = (img[i+x]+256 - paeth(0, img[i+x-bpl], 0))&255;\n\t\t\t\t\t  for(var x=bpp; x<bpl; x++) data[di+x] = (img[i+x]+256 - paeth(img[i+x-bpp], img[i+x-bpl], img[i+x-bpp-bpl]))&255;  }\n\t}\n}\n\nUPNG.crc = {\n\ttable : ( function() {\n\t   var tab = new Uint32Array(256);\n\t   for (var n=0; n<256; n++) {\n\t\t\tvar c = n;\n\t\t\tfor (var k=0; k<8; k++) {\n\t\t\t\tif (c & 1)  c = 0xedb88320 ^ (c >>> 1);\n\t\t\t\telse        c = c >>> 1;\n\t\t\t}\n\t\t\ttab[n] = c;  }\n\t\treturn tab;  })(),\n\tupdate : function(c, buf, off, len) {\n\t\tfor (var i=0; i<len; i++)  c = UPNG.crc.table[(c ^ buf[off+i]) & 0xff] ^ (c >>> 8);\n\t\treturn c;\n\t},\n\tcrc : function(b,o,l)  {  return UPNG.crc.update(0xffffffff,b,o,l) ^ 0xffffffff;  }\n}\n\n\nUPNG.quantize = function(bufs, ps, roundAlpha)\n{\t\n\tvar imgs = [], totl = 0;\n\tfor(var i=0; i<bufs.length; i++) {  imgs.push(UPNG.encode.alphaMul(new Uint8Array(bufs[i]), roundAlpha));  totl+=bufs[i].byteLength;  }\n\t\n\tvar nimg = new Uint8Array(totl), nimg32 = new Uint32Array(nimg.buffer), noff=0;\n\tfor(var i=0; i<imgs.length; i++) {\n\t\tvar img = imgs[i], il = img.length;\n\t\tfor(var j=0; j<il; j++) nimg[noff+j] = img[j];\n\t\tnoff += il;\n\t}\n\t\n\tvar root = {i0:0, i1:nimg.length, bst:null, est:null, tdst:0, left:null, right:null };  // basic statistic, extra statistic\n\troot.bst = UPNG.quantize.stats(  nimg,root.i0, root.i1  );  root.est = UPNG.quantize.estats( root.bst );\n\tvar leafs = [root];\n\t\n\twhile(leafs.length<ps)\n\t{\n\t\tvar maxL = 0, mi=0;\n\t\tfor(var i=0; i<leafs.length; i++) if(leafs[i].est.L > maxL) {  maxL=leafs[i].est.L;  mi=i;  }\n\t\tif(maxL<1e-3) break;\n\t\tvar node = leafs[mi];\n\t\t\n\t\tvar s0 = UPNG.quantize.splitPixels(nimg,nimg32, node.i0, node.i1, node.est.e, node.est.eMq255);\n\t\t\n\t\tvar ln = {i0:node.i0, i1:s0, bst:null, est:null, tdst:0, left:null, right:null };  ln.bst = UPNG.quantize.stats( nimg, ln.i0, ln.i1 );  \n\t\tln.est = UPNG.quantize.estats( ln.bst );\n\t\tvar rn = {i0:s0, i1:node.i1, bst:null, est:null, tdst:0, left:null, right:null };  rn.bst = {R:[], m:[], N:node.bst.N-ln.bst.N};\n\t\tfor(var i=0; i<16; i++) rn.bst.R[i] = node.bst.R[i]-ln.bst.R[i];\n\t\tfor(var i=0; i< 4; i++) rn.bst.m[i] = node.bst.m[i]-ln.bst.m[i];\n\t\trn.est = UPNG.quantize.estats( rn.bst );\n\t\t\n\t\tnode.left = ln;  node.right = rn;\n\t\tleafs[mi]=ln;  leafs.push(rn);\n\t}\n\tleafs.sort(function(a,b) {  return b.bst.N-a.bst.N;  });\n\t\n\tfor(var ii=0; ii<imgs.length; ii++) {\n\t\tvar planeDst = UPNG.quantize.planeDst;\n\t\tvar sb = new Uint8Array(imgs[ii].buffer), tb = new Uint32Array(imgs[ii].buffer), len = sb.length;\n\t\t\n\t\tvar stack = [], si=0;\n\t\tfor(var i=0; i<len; i+=4) {\n\t\t\tvar r=sb[i]*(1/255), g=sb[i+1]*(1/255), b=sb[i+2]*(1/255), a=sb[i+3]*(1/255);\n\t\t\t\n\t\t\t//  exact, but too slow :(\n\t\t\t//var nd = UPNG.quantize.getNearest(root, r, g, b, a);\n\t\t\tvar nd = root;\n\t\t\twhile(nd.left) nd = (planeDst(nd.est,r,g,b,a)<=0) ? nd.left : nd.right;\n\t\t\t\n\t\t\ttb[i>>2] = nd.est.rgba;\n\t\t}\n\t\timgs[ii]=tb.buffer;\n\t}\n\treturn {  bufs:imgs, plte:leafs  };\n}\nUPNG.quantize.getNearest = function(nd, r,g,b,a)\n{\n\tif(nd.left==null) {  nd.tdst = UPNG.quantize.dist(nd.est.q,r,g,b,a);  return nd;  }\n\tvar planeDst = UPNG.quantize.planeDst(nd.est,r,g,b,a);\n\t\n\tvar node0 = nd.left, node1 = nd.right;\n\tif(planeDst>0) {  node0=nd.right;  node1=nd.left;  }\n\t\n\tvar ln = UPNG.quantize.getNearest(node0, r,g,b,a);\n\tif(ln.tdst<=planeDst*planeDst) return ln;\n\tvar rn = UPNG.quantize.getNearest(node1, r,g,b,a);\n\treturn rn.tdst<ln.tdst ? rn : ln;\n}\nUPNG.quantize.planeDst = function(est, r,g,b,a) {  var e = est.e;  return e[0]*r + e[1]*g + e[2]*b + e[3]*a - est.eMq;  }\nUPNG.quantize.dist     = function(q,   r,g,b,a) {  var d0=r-q[0], d1=g-q[1], d2=b-q[2], d3=a-q[3];  return d0*d0+d1*d1+d2*d2+d3*d3;  }\n\nUPNG.quantize.splitPixels = function(nimg, nimg32, i0, i1, e, eMq)\n{\n\tvar vecDot = UPNG.quantize.vecDot;\n\ti1-=4;\n\tvar shfs = 0;\n\twhile(i0<i1)\n\t{\n\t\twhile(vecDot(nimg, i0, e)<=eMq) i0+=4;\n\t\twhile(vecDot(nimg, i1, e)> eMq) i1-=4;\n\t\tif(i0>=i1) break;\n\t\t\n\t\tvar t = nimg32[i0>>2];  nimg32[i0>>2] = nimg32[i1>>2];  nimg32[i1>>2]=t;\n\t\t\n\t\ti0+=4;  i1-=4;\n\t}\n\twhile(vecDot(nimg, i0, e)>eMq) i0-=4;\n\treturn i0+4;\n}\nUPNG.quantize.vecDot = function(nimg, i, e)\n{\n\treturn nimg[i]*e[0] + nimg[i+1]*e[1] + nimg[i+2]*e[2] + nimg[i+3]*e[3];\n}\nUPNG.quantize.stats = function(nimg, i0, i1){\n\tvar R = [0,0,0,0,  0,0,0,0,  0,0,0,0,  0,0,0,0];\n\tvar m = [0,0,0,0];\n\tvar N = (i1-i0)>>2;\n\tfor(var i=i0; i<i1; i+=4)\n\t{\n\t\tvar r = nimg[i]*(1/255), g = nimg[i+1]*(1/255), b = nimg[i+2]*(1/255), a = nimg[i+3]*(1/255);\n\t\t//var r = nimg[i], g = nimg[i+1], b = nimg[i+2], a = nimg[i+3];\n\t\tm[0]+=r;  m[1]+=g;  m[2]+=b;  m[3]+=a;\n\t\t\n\t\tR[ 0] += r*r;  R[ 1] += r*g;  R[ 2] += r*b;  R[ 3] += r*a;  \n\t\t               R[ 5] += g*g;  R[ 6] += g*b;  R[ 7] += g*a; \n\t\t                              R[10] += b*b;  R[11] += b*a;  \n\t\t                                             R[15] += a*a;  \n\t}\n\tR[4]=R[1];  R[8]=R[2];  R[12]=R[3];  R[9]=R[6];  R[13]=R[7];  R[14]=R[11];\n\t\n\treturn {R:R, m:m, N:N};\n}\nUPNG.quantize.estats = function(stats){\n\tvar R = stats.R, m = stats.m, N = stats.N;\n\t\n\tvar m0 = m[0], m1 = m[1], m2 = m[2], m3 = m[3], iN = (N==0 ? 0 : 1/N);\n\tvar Rj = [\n\t\tR[ 0] - m0*m0*iN,  R[ 1] - m0*m1*iN,  R[ 2] - m0*m2*iN,  R[ 3] - m0*m3*iN,  \n\t\tR[ 4] - m1*m0*iN,  R[ 5] - m1*m1*iN,  R[ 6] - m1*m2*iN,  R[ 7] - m1*m3*iN,\n\t\tR[ 8] - m2*m0*iN,  R[ 9] - m2*m1*iN,  R[10] - m2*m2*iN,  R[11] - m2*m3*iN,  \n\t\tR[12] - m3*m0*iN,  R[13] - m3*m1*iN,  R[14] - m3*m2*iN,  R[15] - m3*m3*iN \n\t];\n\t\n\tvar A = Rj, M = UPNG.M4;\n\tvar b = [0.5,0.5,0.5,0.5], mi = 0, tmi = 0;\n\t\n\tif(N!=0)\n\tfor(var i=0; i<10; i++) {\n\t\tb = M.multVec(A, b);  tmi = Math.sqrt(M.dot(b,b));  b = M.sml(1/tmi,  b);\n\t\tif(Math.abs(tmi-mi)<1e-9) break;  mi = tmi;\n\t}\t\n\t//b = [0,0,1,0];  mi=N;\n\tvar q = [m0*iN, m1*iN, m2*iN, m3*iN];\n\tvar eMq255 = M.dot(M.sml(255,q),b);\n\t\n\tvar ia = (q[3]<0.001) ? 0 : 1/q[3];\n\t\n\treturn {  Cov:Rj, q:q, e:b, L:mi,  eMq255:eMq255, eMq : M.dot(b,q),\n\t\t\t\trgba: (((Math.round(255*q[3])<<24) | (Math.round(255*q[2]*ia)<<16) |  (Math.round(255*q[1]*ia)<<8) | (Math.round(255*q[0]*ia)<<0))>>>0)  };\n}\nUPNG.M4 = {\n\tmultVec : function(m,v) {\n\t\t\treturn [\n\t\t\t\tm[ 0]*v[0] + m[ 1]*v[1] + m[ 2]*v[2] + m[ 3]*v[3],\n\t\t\t\tm[ 4]*v[0] + m[ 5]*v[1] + m[ 6]*v[2] + m[ 7]*v[3],\n\t\t\t\tm[ 8]*v[0] + m[ 9]*v[1] + m[10]*v[2] + m[11]*v[3],\n\t\t\t\tm[12]*v[0] + m[13]*v[1] + m[14]*v[2] + m[15]*v[3]\n\t\t\t];\n\t},\n\tdot : function(x,y) {  return  x[0]*y[0]+x[1]*y[1]+x[2]*y[2]+x[3]*y[3];  },\n\tsml : function(a,y) {  return [a*y[0],a*y[1],a*y[2],a*y[3]];  }\n}\n\nUPNG.encode.alphaMul = function(img, roundA) {\n\tvar nimg = new Uint8Array(img.length), area = img.length>>2; \n\tfor(var i=0; i<area; i++) {\n\t\tvar qi=i<<2, ia=img[qi+3];   \n\t\tif(roundA) ia = ((ia<128))?0:255;\n\t\tvar a = ia*(1/255);\n\t\tnimg[qi+0] = img[qi+0]*a;  nimg[qi+1] = img[qi+1]*a;  nimg[qi+2] = img[qi+2]*a;  nimg[qi+3] = ia;\n\t}\n\treturn nimg;\n}\n\n\t\n\t\n\t\n\t\n\t\n\n\n})(UPNG, pako);\n})();\n\n","// Top level file is just a mixin of submodules & constants\n'use strict';\n\nvar assign    = require('./lib/utils/common').assign;\n\nvar deflate   = require('./lib/deflate');\nvar inflate   = require('./lib/inflate');\nvar constants = require('./lib/zlib/constants');\n\nvar pako = {};\n\nassign(pako, deflate, inflate, constants);\n\nmodule.exports = pako;\n","'use strict';\n\n\nvar zlib_deflate = require('./zlib/deflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\n\nvar toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nvar Z_NO_FLUSH      = 0;\nvar Z_FINISH        = 4;\n\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_SYNC_FLUSH    = 2;\n\nvar Z_DEFAULT_COMPRESSION = -1;\n\nvar Z_DEFAULT_STRATEGY    = 0;\n\nvar Z_DEFLATED  = 8;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array|Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param)  or if you\n * push a chunk with explicit flush (call [[Deflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate(options) {\n  if (!(this instanceof Deflate)) return new Deflate(options);\n\n  this.options = utils.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status = zlib_deflate.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  if (opt.header) {\n    zlib_deflate.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    var dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = zlib_deflate.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK) {\n      throw new Error(msg[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Deflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the compression context.\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * array format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var status, _mode;\n\n  if (this.ended) { return false; }\n\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? Z_FINISH : Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n    status = zlib_deflate.deflate(strm, _mode);    /* no bad return value */\n\n    if (status !== Z_STREAM_END && status !== Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n    if (strm.avail_out === 0 || (strm.avail_in === 0 && (_mode === Z_FINISH || _mode === Z_SYNC_FLUSH))) {\n      if (this.options.to === 'string') {\n        this.onData(strings.buf2binstring(utils.shrinkBuf(strm.output, strm.next_out)));\n      } else {\n        this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n      }\n    }\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== Z_STREAM_END);\n\n  // Finalize on the last chunk.\n  if (_mode === Z_FINISH) {\n    status = zlib_deflate.deflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === Z_SYNC_FLUSH) {\n    this.onEnd(Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be \"binary string\"\n *    (each char code [0..255])\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , data = Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate(input, options) {\n  var deflator = new Deflate(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || msg[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate(input, options);\n}\n\n\nexports.Deflate = Deflate;\nexports.deflate = deflate;\nexports.deflateRaw = deflateRaw;\nexports.gzip = gzip;\n","'use strict';\n\n\nvar zlib_inflate = require('./zlib/inflate');\nvar utils        = require('./utils/common');\nvar strings      = require('./utils/strings');\nvar c            = require('./zlib/constants');\nvar msg          = require('./zlib/messages');\nvar ZStream      = require('./zlib/zstream');\nvar GZheader     = require('./zlib/gzheader');\n\nvar toString = Object.prototype.toString;\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param) or if you\n * push a chunk with explicit flush (call [[Inflate#push]] with\n * `Z_SYNC_FLUSH` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , chunk1 = Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * var inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate(options) {\n  if (!(this instanceof Inflate)) return new Inflate(options);\n\n  this.options = utils.assign({\n    chunkSize: 16384,\n    windowBits: 0,\n    to: ''\n  }, options || {});\n\n  var opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new ZStream();\n  this.strm.avail_out = 0;\n\n  var status  = zlib_inflate.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== c.Z_OK) {\n    throw new Error(msg[status]);\n  }\n\n  this.header = new GZheader();\n\n  zlib_inflate.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = zlib_inflate.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== c.Z_OK) {\n        throw new Error(msg[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, mode]) -> Boolean\n * - data (Uint8Array|Array|ArrayBuffer|String): input data\n * - mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. The last data block must have\n * mode Z_FINISH (or `true`). That will flush internal pending buffers and call\n * [[Inflate#onEnd]]. For interim explicit flushes (without ending the stream) you\n * can use mode Z_SYNC_FLUSH, keeping the decompression context.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * We strongly recommend to use `Uint8Array` on input for best speed (output\n * format is detected automatically). Also, don't skip last param and always\n * use the same type in your code (boolean or number). That will improve JS speed.\n *\n * For regular `Array`-s make sure all elements are [0..255].\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate.prototype.push = function (data, mode) {\n  var strm = this.strm;\n  var chunkSize = this.options.chunkSize;\n  var dictionary = this.options.dictionary;\n  var status, _mode;\n  var next_out_utf8, tail, utf8str;\n\n  // Flag to properly process Z_BUF_ERROR on testing inflate call\n  // when we check that all output data was flushed.\n  var allowBufError = false;\n\n  if (this.ended) { return false; }\n  _mode = (mode === ~~mode) ? mode : ((mode === true) ? c.Z_FINISH : c.Z_NO_FLUSH);\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // Only binary strings can be decompressed on practice\n    strm.input = strings.binstring2buf(data);\n  } else if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  do {\n    if (strm.avail_out === 0) {\n      strm.output = new utils.Buf8(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = zlib_inflate.inflate(strm, c.Z_NO_FLUSH);    /* no bad return value */\n\n    if (status === c.Z_NEED_DICT && dictionary) {\n      status = zlib_inflate.inflateSetDictionary(this.strm, dictionary);\n    }\n\n    if (status === c.Z_BUF_ERROR && allowBufError === true) {\n      status = c.Z_OK;\n      allowBufError = false;\n    }\n\n    if (status !== c.Z_STREAM_END && status !== c.Z_OK) {\n      this.onEnd(status);\n      this.ended = true;\n      return false;\n    }\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === c.Z_STREAM_END || (strm.avail_in === 0 && (_mode === c.Z_FINISH || _mode === c.Z_SYNC_FLUSH))) {\n\n        if (this.options.to === 'string') {\n\n          next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          tail = strm.next_out - next_out_utf8;\n          utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) { utils.arraySet(strm.output, strm.output, next_out_utf8, tail, 0); }\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(utils.shrinkBuf(strm.output, strm.next_out));\n        }\n      }\n    }\n\n    // When no more input data, we should check that internal inflate buffers\n    // are flushed. The only way to do it when avail_out = 0 - run one more\n    // inflate pass. But if output data not exists, inflate return Z_BUF_ERROR.\n    // Here we set flag to process this error properly.\n    //\n    // NOTE. Deflate does not return error in this case and does not needs such\n    // logic.\n    if (strm.avail_in === 0 && strm.avail_out === 0) {\n      allowBufError = true;\n    }\n\n  } while ((strm.avail_in > 0 || strm.avail_out === 0) && status !== c.Z_STREAM_END);\n\n  if (status === c.Z_STREAM_END) {\n    _mode = c.Z_FINISH;\n  }\n\n  // Finalize on the last chunk.\n  if (_mode === c.Z_FINISH) {\n    status = zlib_inflate.inflateEnd(this.strm);\n    this.onEnd(status);\n    this.ended = true;\n    return status === c.Z_OK;\n  }\n\n  // callback interim results if Z_SYNC_FLUSH.\n  if (_mode === c.Z_SYNC_FLUSH) {\n    this.onEnd(c.Z_OK);\n    strm.avail_out = 0;\n    return true;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|Array|String): output data. Type of array depends\n *   on js engine support. When string output requested, each chunk\n *   will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH) or should be flushed (Z_SYNC_FLUSH)\n * or if an error happened. By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === c.Z_OK) {\n    if (this.options.to === 'string') {\n      // Glue & convert here, until we teach pako to send\n      // utf8 aligned strings to onData\n      this.result = this.chunks.join('');\n    } else {\n      this.result = utils.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * var pako = require('pako')\n *   , input = pako.deflate([1,2,3,4,5,6,7,8,9])\n *   , output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err)\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate(input, options) {\n  var inflator = new Inflate(options);\n\n  inflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) { throw inflator.msg || msg[inflator.err]; }\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|Array|String\n * - data (Uint8Array|Array|String): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nexports.Inflate = Inflate;\nexports.inflate = inflate;\nexports.inflateRaw = inflateRaw;\nexports.ungzip  = inflate;\n","'use strict';\n\n\nvar TYPED_OK =  (typeof Uint8Array !== 'undefined') &&\n                (typeof Uint16Array !== 'undefined') &&\n                (typeof Int32Array !== 'undefined');\n\nfunction _has(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nexports.assign = function (obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    var source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (var p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// reduce buffer size, avoiding mem copy\nexports.shrinkBuf = function (buf, size) {\n  if (buf.length === size) { return buf; }\n  if (buf.subarray) { return buf.subarray(0, size); }\n  buf.length = size;\n  return buf;\n};\n\n\nvar fnTyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    if (src.subarray && dest.subarray) {\n      dest.set(src.subarray(src_offs, src_offs + len), dest_offs);\n      return;\n    }\n    // Fallback to ordinary array\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    var i, l, len, pos, chunk, result;\n\n    // calculate data length\n    len = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      len += chunks[i].length;\n    }\n\n    // join chunks\n    result = new Uint8Array(len);\n    pos = 0;\n    for (i = 0, l = chunks.length; i < l; i++) {\n      chunk = chunks[i];\n      result.set(chunk, pos);\n      pos += chunk.length;\n    }\n\n    return result;\n  }\n};\n\nvar fnUntyped = {\n  arraySet: function (dest, src, src_offs, len, dest_offs) {\n    for (var i = 0; i < len; i++) {\n      dest[dest_offs + i] = src[src_offs + i];\n    }\n  },\n  // Join array of chunks to single array.\n  flattenChunks: function (chunks) {\n    return [].concat.apply([], chunks);\n  }\n};\n\n\n// Enable/Disable typed arrays use, for testing\n//\nexports.setTyped = function (on) {\n  if (on) {\n    exports.Buf8  = Uint8Array;\n    exports.Buf16 = Uint16Array;\n    exports.Buf32 = Int32Array;\n    exports.assign(exports, fnTyped);\n  } else {\n    exports.Buf8  = Array;\n    exports.Buf16 = Array;\n    exports.Buf32 = Array;\n    exports.assign(exports, fnUntyped);\n  }\n};\n\nexports.setTyped(TYPED_OK);\n","// String encode/decode helpers\n'use strict';\n\n\nvar utils = require('./common');\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nvar STR_APPLY_OK = true;\nvar STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, [ 0 ]); } catch (__) { STR_APPLY_OK = false; }\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nvar _utf8len = new utils.Buf8(256);\nfor (var q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nexports.string2buf = function (str) {\n  var buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new utils.Buf8(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper (used in 2 places)\nfunction buf2binstring(buf, len) {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if ((buf.subarray && STR_APPLY_UIA_OK) || (!buf.subarray && STR_APPLY_OK)) {\n      return String.fromCharCode.apply(null, utils.shrinkBuf(buf, len));\n    }\n  }\n\n  var result = '';\n  for (var i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n}\n\n\n// Convert byte array to binary string\nexports.buf2binstring = function (buf) {\n  return buf2binstring(buf, buf.length);\n};\n\n\n// Convert binary string (typed, when possible)\nexports.binstring2buf = function (str) {\n  var buf = new utils.Buf8(str.length);\n  for (var i = 0, len = buf.length; i < len; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n};\n\n\n// convert array to string\nexports.buf2string = function (buf, max) {\n  var i, out, c, c_len;\n  var len = max || buf.length;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  var utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nexports.utf8border = function (buf, max) {\n  var pos;\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n","'use strict';\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction adler32(adler, buf, len, pos) {\n  var s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n}\n\n\nmodule.exports = adler32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  //Z_MEM_ERROR:     -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n","'use strict';\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nfunction makeTable() {\n  var c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n}\n\n// Create table on load. Just 255 signed longs. Not a problem.\nvar crcTable = makeTable();\n\n\nfunction crc32(crc, buf, len, pos) {\n  var t = crcTable,\n      end = pos + len;\n\n  crc ^= -1;\n\n  for (var i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n}\n\n\nmodule.exports = crc32;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils   = require('../utils/common');\nvar trees   = require('./trees');\nvar adler32 = require('./adler32');\nvar crc32   = require('./crc32');\nvar msg     = require('./messages');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\nvar Z_NO_FLUSH      = 0;\nvar Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\nvar Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\n//var Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\n//var Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\n//var Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n\n/* compression levels */\n//var Z_NO_COMPRESSION      = 0;\n//var Z_BEST_SPEED          = 1;\n//var Z_BEST_COMPRESSION    = 9;\nvar Z_DEFAULT_COMPRESSION = -1;\n\n\nvar Z_FILTERED            = 1;\nvar Z_HUFFMAN_ONLY        = 2;\nvar Z_RLE                 = 3;\nvar Z_FIXED               = 4;\nvar Z_DEFAULT_STRATEGY    = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\n//var Z_BINARY              = 0;\n//var Z_TEXT                = 1;\n//var Z_ASCII               = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n/*============================================================================*/\n\n\nvar MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_MEM_LEVEL = 8;\n\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nvar D_CODES       = 30;\n/* number of distance codes */\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nvar MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar MIN_MATCH = 3;\nvar MAX_MATCH = 258;\nvar MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nvar PRESET_DICT = 0x20;\n\nvar INIT_STATE = 42;\nvar EXTRA_STATE = 69;\nvar NAME_STATE = 73;\nvar COMMENT_STATE = 91;\nvar HCRC_STATE = 103;\nvar BUSY_STATE = 113;\nvar FINISH_STATE = 666;\n\nvar BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nvar BS_BLOCK_DONE     = 2; /* block flush performed */\nvar BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nvar BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nvar OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nfunction err(strm, errorCode) {\n  strm.msg = msg[errorCode];\n  return errorCode;\n}\n\nfunction rank(f) {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n}\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nfunction flush_pending(strm) {\n  var s = strm.state;\n\n  //_tr_flush_bits(s);\n  var len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  utils.arraySet(strm.output, s.pending_buf, s.pending_out, len, strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n}\n\n\nfunction flush_block_only(s, last) {\n  trees._tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n}\n\n\nfunction put_byte(s, b) {\n  s.pending_buf[s.pending++] = b;\n}\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nfunction putShortMSB(s, b) {\n//  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n}\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nfunction read_buf(strm, buf, start, size) {\n  var len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  utils.arraySet(buf, strm.input, strm.next_in, len, start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n}\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nfunction longest_match(s, cur_match) {\n  var chain_length = s.max_chain_length;      /* max hash chain length */\n  var scan = s.strstart; /* current string */\n  var match;                       /* matched string */\n  var len;                           /* length of current match */\n  var best_len = s.prev_length;              /* best match length so far */\n  var nice_match = s.nice_match;             /* stop if match long enough */\n  var limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  var _win = s.window; // shortcut\n\n  var wmask = s.w_mask;\n  var prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  var strend = s.strstart + MAX_MATCH;\n  var scan_end1  = _win[scan + best_len - 1];\n  var scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n}\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nfunction fill_window(s) {\n  var _w_size = s.w_size;\n  var p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      utils.arraySet(s.window, s.window, _w_size, _w_size, 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + 1]) & s.hash_mask;\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    var curr = s.strstart + s.lookahead;\n//    var init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n}\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nfunction deflate_stored(s, flush) {\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  var max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    var max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n}\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nfunction deflate_fast(s, flush) {\n  var hash_head;        /* head of the hash chain */\n  var bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + 1]) & s.hash_mask;\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nfunction deflate_slow(s, flush) {\n  var hash_head;          /* head of hash chain */\n  var bflush;              /* set if current block must be flushed */\n\n  var max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = trees._tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[s.strstart + MIN_MATCH - 1]) & s.hash_mask;\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n}\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nfunction deflate_rle(s, flush) {\n  var bflush;            /* set if current block must be flushed */\n  var prev;              /* byte at distance one to match */\n  var scan, strend;      /* scan goes up to strend for length of run */\n\n  var _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = trees._tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nfunction deflate_huff(s, flush) {\n  var bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = trees._tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n}\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nvar configuration_table;\n\nconfiguration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nfunction lm_init(s) {\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n}\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new utils.Buf16(HEAP_SIZE * 2);\n  this.dyn_dtree  = new utils.Buf16((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new utils.Buf16((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new utils.Buf16(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new utils.Buf16(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new utils.Buf16(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nfunction deflateResetKeep(strm) {\n  var s;\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH;\n  trees._tr_init(s);\n  return Z_OK;\n}\n\n\nfunction deflateReset(strm) {\n  var ret = deflateResetKeep(strm);\n  if (ret === Z_OK) {\n    lm_init(strm.state);\n  }\n  return ret;\n}\n\n\nfunction deflateSetHeader(strm, head) {\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR; }\n  strm.state.gzhead = head;\n  return Z_OK;\n}\n\n\nfunction deflateInit2(strm, level, method, windowBits, memLevel, strategy) {\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR;\n  }\n  var wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  var s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new utils.Buf8(s.w_size * 2);\n  s.head = new utils.Buf16(s.hash_size);\n  s.prev = new utils.Buf16(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new utils.Buf8(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n}\n\nfunction deflateInit(strm, level) {\n  return deflateInit2(strm, level, Z_DEFLATED, MAX_WBITS, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY);\n}\n\n\nfunction deflate(strm, flush) {\n  var old_flush, s;\n  var beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR) : Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR : Z_STREAM_ERROR);\n  }\n\n  s.strm = strm; /* just in case */\n  old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      var header = (Z_DEFLATED + ((s.w_bits - 8) << 4)) << 8;\n      var level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH && s.status !== FINISH_STATE)) {\n    var bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        trees._tr_align(s);\n      }\n      else if (flush !== Z_BLOCK) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        trees._tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH) { return Z_OK; }\n  if (s.wrap <= 0) { return Z_STREAM_END; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK : Z_STREAM_END;\n}\n\nfunction deflateEnd(strm) {\n  var status;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR) : Z_OK;\n}\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nfunction deflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var s;\n  var str, n;\n  var wrap;\n  var avail;\n  var next;\n  var input;\n  var tmpDict;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  s = strm.state;\n  wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    tmpDict = new utils.Buf8(s.w_size);\n    utils.arraySet(tmpDict, dictionary, dictLength - s.w_size, s.w_size, 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  avail = strm.avail_in;\n  next = strm.next_in;\n  input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    str = s.strstart;\n    n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = ((s.ins_h << s.hash_shift) ^ s.window[str + MIN_MATCH - 1]) & s.hash_mask;\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK;\n}\n\n\nexports.deflateInit = deflateInit;\nexports.deflateInit2 = deflateInit2;\nexports.deflateReset = deflateReset;\nexports.deflateResetKeep = deflateResetKeep;\nexports.deflateSetHeader = deflateSetHeader;\nexports.deflate = deflate;\nexports.deflateEnd = deflateEnd;\nexports.deflateSetDictionary = deflateSetDictionary;\nexports.deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nexports.deflateBound = deflateBound;\nexports.deflateCopy = deflateCopy;\nexports.deflateParams = deflateParams;\nexports.deflatePending = deflatePending;\nexports.deflatePrime = deflatePrime;\nexports.deflateTune = deflateTune;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nmodule.exports = GZheader;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nvar BAD = 30;       /* got a data error -- remain here until reset */\nvar TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nmodule.exports = function inflate_fast(strm, start) {\n  var state;\n  var _in;                    /* local strm.input */\n  var last;                   /* have enough input while in < last */\n  var _out;                   /* local strm.output */\n  var beg;                    /* inflate()'s initial strm.output */\n  var end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  var dmax;                   /* maximum distance from zlib header */\n//#endif\n  var wsize;                  /* window size or zero if not using window */\n  var whave;                  /* valid bytes in the window */\n  var wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  var s_window;               /* allocated sliding window, if wsize != 0 */\n  var hold;                   /* local strm.hold */\n  var bits;                   /* local strm.bits */\n  var lcode;                  /* local strm.lencode */\n  var dcode;                  /* local strm.distcode */\n  var lmask;                  /* mask for first level of length codes */\n  var dmask;                  /* mask for first level of distance codes */\n  var here;                   /* retrieved table entry */\n  var op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  var len;                    /* match length, unused bytes */\n  var dist;                   /* match distance */\n  var from;                   /* where to copy match from */\n  var from_source;\n\n\n  var input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils         = require('../utils/common');\nvar adler32       = require('./adler32');\nvar crc32         = require('./crc32');\nvar inflate_fast  = require('./inffast');\nvar inflate_table = require('./inftrees');\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n/* Allowed flush values; see deflate() and inflate() below for details */\n//var Z_NO_FLUSH      = 0;\n//var Z_PARTIAL_FLUSH = 1;\n//var Z_SYNC_FLUSH    = 2;\n//var Z_FULL_FLUSH    = 3;\nvar Z_FINISH        = 4;\nvar Z_BLOCK         = 5;\nvar Z_TREES         = 6;\n\n\n/* Return codes for the compression/decompression functions. Negative values\n * are errors, positive values are used for special but normal events.\n */\nvar Z_OK            = 0;\nvar Z_STREAM_END    = 1;\nvar Z_NEED_DICT     = 2;\n//var Z_ERRNO         = -1;\nvar Z_STREAM_ERROR  = -2;\nvar Z_DATA_ERROR    = -3;\nvar Z_MEM_ERROR     = -4;\nvar Z_BUF_ERROR     = -5;\n//var Z_VERSION_ERROR = -6;\n\n/* The deflate compression method */\nvar Z_DEFLATED  = 8;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nvar    HEAD = 1;       /* i: waiting for magic header */\nvar    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nvar    TIME = 3;       /* i: waiting for modification time (gzip) */\nvar    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nvar    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nvar    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nvar    NAME = 7;       /* i: waiting for end of file name (gzip) */\nvar    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nvar    HCRC = 9;       /* i: waiting for header crc (gzip) */\nvar    DICTID = 10;    /* i: waiting for dictionary check value */\nvar    DICT = 11;      /* waiting for inflateSetDictionary() call */\nvar        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nvar        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nvar        STORED = 14;    /* i: waiting for stored size (length and complement) */\nvar        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nvar        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nvar        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nvar        LENLENS = 18;   /* i: waiting for code length code lengths */\nvar        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nvar            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nvar            LEN = 21;       /* i: waiting for length/lit/eob code */\nvar            LENEXT = 22;    /* i: waiting for length extra bits */\nvar            DIST = 23;      /* i: waiting for distance code */\nvar            DISTEXT = 24;   /* i: waiting for distance extra bits */\nvar            MATCH = 25;     /* o: waiting for output space to copy string */\nvar            LIT = 26;       /* o: waiting for output space to write literal */\nvar    CHECK = 27;     /* i: waiting for 32-bit check value */\nvar    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nvar    DONE = 29;      /* finished check, done -- remain here until reset */\nvar    BAD = 30;       /* got a data error -- remain here until reset */\nvar    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nvar    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar MAX_WBITS = 15;\n/* 32K LZ77 window */\nvar DEF_WBITS = MAX_WBITS;\n\n\nfunction zswap32(q) {\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n}\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new utils.Buf16(320); /* temporary storage for code lengths */\n  this.work = new utils.Buf16(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new utils.Buf32(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\nfunction inflateResetKeep(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new utils.Buf32(ENOUGH_LENS);\n  state.distcode = state.distdyn = new utils.Buf32(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK;\n}\n\nfunction inflateReset(strm) {\n  var state;\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n}\n\nfunction inflateReset2(strm, windowBits) {\n  var wrap;\n  var state;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n}\n\nfunction inflateInit2(strm, windowBits) {\n  var ret;\n  var state;\n\n  if (!strm) { return Z_STREAM_ERROR; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n}\n\nfunction inflateInit(strm) {\n  return inflateInit2(strm, DEF_WBITS);\n}\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nvar virgin = true;\n\nvar lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\nfunction fixedtables(state) {\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    var sym;\n\n    lenfix = new utils.Buf32(512);\n    distfix = new utils.Buf32(32);\n\n    /* literal/length table */\n    sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inflate_table(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inflate_table(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n}\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nfunction updatewindow(strm, src, end, copy) {\n  var dist;\n  var state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new utils.Buf8(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    utils.arraySet(state.window, src, end - state.wsize, state.wsize, 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    utils.arraySet(state.window, src, end - copy, dist, state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      utils.arraySet(state.window, src, end - copy, copy, 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n}\n\nfunction inflate(strm, flush) {\n  var state;\n  var input, output;          // input/output buffers\n  var next;                   /* next input INDEX */\n  var put;                    /* next output INDEX */\n  var have, left;             /* available input and output */\n  var hold;                   /* bit buffer */\n  var bits;                   /* bits in bit buffer */\n  var _in, _out;              /* save starting available input and output */\n  var copy;                   /* number of stored or match bytes to copy */\n  var from;                   /* where to copy match bytes from */\n  var from_source;\n  var here = 0;               /* current decoding table entry */\n  var here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //var last;                   /* parent table entry */\n  var last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  var len;                    /* length to copy for repeats, bits to drop */\n  var ret;                    /* return code */\n  var hbuf = new utils.Buf8(4);    /* buffer for gzip header crc calculation */\n  var opts;\n\n  var n; // temporary var for NEED_BITS\n\n  var order = /* permutation of code lengths */\n    [ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ];\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n        state.dmax = 1 << len;\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Array(state.head.extra_len);\n              }\n              utils.arraySet(\n                state.head.extra,\n                input,\n                next,\n                // extra field is limited to 65536 bytes\n                // - no need for additional size check\n                copy,\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          utils.arraySet(output, input, next, copy, put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inflate_table(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inflate_table(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inflate_fast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32(state.check, output, _out, put - _out) : adler32(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) {\n      state.mode = MEM;\n      return Z_MEM_ERROR;\n    }\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32(state.check, output, _out, strm.next_out - _out) : adler32(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH) && ret === Z_OK) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n}\n\nfunction inflateEnd(strm) {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR;\n  }\n\n  var state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK;\n}\n\nfunction inflateGetHeader(strm, head) {\n  var state;\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR; }\n  state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK;\n}\n\nfunction inflateSetDictionary(strm, dictionary) {\n  var dictLength = dictionary.length;\n\n  var state;\n  var dictid;\n  var ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK;\n}\n\nexports.inflateReset = inflateReset;\nexports.inflateReset2 = inflateReset2;\nexports.inflateResetKeep = inflateResetKeep;\nexports.inflateInit = inflateInit;\nexports.inflateInit2 = inflateInit2;\nexports.inflate = inflate;\nexports.inflateEnd = inflateEnd;\nexports.inflateGetHeader = inflateGetHeader;\nexports.inflateSetDictionary = inflateSetDictionary;\nexports.inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nexports.inflateCopy = inflateCopy;\nexports.inflateGetDictionary = inflateGetDictionary;\nexports.inflateMark = inflateMark;\nexports.inflatePrime = inflatePrime;\nexports.inflateSync = inflateSync;\nexports.inflateSyncPoint = inflateSyncPoint;\nexports.inflateUndermine = inflateUndermine;\n*/\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar utils = require('../utils/common');\n\nvar MAXBITS = 15;\nvar ENOUGH_LENS = 852;\nvar ENOUGH_DISTS = 592;\n//var ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nvar CODES = 0;\nvar LENS = 1;\nvar DISTS = 2;\n\nvar lbase = [ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n];\n\nvar lext = [ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n];\n\nvar dbase = [ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n];\n\nvar dext = [ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n];\n\nmodule.exports = function inflate_table(type, lens, lens_index, codes, table, table_index, work, opts)\n{\n  var bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  var len = 0;               /* a code's length in bits */\n  var sym = 0;               /* index of code symbols */\n  var min = 0, max = 0;          /* minimum and maximum code lengths */\n  var root = 0;              /* number of index bits for root table */\n  var curr = 0;              /* number of index bits for current table */\n  var drop = 0;              /* code bits to drop for sub-table */\n  var left = 0;                   /* number of prefix codes available */\n  var used = 0;              /* code entries in table used */\n  var huff = 0;              /* Huffman code */\n  var incr;              /* for incrementing code, index */\n  var fill;              /* index for replicating entries */\n  var low;               /* low bits for current root entry */\n  var mask;              /* mask for low root bits */\n  var next;             /* next available space in table */\n  var base = null;     /* base value table to use */\n  var base_index = 0;\n//  var shoextra;    /* extra bits table to use */\n  var end;                    /* use base and extra for symbol > end */\n  var count = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  var offs = new utils.Buf16(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  var extra = null;\n  var extra_index = 0;\n\n  var here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS && used > ENOUGH_LENS) ||\n    (type === DISTS && used > ENOUGH_DISTS)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS && used > ENOUGH_LENS) ||\n        (type === DISTS && used > ENOUGH_DISTS)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nmodule.exports = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\nvar utils = require('../utils/common');\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//var Z_FILTERED          = 1;\n//var Z_HUFFMAN_ONLY      = 2;\n//var Z_RLE               = 3;\nvar Z_FIXED               = 4;\n//var Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nvar Z_BINARY              = 0;\nvar Z_TEXT                = 1;\n//var Z_ASCII             = 1; // = Z_TEXT\nvar Z_UNKNOWN             = 2;\n\n/*============================================================================*/\n\n\nfunction zero(buf) { var len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nvar STORED_BLOCK = 0;\nvar STATIC_TREES = 1;\nvar DYN_TREES    = 2;\n/* The three kinds of block type */\n\nvar MIN_MATCH    = 3;\nvar MAX_MATCH    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nvar LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nvar LITERALS      = 256;\n/* number of literal bytes 0..255 */\n\nvar L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nvar D_CODES       = 30;\n/* number of distance codes */\n\nvar BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\n\nvar HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\n\nvar MAX_BITS      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nvar Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nvar MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nvar END_BLOCK   = 256;\n/* end of block literal code */\n\nvar REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nvar REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nvar REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nvar extra_lbits =   /* extra bits for each length code */\n  [0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0];\n\nvar extra_dbits =   /* extra bits for each distance code */\n  [0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13];\n\nvar extra_blbits =  /* extra bits for each bit length code */\n  [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7];\n\nvar bl_order =\n  [16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nvar DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nvar static_ltree  = new Array((L_CODES + 2) * 2);\nzero(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nvar static_dtree  = new Array(D_CODES * 2);\nzero(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nvar _dist_code    = new Array(DIST_CODE_LEN);\nzero(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nvar _length_code  = new Array(MAX_MATCH - MIN_MATCH + 1);\nzero(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nvar base_length   = new Array(LENGTH_CODES);\nzero(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nvar base_dist     = new Array(D_CODES);\nzero(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nvar static_l_desc;\nvar static_d_desc;\nvar static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nfunction d_code(dist) {\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n}\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nfunction put_short(s, w) {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n}\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nfunction send_bits(s, value, length) {\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n}\n\n\nfunction send_code(s, c, tree) {\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n}\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nfunction bi_reverse(code, len) {\n  var res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nfunction bi_flush(s) {\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n}\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nfunction gen_bitlen(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  var tree            = desc.dyn_tree;\n  var max_code        = desc.max_code;\n  var stree           = desc.stat_desc.static_tree;\n  var has_stree       = desc.stat_desc.has_stree;\n  var extra           = desc.stat_desc.extra_bits;\n  var base            = desc.stat_desc.extra_base;\n  var max_length      = desc.stat_desc.max_length;\n  var h;              /* heap index */\n  var n, m;           /* iterate over the tree elements */\n  var bits;           /* bit length */\n  var xbits;          /* extra bits */\n  var f;              /* frequency */\n  var overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nfunction gen_codes(tree, max_code, bl_count)\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  var next_code = new Array(MAX_BITS + 1); /* next code value for each bit length */\n  var code = 0;              /* running code value */\n  var bits;                  /* bit index */\n  var n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    var len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n}\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nfunction tr_static_init() {\n  var n;        /* iterates over tree elements */\n  var bits;     /* bit counter */\n  var length;   /* length value */\n  var code;     /* code value */\n  var dist;     /* distance index */\n  var bl_count = new Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS + 1, L_CODES, MAX_BITS);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES, MAX_BITS);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES, MAX_BL_BITS);\n\n  //static_init_done = true;\n}\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nfunction init_block(s) {\n  var n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n}\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nfunction bi_windup(s)\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n}\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nfunction copy_block(s, buf, len, header)\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  utils.arraySet(s.pending_buf, s.window, buf, len, s.pending);\n  s.pending += len;\n}\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nfunction smaller(tree, n, m, depth) {\n  var _n2 = n * 2;\n  var _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n}\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nfunction pqdownheap(s, tree, k)\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  var v = s.heap[k];\n  var j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n}\n\n\n// inlined manually\n// var SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nfunction compress_block(s, ltree, dtree)\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  var dist;           /* distance of matched string */\n  var lc;             /* match length or unmatched char (if dist == 0) */\n  var lx = 0;         /* running index in l_buf */\n  var code;           /* the code to send */\n  var extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n}\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nfunction build_tree(s, desc)\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  var tree     = desc.dyn_tree;\n  var stree    = desc.stat_desc.static_tree;\n  var has_stree = desc.stat_desc.has_stree;\n  var elems    = desc.stat_desc.elems;\n  var n, m;          /* iterate over heap elements */\n  var max_code = -1; /* largest code with non zero frequency */\n  var node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n}\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nfunction scan_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nfunction send_tree(s, tree, max_code)\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  var n;                     /* iterates over all tree elements */\n  var prevlen = -1;          /* last emitted length */\n  var curlen;                /* length of current code */\n\n  var nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  var count = 0;             /* repeat count of the current code */\n  var max_count = 7;         /* max repeat count */\n  var min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n}\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nfunction build_bl_tree(s) {\n  var max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n}\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nfunction send_all_trees(s, lcodes, dcodes, blcodes)\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  var rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n}\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nfunction detect_data_type(s) {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  var black_mask = 0xf3ffc07f;\n  var n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n}\n\n\nvar static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nfunction _tr_init(s)\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n}\n\n\n/* ===========================================================================\n * Send a stored block\n */\nfunction _tr_stored_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n}\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nfunction _tr_align(s) {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n}\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nfunction _tr_flush_block(s, buf, stored_len, last)\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  var opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  var max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n}\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nfunction _tr_tally(s, dist, lc)\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //var out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n}\n\nexports._tr_init  = _tr_init;\nexports._tr_stored_block = _tr_stored_block;\nexports._tr_flush_block  = _tr_flush_block;\nexports._tr_tally = _tr_tally;\nexports._tr_align = _tr_align;\n","'use strict';\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nmodule.exports = ZStream;\n","//Hackish way to create webworker (independent of $3Dmol namespace) within minified file\n//We need to convert actual javascript into a string, not typescript, so for the time being\n\n//this will remain a JS file\n$3Dmol.workerString = function(){\n\n    self.onmessage = function(oEvent) {\n        var obj = oEvent.data;\n        var type = obj.type;\n        if (type < 0) // sending atom data, initialize\n        {\n            self.atomData = obj.atoms;\n            self.volume = obj.volume;\n            self.ps = new ProteinSurface();  // jshint ignore:line\n        } else {\n            var ps = self.ps;\n            ps.initparm(obj.expandedExtent, (type == 1) ? false : true, self.volume);\n            ps.fillvoxels(self.atomData, obj.extendedAtoms);\n            ps.buildboundary();\n            if (type === 4 || type === 2) {\n                ps.fastdistancemap();\n                ps.boundingatom(false);\n                ps.fillvoxelswaals(self.atomData, obj.extendedAtoms);    \n            }        \n            ps.marchingcube(type);  // jshint ignore:line\n            var VandF = ps.getFacesAndVertices(obj.atomsToShow);\n            self.postMessage(VandF);\n        }\n    };\n    \n}.toString().replace(/(^.*?\\{|\\}$)/g, \"\");\n\n// NOTE: variable replacement is simplified\n// (See: http://stackoverflow.com/questions/1661197/what-characters-are-valid-for-javascript-variable-names)\n$3Dmol.workerString += \";\\nfunction _classCallCheck() {};\"; //hack for babel\n$3Dmol.workerString += \";\\n\"+$3Dmol.Vector3.toString();\n$3Dmol.workerString += \";\\n\"+$3Dmol.MarchingCubeInitializer.toString()+\";\\n\\n\";\n$3Dmol.workerString += \";\\n\"+$3Dmol.PointGrid.toString()+\";\\n\";\n$3Dmol.workerString += \";\\nvar ProteinSurface = \"+$3Dmol.ProteinSurface.toString()+\";\\n\";\n//console.log($3Dmol.workerString);\n$3Dmol.SurfaceWorker = window.URL ? window.URL.createObjectURL(new Blob([$3Dmol.workerString],{type: 'text/javascript'})) : undefined;\n","\n//put the global $3Dmol object into a module\nif (typeof module === \"object\" && typeof module.exports === \"object\") {\n\t//for node.js exporting\n\tmodule.exports = window.$3Dmol;\n}","!function(r,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t(r.MMTF=r.MMTF||{})}(this,function(r){\"use strict\";function t(r,t,n){for(var e=(r.byteLength,0),i=n.length;i>e;e++){var o=n.charCodeAt(e);if(128>o)r.setUint8(t++,o>>>0&127|0);else if(2048>o)r.setUint8(t++,o>>>6&31|192),r.setUint8(t++,o>>>0&63|128);else if(65536>o)r.setUint8(t++,o>>>12&15|224),r.setUint8(t++,o>>>6&63|128),r.setUint8(t++,o>>>0&63|128);else{if(!(1114112>o))throw new Error(\"bad codepoint \"+o);r.setUint8(t++,o>>>18&7|240),r.setUint8(t++,o>>>12&63|128),r.setUint8(t++,o>>>6&63|128),r.setUint8(t++,o>>>0&63|128)}}}function n(r){for(var t=0,n=0,e=r.length;e>n;n++){var i=r.charCodeAt(n);if(128>i)t+=1;else if(2048>i)t+=2;else if(65536>i)t+=3;else{if(!(1114112>i))throw new Error(\"bad codepoint \"+i);t+=4}}return t}function e(r,i,o){var a=typeof r;if(\"string\"===a){var u=n(r);if(32>u)return i.setUint8(o,160|u),t(i,o+1,r),1+u;if(256>u)return i.setUint8(o,217),i.setUint8(o+1,u),t(i,o+2,r),2+u;if(65536>u)return i.setUint8(o,218),i.setUint16(o+1,u),t(i,o+3,r),3+u;if(4294967296>u)return i.setUint8(o,219),i.setUint32(o+1,u),t(i,o+5,r),5+u}if(r instanceof Uint8Array){var u=r.byteLength,s=new Uint8Array(i.buffer);if(256>u)return i.setUint8(o,196),i.setUint8(o+1,u),s.set(r,o+2),2+u;if(65536>u)return i.setUint8(o,197),i.setUint16(o+1,u),s.set(r,o+3),3+u;if(4294967296>u)return i.setUint8(o,198),i.setUint32(o+1,u),s.set(r,o+5),5+u}if(\"number\"===a){if(!isFinite(r))throw new Error(\"Number not finite: \"+r);if(Math.floor(r)!==r)return i.setUint8(o,203),i.setFloat64(o+1,r),9;if(r>=0){if(128>r)return i.setUint8(o,r),1;if(256>r)return i.setUint8(o,204),i.setUint8(o+1,r),2;if(65536>r)return i.setUint8(o,205),i.setUint16(o+1,r),3;if(4294967296>r)return i.setUint8(o,206),i.setUint32(o+1,r),5;throw new Error(\"Number too big 0x\"+r.toString(16))}if(r>=-32)return i.setInt8(o,r),1;if(r>=-128)return i.setUint8(o,208),i.setInt8(o+1,r),2;if(r>=-32768)return i.setUint8(o,209),i.setInt16(o+1,r),3;if(r>=-2147483648)return i.setUint8(o,210),i.setInt32(o+1,r),5;throw new Error(\"Number too small -0x\"+(-r).toString(16).substr(1))}if(null===r)return i.setUint8(o,192),1;if(\"boolean\"===a)return i.setUint8(o,r?195:194),1;if(\"object\"===a){var u,f=0,c=Array.isArray(r);if(c)u=r.length;else{var d=Object.keys(r);u=d.length}var f;if(16>u?(i.setUint8(o,u|(c?144:128)),f=1):65536>u?(i.setUint8(o,c?220:222),i.setUint16(o+1,u),f=3):4294967296>u&&(i.setUint8(o,c?221:223),i.setUint32(o+1,u),f=5),c)for(var l=0;u>l;l++)f+=e(r[l],i,o+f);else for(var l=0;u>l;l++){var g=d[l];f+=e(g,i,o+f),f+=e(r[g],i,o+f)}return f}throw new Error(\"Unknown type \"+a)}function i(r){var t=typeof r;if(\"string\"===t){var e=n(r);if(32>e)return 1+e;if(256>e)return 2+e;if(65536>e)return 3+e;if(4294967296>e)return 5+e}if(r instanceof Uint8Array){var e=r.byteLength;if(256>e)return 2+e;if(65536>e)return 3+e;if(4294967296>e)return 5+e}if(\"number\"===t){if(Math.floor(r)!==r)return 9;if(r>=0){if(128>r)return 1;if(256>r)return 2;if(65536>r)return 3;if(4294967296>r)return 5;throw new Error(\"Number too big 0x\"+r.toString(16))}if(r>=-32)return 1;if(r>=-128)return 2;if(r>=-32768)return 3;if(r>=-2147483648)return 5;throw new Error(\"Number too small -0x\"+r.toString(16).substr(1))}if(\"boolean\"===t||null===r)return 1;if(\"object\"===t){var e,o=0;if(Array.isArray(r)){e=r.length;for(var a=0;e>a;a++)o+=i(r[a])}else{var u=Object.keys(r);e=u.length;for(var a=0;e>a;a++){var s=u[a];o+=i(s)+i(r[s])}}if(16>e)return 1+o;if(65536>e)return 3+o;if(4294967296>e)return 5+o;throw new Error(\"Array or object too long 0x\"+e.toString(16))}throw new Error(\"Unknown type \"+t)}function o(r){var t=new ArrayBuffer(i(r)),n=new DataView(t);return e(r,n,0),new Uint8Array(t)}function a(r,t,n){return t?new r(t.buffer,t.byteOffset,t.byteLength/(n||1)):void 0}function u(r){return a(DataView,r)}function s(r){return a(Uint8Array,r)}function f(r){return a(Int8Array,r)}function c(r){return a(Int32Array,r,4)}function d(r){return a(Float32Array,r,4)}function l(r,t){var n=r.length/2;t||(t=new Int16Array(n));for(var e=0,i=0;n>e;++e,i+=2)t[e]=r[i]<<8^r[i+1]<<0;return t}function g(r,t){var n=r.length;t||(t=new Uint8Array(2*n));for(var e=u(t),i=0;n>i;++i)e.setInt16(2*i,r[i]);return s(t)}function v(r,t){var n=r.length/4;t||(t=new Int32Array(n));for(var e=0,i=0;n>e;++e,i+=4)t[e]=r[i]<<24^r[i+1]<<16^r[i+2]<<8^r[i+3]<<0;return t}function L(r,t){var n=r.length;t||(t=new Uint8Array(4*n));for(var e=u(t),i=0;n>i;++i)e.setInt32(4*i,r[i]);return s(t)}function h(r,t){var n=r.length;t||(t=new Float32Array(n/4));for(var e=u(t),i=u(r),o=0,a=0,s=n/4;s>o;++o,a+=4)e.setFloat32(a,i.getFloat32(a),!0);return t}function y(r,t,n){var e=r.length,i=1/t;n||(n=new Float32Array(e));for(var o=0;e>o;++o)n[o]=r[o]*i;return n}function m(r,t,n){var e=r.length;n||(n=new Int32Array(e));for(var i=0;e>i;++i)n[i]=Math.round(r[i]*t);return n}function p(r,t){var n,e;if(!t){var i=0;for(n=0,e=r.length;e>n;n+=2)i+=r[n+1];t=new r.constructor(i)}var o=0;for(n=0,e=r.length;e>n;n+=2)for(var a=r[n],u=r[n+1],s=0;u>s;++s)t[o]=a,++o;return t}function U(r){if(0===r.length)return new Int32Array;var t,n,e=2;for(t=1,n=r.length;n>t;++t)r[t-1]!==r[t]&&(e+=2);var i=new Int32Array(e),o=0,a=1;for(t=1,n=r.length;n>t;++t)r[t-1]!==r[t]?(i[o]=r[t-1],i[o+1]=a,a=1,o+=2):++a;return i[o]=r[r.length-1],i[o+1]=a,i}function b(r,t){var n=r.length;t||(t=new r.constructor(n)),n&&(t[0]=r[0]);for(var e=1;n>e;++e)t[e]=r[e]+t[e-1];return t}function I(r,t){var n=r.length;t||(t=new r.constructor(n)),t[0]=r[0];for(var e=1;n>e;++e)t[e]=r[e]-r[e-1];return t}function w(r,t){var n,e,i=r instanceof Int8Array?127:32767,o=-i-1,a=r.length;if(!t){var u=0;for(n=0;a>n;++n)r[n]<i&&r[n]>o&&++u;t=new Int32Array(u)}for(n=0,e=0;a>n;){for(var s=0;r[n]===i||r[n]===o;)s+=r[n],++n;s+=r[n],++n,t[e]=s,++e}return t}function C(r,t){var n,e=t?127:32767,i=-e-1,o=r.length,a=0;for(n=0;o>n;++n){var u=r[n];0===u?++a:u>0?(a+=Math.ceil(u/e),u%e===0&&(a+=1)):(a+=Math.ceil(u/i),u%i===0&&(a+=1))}var s=t?new Int8Array(a):new Int16Array(a),f=0;for(n=0;o>n;++n){var u=r[n];if(u>=0)for(;u>=e;)s[f]=e,++f,u-=e;else for(;i>=u;)s[f]=i,++f,u-=i;s[f]=u,++f}return s}function A(r,t){return b(p(r),t)}function x(r){return U(I(r))}function M(r,t,n){return y(p(r,c(n)),t,n)}function F(r,t){return U(m(r,t))}function S(r,t,n){return y(b(r,c(n)),t,n)}function E(r,t,n){return I(m(r,t),n)}function N(r,t,n){return y(w(r,c(n)),t,n)}function O(r,t,n){var e=w(r,c(n));return S(e,t,d(e))}function T(r,t,n){return C(E(r,t),n)}function k(r){var t=u(r),n=t.getInt32(0),e=t.getInt32(4),i=r.subarray(8,12),r=r.subarray(12);return[n,r,e,i]}function j(r,t,n,e){var i=new ArrayBuffer(12+e.byteLength),o=new Uint8Array(i),a=new DataView(i);return a.setInt32(0,r),a.setInt32(4,t),n&&o.set(n,8),o.set(e,12),o}function q(r){var t=r.length,n=s(r);return j(2,t,void 0,n)}function D(r){var t=r.length,n=L(r);return j(4,t,void 0,n)}function P(r,t){var n=r.length/t,e=L([t]),i=s(r);return j(5,n,e,i)}function z(r){var t=r.length,n=L(U(r));return j(6,t,void 0,n)}function B(r){var t=r.length,n=L(x(r));return j(8,t,void 0,n)}function V(r,t){var n=r.length,e=L([t]),i=L(F(r,t));return j(9,n,e,i)}function G(r,t){var n=r.length,e=L([t]),i=g(T(r,t));return j(10,n,e,i)}function R(r){var t={};return rr.forEach(function(n){void 0!==r[n]&&(t[n]=r[n])}),r.bondAtomList&&(t.bondAtomList=D(r.bondAtomList)),r.bondOrderList&&(t.bondOrderList=q(r.bondOrderList)),t.xCoordList=G(r.xCoordList,1e3),t.yCoordList=G(r.yCoordList,1e3),t.zCoordList=G(r.zCoordList,1e3),r.bFactorList&&(t.bFactorList=G(r.bFactorList,100)),r.atomIdList&&(t.atomIdList=B(r.atomIdList)),r.altLocList&&(t.altLocList=z(r.altLocList)),r.occupancyList&&(t.occupancyList=V(r.occupancyList,100)),t.groupIdList=B(r.groupIdList),t.groupTypeList=D(r.groupTypeList),r.secStructList&&(t.secStructList=q(r.secStructList)),r.insCodeList&&(t.insCodeList=z(r.insCodeList)),r.sequenceIndexList&&(t.sequenceIndexList=B(r.sequenceIndexList)),t.chainIdList=P(r.chainIdList,4),r.chainNameList&&(t.chainNameList=P(r.chainNameList,4)),t}function H(r){function t(r){for(var t={},n=0;r>n;n++){var e=o();t[e]=o()}return t}function n(t){var n=r.subarray(a,a+t);return a+=t,n}function e(t){var n=r.subarray(a,a+t);a+=t;var e=65535;if(t>e){for(var i=[],o=0;o<n.length;o+=e)i.push(String.fromCharCode.apply(null,n.subarray(o,o+e)));return i.join(\"\")}return String.fromCharCode.apply(null,n)}function i(r){for(var t=new Array(r),n=0;r>n;n++)t[n]=o();return t}function o(){var o,s,f=r[a];if(0===(128&f))return a++,f;if(128===(240&f))return s=15&f,a++,t(s);if(144===(240&f))return s=15&f,a++,i(s);if(160===(224&f))return s=31&f,a++,e(s);if(224===(224&f))return o=u.getInt8(a),a++,o;switch(f){case 192:return a++,null;case 194:return a++,!1;case 195:return a++,!0;case 196:return s=u.getUint8(a+1),a+=2,n(s);case 197:return s=u.getUint16(a+1),a+=3,n(s);case 198:return s=u.getUint32(a+1),a+=5,n(s);case 202:return o=u.getFloat32(a+1),a+=5,o;case 203:return o=u.getFloat64(a+1),a+=9,o;case 204:return o=r[a+1],a+=2,o;case 205:return o=u.getUint16(a+1),a+=3,o;case 206:return o=u.getUint32(a+1),a+=5,o;case 208:return o=u.getInt8(a+1),a+=2,o;case 209:return o=u.getInt16(a+1),a+=3,o;case 210:return o=u.getInt32(a+1),a+=5,o;case 217:return s=u.getUint8(a+1),a+=2,e(s);case 218:return s=u.getUint16(a+1),a+=3,e(s);case 219:return s=u.getUint32(a+1),a+=5,e(s);case 220:return s=u.getUint16(a+1),a+=3,i(s);case 221:return s=u.getUint32(a+1),a+=5,i(s);case 222:return s=u.getUint16(a+1),a+=3,t(s);case 223:return s=u.getUint32(a+1),a+=5,t(s)}throw new Error(\"Unknown type 0x\"+f.toString(16))}var a=0,u=new DataView(r.buffer);return o()}function W(r,t,n,e){switch(r){case 1:return h(t);case 2:return f(t);case 3:return l(t);case 4:return v(t);case 5:return s(t);case 6:return p(v(t),new Uint8Array(n));case 7:return p(v(t));case 8:return A(v(t));case 9:return M(v(t),v(e)[0]);case 10:return O(l(t),v(e)[0]);case 11:return y(l(t),v(e)[0]);case 12:return N(l(t),v(e)[0]);case 13:return N(f(t),v(e)[0]);case 14:return w(l(t));case 15:return w(f(t))}}function X(r,t){t=t||{};var n=t.ignoreFields,e={};return nr.forEach(function(t){var i=n?-1!==n.indexOf(t):!1,o=r[t];i||void 0===o||(o instanceof Uint8Array?e[t]=W.apply(null,k(o)):e[t]=o)}),e}function J(r){return String.fromCharCode.apply(null,r).replace(/\\0/g,\"\")}function K(r,t,n){n=n||{};var e,i,o,a,u,s,f=n.firstModelOnly,c=t.onModel,d=t.onChain,l=t.onGroup,g=t.onAtom,v=t.onBond,L=0,h=0,y=0,m=0,p=0,U=-1,b=r.chainNameList,I=r.secStructList,w=r.insCodeList,C=r.sequenceIndexList,A=r.atomIdList,x=r.bFactorList,M=r.altLocList,F=r.occupancyList,S=r.bondAtomList,E=r.bondOrderList;for(e=0,i=r.chainsPerModel.length;i>e&&!(f&&L>0);++e){var N=r.chainsPerModel[L];for(c&&c({chainCount:N,modelIndex:L}),o=0;N>o;++o){var O=r.groupsPerChain[h];if(d){var T=J(r.chainIdList.subarray(4*h,4*h+4)),k=null;b&&(k=J(b.subarray(4*h,4*h+4))),d({groupCount:O,chainIndex:h,modelIndex:L,chainId:T,chainName:k})}for(a=0;O>a;++a){var j=r.groupList[r.groupTypeList[y]],q=j.atomNameList.length;if(l){var D=null;I&&(D=I[y]);var P=null;r.insCodeList&&(P=String.fromCharCode(w[y]));var z=null;C&&(z=C[y]),l({atomCount:q,groupIndex:y,chainIndex:h,modelIndex:L,groupId:r.groupIdList[y],groupType:r.groupTypeList[y],groupName:j.groupName,singleLetterCode:j.singleLetterCode,chemCompType:j.chemCompType,secStruct:D,insCode:P,sequenceIndex:z})}for(u=0;q>u;++u){if(g){var B=null;A&&(B=A[m]);var V=null;x&&(V=x[m]);var G=null;M&&(G=String.fromCharCode(M[m]));var R=null;F&&(R=F[m]),g({atomIndex:m,groupIndex:y,chainIndex:h,modelIndex:L,atomId:B,element:j.elementList[u],atomName:j.atomNameList[u],formalCharge:j.formalChargeList[u],xCoord:r.xCoordList[m],yCoord:r.yCoordList[m],zCoord:r.zCoordList[m],bFactor:V,altLoc:G,occupancy:R})}m+=1}if(v){var H=j.bondAtomList;for(u=0,s=j.bondOrderList.length;s>u;++u)v({atomIndex1:m-q+H[2*u],atomIndex2:m-q+H[2*u+1],bondOrder:j.bondOrderList[u]})}y+=1}h+=1}if(p=U+1,U=m-1,v&&S)for(u=0,s=S.length;s>u;u+=2){var W=S[u],X=S[u+1];(W>=p&&U>=W||X>=p&&U>=X)&&v({atomIndex1:W,atomIndex2:X,bondOrder:E?E[u/2]:null})}L+=1}}function Q(r){return o(R(r))}function Y(r,t){r instanceof ArrayBuffer&&(r=new Uint8Array(r));var n;return n=r instanceof Uint8Array?H(r):r,X(n,t)}function Z(r,t,n,e){function i(){try{var r=Y(o.response);n(r)}catch(t){e(t)}}var o=new XMLHttpRequest;o.addEventListener(\"load\",i,!0),o.addEventListener(\"error\",e,!0),o.responseType=\"arraybuffer\",o.open(\"GET\",t+r.toUpperCase()),o.send()}function $(r,t,n){Z(r,or,t,n)}function _(r,t,n){Z(r,ar,t,n)}var rr=[\"mmtfVersion\",\"mmtfProducer\",\"unitCell\",\"spaceGroup\",\"structureId\",\"title\",\"depositionDate\",\"releaseDate\",\"experimentalMethods\",\"resolution\",\"rFree\",\"rWork\",\"bioAssemblyList\",\"ncsOperatorList\",\"entityList\",\"groupList\",\"numBonds\",\"numAtoms\",\"numGroups\",\"numChains\",\"numModels\",\"groupsPerChain\",\"chainsPerModel\"],tr=[\"xCoordList\",\"yCoordList\",\"zCoordList\",\"groupIdList\",\"groupTypeList\",\"chainIdList\",\"bFactorList\",\"atomIdList\",\"altLocList\",\"occupancyList\",\"secStructList\",\"insCodeList\",\"sequenceIndexList\",\"chainNameList\",\"bondAtomList\",\"bondOrderList\"],nr=rr.concat(tr),er=\"v1.0.1\",ir=\"//mmtf.rcsb.org/v1.0/\",or=ir+\"full/\",ar=ir+\"reduced/\";r.encode=Q,r.decode=Y,r.traverse=K,r.fetch=$,r.fetchReduced=_,r.version=er,r.fetchUrl=or,r.fetchReducedUrl=ar,r.encodeMsgpack=o,r.encodeMmtf=R,r.decodeMsgpack=H,r.decodeMmtf=X});","\n/*! pako 2.1.0 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Tracev((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Tracev((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) => {\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    code = (code + bl_count[bits - 1]) << 1;\n    next_code[bits] = code;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.sym_next = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) => {\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) => {\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let sx = 0;         /* running index in sym_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.sym_next !== 0) {\n    do {\n      dist = s.pending_buf[s.sym_buf + sx++] & 0xff;\n      dist += (s.pending_buf[s.sym_buf + sx++] & 0xff) << 8;\n      lc = s.pending_buf[s.sym_buf + sx++];\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and sym_buf is ok: */\n      //Assert(s->pending < s->lit_bufsize + sx, \"pendingBuf overflow\");\n\n    } while (sx < s.sym_next);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) => {\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) => {\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) => {\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"block list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"allow list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* block_mask is the bit mask of block-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let block_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"block-listed\") bytes. */\n  for (n = 0; n <= 31; n++, block_mask >>>= 1) {\n    if ((block_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"allow-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"block-listed\" or \"allow-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  bi_windup(s);        /* align on byte boundary */\n  put_short(s, stored_len);\n  put_short(s, ~stored_len);\n  if (stored_len) {\n    s.pending_buf.set(s.window.subarray(buf, buf + stored_len), s.pending);\n  }\n  s.pending += stored_len;\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and write out the encoded block.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) => {\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->sym_next / 3));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) => {\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist;\n  s.pending_buf[s.sym_buf + s.sym_next++] = dist >> 8;\n  s.pending_buf[s.sym_buf + s.sym_next++] = lc;\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n  return (s.sym_next === s.sym_end);\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE    =  42;    /* zlib header -> BUSY_STATE */\n//#ifdef GZIP\nconst GZIP_STATE    =  57;    /* gzip header -> BUSY_STATE | EXTRA_STATE */\n//#endif\nconst EXTRA_STATE   =  69;    /* gzip extra block -> NAME_STATE */\nconst NAME_STATE    =  73;    /* gzip file name -> COMMENT_STATE */\nconst COMMENT_STATE =  91;    /* gzip comment -> HCRC_STATE */\nconst HCRC_STATE    = 103;    /* gzip header CRC -> BUSY_STATE */\nconst BUSY_STATE    = 113;    /* deflate -> FINISH_STATE */\nconst FINISH_STATE  = 666;    /* stream complete */\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) * 2) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n/* ===========================================================================\n * Slide the hash table when sliding the window down (could be avoided with 32\n * bit values at the expense of memory usage). We slide even when level == 0 to\n * keep the hash table consistent if we switch back to level > 0 later.\n */\nconst slide_hash = (s) => {\n  let n, m;\n  let p;\n  let wsize = s.w_size;\n\n  n = s.hash_size;\n  p = n;\n  do {\n    m = s.head[--p];\n    s.head[p] = (m >= wsize ? m - wsize : 0);\n  } while (--n);\n  n = wsize;\n//#ifndef FASTEST\n  p = n;\n  do {\n    m = s.prev[--p];\n    s.prev[p] = (m >= wsize ? m - wsize : 0);\n    /* If n is not on any hash chain, prev[n] is garbage but\n     * its value will never be used.\n     */\n  } while (--n);\n//#endif\n};\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output, except for\n * some deflate_stored() output, goes through this function so some\n * applications may wish to modify it to avoid allocating a large\n * strm->next_out buffer and copying into it. (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out  += len;\n  s.pending_out  += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending      -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let n, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size - more), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n      if (s.insert > s.strstart) {\n        s.insert = s.strstart;\n      }\n      slide_hash(s);\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n *\n * In case deflateParams() is used to later switch to a non-zero compression\n * level, s->matches (otherwise unused when storing) keeps track of the number\n * of hash table slides to perform. If s->matches is 1, then one hash table\n * slide will be done when switching. If s->matches is 2, the maximum value\n * allowed here, then the hash table will be cleared, since two or more slides\n * is the same as a clear.\n *\n * deflate_stored() is written to minimize the number of times an input byte is\n * copied. It is most efficient with large input and output buffers, which\n * maximizes the opportunites to have a single copy from next_in to next_out.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Smallest worthy block size when not flushing or finishing. By default\n   * this is 32K. This can be as small as 507 bytes for memLevel == 1. For\n   * large input and output buffers, the stored block size will be larger.\n   */\n  let min_block = s.pending_buf_size - 5 > s.w_size ? s.w_size : s.pending_buf_size - 5;\n\n  /* Copy as many min_block or larger stored blocks directly to next_out as\n   * possible. If flushing, copy the remaining available input to next_out as\n   * stored blocks, if there is enough space.\n   */\n  let len, left, have, last = 0;\n  let used = s.strm.avail_in;\n  do {\n    /* Set len to the maximum size block that we can copy directly with the\n     * available input data and output space. Set left to how much of that\n     * would be copied from what's left in the window.\n     */\n    len = 65535/* MAX_STORED */;     /* maximum deflate stored block length */\n    have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    if (s.strm.avail_out < have) {         /* need room for header */\n      break;\n    }\n      /* maximum stored block length that will fit in avail_out: */\n    have = s.strm.avail_out - have;\n    left = s.strstart - s.block_start;  /* bytes left in window */\n    if (len > left + s.strm.avail_in) {\n      len = left + s.strm.avail_in;   /* limit len to the input */\n    }\n    if (len > have) {\n      len = have;             /* limit len to the output */\n    }\n\n    /* If the stored block would be less than min_block in length, or if\n     * unable to copy all of the available input when flushing, then try\n     * copying to the window and the pending buffer instead. Also don't\n     * write an empty block when flushing -- deflate() does that.\n     */\n    if (len < min_block && ((len === 0 && flush !== Z_FINISH$3) ||\n                        flush === Z_NO_FLUSH$2 ||\n                        len !== left + s.strm.avail_in)) {\n      break;\n    }\n\n    /* Make a dummy stored block in pending to get the header bytes,\n     * including any pending bits. This also updates the debugging counts.\n     */\n    last = flush === Z_FINISH$3 && len === left + s.strm.avail_in ? 1 : 0;\n    _tr_stored_block(s, 0, 0, last);\n\n    /* Replace the lengths in the dummy stored block with len. */\n    s.pending_buf[s.pending - 4] = len;\n    s.pending_buf[s.pending - 3] = len >> 8;\n    s.pending_buf[s.pending - 2] = ~len;\n    s.pending_buf[s.pending - 1] = ~len >> 8;\n\n    /* Write the stored block header bytes. */\n    flush_pending(s.strm);\n\n//#ifdef ZLIB_DEBUG\n//    /* Update debugging counts for the data about to be copied. */\n//    s->compressed_len += len << 3;\n//    s->bits_sent += len << 3;\n//#endif\n\n    /* Copy uncompressed bytes from the window to next_out. */\n    if (left) {\n      if (left > len) {\n        left = len;\n      }\n      //zmemcpy(s->strm->next_out, s->window + s->block_start, left);\n      s.strm.output.set(s.window.subarray(s.block_start, s.block_start + left), s.strm.next_out);\n      s.strm.next_out += left;\n      s.strm.avail_out -= left;\n      s.strm.total_out += left;\n      s.block_start += left;\n      len -= left;\n    }\n\n    /* Copy uncompressed bytes directly from next_in to next_out, updating\n     * the check value.\n     */\n    if (len) {\n      read_buf(s.strm, s.strm.output, s.strm.next_out, len);\n      s.strm.next_out += len;\n      s.strm.avail_out -= len;\n      s.strm.total_out += len;\n    }\n  } while (last === 0);\n\n  /* Update the sliding window with the last s->w_size bytes of the copied\n   * data, or append all of the copied data to the existing window if less\n   * than s->w_size bytes were copied. Also update the number of bytes to\n   * insert in the hash tables, in the event that deflateParams() switches to\n   * a non-zero compression level.\n   */\n  used -= s.strm.avail_in;    /* number of input bytes directly copied */\n  if (used) {\n    /* If any input was used, then no unused input remains in the window,\n     * therefore s->block_start == s->strstart.\n     */\n    if (used >= s.w_size) {  /* supplant the previous history */\n      s.matches = 2;     /* clear hash */\n      //zmemcpy(s->window, s->strm->next_in - s->w_size, s->w_size);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - s.w_size, s.strm.next_in), 0);\n      s.strstart = s.w_size;\n      s.insert = s.strstart;\n    }\n    else {\n      if (s.window_size - s.strstart <= used) {\n        /* Slide the window down. */\n        s.strstart -= s.w_size;\n        //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n        s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n        if (s.matches < 2) {\n          s.matches++;   /* add a pending slide_hash() */\n        }\n        if (s.insert > s.strstart) {\n          s.insert = s.strstart;\n        }\n      }\n      //zmemcpy(s->window + s->strstart, s->strm->next_in - used, used);\n      s.window.set(s.strm.input.subarray(s.strm.next_in - used, s.strm.next_in), s.strstart);\n      s.strstart += used;\n      s.insert += used > s.w_size - s.insert ? s.w_size - s.insert : used;\n    }\n    s.block_start = s.strstart;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* If the last block was written to next_out, then done. */\n  if (last) {\n    return BS_FINISH_DONE;\n  }\n\n  /* If flushing and all input has been consumed, then done. */\n  if (flush !== Z_NO_FLUSH$2 && flush !== Z_FINISH$3 &&\n    s.strm.avail_in === 0 && s.strstart === s.block_start) {\n    return BS_BLOCK_DONE;\n  }\n\n  /* Fill the window with any remaining input. */\n  have = s.window_size - s.strstart;\n  if (s.strm.avail_in > have && s.block_start >= s.w_size) {\n    /* Slide the window down. */\n    s.block_start -= s.w_size;\n    s.strstart -= s.w_size;\n    //zmemcpy(s->window, s->window + s->w_size, s->strstart);\n    s.window.set(s.window.subarray(s.w_size, s.w_size + s.strstart), 0);\n    if (s.matches < 2) {\n      s.matches++;       /* add a pending slide_hash() */\n    }\n    have += s.w_size;      /* more space now */\n    if (s.insert > s.strstart) {\n      s.insert = s.strstart;\n    }\n  }\n  if (have > s.strm.avail_in) {\n    have = s.strm.avail_in;\n  }\n  if (have) {\n    read_buf(s.strm, s.window, s.strstart, have);\n    s.strstart += have;\n    s.insert += have > s.w_size - s.insert ? s.w_size - s.insert : have;\n  }\n  if (s.high_water < s.strstart) {\n    s.high_water = s.strstart;\n  }\n\n  /* There was not enough avail_out to write a complete worthy or flushed\n   * stored block to next_out. Write a stored block to pending instead, if we\n   * have enough input for a worthy block, or if flushing and there is enough\n   * room for the remaining input as a stored block in the pending buffer.\n   */\n  have = (s.bi_valid + 42) >> 3;     /* number of header bytes */\n    /* maximum stored block length that will fit in pending: */\n  have = s.pending_buf_size - have > 65535/* MAX_STORED */ ? 65535/* MAX_STORED */ : s.pending_buf_size - have;\n  min_block = have > s.w_size ? s.w_size : have;\n  left = s.strstart - s.block_start;\n  if (left >= min_block ||\n     ((left || flush === Z_FINISH$3) && flush !== Z_NO_FLUSH$2 &&\n     s.strm.avail_in === 0 && left <= have)) {\n    len = left > have ? have : left;\n    last = flush === Z_FINISH$3 && s.strm.avail_in === 0 &&\n         len === left ? 1 : 0;\n    _tr_stored_block(s, s.block_start, len, last);\n    s.block_start += len;\n    flush_pending(s.strm);\n  }\n\n  /* We've done all we can with the available input and output. */\n  return last ? BS_FINISH_STARTED : BS_NEED_MORE;\n};\n\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.sym_next) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.sym_buf = 0;        /* buffer for distances and literals/lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.sym_next = 0;      /* running index in sym_buf */\n  this.sym_end = 0;       /* symbol table full when sym_next reaches this */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\n/* =========================================================================\n * Check for a valid deflate stream state. Return 0 if ok, 1 if not.\n */\nconst deflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const s = strm.state;\n  if (!s || s.strm !== strm || (s.status !== INIT_STATE &&\n//#ifdef GZIP\n                                s.status !== GZIP_STATE &&\n//#endif\n                                s.status !== EXTRA_STATE &&\n                                s.status !== NAME_STATE &&\n                                s.status !== COMMENT_STATE &&\n                                s.status !== HCRC_STATE &&\n                                s.status !== BUSY_STATE &&\n                                s.status !== FINISH_STATE)) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status =\n//#ifdef GZIP\n    s.wrap === 2 ? GZIP_STATE :\n//#endif\n    s.wrap ? INIT_STATE : BUSY_STATE;\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = -2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (deflateStateCheck(strm) || strm.state.wrap !== 2) {\n    return Z_STREAM_ERROR$2;\n  }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED || (windowBits === 8 && wrap !== 1)) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n  s.status = INIT_STATE;     /* to pass state test in deflateReset() */\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  /* We overlay pending_buf and sym_buf. This works since the average size\n   * for length/distance pairs over any compressed block is assured to be 31\n   * bits or less.\n   *\n   * Analysis: The longest fixed codes are a length code of 8 bits plus 5\n   * extra bits, for lengths 131 to 257. The longest fixed distance codes are\n   * 5 bits plus 13 extra bits, for distances 16385 to 32768. The longest\n   * possible fixed-codes length/distance pair is then 31 bits total.\n   *\n   * sym_buf starts one-fourth of the way into pending_buf. So there are\n   * three bytes in sym_buf for every four bytes in pending_buf. Each symbol\n   * in sym_buf is three bytes -- two for the distance and one for the\n   * literal/length. As each symbol is consumed, the pointer to the next\n   * sym_buf value to read moves forward three bytes. From that symbol, up to\n   * 31 bits are written to pending_buf. The closest the written pending_buf\n   * bits gets to the next sym_buf symbol to read is just before the last\n   * code is written. At that time, 31*(n-2) bits have been written, just\n   * after 24*(n-2) bits have been consumed from sym_buf. sym_buf starts at\n   * 8*n bits into pending_buf. (Note that the symbol buffer fills when n-1\n   * symbols are written.) The closest the writing gets to what is unread is\n   * then n+14 bits. Here n is lit_bufsize, which is 16384 by default, and\n   * can range from 128 to 32768.\n   *\n   * Therefore, at a minimum, there are 142 bits of space between what is\n   * written and what is read in the overlain buffers, so the symbols cannot\n   * be overwritten by the compressed data. That space is actually 139 bits,\n   * due to the three-bit fixed-code block header.\n   *\n   * That covers the case where either Z_FIXED is specified, forcing fixed\n   * codes, or when the use of fixed codes is chosen, because that choice\n   * results in a smaller compressed block than dynamic codes. That latter\n   * condition then assures that the above analysis also covers all dynamic\n   * blocks. A dynamic-code block will only be chosen to be emitted if it has\n   * fewer bits than a fixed-code block would for the same set of symbols.\n   * Therefore its average symbol length is assured to be less than 31. So\n   * the compressed data for a dynamic block also cannot overwrite the\n   * symbols from which it is being constructed.\n   */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->sym_buf = s->pending_buf + s->lit_bufsize;\n  s.sym_buf = s.lit_bufsize;\n\n  //s->sym_end = (s->lit_bufsize - 1) * 3;\n  s.sym_end = (s.lit_bufsize - 1) * 3;\n  /* We avoid equality with lit_bufsize*3 because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\n/* ========================================================================= */\nconst deflate$2 = (strm, flush) => {\n\n  if (deflateStateCheck(strm) || flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (strm.avail_in !== 0 && !strm.input) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Write the header */\n  if (s.status === INIT_STATE && s.wrap === 0) {\n    s.status = BUSY_STATE;\n  }\n  if (s.status === INIT_STATE) {\n    /* zlib header */\n    let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n    let level_flags = -1;\n\n    if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n      level_flags = 0;\n    } else if (s.level < 6) {\n      level_flags = 1;\n    } else if (s.level === 6) {\n      level_flags = 2;\n    } else {\n      level_flags = 3;\n    }\n    header |= (level_flags << 6);\n    if (s.strstart !== 0) { header |= PRESET_DICT; }\n    header += 31 - (header % 31);\n\n    putShortMSB(s, header);\n\n    /* Save the adler32 of the preset dictionary: */\n    if (s.strstart !== 0) {\n      putShortMSB(s, strm.adler >>> 16);\n      putShortMSB(s, strm.adler & 0xffff);\n    }\n    strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#ifdef GZIP\n  if (s.status === GZIP_STATE) {\n    /* gzip header */\n    strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n    put_byte(s, 31);\n    put_byte(s, 139);\n    put_byte(s, 8);\n    if (!s.gzhead) { // s->gzhead == Z_NULL\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, 0);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, OS_CODE);\n      s.status = BUSY_STATE;\n\n      /* Compression must start with an empty pending buffer */\n      flush_pending(strm);\n      if (s.pending !== 0) {\n        s.last_flush = -1;\n        return Z_OK$3;\n      }\n    }\n    else {\n      put_byte(s, (s.gzhead.text ? 1 : 0) +\n                  (s.gzhead.hcrc ? 2 : 0) +\n                  (!s.gzhead.extra ? 0 : 4) +\n                  (!s.gzhead.name ? 0 : 8) +\n                  (!s.gzhead.comment ? 0 : 16)\n      );\n      put_byte(s, s.gzhead.time & 0xff);\n      put_byte(s, (s.gzhead.time >> 8) & 0xff);\n      put_byte(s, (s.gzhead.time >> 16) & 0xff);\n      put_byte(s, (s.gzhead.time >> 24) & 0xff);\n      put_byte(s, s.level === 9 ? 2 :\n                  (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                   4 : 0));\n      put_byte(s, s.gzhead.os & 0xff);\n      if (s.gzhead.extra && s.gzhead.extra.length) {\n        put_byte(s, s.gzhead.extra.length & 0xff);\n        put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n      }\n      if (s.gzhead.hcrc) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n      }\n      s.gzindex = 0;\n      s.status = EXTRA_STATE;\n    }\n  }\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let left = (s.gzhead.extra.length & 0xffff) - s.gzindex;\n      while (s.pending + left > s.pending_buf_size) {\n        let copy = s.pending_buf_size - s.pending;\n        // zmemcpy(s.pending_buf + s.pending,\n        //    s.gzhead.extra + s.gzindex, copy);\n        s.pending_buf.set(s.gzhead.extra.subarray(s.gzindex, s.gzindex + copy), s.pending);\n        s.pending = s.pending_buf_size;\n        //--- HCRC_UPDATE(beg) ---//\n        if (s.gzhead.hcrc && s.pending > beg) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n        }\n        //---//\n        s.gzindex += copy;\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n        beg = 0;\n        left -= copy;\n      }\n      // JS specific: s.gzhead.extra may be TypedArray or Array for backward compatibility\n      //              TypedArray.slice and TypedArray.from don't exist in IE10-IE11\n      let gzhead_extra = new Uint8Array(s.gzhead.extra);\n      // zmemcpy(s->pending_buf + s->pending,\n      //     s->gzhead->extra + s->gzindex, left);\n      s.pending_buf.set(gzhead_extra.subarray(s.gzindex, s.gzindex + left), s.pending);\n      s.pending += left;\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = NAME_STATE;\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n      s.gzindex = 0;\n    }\n    s.status = COMMENT_STATE;\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      let beg = s.pending;   /* start of bytes to update crc */\n      let val;\n      do {\n        if (s.pending === s.pending_buf_size) {\n          //--- HCRC_UPDATE(beg) ---//\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          //---//\n          flush_pending(strm);\n          if (s.pending !== 0) {\n            s.last_flush = -1;\n            return Z_OK$3;\n          }\n          beg = 0;\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n      //--- HCRC_UPDATE(beg) ---//\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      //---//\n    }\n    s.status = HCRC_STATE;\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n        if (s.pending !== 0) {\n          s.last_flush = -1;\n          return Z_OK$3;\n        }\n      }\n      put_byte(s, strm.adler & 0xff);\n      put_byte(s, (strm.adler >> 8) & 0xff);\n      strm.adler = 0; //crc32(0L, Z_NULL, 0);\n    }\n    s.status = BUSY_STATE;\n\n    /* Compression must start with an empty pending buffer */\n    flush_pending(strm);\n    if (s.pending !== 0) {\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n  }\n//#endif\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = s.level === 0 ? deflate_stored(s, flush) :\n                 s.strategy === Z_HUFFMAN_ONLY ? deflate_huff(s, flush) :\n                 s.strategy === Z_RLE ? deflate_rle(s, flush) :\n                 configuration_table[s.level].func(s, flush);\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (deflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateGetDictionary = deflateGetDictionary;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|ArrayBuffer|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 16209;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 16191;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n//  let shoextra;    /* extra bits table to use */\n  let match;                  /* use base and extra for symbol >= match */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    match = 20;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    extra = lext;\n    match = 257;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    match = 0;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] + 1 < match) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] >= match) {\n      here_op = extra[work[sym] - match];\n      here_val = base[work[sym] - match];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 16180;       /* i: waiting for magic header */\nconst    FLAGS = 16181;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 16182;       /* i: waiting for modification time (gzip) */\nconst    OS = 16183;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 16184;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 16185;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 16186;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 16187;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 16188;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 16189;    /* i: waiting for dictionary check value */\nconst    DICT = 16190;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 16191;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 16192;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 16193;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 16194;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16195;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 16196;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 16197;   /* i: waiting for code length code lengths */\nconst        CODELENS = 16198;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 16199;      /* i: same as LEN below, but only first time in */\nconst            LEN = 16200;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 16201;    /* i: waiting for length extra bits */\nconst            DIST = 16202;      /* i: waiting for distance code */\nconst            DISTEXT = 16203;   /* i: waiting for distance extra bits */\nconst            MATCH = 16204;     /* o: waiting for output space to copy string */\nconst            LIT = 16205;       /* o: waiting for output space to write literal */\nconst    CHECK = 16206;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 16207;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 16208;      /* finished check, done -- remain here until reset */\nconst    BAD = 16209;       /* got a data error -- remain here until reset */\nconst    MEM = 16210;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 16211;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.strm = null;           /* pointer back to this zlib stream */\n  this.mode = 0;              /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip,\n                                 bit 2 true to validate check value */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib), or\n                                 -1 if raw or no header yet */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateStateCheck = (strm) => {\n\n  if (!strm) {\n    return 1;\n  }\n  const state = strm.state;\n  if (!state || state.strm !== strm ||\n    state.mode < HEAD || state.mode > SYNC) {\n    return 1;\n  }\n  return 0;\n};\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.flags = -1;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 5;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.strm = strm;\n  state.window = null/*Z_NULL*/;\n  state.mode = HEAD;     /* to pass state test in inflateReset2() */\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (inflateStateCheck(strm) || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          if (state.wbits === 0) {\n            state.wbits = 15;\n          }\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        if (len > 15 || len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        state.flags = 0;               /* indicate zlib header */\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if ((state.flags & 0x0200) && (state.wrap & 4)) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if ((state.flags & 0x0200) && (state.wrap & 4)) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if ((state.flags & 0x0200) && (state.wrap & 4)) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if ((state.wrap & 4) && _out) {\n            strm.adler = state.check =\n                /*UPDATE_CHECK(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.wrap & 4) && (state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if ((state.wrap & 4) && hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if ((state.wrap & 4) && _out) {\n    strm.adler = state.check = /*UPDATE_CHECK(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (inflateStateCheck(strm)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (inflateStateCheck(strm)) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCodesUsed = inflateCodesUsed;\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\nmodule.exports.inflateValidate = inflateValidate;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array|ArrayBuffer): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n__webpack_require__(\"./src/index.ts\");\n__webpack_require__(\"./src/SurfaceWorker.js\");\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/exporter.js\");\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;\nfunction Lg(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction Mg(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function Ng(a){var b=a._init;return b(a._payload)}\nfunction Og(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=Pg(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=Qg(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&Ng(f)===b.type))return d=e(b,c.props),d.ref=Lg(a,b,c),d.return=a,d;d=Rg(c.type,c.key,c.props,null,a.mode,d);d.ref=Lg(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=Sg(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Tg(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=Qg(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=Rg(b.type,b.key,b.props,null,a.mode,c),\nc.ref=Lg(a,null,b),c.return=a,c;case wa:return b=Sg(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Tg(b,a.mode,c,null),b.return=a,b;Mg(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);Mg(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);Mg(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&Ng(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=Lg(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Tg(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=Rg(f.type,f.key,f.props,null,a.mode,h),h.ref=Lg(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=Sg(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);Mg(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=Qg(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Ug=Og(!0),Vg=Og(!1),Wg=Uf(null),Xg=null,Yg=null,Zg=null;function $g(){Zg=Yg=Xg=null}function ah(a){var b=Wg.current;E(Wg);a._currentValue=b}function bh(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}\nfunction ch(a,b){Xg=a;Zg=Yg=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(dh=!0),a.firstContext=null)}function eh(a){var b=a._currentValue;if(Zg!==a)if(a={context:a,memoizedValue:b,next:null},null===Yg){if(null===Xg)throw Error(p(308));Yg=a;Xg.dependencies={lanes:0,firstContext:a}}else Yg=Yg.next=a;return b}var fh=null;function gh(a){null===fh?fh=[a]:fh.push(a)}\nfunction hh(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,gh(b)):(c.next=e.next,e.next=c);b.interleaved=c;return ih(a,d)}function ih(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var jh=!1;function kh(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction lh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function mh(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction nh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return ih(a,c)}e=d.interleaved;null===e?(b.next=b,gh(d)):(b.next=e.next,e.next=b);d.interleaved=b;return ih(a,c)}function oh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction ph(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction qh(a,b,c,d){var e=a.updateQueue;jh=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:jh=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);rh|=g;a.lanes=g;a.memoizedState=q}}\nfunction sh(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var th={},uh=Uf(th),vh=Uf(th),wh=Uf(th);function xh(a){if(a===th)throw Error(p(174));return a}\nfunction yh(a,b){G(wh,b);G(vh,a);G(uh,th);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(uh);G(uh,b)}function zh(){E(uh);E(vh);E(wh)}function Ah(a){xh(wh.current);var b=xh(uh.current);var c=lb(b,a.type);b!==c&&(G(vh,a),G(uh,c))}function Bh(a){vh.current===a&&(E(uh),E(vh))}var L=Uf(0);\nfunction Ch(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Dh=[];\nfunction Eh(){for(var a=0;a<Dh.length;a++)Dh[a]._workInProgressVersionPrimary=null;Dh.length=0}var Fh=ua.ReactCurrentDispatcher,Gh=ua.ReactCurrentBatchConfig,Hh=0,M=null,N=null,O=null,Ih=!1,Jh=!1,Kh=0,Lh=0;function P(){throw Error(p(321));}function Mh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Nh(a,b,c,d,e,f){Hh=f;M=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Fh.current=null===a||null===a.memoizedState?Oh:Ph;a=c(d,e);if(Jh){f=0;do{Jh=!1;Kh=0;if(25<=f)throw Error(p(301));f+=1;O=N=null;b.updateQueue=null;Fh.current=Qh;a=c(d,e)}while(Jh)}Fh.current=Rh;b=null!==N&&null!==N.next;Hh=0;O=N=M=null;Ih=!1;if(b)throw Error(p(300));return a}function Sh(){var a=0!==Kh;Kh=0;return a}\nfunction Th(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===O?M.memoizedState=O=a:O=O.next=a;return O}function Uh(){if(null===N){var a=M.alternate;a=null!==a?a.memoizedState:null}else a=N.next;var b=null===O?M.memoizedState:O.next;if(null!==b)O=b,N=a;else{if(null===a)throw Error(p(310));N=a;a={memoizedState:N.memoizedState,baseState:N.baseState,baseQueue:N.baseQueue,queue:N.queue,next:null};null===O?M.memoizedState=O=a:O=O.next=a}return O}\nfunction Vh(a,b){return\"function\"===typeof b?b(a):b}\nfunction Wh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=N,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Hh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;M.lanes|=m;rh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(dh=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,M.lanes|=f,rh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction Xh(a){var b=Uh(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(dh=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function Yh(){}\nfunction Zh(a,b){var c=M,d=Uh(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,dh=!0);d=d.queue;$h(ai.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==O&&O.memoizedState.tag&1){c.flags|=2048;bi(9,ci.bind(null,c,d,e,b),void 0,null);if(null===Q)throw Error(p(349));0!==(Hh&30)||di(c,b,e)}return e}function di(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction ci(a,b,c,d){b.value=c;b.getSnapshot=d;ei(b)&&fi(a)}function ai(a,b,c){return c(function(){ei(b)&&fi(a)})}function ei(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function fi(a){var b=ih(a,1);null!==b&&gi(b,a,1,-1)}\nfunction hi(a){var b=Th();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Vh,lastRenderedState:a};b.queue=a;a=a.dispatch=ii.bind(null,M,a);return[b.memoizedState,a]}\nfunction bi(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=M.updateQueue;null===b?(b={lastEffect:null,stores:null},M.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function ji(){return Uh().memoizedState}function ki(a,b,c,d){var e=Th();M.flags|=a;e.memoizedState=bi(1|b,c,void 0,void 0===d?null:d)}\nfunction li(a,b,c,d){var e=Uh();d=void 0===d?null:d;var f=void 0;if(null!==N){var g=N.memoizedState;f=g.destroy;if(null!==d&&Mh(d,g.deps)){e.memoizedState=bi(b,c,f,d);return}}M.flags|=a;e.memoizedState=bi(1|b,c,f,d)}function mi(a,b){return ki(8390656,8,a,b)}function $h(a,b){return li(2048,8,a,b)}function ni(a,b){return li(4,2,a,b)}function oi(a,b){return li(4,4,a,b)}\nfunction pi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function qi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return li(4,4,pi.bind(null,b,a),c)}function ri(){}function si(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction ti(a,b){var c=Uh();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Mh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function ui(a,b,c){if(0===(Hh&21))return a.baseState&&(a.baseState=!1,dh=!0),a.memoizedState=c;He(c,b)||(c=yc(),M.lanes|=c,rh|=c,a.baseState=!0);return b}function vi(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Gh.transition;Gh.transition={};try{a(!1),b()}finally{C=c,Gh.transition=d}}function wi(){return Uh().memoizedState}\nfunction xi(a,b,c){var d=yi(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,c);else if(c=hh(a,b,c,d),null!==c){var e=R();gi(c,a,d,e);Bi(c,b,d)}}\nfunction ii(a,b,c){var d=yi(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(zi(a))Ai(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,gh(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=hh(a,b,e,d);null!==c&&(e=R(),gi(c,a,d,e),Bi(c,b,d))}}\nfunction zi(a){var b=a.alternate;return a===M||null!==b&&b===M}function Ai(a,b){Jh=Ih=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Bi(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar Rh={readContext:eh,useCallback:P,useContext:P,useEffect:P,useImperativeHandle:P,useInsertionEffect:P,useLayoutEffect:P,useMemo:P,useReducer:P,useRef:P,useState:P,useDebugValue:P,useDeferredValue:P,useTransition:P,useMutableSource:P,useSyncExternalStore:P,useId:P,unstable_isNewReconciler:!1},Oh={readContext:eh,useCallback:function(a,b){Th().memoizedState=[a,void 0===b?null:b];return a},useContext:eh,useEffect:mi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ki(4194308,\n4,pi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ki(4194308,4,a,b)},useInsertionEffect:function(a,b){return ki(4,2,a,b)},useMemo:function(a,b){var c=Th();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=Th();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=xi.bind(null,M,a);return[d.memoizedState,a]},useRef:function(a){var b=\nTh();a={current:a};return b.memoizedState=a},useState:hi,useDebugValue:ri,useDeferredValue:function(a){return Th().memoizedState=a},useTransition:function(){var a=hi(!1),b=a[0];a=vi.bind(null,a[1]);Th().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=M,e=Th();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===Q)throw Error(p(349));0!==(Hh&30)||di(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;mi(ai.bind(null,d,\nf,a),[a]);d.flags|=2048;bi(9,ci.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=Th(),b=Q.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Kh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Lh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Ph={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Wh,useRef:ji,useState:function(){return Wh(Vh)},\nuseDebugValue:ri,useDeferredValue:function(a){var b=Uh();return ui(b,N.memoizedState,a)},useTransition:function(){var a=Wh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1},Qh={readContext:eh,useCallback:si,useContext:eh,useEffect:$h,useImperativeHandle:qi,useInsertionEffect:ni,useLayoutEffect:oi,useMemo:ti,useReducer:Xh,useRef:ji,useState:function(){return Xh(Vh)},useDebugValue:ri,useDeferredValue:function(a){var b=Uh();return null===\nN?b.memoizedState=a:ui(b,N.memoizedState,a)},useTransition:function(){var a=Xh(Vh)[0],b=Uh().memoizedState;return[a,b]},useMutableSource:Yh,useSyncExternalStore:Zh,useId:wi,unstable_isNewReconciler:!1};function Ci(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}function Di(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar Ei={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=R(),e=yi(a),f=mh(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=nh(a,f,e);null!==b&&(gi(b,a,e,d),oh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=R(),d=\nyi(a),e=mh(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=nh(a,e,d);null!==b&&(gi(b,a,d,c),oh(b,a,d))}};function Fi(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction Gi(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=eh(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=Ei;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction Hi(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&Ei.enqueueReplaceState(b,b.state,null)}\nfunction Ii(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs={};kh(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=eh(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(Di(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&Ei.enqueueReplaceState(e,e.state,null),qh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}function Ji(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}\nfunction Ki(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}function Li(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Mi=\"function\"===typeof WeakMap?WeakMap:Map;function Ni(a,b,c){c=mh(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Oi||(Oi=!0,Pi=d);Li(a,b)};return c}\nfunction Qi(a,b,c){c=mh(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Li(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Li(a,b);\"function\"!==typeof d&&(null===Ri?Ri=new Set([this]):Ri.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Si(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Mi;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ti.bind(null,a,b,c),b.then(a,a))}function Ui(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Vi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=mh(-1,1),b.tag=2,nh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Wi=ua.ReactCurrentOwner,dh=!1;function Xi(a,b,c,d){b.child=null===a?Vg(b,null,c,d):Ug(b,a.child,c,d)}\nfunction Yi(a,b,c,d,e){c=c.render;var f=b.ref;ch(b,e);d=Nh(a,b,c,d,f,e);c=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&c&&vg(b);b.flags|=1;Xi(a,b,d,e);return b.child}\nfunction $i(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!aj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,bj(a,b,f,d,e);a=Rg(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return Zi(a,b,e)}b.flags|=1;a=Pg(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction bj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(dh=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(dh=!0);else return b.lanes=a.lanes,Zi(a,b,e)}return cj(a,b,c,d,e)}\nfunction dj(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(ej,fj),fj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(ej,fj),fj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(ej,fj);fj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(ej,fj),fj|=d;Xi(a,b,e,c);return b.child}function gj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function cj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);ch(b,e);c=Nh(a,b,c,d,f,e);d=Sh();if(null!==a&&!dh)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,Zi(a,b,e);I&&d&&vg(b);b.flags|=1;Xi(a,b,c,e);return b.child}\nfunction hj(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;ch(b,e);if(null===b.stateNode)ij(a,b),Gi(b,c,d),Ii(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=eh(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&Hi(b,g,d,l);jh=!1;var r=b.memoizedState;g.state=r;qh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||jh?(\"function\"===typeof m&&(Di(b,c,m,d),k=b.memoizedState),(h=jh||Fi(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;lh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Ci(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=eh(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&Hi(b,g,d,k);jh=!1;r=b.memoizedState;g.state=r;qh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||jh?(\"function\"===typeof y&&(Di(b,c,y,d),n=b.memoizedState),(l=jh||Fi(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return jj(a,b,c,d,f,e)}\nfunction jj(a,b,c,d,e,f){gj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),Zi(a,b,f);d=b.stateNode;Wi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Ug(b,a.child,null,f),b.child=Ug(b,null,h,f)):Xi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function kj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);yh(a,b.containerInfo)}\nfunction lj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Xi(a,b,c,d);return b.child}var mj={dehydrated:null,treeContext:null,retryLane:0};function nj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction oj(a,b,c){var d=b.pendingProps,e=L.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(L,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=pj(g,d,0,null),a=Tg(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=nj(c),b.memoizedState=mj,a):qj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return rj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=Pg(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=Pg(h,f):(f=Tg(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?nj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=mj;return d}f=a.child;a=f.sibling;d=Pg(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction qj(a,b){b=pj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function sj(a,b,c,d){null!==d&&Jg(d);Ug(b,a.child,null,c);a=qj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction rj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Ki(Error(p(422))),sj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=pj({mode:\"visible\",children:d.children},e,0,null);f=Tg(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Ug(b,a.child,null,g);b.child.memoizedState=nj(g);b.memoizedState=mj;return f}if(0===(b.mode&1))return sj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Ki(f,d,void 0);return sj(a,b,g,d)}h=0!==(g&a.childLanes);if(dh||h){d=Q;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,ih(a,e),gi(d,a,e,-1))}tj();d=Ki(Error(p(421)));return sj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=uj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=qj(b,d.children);b.flags|=4096;return b}function vj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);bh(a.return,b,c)}\nfunction wj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction xj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Xi(a,b,d.children,c);d=L.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&vj(a,c,b);else if(19===a.tag)vj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(L,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Ch(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);wj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Ch(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}wj(b,!0,c,null,f);break;case \"together\":wj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction ij(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function Zi(a,b,c){null!==a&&(b.dependencies=a.dependencies);rh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=Pg(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=Pg(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction yj(a,b,c){switch(b.tag){case 3:kj(b);Ig();break;case 5:Ah(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:yh(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Wg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(L,L.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return oj(a,b,c);G(L,L.current&1);a=Zi(a,b,c);return null!==a?a.sibling:null}G(L,L.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return xj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(L,L.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,dj(a,b,c)}return Zi(a,b,c)}var zj,Aj,Bj,Cj;\nzj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Aj=function(){};\nBj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;xh(uh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Cj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Dj(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Ej(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;zh();E(Wf);E(H);Eh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Fj(zg),zg=null));Aj(a,b);S(b);return null;case 5:Bh(b);var e=xh(wh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Bj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;zj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Cj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=xh(wh.current);xh(uh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(L);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Fj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(L.current&1)?0===T&&(T=3):tj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return zh(),\nAj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return ah(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(L);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Dj(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Ch(a);if(null!==g){b.flags|=128;Dj(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(L,L.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Gj&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304)}else{if(!d)if(a=Ch(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Dj(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Gj&&1073741824!==c&&(b.flags|=128,d=!0,Dj(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=L.current,G(L,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Hj(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(fj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Ij(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return zh(),E(Wf),E(H),Eh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Bh(b),null;case 13:E(L);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(L),null;case 4:return zh(),null;case 10:return ah(b.type._context),null;case 22:case 23:return Hj(),\nnull;case 24:return null;default:return null}}var Jj=!1,U=!1,Kj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Lj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Mj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Nj=!1;\nfunction Oj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Ci(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Nj;Nj=!1;return n}\nfunction Pj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Mj(b,c,f)}e=e.next}while(e!==d)}}function Qj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Rj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Sj(a){var b=a.alternate;null!==b&&(a.alternate=null,Sj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Tj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Uj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Tj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Vj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Vj(a,b,c),a=a.sibling;null!==a;)Vj(a,b,c),a=a.sibling}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}var X=null,Xj=!1;function Yj(a,b,c){for(c=c.child;null!==c;)Zj(a,b,c),c=c.sibling}\nfunction Zj(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Lj(c,b);case 6:var d=X,e=Xj;X=null;Yj(a,b,c);X=d;Xj=e;null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Xj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Xj;X=c.stateNode.containerInfo;Xj=!0;\nYj(a,b,c);X=d;Xj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Mj(c,b,g):0!==(f&4)&&Mj(c,b,g));e=e.next}while(e!==d)}Yj(a,b,c);break;case 1:if(!U&&(Lj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Yj(a,b,c);break;case 21:Yj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Yj(a,b,c),U=d):Yj(a,b,c);break;default:Yj(a,b,c)}}function ak(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Kj);b.forEach(function(b){var d=bk.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction ck(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Xj=!1;break a;case 3:X=h.stateNode.containerInfo;Xj=!0;break a;case 4:X=h.stateNode.containerInfo;Xj=!0;break a}h=h.return}if(null===X)throw Error(p(160));Zj(f,g,e);X=null;Xj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)dk(b,a),b=b.sibling}\nfunction dk(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:ck(b,a);ek(a);if(d&4){try{Pj(3,a,a.return),Qj(3,a)}catch(t){W(a,a.return,t)}try{Pj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);break;case 5:ck(b,a);ek(a);d&512&&null!==c&&Lj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:ck(b,a);ek(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:ck(b,a);ek(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:ck(b,a);ek(a);break;case 13:ck(b,a);ek(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(fk=B()));d&4&&ak(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,ck(b,a),U=l):ck(b,a);ek(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Pj(4,r,r.return);break;case 1:Lj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Lj(r,r.return);break;case 22:if(null!==r.memoizedState){gk(q);continue}}null!==y?(y.return=r,V=y):gk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:ck(b,a);ek(a);d&4&&ak(a);break;case 21:break;default:ck(b,\na),ek(a)}}function ek(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Tj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Uj(a);Wj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Uj(a);Vj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function hk(a,b,c){V=a;ik(a,b,c)}\nfunction ik(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Jj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Jj;var l=U;Jj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?jk(e):null!==k?(k.return=g,V=k):jk(e);for(;null!==f;)V=f,ik(f,b,c),f=f.sibling;V=e;Jj=h;U=l}kk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):kk(a,b,c)}}\nfunction kk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Qj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Ci(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&sh(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}sh(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Rj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function gk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction jk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Qj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Rj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Rj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar lk=Math.ceil,mk=ua.ReactCurrentDispatcher,nk=ua.ReactCurrentOwner,ok=ua.ReactCurrentBatchConfig,K=0,Q=null,Y=null,Z=0,fj=0,ej=Uf(0),T=0,pk=null,rh=0,qk=0,rk=0,sk=null,tk=null,fk=0,Gj=Infinity,uk=null,Oi=!1,Pi=null,Ri=null,vk=!1,wk=null,xk=0,yk=0,zk=null,Ak=-1,Bk=0;function R(){return 0!==(K&6)?B():-1!==Ak?Ak:Ak=B()}\nfunction yi(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Bk&&(Bk=yc()),Bk;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function gi(a,b,c,d){if(50<yk)throw yk=0,zk=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==Q)a===Q&&(0===(K&2)&&(qk|=c),4===T&&Ck(a,Z)),Dk(a,d),1===c&&0===K&&0===(b.mode&1)&&(Gj=B()+500,fg&&jg())}\nfunction Dk(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===Q?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Ek.bind(null,a)):hg(Ek.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Fk(c,Gk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Gk(a,b){Ak=-1;Bk=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Hk()&&a.callbackNode!==c)return null;var d=uc(a,a===Q?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Ik(a,d);else{b=d;var e=K;K|=2;var f=Jk();if(Q!==a||Z!==b)uk=null,Gj=B()+500,Kk(a,b);do try{Lk();break}catch(h){Mk(a,h)}while(1);$g();mk.current=f;K=e;null!==Y?b=0:(Q=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Nk(a,e)));if(1===b)throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;if(6===b)Ck(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Ok(e)&&(b=Ik(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Nk(a,f))),1===b))throw c=pk,Kk(a,0),Ck(a,d),Dk(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Pk(a,tk,uk);break;case 3:Ck(a,d);if((d&130023424)===d&&(b=fk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){R();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),b);break}Pk(a,tk,uk);break;case 4:Ck(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*lk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Pk.bind(null,a,tk,uk),d);break}Pk(a,tk,uk);break;case 5:Pk(a,tk,uk);break;default:throw Error(p(329));}}}Dk(a,B());return a.callbackNode===c?Gk.bind(null,a):null}\nfunction Nk(a,b){var c=sk;a.current.memoizedState.isDehydrated&&(Kk(a,b).flags|=256);a=Ik(a,b);2!==a&&(b=tk,tk=c,null!==b&&Fj(b));return a}function Fj(a){null===tk?tk=a:tk.push.apply(tk,a)}\nfunction Ok(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Ck(a,b){b&=~rk;b&=~qk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Ek(a){if(0!==(K&6))throw Error(p(327));Hk();var b=uc(a,0);if(0===(b&1))return Dk(a,B()),null;var c=Ik(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Nk(a,d))}if(1===c)throw c=pk,Kk(a,0),Ck(a,b),Dk(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Pk(a,tk,uk);Dk(a,B());return null}\nfunction Qk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Gj=B()+500,fg&&jg())}}function Rk(a){null!==wk&&0===wk.tag&&0===(K&6)&&Hk();var b=K;K|=1;var c=ok.transition,d=C;try{if(ok.transition=null,C=1,a)return a()}finally{C=d,ok.transition=c,K=b,0===(K&6)&&jg()}}function Hj(){fj=ej.current;E(ej)}\nfunction Kk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:zh();E(Wf);E(H);Eh();break;case 5:Bh(d);break;case 4:zh();break;case 13:E(L);break;case 19:E(L);break;case 10:ah(d.type._context);break;case 22:case 23:Hj()}c=c.return}Q=a;Y=a=Pg(a.current,null);Z=fj=b;T=0;pk=null;rk=qk=rh=0;tk=sk=null;if(null!==fh){for(b=\n0;b<fh.length;b++)if(c=fh[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}fh=null}return a}\nfunction Mk(a,b){do{var c=Y;try{$g();Fh.current=Rh;if(Ih){for(var d=M.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Ih=!1}Hh=0;O=N=M=null;Jh=!1;Kh=0;nk.current=null;if(null===c||null===c.return){T=1;pk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Ui(g);if(null!==y){y.flags&=-257;Vi(y,g,h,f,b);y.mode&1&&Si(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Si(f,l,b);tj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Ui(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Vi(J,g,h,f,b);Jg(Ji(k,h));break a}}f=k=Ji(k,h);4!==T&&(T=2);null===sk?sk=[f]:sk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Ni(f,k,b);ph(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Ri||!Ri.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Qi(f,h,b);ph(f,F);break a}}f=f.return}while(null!==f)}Sk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Jk(){var a=mk.current;mk.current=Rh;return null===a?Rh:a}\nfunction tj(){if(0===T||3===T||2===T)T=4;null===Q||0===(rh&268435455)&&0===(qk&268435455)||Ck(Q,Z)}function Ik(a,b){var c=K;K|=2;var d=Jk();if(Q!==a||Z!==b)uk=null,Kk(a,b);do try{Tk();break}catch(e){Mk(a,e)}while(1);$g();K=c;mk.current=d;if(null!==Y)throw Error(p(261));Q=null;Z=0;return T}function Tk(){for(;null!==Y;)Uk(Y)}function Lk(){for(;null!==Y&&!cc();)Uk(Y)}function Uk(a){var b=Vk(a.alternate,a,fj);a.memoizedProps=a.pendingProps;null===b?Sk(a):Y=b;nk.current=null}\nfunction Sk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Ej(c,b,fj),null!==c){Y=c;return}}else{c=Ij(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Pk(a,b,c){var d=C,e=ok.transition;try{ok.transition=null,C=1,Wk(a,b,c,d)}finally{ok.transition=e,C=d}return null}\nfunction Wk(a,b,c,d){do Hk();while(null!==wk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===Q&&(Y=Q=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||vk||(vk=!0,Fk(hc,function(){Hk();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=ok.transition;ok.transition=null;\nvar g=C;C=1;var h=K;K|=4;nk.current=null;Oj(a,c);dk(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;hk(c,a,e);dc();K=h;C=g;ok.transition=f}else a.current=c;vk&&(vk=!1,wk=a,xk=e);f=a.pendingLanes;0===f&&(Ri=null);mc(c.stateNode,d);Dk(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Oi)throw Oi=!1,a=Pi,Pi=null,a;0!==(xk&1)&&0!==a.tag&&Hk();f=a.pendingLanes;0!==(f&1)?a===zk?yk++:(yk=0,zk=a):yk=0;jg();return null}\nfunction Hk(){if(null!==wk){var a=Dc(xk),b=ok.transition,c=C;try{ok.transition=null;C=16>a?16:a;if(null===wk)var d=!1;else{a=wk;wk=null;xk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Pj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Sj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Pj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Qj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,ok.transition=b}}return!1}function Xk(a,b,c){b=Ji(c,b);b=Ni(a,b,1);a=nh(a,b,1);b=R();null!==a&&(Ac(a,1,b),Dk(a,b))}\nfunction W(a,b,c){if(3===a.tag)Xk(a,a,c);else for(;null!==b;){if(3===b.tag){Xk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Ri||!Ri.has(d))){a=Ji(c,a);a=Qi(b,a,1);b=nh(b,a,1);a=R();null!==b&&(Ac(b,1,a),Dk(b,a));break}}b=b.return}}\nfunction Ti(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=R();a.pingedLanes|=a.suspendedLanes&c;Q===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-fk?Kk(a,0):rk|=c);Dk(a,b)}function Yk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=R();a=ih(a,b);null!==a&&(Ac(a,b,c),Dk(a,c))}function uj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Yk(a,c)}\nfunction bk(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Yk(a,c)}var Vk;\nVk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)dh=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return dh=!1,yj(a,b,c);dh=0!==(a.flags&131072)?!0:!1}else dh=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;ij(a,b);a=b.pendingProps;var e=Yf(b,H.current);ch(b,c);e=Nh(null,b,d,a,e,c);var f=Sh();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,kh(b),e.updater=Ei,b.stateNode=e,e._reactInternals=b,Ii(b,d,a,c),b=jj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Xi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{ij(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=Zk(d);a=Ci(d,a);switch(e){case 0:b=cj(null,b,d,a,c);break a;case 1:b=hj(null,b,d,a,c);break a;case 11:b=Yi(null,b,d,a,c);break a;case 14:b=$i(null,b,d,Ci(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),cj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),hj(a,b,d,e,c);case 3:a:{kj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;lh(a,b);qh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ji(Error(p(423)),b);b=lj(a,b,d,c,e);break a}else if(d!==e){e=Ji(Error(p(424)),b);b=lj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Vg(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=Zi(a,b,c);break a}Xi(a,b,d,c)}b=b.child}return b;case 5:return Ah(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\ngj(a,b),Xi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return oj(a,b,c);case 4:return yh(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Ug(b,null,d,c):Xi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),Yi(a,b,d,e,c);case 7:return Xi(a,b,b.pendingProps,c),b.child;case 8:return Xi(a,b,b.pendingProps.children,c),b.child;case 12:return Xi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Wg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=Zi(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=mh(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);bh(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);bh(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Xi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,ch(b,c),e=eh(e),d=d(e),b.flags|=1,Xi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Ci(d,b.pendingProps),e=Ci(d.type,e),$i(a,b,d,e,c);case 15:return bj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Ci(d,e),ij(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,ch(b,c),Gi(b,d,e),Ii(b,d,e,c),jj(null,b,d,!0,a,c);case 19:return xj(a,b,c);case 22:return dj(a,b,c)}throw Error(p(156,b.tag));};function Fk(a,b){return ac(a,b)}\nfunction $k(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new $k(a,b,c,d)}function aj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction Zk(a){if(\"function\"===typeof a)return aj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction Pg(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction Rg(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)aj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Tg(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return pj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Tg(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function pj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function Qg(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction Sg(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction al(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function bl(a,b,c,d,e,f,g,h,k){a=new al(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};kh(f);return a}function cl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction dl(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction el(a,b,c,d,e,f,g,h,k){a=bl(c,d,!0,a,e,f,g,h,k);a.context=dl(null);c=a.current;d=R();e=yi(c);f=mh(d,e);f.callback=void 0!==b&&null!==b?b:null;nh(c,f,e);a.current.lanes=e;Ac(a,e,d);Dk(a,d);return a}function fl(a,b,c,d){var e=b.current,f=R(),g=yi(e);c=dl(c);null===b.context?b.context=c:b.pendingContext=c;b=mh(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=nh(e,b,g);null!==a&&(gi(a,e,g,f),oh(a,e,g));return g}\nfunction gl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function hl(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function il(a,b){hl(a,b);(a=a.alternate)&&hl(a,b)}function jl(){return null}var kl=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ll(a){this._internalRoot=a}\nml.prototype.render=ll.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));fl(a,b,null,null)};ml.prototype.unmount=ll.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Rk(function(){fl(null,a,null,null)});b[uf]=null}};function ml(a){this._internalRoot=a}\nml.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function nl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function pl(){}\nfunction ql(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=gl(g);f.call(a)}}var g=el(b,d,a,0,null,!1,!1,\"\",pl);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Rk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=gl(k);h.call(a)}}var k=bl(a,0,!1,null,null,!1,!1,\"\",pl);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Rk(function(){fl(b,k,c,d)});return k}\nfunction rl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=gl(g);h.call(a)}}fl(b,g,a,e)}else g=ql(c,b,a,e,d);return gl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Dk(b,B()),0===(K&6)&&(Gj=B()+500,jg()))}break;case 13:Rk(function(){var b=ih(a,1);if(null!==b){var c=R();gi(b,a,1,c)}}),il(a,1)}};\nFc=function(a){if(13===a.tag){var b=ih(a,134217728);if(null!==b){var c=R();gi(b,a,134217728,c)}il(a,134217728)}};Gc=function(a){if(13===a.tag){var b=yi(a),c=ih(a,b);if(null!==c){var d=R();gi(c,a,b,d)}il(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Qk;Hb=Rk;\nvar sl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Qk]},tl={findFiberByHostInstance:Wc,bundleType:0,version:\"18.3.1\",rendererPackageName:\"react-dom\"};\nvar ul={bundleType:tl.bundleType,version:tl.version,rendererPackageName:tl.rendererPackageName,rendererConfig:tl.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:tl.findFiberByHostInstance||\njl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.3.1-next-f1338f8080-20240426\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var vl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!vl.isDisabled&&vl.supportsFiber)try{kc=vl.inject(ul),lc=vl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=sl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!nl(b))throw Error(p(200));return cl(a,b,null,c)};exports.createRoot=function(a,b){if(!nl(a))throw Error(p(299));var c=!1,d=\"\",e=kl;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=bl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ll(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Rk(a)};exports.hydrate=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!nl(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=kl;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=el(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new ml(b)};exports.render=function(a,b,c){if(!ol(b))throw Error(p(200));return rl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!ol(a))throw Error(p(40));return a._reactRootContainer?(Rk(function(){rl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Qk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!ol(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return rl(a,b,c,!1,d)};exports.version=\"18.3.1-next-f1338f8080-20240426\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};function X(){throw Error(\"act(...) is not supported in production builds of React.\");}\nexports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;exports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;\nexports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;exports.act=X;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=X;exports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};\nexports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};exports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};\nexports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};exports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.3.1\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"39fe139f\" + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","var inProgress = {};\nvar dataWebpackPrefix = \"webmolvis:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/webmolvis/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkwebmolvis\"] = self[\"webpackChunkwebmolvis\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","import { useState, useRef, useEffect } from 'react';\nimport * as $3Dmol from '3dmol';\n//import logo from './logo.svg';\nimport './App.css';\n\nconst elementDict = {\n  1: 'H', 2: 'He', 3: 'Li', 4: 'Be', 5: 'B', 6: 'C', 7: 'N', 8: 'O', 9: 'F', 10: 'Ne',\n  11: 'Na', 12: 'Mg', 13: 'Al', 14: 'Si', 15: 'P', 16: 'S', 17: 'Cl', 18: 'Ar', 19: 'K', 20: 'Ca',\n  21: 'Sc', 22: 'Ti', 23: 'V', 24: 'Cr', 25: 'Mn', 26: 'Fe', 27: 'Co', 28: 'Ni', 29: 'Cu', 30: 'Zn',\n  31: 'Ga', 32: 'Ge', 33: 'As', 34: 'Se', 35: 'Br', 36: 'Kr', 37: 'Rb', 38: 'Sr', 39: 'Y', 40: 'Zr',\n  41: 'Nb', 42: 'Mo', 43: 'Tc', 44: 'Ru', 45: 'Rh', 46: 'Pd', 47: 'Ag', 48: 'Cd', 49: 'In', 50: 'Sn',\n  51: 'Sb', 52: 'Te', 53: 'I', 54: 'Xe', 55: 'Cs', 56: 'Ba', 57: 'La', 58: 'Ce', 59: 'Pr', 60: 'Nd',\n  61: 'Pm', 62: 'Sm', 63: 'Eu', 64: 'Gd', 65: 'Tb', 66: 'Dy', 67: 'Ho', 68: 'Er', 69: 'Tm', 70: 'Yb',\n  71: 'Lu', 72: 'Hf', 73: 'Ta', 74: 'W', 75: 'Re', 76: 'Os', 77: 'Ir', 78: 'Pt', 79: 'Au', 80: 'Hg',\n  81: 'Tl', 82: 'Pb', 83: 'Bi', 84: 'Po', 85: 'At', 86: 'Rn', 87: 'Fr', 88: 'Ra', 89: 'Ac', 90: 'Th',\n  91: 'Pa', 92: 'U', 93: 'Np', 94: 'Pu', 95: 'Am', 96: 'Cm', 97: 'Bk', 98: 'Cf', 99: 'Es', 100: 'Fm',\n  101: 'Md', 102: 'No', 103: 'Lr', 104: 'Rf', 105: 'Db', 106: 'Sg', 107: 'Bh', 108: 'Hs', 109: 'Mt',\n  110: 'Ds', 111: 'Rg', 112: 'Cn', 113: 'Nh', 114: 'Fl', 115: 'Mc', 116: 'Lv', 117: 'Ts', 118: 'Og'\n};\n\nfunction cleanXyzData(data) {\n  let lines = data.split('\\n').filter(line => line.trim() !== '');\n  let isFirstLineInteger = !isNaN(lines[0]) && Number.isInteger(parseFloat(lines[0]));\n  \n  if (!isFirstLineInteger) {\n\tif (lines[0].trim().split(/\\s+/).length === 4) {\n\t\n\tlines = convertAtomicNumbersToSymbols(lines.join('\\n')).split('\\n');\n    \n\tlines = lines.map(line => {\n    const parts = line.trim().split(/\\s+/);\n    if (parts.length !== 4) {\n      console.error(\"Error: Invalid line format, line may have been split incorrectly.\");\n      return '';\n    }\n    return line;\n    }).filter(line => line.trim() !== '');\n\tlet atomCount = lines.length;\n\tlines = [`${atomCount}`, \"data\", ...lines];\n\t} else {\n\t\t\n    \n\t\n\t\n\tlines = convertAtomicNumbersToSymbols(lines.join('\\n')).split('\\n');\n\tlines = lines.map(line => {\n    const parts = line.trim().split(/\\s+/);\n    if (parts.length !== 4) {\n      console.error(\"Error: Invalid line format, line may have been split incorrectly.\");\n      return '';\n    }\n    return line;\n    }).filter(line => line.trim() !== '');\n\tlet atomCount = lines.length;\n\t\n\tlines = [`${atomCount}`, \"data\", ...lines];\n\t\t\n\t}\n\t\n\t}\n  else {\n\tif (lines[1].trim().split(/\\s+/).length === 4) {\n\t    let parts_lines = convertAtomicNumbersToSymbols(lines.slice(1, lines.length).join('\\n')).split('\\n');\n\t\tparts_lines = parts_lines.map(line => {\n        const parts = line.trim().split(/\\s+/);\n           if (parts.length !== 4) {\n           console.error(\"Error: Invalid line format, line may have been split incorrectly.\");\n           return '';\n           }\n           return line;\n           }).filter(line => line.trim() !== '');\n\t    lines = [lines[0], \"data\", ...parts_lines];\n\t} else {\n\t\tlet parts_lines = convertAtomicNumbersToSymbols(lines.slice(2, lines.length).join('\\n')).split('\\n');\n\t\tparts_lines = parts_lines.map(line => {\n           const parts = line.trim().split(/\\s+/);\n           if (parts.length !== 4) {\n           console.error(\"Error: Invalid line format, line may have been split incorrectly.\");\n           return '';\n           }\n           return line;\n           }).filter(line => line.trim() !== '');\n\t\tlines = [lines[0], lines[1], ...parts_lines];\n\t}\n  }\n\n  return lines.join('\\n');\n}\n\nfunction convertAtomicNumbersToSymbols(data) {\n  return data.split('\\n').map(line => {\n    const parts = line.trim().split(/\\s+/);\n\t\n    if (parts.length > 0 && !isNaN(parts[0])) {\n      const atomicNumber = parseInt(parts[0], 10);\n\t  if (!isNaN(atomicNumber)) {\n        if (elementDict[atomicNumber]) {\n           const symbol = elementDict[atomicNumber];\n           parts[0] = symbol;\n           } else {\n           console.warn(`WARN: Atomic number ${atomicNumber} is unknown.`);\n           } \n\t  }\n    }\n    return parts.join(' ');\n  }).join('\\n');\n}\n\nfunction XYZMoleculeViewer({ xyzData }) {\n  const viewerRef = useRef(null);\n\n  useEffect(() => {\n    if (!xyzData) return;\n\n    const element = viewerRef.current;\n    if (!element) return;\n\n    element.innerHTML = ''; \n    const viewer = $3Dmol.createViewer(element, { backgroundColor: '#000000' });\n\n    viewer.addModel(xyzData, 'xyz');\n    viewer.setStyle({}, { stick: { radius: 0.12 }, sphere: { scale: 0.28 } });\n    viewer.zoomTo();\n    viewer.render();\n  }, [xyzData]);\n\n  return <div className=\"viewer\" ref={viewerRef} style={{ width: '100%', height: '600px' }}></div>;\n}\n\nexport default function Main() {\n  const [xyzData, setXyzData] = useState('');\n  const [showViewer, setShowViewer] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const cleanedData = cleanXyzData(xyzData);\n\n    if (cleanedData) {\n      setXyzData(cleanedData);\n      setShowViewer(true);\n    }\n  };\n\n  const handleReset = () => {\n    setXyzData('');\n    setShowViewer(false);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <h1>Molecule Viewer</h1>\n      <div className=\"content-container\">\n        <form className=\"form\" onSubmit={handleSubmit}>\n          <label htmlFor=\"xyz-input\">Enter molecule structure (.xyz file format):</label>\n          <textarea\n            id=\"xyz-input\"\n            value={xyzData}\n            onChange={(e) => setXyzData(e.target.value)}\n            rows={10}\n            placeholder=\"Please paste your molecule structure (.xyz file format) here.\"\n            required\n          />\n          <div className=\"form-buttons\">\n            <button type=\"submit\">Render Molecule</button>\n            <button type=\"button\" onClick={handleReset}>\n              Reset\n            </button>\n          </div>\n        </form>\n        {showViewer && (\n          <div className=\"viewer-container\">\n            <XYZMoleculeViewer xyzData={xyzData} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"names":["factory","hostBigEndian","array","Uint8Array","Uint32Array","buffer","typedArrays","int8","globalThis","Int8Array","uint8","int16","Int16Array","uint16","Uint16Array","int32","Int32Array","uint32","uint64","BigUint64Array","int64","BigInt64Array","float32","Float32Array","float64","Float64Array","IOBuffer","constructor","data","arguments","length","undefined","options","dataIsGiven","ArrayBuffer","lastWrittenByte","byteLength","offset","dvOffset","isView","byteOffset","littleEndian","_data","DataView","_mark","_marks","available","isLittleEndian","setLittleEndian","isBigEndian","setBigEndian","skip","n","back","seek","mark","reset","pushMark","push","popMark","pop","Error","rewind","ensureAvailable","newLength","newArray","set","readBoolean","readUint8","readInt8","getInt8","getUint8","readByte","readBytes","readArray","size","type","bytes","BYTES_PER_ELEMENT","slice","reverse","returnArray","readInt16","value","getInt16","readUint16","getUint16","readInt32","getInt32","readUint32","getUint32","readFloat32","getFloat32","readFloat64","getFloat64","readBigInt64","getBigInt64","readBigUint64","getBigUint64","readChar","String","fromCharCode","readChars","result","i","readUtf8","_text__WEBPACK_IMPORTED_MODULE_0__","decode","decodeText","encoding","writeBoolean","writeUint8","writeInt8","setInt8","_updateLastWrittenByte","setUint8","writeByte","writeBytes","writeInt16","setInt16","writeUint16","setUint16","writeInt32","setInt32","writeUint32","setUint32","writeFloat32","setFloat32","writeFloat64","setFloat64","writeBigInt64","setBigInt64","writeBigUint64","setBigUint64","writeChar","str","charCodeAt","writeChars","writeUtf8","encode","toArray","scope","FastTextEncoder","utfLabel","RangeError","FastTextDecoder","fatal","Object","defineProperty","prototype","string","stream","pos","len","at","tlen","Math","max","target","extra","update","out","byte1","byte2","byte3","codepoint","apply","window","self","TextDecoder","encoder","TextEncoder","nonRecord","variable","_types__WEBPACK_IMPORTED_MODULE_0__","str2num","num2bytes","Array","readType","record","recordDimension","width","step","recordStep","currentOffset","ZERO","NC_DIMENSION","NC_VARIABLE","NC_ATTRIBUTE","NC_UNLIMITED","header","version","dimList","recordId","recordName","dimensions","_utils__WEBPACK_IMPORTED_MODULE_1__","notNetcdf","dimensionSize","dim","name","readName","dimensionsList","isArray","id","globalAttributes","attributesList","variables","varList","variableSize","v","dimensionality","dimensionsIds","attributes","varSize","num2str","variablesList","gAttList","attributeSize","gAtt","padding","NetCDFReader","toString","_toString__WEBPACK_IMPORTED_MODULE_3__","iobuffer__WEBPACK_IMPORTED_MODULE_0__","_utils__WEBPACK_IMPORTED_MODULE_4__","_header__WEBPACK_IMPORTED_MODULE_2__","getAttribute","attributeName","attribute","find","val","getDataVariableAsString","variableName","getDataVariable","join","_data__WEBPACK_IMPORTED_MODULE_1__","dataVariableExists","attributeExists","dimension","padEnd","JSON","parse","stringify","substring","isNaN","types","BYTE","CHAR","SHORT","INT","FLOAT","DOUBLE","Number","readNumber","bufferReader","numbers","from","bind","statement","reason","TypeError","nameLength","__WEBPACK_DEFAULT_EXPORT__","CAP","GLDraw","getRotationMatrix","dx","dy","dz","dyz","sinA","cosA","sinB","cosB","dxy","hypot","rot","cylVertexCache","cache","j","nvecs","N","pow","M","spacing","_WebGL_math__WEBPACK_IMPORTED_MODULE_0__","Vector3","clone","add","normalize","this","basisVectors","getVerticesForRadius","radius","cap","capType","w","norms","multiplyScalar","x","y","verticesRows","heightSegments","widthSegments","phiLength","PI","thetaLength","polar","equator","verticesRow","toRow","xi","u","vertex","cos","sin","z","abs","FLAT","obj","vertices","normals","h","drawCylinder","geo","to","color","fromCap","toCap","getcap","c","s","toLowerCase","ROUND","NONE","drawcaps","r","g","b","faceoffset","e","vobj","n_verts","geoGroup","updateGeoGroup","fromRow","start","vertexArray","normalArray","colorArray","faceArray","vi","faceidx","v1","v2","v3","v4","x1","x2","x3","x4","y1","y2","y3","y4","z1","z2","z3","z4","nx1","nx2","nx3","nx4","ny1","ny2","ny3","ny4","nz1","nz2","nz3","nz4","v1offset","v2offset","v3offset","v4offset","yend","toObj","fromObj","drawCone","ndir","basis","vec","sphereVertexCache","Map","sphereQuality","has","radiusCache","get","vx","vy","vz","drawSphere","lineArray","il","lineoffset","lineidx","n1","n2","n3","n4","GLModel","sameObj","a","mid","atoms","frames","box","atomdfs","hidden","molObj","renderedMolObj","lastColors","modelData","modelDatas","idMatrix","_WebGL_math__WEBPACK_IMPORTED_MODULE_2__","Matrix4","dontDuplicateAtoms","defaultColor","_colors__WEBPACK_IMPORTED_MODULE_3__","elementColors","defaultStickRadius","ElementColors","defaultcolors","defaultColors","defaultSphereRadius","defaultCartoonQuality","cartoonQuality","getRadiusFromStyle","atom","style","vdwRadii","elem","toUpperCase","scale","drawAtomCross","geos","cross","linewidth","defaultlineWidth","_WebGL__WEBPACK_IMPORTED_MODULE_0__","Geometry","delta","points","clickable","hoverable","intersectionShape","sphere","cylinder","line","_utilities__WEBPACK_IMPORTED_MODULE_6__","getColorFromStyle","point","getGoodCross","atom2","p1","dir","bestv","bestlen","bonds","index","j2","atom3","dir2","sub","l","lengthSq","getSideBondV","i2","addLine","p2","c1","drawBondLines","p1a","p1b","p2a","p2b","mp","singleBond","atomneedsi","atom2needsi","triangle","c2","bondStyles","bstyle","iswire","color1","CC","color2","mpa","mpb","bondOrder","drawAtomSphere","C","center","_WebGL_shapes__WEBPACK_IMPORTED_MODULE_1__","Sphere","_GLDraw__WEBPACK_IMPORTED_MODULE_4__","drawAtomClickSphere","clicksphere","drawAtomInstanced","startv","radiusArray","drawSphereImposter","drawAtomImposter","calculateDashes","dashLength","gapLength","cylinderLength","sqrt","new_to","totalSegments","floor","new_from","gapVector","dashVector","segments","place","drawStickImposter","negateColor","drawBondSticks","_this","stick","cylinder1a","cylinder1b","cylinder1c","cylinder2a","cylinder2b","cylinder2c","mp2","mp3","atomBondR","doubleBondScale","doubleBondScaling","tripleBondScale","tripleBondScaling","bondDashLength","_a","dashedBondConfig","bondGapLength","_b","bondR","atomSingleBond","singleBonds","atomDashedBonds","dashedBonds","C1","capDrawn","selectCylDrawMethod","drawMethod","imposter","forEach","segment","drawCyl","style2","C2","addVectors","cylinder1","Cylinder","sphere1","cylinder2","sphere2","mfromCap","mtoCap","numsinglebonds","differentradii","showNonBonded","sphereGeometry","createMolObj","testOpacities","ret","Object3D","cartoonAtoms","lineGeometries","crossGeometries","drawSphereFunc","stickGeometry","supportsImposters","drawnCaps","supportsAIA","instanced","opacities","range","POSITIVE_INFINITY","NEGATIVE_INFINITY","opacity","parseFloat","console","log","call","cartoon","resi","hetflag","_glcartoon__WEBPACK_IMPORTED_MODULE_5__","drawCartoon","initTypedArrays","sphereMaterial","SphereImposterMaterial","ambient","vertexColors","reflectivity","Color","InstancedMaterial","MeshLambertMaterial","transparent","Mesh","stickMaterial","ballMaterial","balls","matvals","StickImposterMaterial","wireframe","setUpWireframe","sticks","stickspheres","hasOwnProperty","lineMaterial","LineBasicMaterial","Line","LineStyle","LinePieces","crossMaterial","symmetries","t","finalRet","transformedRet","matrix","copy","matrixAutoUpdate","getInternalState","setInternalState","state","getCrystData","cryst","conversionMatrix3","alpha","beta","gamma","setCrystData","setCrystMatrix","Matrix3","getSymmetries","setSymmetries","list","getID","getNumFrames","numFrames","adjustCoord","margin","adjust","dist","adjustCoordinatesToBox","bx","by","bz","mx","my","mz","component","prev","setFrame","framenum","viewer","model","Promise","resolve","reject","url","getbin","path","then","values","count","catch","unitCellObjects","removeUnitCell","addUnitCell","addFrame","vibrate","amplitude","bothWays","arrowSpec","end","origIndex","newAtoms","currframe","getAtomProperty","newVector","starting","mult","newAtom","k","spec","extend","arrowend","frame","addArrow","setAtomDefaults","deepCopy","defaultAtomStyle","addMolData","format","parsedAtoms","parseMolData","duplicateAssemblyAtoms","mData","addAtoms","setStyle","setDontDuplicateAtoms","dup","setModelData","propertyMatches","atomval","match","lo","parseInt","hi","deepCopyAndCache","selobject","__cache_created","key","item","results","subSelection","Set","selectedAtoms","intersect","first","other","intersection","splice","__cached_results","union","atomIsSelected","sel","invert","predicate","propkey","properties","startsWith","ignoredKeys","isokay","valarr","squaredDistance","atom1","xd","yd","zd","expandAtomList","atomList","amt","pb","getExtent","nb","expand","getFloat","aLength","exdist","retlen","thresh","within","sel2","distance","newret","vResis","vAtoms","stack","chain","newatoms","indexmap","serial","olda","nindex","nbonds","neigh","assignBonds","_parsers_utils_assignBonds__WEBPACK_IMPORTED_MODULE_10__","removeAtoms","badatoms","baddies","specStringToObject","changedAtoms","that","setStyleHelper","atomArr","selected","assign","setClickable","callback","makeFunction","setHoverable","hover_callback","unhover_callback","enableContextMenu","contextMenuEnabled","setColorByElement","colors","setColorByProperty","prop","scheme","_Gradient__WEBPACK_IMPORTED_MODULE_7__","Gradient","builtinGradients","getPropertyRange","valueToHex","setColorByFunction","colorfun","toCDObject","includeStyles","atomJSON","firstAtom","secondAtom","bond","o","globj","group","regen","remove","setVisible","exportVRML","vrml","removegl","geometry","dispose","material","hide","show","addPropertyLabels","mystyle","label","position","addLabel","addResLabels","created_labels","helper","bylabel","resn","labels","sum","divideScalar","savedatoms","setupDFS","visited","fill","search","nexti","setCoordinatesFromURL","setCoordinates","test","replace","inflateString","err","atomCount","parseCrd","temp","addAtomSpecs","customAtomSpecs","counter","indexOf","reader","netcdfjs__WEBPACK_IMPORTED_MODULE_9__","concat","flat","map","_parsers__WEBPACK_IMPORTED_MODULE_8__","Parsers","split","GLShape","finalizeGeo","truncateArrayBuffers","updateColor","colorsNeedUpdate","gg","geometryGroups","colorArr","drawArrow","shape","radiusRatio","midoffset","midpos","negDir","negate","fromv","crossVectors","face","t1","t2","t2b","t3","t3b","t4","t1offset","t2offset","t2boffset","t3offset","t3boffset","t4offset","bottom","top","conebase","prev_x","prev_y","prev_z","b2","Triangle","fromi","toi","endi","fromoffset","tooffset","endoffset","ti","updateBoundingFromPoints","components","numPoints","xmin","Infinity","ymin","zmin","xmax","ymax","zmax","min","distanceTo","addCustomGeo","mesh","addGeoGroup","vertexArr","normalArr","faceArr","vA","vB","vC","cnt","getCentroid","boundingSphere","centroid","setNormals","setLineIndices","updateFromStyle","stylespec","clamp","side","DoubleSide","_utilities__WEBPACK_IMPORTED_MODULE_8__","shapeObj","renderedShapeObj","linegeo","updateStyle","newspec","voldata","volscheme","adjustVolumeStyle","cc","setColors","getVal","addCustom","customSpec","drawCustom","addSphere","sphereSpec","_GLDraw__WEBPACK_IMPORTED_MODULE_6__","quality","addBox","boxSpec","d","corner","uv","verts","faces","foff","addCylinder","cylinderSpec","addDashedCylinder","new_start","new_end","addCurve","curveSpec","smooth","_glcartoon__WEBPACK_IMPORTED_MODULE_7__","subdivide_spline","segmentlen","npts","ceil","toArrow","arrowspec","fromArrow","midway","middleSpec","lineSpec","vstart","li","distance_from","inSelectedRegion","coordinate","selectedRegion","addIsosurface","volSpec","isoval","voxel","smoothness","nX","nY","nZ","vertnums","vals","bitdata","ISDONE","_ProteinSurface4__WEBPACK_IMPORTED_MODULE_4__","MarchingCube","march","fulltable","unitCube","unit","origin","laplacianSmooth","vertexmapping","newvertices","newfaces","coords","selection","rad","selectedOffset","seldist","total","maxv","minv","len1","len2","addVolumetricData","fmt","_VolumeData__WEBPACK_IMPORTED_MODULE_5__","VolumeData","finalize","MeshDoubleLambertMaterial","wireframeLinewidth","Coloring","VertexColors","splitMesh","slices","vertSlice","vertIndex","currentSlice","nf","warn","splits","CONTEXTS_PER_VIEWPORT","GLViewer","getWidth","div","container","offsetWidth","display","oldpos","oldvis","visibility","getHeight","offsetHeight","setupRenderer","renderer","Renderer","antialias","config","preserveDrawingBuffer","premultipliedAlpha","row","col","rows","cols","canvas","containerWidth","WIDTH","containerHeight","HEIGHT","ambientOcclusion","outline","domElement","height","left","zIndex","initializeScene","scene","Scene","fog","Fog","bgColor","modelGroup","rotationGroup","useQuaternion","quaternion","_WebGL_math__WEBPACK_IMPORTED_MODULE_1__","Quaternion","directionalLight","Light","intensity","_handleLostContext","event","isVisible","cont","rect","getBoundingClientRect","right","innerHeight","document","documentElement","clientHeight","innerWidth","clientWidth","restored","getElementsByTagName","_3dmol_viewer","resize","initContainer","element","ASPECT","getAspect","setSize","append","glDOM","addEventListener","nomouse","_handleMouseDown","passive","_handleMouseScroll","_handleMouseMove","_handleContextMenu","decAnim","animated","incAnim","nextSurfID","surfaces","setSlabAndFog","camera","near","slabNear","far","slabFar","fov","tan","updateProjectionMatrix","fogStart","disableFog","nolink","setViewport","render","viewChangeCallback","_viewer","getView","linkedViewers","view","setView","updateClickables","clickables","hoverables","contextMenuEnabledObjects","models","hoverable_atoms","contextMenuEnabled_atom","m","shapes","handleClickSelection","mouseX","mouseY","intersects","targetedObjects","_utilities__WEBPACK_IMPORTED_MODULE_3__","mouseButton","includes","userContextMenuHandler","canvasOffset","doc","ownerDocument","docElem","win","defaultView","pageYOffset","clientTop","pageXOffset","clientLeft","setHover","current_hover","handleHoverSelection","handleHoverContinue","closeEnoughForClick","allowTolerance","targetTouches","tolerance","getX","getY","deltaX","mouseStartX","deltaY","mouseStartY","calcTouchDistance","ev","xdiff","pageX","ydiff","pageY","changedTouches","isInViewer","viewers","relx","rely","adjustZoomToLimits","lowerZoomLimit","lower","CAMERA_Z","upperZoomLimit","upper","slerp","v0","dot","theta","acos","hoverDuration","longTouchDuration","viewer_frame","stateChangeCallback","NEAR","FAR","control_all","cq","dq","animationTimers","isDragging","touchDistanceStart","touchHold","currentModelPos","cz","cslabNear","cslabFar","_colors__WEBPACK_IMPORTED_MODULE_2__","Boolean","backgroundColor","getHex","backgroundAlpha","camerax","Camera","orthographic","lookingAt","lookAt","raycaster","Raycaster","projector","Projector","setClearColorHex","body","_handleMouseUp","setViewStyle","ResizeObserver","divwatcher","observe","IntersectionObserver","intcallback","entries","observer","entry","isIntersecting","intwatcher","objects","mouse","setFromCamera","intersectObjects","modelToScreen","returnsingle","ratioX","getXRatio","ratioY","getYRatio","viewxoff","viewyoff","coord","applyMatrix4","matrixWorld","projectVector","screenX","screenY","screenOffsetToModel","modelz","zpos","q","unprojectVector","applyQuaternion","screenToModelDistance","screen","mvec","setViewChangeCallback","setStateChangeCallback","getConfig","setConfig","enableAmbientOcclusion","clear","newm","_GLModel__WEBPACK_IMPORTED_MODULE_5__","setZoomLimits","setCameraParameters","parameters","ortho","preventDefault","which","longTouchTimeout","setTimeout","touch","newEvent","PointerEvent","clientX","clientY","dispatchEvent","mouseXY","scaleFactor","ctrlKey","detail","wheelDelta","wd","pngURI","getCanvas","toDataURL","apngURI","nframes","framecnt","oldcb","bufpromise","delays","lasttime","Date","now","toBlob","blob","arrayBuffer","all","buffers","rgbas","img","upng_js__WEBPACK_IMPORTED_MODULE_11__","toRGBA8","apng","Blob","fr","FileReader","onload","readAsDataURL","getRenderer","setHoverDuration","duration","clearTimeout","hoverTimeout","mode","shiftKey","rs","multiply","setContainer","getElement","setBackgroundColor","hex","setProjection","proj","params","enableOutline","disableOutline","strength","disableAmbientOcclusion","updateSize","aspect","setWidth","setHeight","isLost","resetcanvas","currentcanvas","querySelector","pauseAnimate","resumeAnimate","supportedExtensions","getModel","spin","axis","speed","clearInterval","spinInterval","setInterval","isConnected","rotate","animateMotion","fixed","mpos","rz","cam","nsteps","curr","steps","frac","next","p","inverse","angle","animationDuration","fixedPath","vaxis","rangle","qFromAngle","final","surfacesFinished","done","arg","exts","sprite","setContext","surfArr","finished","verticesNeedUpdate","elementsNeedUpdate","normalsNeedUpdate","buffersNeedUpdate","mat","needsUpdate","lastGL","smesh","visible","isIdentity","tmeshes","tmesh","getModelList","ms","selm","getAtomsFromSel","getUniqueValues","keys","pdbData","pdbline","zoom","factor","final_z","translate","final_position","translateScene","fitSlab","tmp","maxD","allatoms","alltmp","isEmptyObject","maxDsq","dsq","distanceToSquared","finalpos","zoomTo","atombox","allbox","natoms","MAXD","minimumZoomToDistance","finalz","setSlab","getSlab","text","noshow","extent","_Label__WEBPACK_IMPORTED_MODULE_6__","Label","byframe","applyToModels","removeLabel","removeAllLabels","setLabelStyle","setLabelText","addShape","shapeSpec","_GLShape__WEBPACK_IMPORTED_MODULE_7__","shapePosition","removeShape","removeAllShapes","getSelectionCenter","dashed","addLineDashed","alabel","blabel","clabel","astyle","cstyle","alabelstyle","fontColor","showBackground","alignment","inFront","blabelstyle","clabelstyle","matrix4","multiplyVectors","applyMatrix3","arrow","replicateUnitCell","A","B","addBonds","prune","makeoff","I","omitPosition","invmatrix","getInverse3","newx","newy","newz","dashAmt","gapAmt","dash","gap","drawn","subVectors","_VolumeData__WEBPACK_IMPORTED_MODULE_8__","addVolumetricRender","_VolumetricRender__WEBPACK_IMPORTED_MODULE_10__","GLVolumetricRender","hasVolumetricRender","supportsVolumetric","enableFog","modelMap","getFrame","mostFrames","animate","interval","loop","reps","currFrame","startFrame","inc","timer","displayCount","displayMax","time","direction","isAnimated","cancel","delete","newInterval","getTime","PausableTimer","stopAnimate","pause","resume","getModelOpt","addModel","addModels","multimodel","modelatoms","newModel","addModelsAsFrames","addAsOneMolecule","onemol","removeModel","removeAllModels","exportJSON","modelID","object","savedmodelGroup","createModelFrom","extract","func","value1","value2","value3","value4","value5","addStyle","bothways","getAtomsWithin","atomlist","volume","carveUpExtent","atomstoshow","index2atomlist","atomsToListIndex","copyExtent","splitExtentR","maxVolume","alist","blist","toshow","generateSurfaceMesh","VandF","surfaceColor","atomid","offsetA","norm","offsetB","offsetC","generateMeshSyncHelper","expandedExtent","extendedAtoms","atomsToShow","vol","ps","_ProteinSurface4__WEBPACK_IMPORTED_MODULE_9__","ProteinSurface","initparm","fillvoxels","buildboundary","SurfaceType","SES","MS","fastdistancemap","boundingatom","fillvoxelswaals","marchingcube","getFacesAndVertices","getMatWithStyle","onesided","addMesh","surfobj","surfid","shallowCopy","addSurface","stype","atomsel","allsel","focus","surfacecallback","VDW","surfaceTypeMap","focusSele","symMatrices","addSurfaceHelper","_Gradient__WEBPACK_IMPORTED_MODULE_4__","getGradient","gradient","RWB","colorscheme","totalVol","extents","seleExtent","sort","distSq","ex","sele","reducedAtoms","syncSurface","callSyncHelper","VandFs","vl","mergeGeos","promises","workers","numWorkers","Worker","$3Dmol","SurfaceWorker","postMessage","releaseMemory","worker","terminate","rfunction","efunction","message","filename","lineno","onmessage","onerror","promise","modelsAtomList","modelsAtomsToShow","setSurfaceMaterialStyle","surf","FrontSide","getSurface","removeSurface","removeAllSurfaces","jmolMoveTo","mapAtomProperties","props","numa","linkViewer","otherviewer","getPerceivedDistance","setPerceivedDistance","setAutoEyeSeparation","isright","setDefaultCartoonQuality","createViewer","createViewerGrid","viewer_config","createElement","appendChild","unshift","createStereoViewer","glviewer1","glviewer2","methods","getOwnPropertyNames","__proto__","filter","property","method","SAS","GradientType","normalizeValue","grad","shift","CustomLinear","super","middle","ROYGB","q1","q3","Sinebow","carr","_colors__WEBPACK_IMPORTED_MODULE_0__","stepsize","startpos","endpos","startcol","endcol","_value","_range","LabelCount","getColor","stylealpha","init","scaled","context","getContext","Sprite","getStyle","useScreen","font","fontSize","fontOpacity","borderThickness","backgroundOpacity","borderColor","borderOpacity","spriteAlignment","SpriteAlignment","topLeft","bold","textWidth","measureText","backgroundImage","backgroundWidth","backgroundHeight","clearRect","fillStyle","strokeStyle","backgroundGradient","createLinearGradient","_Gradient__WEBPACK_IMPORTED_MODULE_1__","minmax","cname","addColorStop","lineWidth","ctx","drawBorder","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","stroke","roundRect","drawImage","fillText","texture","Texture","SpriteMaterial","useScreenCoordinates","depthTest","screenOffset","setSyncSurface","navigator","userAgent","MarchingCubeInitializer","edgeTable","triTable","edgeTable2","triTable2","transform","getVertex","code","pt","vpt","etable","tritable","ecode","ttable","numiter","jl","tps","flagvert","vertdeg","aoffset","boffset","coffset","wt2","PointGrid","ix","iy","iz","INOUT","ISBOUND","ptranx","ptrany","ptranz","probeRadius","defaultScaleFactor","pHeight","pWidth","pLength","cutRadius","vpBits","vpDistance","vpAtomID","pminx","pminy","pminz","pmaxx","pmaxy","pmaxz","depty","widxz","getVDWIndex","finalfaces","fa","fb","fc","btype","tradius","sradius","indx","txz","tdept","fillAtom","cx","cy","nind","pWH","ii","jj","kk","mi","mk","mj","si","sj","sk","ox","oy","oz","fillAtomWaals","tj","tk","boundPoint","cutRSq","inarray","outarray","triple","fastoneshell","cutsf","cutoff","tx","ty","tz","square","bp","tnv","marchingcubeinit","lim","vlen","inversematrix","isbinary","getCoordinates","vasp","lines","_parsers_VASP__WEBPACK_IMPORTED_MODULE_2__","VASP","l_units","convFactor","xVec","yVec","zVec","vol_scale","lineArr","multiplyMatrices","makeTranslation","raw","rawArray","preConvertedData","recounts","reorig","redelta","follows","exec","xunit","error","yunit","zunit","xorig","yorig","zorig","_utilities__WEBPACK_IMPORTED_MODULE_0__","base64ToArray","pako__WEBPACK_IMPORTED_MODULE_4__","inflate","mean","diff","variance","getIndex","getInverse","round","cube","_parsers_CUBE__WEBPACK_IMPORTED_MODULE_3__","CUBE","atomsnum","headerlines","ccp4","bin","intView","floatView","dv","MAP","MACHST","NX","NY","NZ","MODE","NXSTART","NYSTART","NZSTART","MX","MY","MZ","xlen","ylen","zlen","MAPC","MAPR","MAPS","DMIN","DMAX","DMEAN","ISPG","NSYMBT","LSKFLG","originX","originY","originZ","ARMS","basisX","basisY","basisZ","nxyz","mapcrs","dimensionorder","interpolateArray","fitCount","linearInterpolate","before","after","atPoint","newData","springFactor","_WebGL_shapes__WEBPACK_IMPORTED_MODULE_0__","subsamples","transferfunctionbuffer","pos1","pos2","R","G","alpha1","alpha2","transferfn","Uint8ClampedArray","xoff","yoff","zoff","maxdepth","minunit","texmatrix","identity","_GLShape__WEBPACK_IMPORTED_MODULE_4__","mask","d2","minx","miny","minz","maxx","maxy","maxz","idx","_WebGL__WEBPACK_IMPORTED_MODULE_2__","transfertexture","flipY","VolumetricMaterial","transfermin","transfermax","_core__WEBPACK_IMPORTED_MODULE_0__","projectionMatrix","_math__WEBPACK_IMPORTED_MODULE_1__","projectionMatrixInverse","matrixWorldInverse","vector","up","rotationAutoUpdate","rotation","setEulerFromRotationMatrix","eulerOrder","makeOrthographic","makePerspective","devicePixelRatio","sortObjects","autoUpdateObjects","autoUpdateScene","info","memory","programs","geometries","textures","calls","_programs","_programs_counter","_webglversion","_currentProgram","_currentMaterialId","_currentGeometryGroupHash","_currentCamera","_geometryGroupCounter","_oldDoubleSided","_oldFlipSided","_oldDepthTest","_oldDepthWrite","_oldPolygonOffset","_oldLineWidth","_viewportWidth","_viewportHeight","_currentWidth","_currentHeight","_enabledAttributes","_vector3","_math__WEBPACK_IMPORTED_MODULE_6__","_worldInverse","_projInverse","_textureMatrix","_fullProjModelMatrix","_fullProjModelMatrixInv","_direction","_lightsNeedUpdate","_lights","directional","positions","distances","spot","directions","anglesCos","exponents","hemi","skyColors","groundColors","sprites","_SpritePlugin__WEBPACK_IMPORTED_MODULE_9__","SpritePlugin","_screenshader","_AOshader","_blurshader","_vertexattribpos","_aovertexattribpos","_blurvertexattribpos","_screenQuadVBO","_fb","_targetTexture","_depthTexture","_shadingTexture","_scratchTexture","_AOstrength","_AOradius","SHADE_TEXTURE","_canvas","_precision","precision","_alpha","_premultipliedAlpha","_antialias","_preserveDrawingBuffer","_clearColor","clearColor","_colors__WEBPACK_IMPORTED_MODULE_4__","_clearAlpha","clearAlpha","_outlineMaterial","_materials__WEBPACK_IMPORTED_MODULE_5__","MeshOutlineMaterial","_outlineSphereImposterMaterial","SphereImposterOutlineMaterial","_outlineStickImposterMaterial","StickImposterOutlineMaterial","_outlineEnabled","_AOEnabled","initGL","setDefaultGLState","_gl","isWebGL1","_extInstanced","getExtension","vertexAttribDivisorANGLE","vertexAttribDivisor","drawElementsInstancedANGLE","drawElementsInstanced","_extFragDepth","_extFloatLinear","_extColorBufferFloat","isContextLost","getPrecision","setHex","wid","hei","enable","SCISSOR_TEST","scissor","viewport","drawingBufferWidth","drawingBufferHeight","initFrameBuffer","depth","stencil","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","setMaterialFaces","reflected","doubleSided","_constants_Sides__WEBPACK_IMPORTED_MODULE_1__","flipSided","BackSide","disable","CULL_FACE","frontFace","CW","CCW","cullFace","BACK","setDepthTest","DEPTH_TEST","setDepthWrite","depthWrite","depthMask","setBlending","blending","BLEND","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","ONE","initMaterial","lights","shaderID","onMaterialDispose","shader","_shaders__WEBPACK_IMPORTED_MODULE_8__","ShaderLib","vertexShader","fragmentShader","uniforms","ShaderUtils","shaded","makeShaded","fragdepth","volumetric","program","buildProgram","renderBuffer","geometryGroup","setProgram","faceCount","lineCount","updateBuffers","wireframeBit","geometryGroupHash","disableAttributes","bindBuffer","ARRAY_BUFFER","__webglVertexBuffer","enableAttribute","vertexAttribPointer","__webglColorBuffer","normal","__webglNormalBuffer","__webglOffsetBuffer","__webglRadiusBuffer","_objects__WEBPACK_IMPORTED_MODULE_7__","sphereGeometryGroup","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","__webglFaceBuffer","TRIANGLES","UNSIGNED_SHORT","setLineWidth","__webglLineBuffer","drawElements","LINES","drawArrays","clearShading","framebufferTexture2D","FRAMEBUFFER","DEPTH_ATTACHMENT","TEXTURE_2D","setShading","materialType","__lights","renderList","__webglObjects","webglObject","COLOR_ATTACHMENT0","renderObjects","useProgram","p_uniforms","uniform1f","total_strength","_modelViewMatrix","uniformMatrix4fv","elements","projinv","enableVertexAttribArray","activeTexture","TEXTURE0","bindTexture","_Camera__WEBPACK_IMPORTED_MODULE_0__","updateMatrixWorld","parent","initWebGLObjects","setFrameBuffer","hasvolumetric","hasAO","setupMatrices","unrollBufferMaterial","renderSprites","renderFrameBuffertoScreen","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MIN_FILTER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","DEPTH_COMPONENT32F","DEPTH_COMPONENT","NEAREST","deleteTexture","createTexture","bindFramebuffer","clearDepth","createFramebuffer","screenshader","screenaa","getAttribLocation","createBuffer","aoshader","ssao","bshader","blur","__webglObjectsImmediate","__webglSprites","__webglFlares","__objectsAdded","addObject","__objectsRemoved","removeObject","ol","updateObject","setTexture","slot","is3D","__webglInit","onTextureDispose","__webglTexture","gltextureType","TEXTURE_3D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","UNPACK_ALIGNMENT","unpackAlignment","PACK_ALIGNMENT","glFormat","paramToGL","glType","setTextureParameters","texImage3D","R32F","image","RED","onUpdate","disableVertexAttribArray","setPolygonOffset","polygonOffset","offsetFactor","offsetUnits","POLYGON_OFFSET_FILL","deallocateGeometry","deleteBuffer","gl","groups","deallocateMaterial","programInfo","deleteProgram","usedTimes","newPrograms","deallocateTexture","__webglTextureCube","onGeometryDispose","removeEventListener","getShader","createShader","FRAGMENT_SHADER","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","pl","chunks","createProgram","identifiers","prefix","prefix_vertex","prefix_fragment","glFragmentShader","glVertexShader","attachShader","linkProgram","getProgramParameter","LINK_STATUS","uniformVar","getUniformLocation","attributeVar","refreshMaterial","m_uniforms","modelViewMatrix","normalMatrix","uniformMatrix3fv","_normalMatrix","viewMatrix","fogColor","fogNear","fogFar","endsWith","setupLights","directionalLightColor","directionalLightDirection","outlineColor","outlineWidth","outlinePushback","getScale","textmat","invscale","TEXTURE5","loadMaterialUniforms","shading","uniformVal","uniformLoc","uniform1i","uniform3fv","uniform3f","uniform4f","createMeshBuffers","createLineBuffers","__webglActive","addBuffer","setBuffers","removeInstances","removeInstancesDirect","objList","globject","opaque","blankMaterial","transparentDepth","opaqueDepth","opaqueShaded","hint","useOffset","objlist","transpose","filterFallback","textureType","magFilter","minFilter","TEXTURE_WRAP_R","_constants_TextureConstants__WEBPACK_IMPORTED_MODULE_2__","UnsignedByteType","RGBAFormat","NearestFilter","ll","light","zlights","dirColors","dirPositions","dirLength","dirOffset","_core__WEBPACK_IMPORTED_MODULE_3__","getPositionFromMatrix","vers","getParameter","VERSION","clearStencil","depthFunc","LEQUAL","blendEquation","blendFunc","useBlending","polygonOffsetFactor","polygonOffsetUnits","isReflected","outmat","vertexBuffer","elementBuffer","_shaders_index__WEBPACK_IMPORTED_MODULE_0__","uvOffset","uvScale","screenPosition","fogType","fogDensity","alphaTest","viewportWidth","viewportHeight","nSprites","halfViewportWidth","halfViewportHeight","oldFogType","sceneFogType","painterSortStable","scaleByViewport","alignx","aligny","_c","uniform2f","_d","_e","_f","_g","_h","_j","_k","uniform2fv","Shading","_math__WEBPACK_IMPORTED_MODULE_0__","Vector2","topCenter","topRight","centerLeft","centerRight","bottomLeft","bottomCenter","bottomRight","ClampToEdgeWrapping","LinearFilter","LinearMipMapLinearFilter","FloatType","RFormat","R32Format","TextureOperations","EventDispatcher","listeners","listenerArray","listener","BUFFERSIZE","GeometryGroup","__inittedArrays","setcolor","getNumVertices","getVertices","_math__WEBPACK_IMPORTED_MODULE_2__","indent","oldindent","_materials_LineBasicMaterial__WEBPACK_IMPORTED_MODULE_0__","_l","_m","_o","_p","_q","_r","_s","_t","reallocatemem","radiusArr","subarray","_EventDispatcher__WEBPACK_IMPORTED_MODULE_1__","radii","hasTangents","dynamic","GeometryIDCount","addVertices","retGroup","setUpNormals","Object3DIDCount","children","matrixWorldNeedsUpdate","__addObject","__removeObject","atan2","lengthxyz","st","updateMatrix","setPosition","setRotationFromEuler","setRotationFromQuaternion","force","child","overrideMaterial","__objects","castShadow","onlyShadow","_colors__WEBPACK_IMPORTED_MODULE_1__","viewProjectionMatrix","applyProjection","descSort","linePrecision","ray","Ray","unproject","transformDirection","setFromMatrixPosition","intersectObject","_shapes__WEBPACK_IMPORTED_MODULE_1__","w_0","matrixPosition","normProj","cylProj","rayProj","closestDistSq","denom","discriminant","s_c","t_c","precisionSq","getMaxScaleOnAxis","isIntersectionSphere","getNormal","b_dot_c","b_sq","c_sq","radiusSq","bondLengthSq","lineProj","distanceToCenter","_EventDispatcher__WEBPACK_IMPORTED_MODULE_2__","TextureIdCount","mapping","_UVMapping__WEBPACK_IMPORTED_MODULE_3__","UVMapping","wrapS","_constants_TextureConstants__WEBPACK_IMPORTED_MODULE_0__","wrapT","anisotropy","repeat","ImposterMaterial","_Material__WEBPACK_IMPORTED_MODULE_4__","Material","emissive","wrapAround","wrapRGB","_math__WEBPACK_IMPORTED_MODULE_3__","lightMap","specularMap","envMap","refractionRatio","wireframeLinecap","wireframeLinejoin","_constants_Shading__WEBPACK_IMPORTED_MODULE_1__","SmoothShading","_constants_Coloring__WEBPACK_IMPORTED_MODULE_0__","NoColors","skinning","setValues","combine","morphTargets","morphNormals","_Material__WEBPACK_IMPORTED_MODULE_1__","linecap","linejoin","_core__WEBPACK_IMPORTED_MODULE_1__","MaterialIdCount","_constants_Sides__WEBPACK_IMPORTED_MODULE_0__","newValue","currentValue","overdraw","sTex","vWidth","vHeight","_MeshLambertMaterial__WEBPACK_IMPORTED_MODULE_1__","_Material__WEBPACK_IMPORTED_MODULE_2__","_math__WEBPACK_IMPORTED_MODULE_4__","pushback","_ImposterMaterial__WEBPACK_IMPORTED_MODULE_0__","_ImposterMaterial__WEBPACK_IMPORTED_MODULE_1__","_core_Texture__WEBPACK_IMPORTED_MODULE_1__","sizeAttenuation","scaleByViewPort","_constants_SpriteAlignment__WEBPACK_IMPORTED_MODULE_0__","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","setFromEuler","c3","s1","s2","s3","mRotation","mScale","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","makeScale","te","me","matrix3FromTopLeft","order","f","ae","af","be","bf","xx","xy","xz","yy","yz","zz","wx","wy","wz","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","snap","digits","rounded","throwOnInvertible","det","msg","m0","m3","m6","m1","m4","m7","m2","m5","m8","scaleXSq","scaleYSq","scaleZSq","makeFrustum","_utils_degToRad__WEBPACK_IMPORTED_MODULE_0__","degToRad","isEqual","isNearlyIdentity","eye","compose","translation","qx","qy","qz","qw","equals","m11","m12","m13","m22","m23","m32","m33","asin","_utils_clamp__WEBPACK_IMPORTED_MODULE_1__","rotateAboutVector","ang","cosang","sinang","term1","term2","term3","mat4","getDeterminant","getMatrix4","optionalTarget","recast","closestPointToPoint","directionDistance","distanceToPoint","isIntersectionCylinder","isIntersectionPlane","plane","distanceToPlane","denominator","constant","intersectPlane","sqr","cosAlpha","cosBeta","cosGamma","sinGamma","degreeToRadiansFactor","deg","_materials__WEBPACK_IMPORTED_MODULE_0__","random","LineStrip","rotation3d","basic","_basic_frag__WEBPACK_IMPORTED_MODULE_1__","_uniforms__WEBPACK_IMPORTED_MODULE_0__","_blur_frag__WEBPACK_IMPORTED_MODULE_1__","_blur_vert__WEBPACK_IMPORTED_MODULE_2__","_basic__WEBPACK_IMPORTED_MODULE_0__","_blur__WEBPACK_IMPORTED_MODULE_14__","_instanced__WEBPACK_IMPORTED_MODULE_1__","lambert","_lambert__WEBPACK_IMPORTED_MODULE_2__","lambertdouble","_lambertdouble__WEBPACK_IMPORTED_MODULE_3__","_outline__WEBPACK_IMPORTED_MODULE_4__","_screen__WEBPACK_IMPORTED_MODULE_5__","_screenaa__WEBPACK_IMPORTED_MODULE_6__","_ssao__WEBPACK_IMPORTED_MODULE_13__","sphereimposter","_sphereimposter__WEBPACK_IMPORTED_MODULE_7__","sphereimposteroutline","_sphereimposteroutline__WEBPACK_IMPORTED_MODULE_8__","_sprite__WEBPACK_IMPORTED_MODULE_9__","stickimposter","_stickimposter__WEBPACK_IMPORTED_MODULE_10__","stickimposteroutline","_stickimposteroutline__WEBPACK_IMPORTED_MODULE_11__","_volumetric__WEBPACK_IMPORTED_MODULE_12__","_instanced_frag__WEBPACK_IMPORTED_MODULE_1__","_instanced_vert__WEBPACK_IMPORTED_MODULE_2__","_lambert_frag__WEBPACK_IMPORTED_MODULE_1__","_lambert_vert__WEBPACK_IMPORTED_MODULE_2__","_lambertdouble_frag__WEBPACK_IMPORTED_MODULE_1__","_lambertdouble_vert__WEBPACK_IMPORTED_MODULE_2__","_outline_frag__WEBPACK_IMPORTED_MODULE_1__","_outline_vert__WEBPACK_IMPORTED_MODULE_2__","_screen_frag__WEBPACK_IMPORTED_MODULE_1__","_screen_vert__WEBPACK_IMPORTED_MODULE_2__","_screenaa_frag__WEBPACK_IMPORTED_MODULE_1__","_screenaa_vert__WEBPACK_IMPORTED_MODULE_2__","_sphereimposter_frag__WEBPACK_IMPORTED_MODULE_1__","_sphereimposteroutline_frag__WEBPACK_IMPORTED_MODULE_1__","_sphereimposteroutline_vert__WEBPACK_IMPORTED_MODULE_2__","_sprite_frag__WEBPACK_IMPORTED_MODULE_1__","_sprite_vert__WEBPACK_IMPORTED_MODULE_2__","_ssao_frag__WEBPACK_IMPORTED_MODULE_1__","_ssao_vert__WEBPACK_IMPORTED_MODULE_2__","_stickimposterFragmentShader_partial_frag__WEBPACK_IMPORTED_MODULE_1__","_stickimposter_partial_frag__WEBPACK_IMPORTED_MODULE_2__","_stickimposter_vert__WEBPACK_IMPORTED_MODULE_3__","_stickimposter_stickimposterFragmentShader_partial_frag__WEBPACK_IMPORTED_MODULE_1__","_stickimposteroutline_vert__WEBPACK_IMPORTED_MODULE_2__","_volumetric_frag__WEBPACK_IMPORTED_MODULE_1__","_volumetric_vert__WEBPACK_IMPORTED_MODULE_2__","colormap","depthmap","uniforms_src","uniforms_clone","srcValue","_clone__WEBPACK_IMPORTED_MODULE_0__","autoinit","processing_autoinit","autoload","dataname","nviewers","querySelectorAll","viewerdiv","datauri","datatypes","uri","UI","dataset","pdb","cid","href","lastIndexOf","molName","divdata","_utilities__WEBPACK_IMPORTED_MODULE_2__","bgcolor","backgroundcolor","bgalpha","backgroundalpha","select","selectstylelist","zoomto","stylere","surfre","reslabre","selname","newsel","styleobj","applyStyles","glviewer","createSelectionAndStyle","sty","_ProteinSurface4__WEBPACK_IMPORTED_MODULE_1__","loadSurface","_GLViewer__WEBPACK_IMPORTED_MODULE_0__","initiateUI","ui","StateManager","textContent","process","moldata","datatype","modelName","setModelTitle","runres","eval","moldataid","molelem","onreadystatechange","readyState","hexval","hexs","trim","rgbRegEx","htmlColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","ssColors","pyMol","Jmol","rasmol","H","He","HE","Li","LI","O","F","Na","NA","Mg","MG","Al","AL","Si","SI","P","S","Cl","CL","Ca","CA","Ti","TI","Cr","CR","Mn","MN","Fe","FE","Ni","NI","Cu","CU","Zn","ZN","Br","BR","Ag","AG","Ba","BA","Au","AU","Be","BE","Ne","NE","Ar","AR","K","Sc","SC","V","Co","CO","Ga","GA","Ge","GE","As","AS","Se","SE","Kr","KR","Rb","RB","Sr","SR","Y","Zr","ZR","Nb","NB","Mo","MO","Tc","TC","Ru","RU","Rh","RH","Pd","PD","Cd","CD","In","IN","Sn","SN","Sb","SB","Te","TE","Xe","XE","Cs","CS","La","LA","Ce","CE","Pr","PR","Nd","ND","Pm","PM","Sm","SM","Eu","EU","Gd","GD","Tb","TB","Dy","DY","Ho","HO","Er","ER","Tm","TM","Yb","YB","Lu","LU","Hf","HF","Ta","TA","W","Re","RE","Os","OS","Ir","IR","Pt","PT","Hg","HG","Tl","TL","Pb","PB","Bi","BI","Po","PO","At","AT","Rn","RN","Fr","FR","Ra","RA","Ac","AC","Th","TH","Pa","PA","U","Np","NP","Pu","PU","Am","AM","Cm","CM","Bk","BK","Cf","CF","Es","ES","Fm","FM","Md","MD","No","NO","Lr","LR","Rf","RF","Db","DB","Sg","SG","Bh","BH","Hs","HS","Mt","MT","greenCarbon","cyanCarbon","magentaCarbon","yellowCarbon","whiteCarbon","orangeCarbon","purpleCarbon","blueCarbon","residues","amino","ALA","ARG","ASN","ASP","CYS","GLN","GLU","GLY","HIS","ILE","LEU","LYS","MET","PHE","PRO","SER","THR","TRP","TYR","VAL","ASX","GLX","shapely","nucleic","T","chains","D","E","J","L","Q","X","Z","hetatm","builtinColorSchemes","ssPyMol","ssJmol","default","chainHetatm","_points","DIV","p0","p3","smoothen","np","coilWidth","helixSheetWidth","nucleicAcidWidth","defaultThickness","baseThickness","drawThinStrip","vertoffset","colori","drawStrip","thickness","p1v","p2v","a1v","a2v","currentAtom","lastAtom","face1","face2","face3","vs","toNext","diffAtoms","vsize","drawPlainStrip","num","cs_shape","cs_bottom","cs_top","last_cs_bottom","last_cs_top","cs_ellipse","cs_rectangle","cs_parabola","v_offset","va_offset","f_offset","face_refs","gnum","replicating","toSide","drawShapeStrip","isAlphaCarbon","inConnectedResidues","reschain","setGeo","cartoonMaterial","FaceColors","cartoonMesh","addBackbonePoints","backbonePt","orientPt","prevOrientPt","backboneAtom","atomi","widthScalar","addArrowPoints","testStyle","sideVec","forwardVec","ss","adjustment","upVec","ribbon","tubes","purResns","pyrResns","naResns","gradientrange","currColor","nextColor","terminalPt","termOrientPt","baseStartPt","baseEndPt","tubeStart","tubeEnd","drawingTube","shapeGeo","gradients","_Gradient__WEBPACK_IMPORTED_MODULE_3__","cartoonColor","sinebow","inSheet","inHelix","connected","arrows","flushGeom","connect","saved","savedc","nextresn","inNucleicAcid","isNumeric","_GLDraw__WEBPACK_IMPORTED_MODULE_5__","midpoint","rescode","startFix","__webpack_exports__","Connectivity","comp_bond","ids","getField","a1s","a2s","orders","a1","a2","oname","StructConn","struct_conn","chain1","resi1","resn1","chain2","resi2","resn2","bo","Residues","lchain","lresi","lresn","geta","_ref","ch","aname","setBonds","conn","BCIF","bindata","noH","keepH","selAltLoc","altLoc","computeStruct","noComputeSecondaryStructure","noAssembly","doAssembly","assignbonds","bcifData","MMTF","decodeMsgpack","numModels","dataBlocks","startm","serialToIndex","block","cats","create","cat","categories","substr","_cifutils_category__WEBPACK_IMPORTED_MODULE_3__","Category","sslookup","sshelix","struct_conf","htypes","hchain","hstart","hend","startResi","endResi","res","sssheet","struct_sheet_range","sids","schain","sstart","send","structops","pdbx_struct_oper_list","opids","matrix11","matrix12","matrix13","matrix21","matrix22","matrix23","matrix31","matrix32","matrix33","vector1","vector2","vector3","_WebGL__WEBPACK_IMPORTED_MODULE_5__","chem_comp_bond","sconnect","asites","atom_site","rowCount","group_pdb","cartn_x","cartn_y","cartn_z","auth_asym_id","label_asym_id","auth_seq_id","label_seq_id","auth_comp_id","label_comp_id","auth_atom_id","label_atom_id","type_symbol","bfactors","serials","icodes","modelnums","curmodel","icode","_utils_isEmpty__WEBPACK_IMPORTED_MODULE_6__","isEmpty","matoms","ssbegin","ssend","dontConnectDuplicatedAtoms","_utils_assignPDBBonds__WEBPACK_IMPORTED_MODULE_4__","assignPDBBonds","_utils_computeSecondaryStructure__WEBPACK_IMPORTED_MODULE_1__","computeSecondaryStructure","hbondCutoff","_utils_processSymmetries__WEBPACK_IMPORTED_MODULE_2__","processSymmetries","CDJSON","molecules","atomsInFile","bondsInFile","styles","parseStyle","currentBond","beginIndex","endIndex","fractionalToCartesian","cmat","CIF","splitRespectingQuotes","separator","sections","sectionStart","sectionEnd","linesFiltered","trimDisabled","lineNum","mmCIF","dataItemName","dataItem","restOfLine","dataBlock","dataItems","currentDataItem","field","_atom_site_id","_atom_site_label","conversionMatrix","_cell_length_a","_cell_length_b","_cell_length_c","alpha_deg","_cell_angle_alpha","beta_deg","_cell_angle_beta","gamma_deg","_cell_angle_gamma","_atom_site_group_pdb","_atom_site_cartn_x","_atom_site_cartn_y","_atom_site_cartn_z","_atom_site_fract_x","_atom_site_fract_y","_atom_site_fract_z","_atom_site_auth_asym_id","_atom_site_label_asym_id","_atom_site_auth_seq_id","_atom_site_label_seq_id","_atom_site_auth_comp_id","_atom_site_label_comp_id","_atom_site_auth_atom_id","_atom_site_label_atom_id","_atom_site_b_iso_or_equiv","_atom_site_type_symbol","_pdbx_struct_oper_list_id","parseTerm","term","negative","fractionParts","numerator","_symmetry_equiv_pos_as_xyz","sym","componentStrings","terms","coefficient","conversionMatrix4","conversionInverse","_utils_assignPDBBonds__WEBPACK_IMPORTED_MODULE_3__","_utils_computeSecondaryStructure__WEBPACK_IMPORTED_MODULE_0__","_utils_processSymmetries__WEBPACK_IMPORTED_MODULE_1__","tokens","_utils_anumToSymbol__WEBPACK_IMPORTED_MODULE_2__","anumToSymbol","_utils_assignBonds__WEBPACK_IMPORTED_MODULE_1__","GRO","_utils_atomNameToElem__WEBPACK_IMPORTED_MODULE_1__","atomNameToElem","_utils_assignPDBBonds__WEBPACK_IMPORTED_MODULE_0__","dic","xu","xs","xsu","yu","ys","ysu","zu","zs","zsu","LAMMPSTRJ","_utils_assignBonds__WEBPACK_IMPORTED_MODULE_0__","charCodeArray","convertSS","mmtfHETATMtypes","MMTFparser","ignoreStruct","noSecondaryStructure","assemblyIndex","kl","mmtfData","chainIndex","groupIndex","atomIndex","secStructList","bFactorList","altLocList","occupancyList","bondAtomList","bondOrderList","bioAssemblyList","transforms","transformList","_WebGL__WEBPACK_IMPORTED_MODULE_1__","unitCell","chainIsPolymer","entityList","entity","chainIndexList","bondAtomListStart","modelChainCount","chainsPerModel","chainGroupCount","groupsPerChain","chainId","chainIdList","chainNameList","startGroup","prevSS","groupData","groupList","groupTypeList","groupAtomCount","atomNameList","secStruct","secStructBegin","secStructEnd","sscode","nextgroup","groupId","groupIdList","groupName","groupType","chemCompType","startAtom","isHETATM","elementList","bFactor","occupancy","atomId","atomIdList","atomName","atomCharge","atomChargeList","xCoord","xCoordList","yCoord","yCoordList","zCoord","zCoordList","charge","groupBondAtomList","atomIndex1","atomIndex2","i1","_utils_processSymmetries__WEBPACK_IMPORTED_MODULE_3__","_utils_computeSecondaryStructure__WEBPACK_IMPORTED_MODULE_2__","SYBYLtoElem","MOL2","mol_pos","atom_pos","partialCharge","bonds_found","fromAtom","toAtom","PDB","pdbinfo","_utils_getSinglePDB__WEBPACK_IMPORTED_MODULE_0__","getSinglePDB","PQR","PRMTOP","sectionList","getColEleSize","noOfCol","section","isInteger","numberOfCol","elementSize","parseV2000","bondCount","parseV3000","counts","atomParts","bondParts","SDF","molformat","lattice","atomSymbols","atomSpeciesNumber","vaspMode","selective","atomCounter","atomSymbol","atomLen","XYZ","lattice_match","columns","fieldNames","_decoder__WEBPACK_IMPORTED_MODULE_0__","IsNativeEndianLittle","current","decodeStep","kind","_encoding__WEBPACK_IMPORTED_MODULE_0__","Encoding","IntDataType","Uint8","Int8","Int16","Uint16","Int32","Uint32","FloatDataType","Float32","Float64","output","getFloatArray","srcType","fixedPoint","numSteps","intervalQuantization","getIntArray","srcSize","dataOffset","runLength","isUnsigned","upperLimit","byteCount","integerPackingUnsigned","lowerLimit","integerPackingSigned","integerPacking","offsets","offsetEncoding","indices","dataEncoding","stringData","strings","_i","stringArray","byteSize","flipByteOrder","getDataType","isSignedIntegerDataType","_VASP__WEBPACK_IMPORTED_MODULE_0__","_CUBE__WEBPACK_IMPORTED_MODULE_1__","xyz","_XYZ__WEBPACK_IMPORTED_MODULE_2__","sdf","_SDF__WEBPACK_IMPORTED_MODULE_3__","json","_CDJSON__WEBPACK_IMPORTED_MODULE_4__","cdjson","mcif","_CIF__WEBPACK_IMPORTED_MODULE_5__","cif","mol2","_MOL2__WEBPACK_IMPORTED_MODULE_6__","_PDB__WEBPACK_IMPORTED_MODULE_7__","pdbqt","PDBQT","pqr","_PQR__WEBPACK_IMPORTED_MODULE_8__","mmtf","_MMTF__WEBPACK_IMPORTED_MODULE_9__","prmtop","_PRMTOP__WEBPACK_IMPORTED_MODULE_10__","gro","_GRO__WEBPACK_IMPORTED_MODULE_11__","lammpstrj","_LAMMPSTRJ__WEBPACK_IMPORTED_MODULE_12__","bcif","_BCIF__WEBPACK_IMPORTED_MODULE_13__","cations","areConnected","unboundCations","maxsq","_bondLength__WEBPACK_IMPORTED_MODULE_0__","bondLength","zdiff","distSquared","assignBackboneHBonds","atomsarray","maxlength","maxlengthSq","hbondOther","hbondDistanceSq","ai","aj","OFFSETS","MAX_BOND_LENGTH","grid","findConnections","otherPoints","_areConnected__WEBPACK_IMPORTED_MODULE_0__","a2i","a1i","xg","yg","zg","protatoms","hetatoms","_standardResidues__WEBPACK_IMPORTED_MODULE_2__","standardResidues","_assignBonds__WEBPACK_IMPORTED_MODULE_1__","lastResConnected","currentResi","nothetero","bondTable","setBondLength","_assignBackboneHBonds__WEBPACK_IMPORTED_MODULE_0__","chres","isFinite","valbefore","valafter","otherval","remainingLines","seenbonds","startChain","_bondLength__WEBPACK_IMPORTED_MODULE_2__","_atomNameToElem__WEBPACK_IMPORTED_MODULE_1__","fromindex","coffsets","toindex","from_to","bi","newbo","anisouAtom","uMat","u11","u22","u33","u12","u13","u23","_validateBonds__WEBPACK_IMPORTED_MODULE_7__","validateBonds","_assignPDBBonds__WEBPACK_IMPORTED_MODULE_6__","_processSymmetries__WEBPACK_IMPORTED_MODULE_5__","_computeSecondaryStructure__WEBPACK_IMPORTED_MODULE_3__","_isEmpty__WEBPACK_IMPORTED_MODULE_4__","_","copyMatrices","dontDuplicate","modifiedIdentity","toFrac","normalizeAssembly","wrapAtoms","getAdjustment","adjustmentVec","newXYZ","bondsArr","partialCharges","applyPartialCharges","keepexisting","obj1","src1","inObject","outObject","volformat","_VolumeData__WEBPACK_IMPORTED_MODULE_1__","_Gradient__WEBPACK_IMPORTED_MODULE_0__","ignoreSymmetries","xsum","ysum","zsum","includeSym","fn","countdown","total_time_run","start_time","ident","base64","binary_string","atob","meshGeo","massage","fields","fv","vstr","kvs","kv","checkStatus","response","ok","status","statusText","fetch","request","postdata","download","query","pdbUri","alert","handler","ccolor","newscheme","colorfunc","tostring","pako__WEBPACK_IMPORTED_MODULE_3__","UPNG","module","exports","pako","tabs","acTL","decodeImage","frms","empty","frm","fx","fy","fw","fh","fdata","blend","_copyTile","pi","area","bpp","_getBPP","bpl","bf32","ctype","_bin","readUshort","qarea","ts","tr","tg","tb","qi","ap","tl","s0","t0","cj","gr","di","al","buff","fd","rUs","rUi","readUint","dd","doff","mgck","readASCII","_IHDR","num_frames","num_plays","_decompress","rct","del","delay","nz","nextZero","keyw","off","readUTF8","compress","interlace","_inflate","_filterZero","_readInterlace","cbpp","starting_row","starting_col","row_increment","col_increment","pass","ri","ci","sw","sh","cr","bpll","cdi","paeth","_paeth","pa","pc","writeUshort","writeUint","writeASCII","arr","pad","ns","decodeURIComponent","sb","tw","th","fg","ba","br","bg","bb","ifa","oa","ioa","bufs","dels","forbidPlte","wr","crc","wUi","wUs","wAs","nimg","compressPNG","anim","dl","plte","gotAlpha","fi","imgd","cimg","ioff","nh","forGIF","alphaAnd","ilen","cmap","qres","quantize","est","rgba","img32","brute","cimg32","nx","ny","nw","tlim","tstp","tarea","it","pimg","p32","mix","miy","may","sarea","fls","_filterLine","tsize","table","tab","buf","roundAlpha","imgs","totl","alphaMul","nimg32","noff","root","i0","bst","tdst","stats","estats","leafs","maxL","node","splitPixels","eMq255","ln","rn","planeDst","nd","getNearest","node0","node1","eMq","d0","d1","d3","vecDot","iN","Rj","M4","tmi","multVec","sml","ia","Cov","roundA","__webpack_require__","zlib_deflate","utils","ZStream","Z_OK","Z_DEFAULT_COMPRESSION","Z_DEFAULT_STRATEGY","Z_DEFLATED","Deflate","level","chunkSize","windowBits","memLevel","strategy","opt","gzip","ended","strm","avail_out","deflateInit2","deflateSetHeader","dictionary","dict","string2buf","deflateSetDictionary","_dict_set","deflate","input","deflator","_mode","next_in","avail_in","Buf8","next_out","onEnd","onData","buf2binstring","shrinkBuf","deflateEnd","chunk","flattenChunks","deflateRaw","zlib_inflate","GZheader","Inflate","inflateInit2","inflateGetHeader","inflateSetDictionary","inflator","next_out_utf8","tail","utf8str","allowBufError","Z_FINISH","Z_NO_FLUSH","binstring2buf","Z_NEED_DICT","Z_BUF_ERROR","Z_STREAM_END","Z_SYNC_FLUSH","utf8border","buf2string","arraySet","inflateEnd","inflateRaw","ungzip","TYPED_OK","_has","sources","source","fnTyped","dest","src","src_offs","dest_offs","fnUntyped","setTyped","on","Buf16","Buf32","STR_APPLY_OK","STR_APPLY_UIA_OK","__","_utf8len","m_pos","str_len","buf_len","c_len","utf16buf","adler","Z_PARTIAL_FLUSH","Z_FULL_FLUSH","Z_BLOCK","Z_TREES","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_BINARY","Z_TEXT","Z_UNKNOWN","crcTable","makeTable","configuration_table","trees","adler32","crc32","MAX_MEM_LEVEL","L_CODES","LITERALS","D_CODES","BL_CODES","HEAP_SIZE","MAX_BITS","MIN_MATCH","MAX_MATCH","MIN_LOOKAHEAD","INIT_STATE","HCRC_STATE","BUSY_STATE","FINISH_STATE","BS_NEED_MORE","BS_BLOCK_DONE","BS_FINISH_STARTED","BS_FINISH_DONE","errorCode","rank","zero","flush_pending","pending","pending_buf","pending_out","total_out","flush_block_only","last","_tr_flush_block","block_start","strstart","put_byte","putShortMSB","read_buf","wrap","total_in","longest_match","cur_match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","w_size","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","more","_w_size","window_size","hash_size","head","insert","ins_h","hash_shift","hash_mask","deflate_fast","flush","hash_head","bflush","match_length","_tr_tally","max_lazy_match","last_lit","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","DeflateState","pending_buf_size","gzhead","gzindex","last_flush","w_bits","hash_bits","dyn_ltree","dyn_dtree","bl_tree","l_desc","d_desc","bl_desc","bl_count","heap","heap_len","heap_max","l_buf","lit_bufsize","d_buf","opt_len","static_len","matches","bi_buf","bi_valid","deflateResetKeep","data_type","_tr_init","deflateReset","max_block_size","max_start","deflateInit","old_flush","beg","hcrc","comment","os","bstate","deflate_huff","deflate_rle","_tr_align","_tr_stored_block","avail","tmpDict","dictLength","deflateInfo","xflags","extra_len","_in","_out","dmax","wsize","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","from_source","lencode","distcode","lenbits","distbits","dolen","dodist","sane","inflate_fast","inflate_table","LENS","DISTS","HEAD","TYPE","BAD","ENOUGH_LENS","ENOUGH_DISTS","zswap32","InflateState","havedict","flags","check","wbits","ncode","nlen","ndist","have","lens","work","lendyn","distdyn","was","inflateResetKeep","inflateReset","inflateReset2","lenfix","distfix","virgin","fixedtables","updatewindow","inflateInit","put","here_bits","here_op","here_val","last_bits","last_op","last_val","opts","hbuf","inf_leave","inflateInfo","MAXBITS","lbase","lext","dbase","dext","lens_index","codes","table_index","incr","low","drop","used","huff","base","base_index","offs","extra_index","STORED_BLOCK","LENGTH_CODES","Buf_size","MAX_BL_BITS","END_BLOCK","REP_3_6","REPZ_3_10","REPZ_11_138","extra_lbits","extra_dbits","extra_blbits","bl_order","static_ltree","static_dtree","_dist_code","_length_code","base_length","static_l_desc","static_d_desc","static_bl_desc","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","TreeDesc","dyn_tree","stat_desc","max_code","d_code","put_short","send_bits","send_code","tree","bi_reverse","gen_codes","next_code","init_block","bi_windup","smaller","_n2","_m2","pqdownheap","compress_block","ltree","dtree","lc","lx","build_tree","desc","stree","xbits","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","max_count","min_count","send_tree","static_init_done","stored_len","copy_block","tr_static_init","opt_lenb","static_lenb","max_blindex","black_mask","detect_data_type","build_bl_tree","lcodes","dcodes","blcodes","send_all_trees","STATIC_TREES","bi_flush","workerString","oEvent","atomData","URL","createObjectURL","rr","insCodeList","sequenceIndexList","ignoreFields","nr","firstModelOnly","onModel","onChain","onGroup","onAtom","onBond","chainCount","modelIndex","groupCount","chainName","singleLetterCode","insCode","sequenceIndex","formalCharge","formalChargeList","XMLHttpRequest","responseType","open","$","or","ar","er","ir","traverse","fetchReduced","fetchUrl","fetchReducedUrl","encodeMsgpack","encodeMmtf","decodeMmtf","zero$1","LITERALS$1","L_CODES$1","D_CODES$1","MAX_BITS$1","MAX_MATCH$1","sym_next","sx","sym_buf","_tr_stored_block$1","_tr_flush_block_1","_tr_flush_block$1","block_mask","BL_CODES$1","LENGTH_CODES$1","_tr_tally$1","sym_end","adler32_1","crc32_1","messages","constants$2","Z_MEM_ERROR","Z_NO_FLUSH$2","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$2","slide_hash","HASH","HASH_ZLIB","deflate_stored","min_block","high_water","deflateStateCheck","deflate_1$2","deflate$2","level_flags","gzhead_extra","common","zstream","toString$1","Z_NO_FLUSH$1","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFLATED$1","Deflate$1","deflate$1","flush_mode","_flush_mode","deflate_1$1","constants","BAD$1","inffast","inftrees","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","DICT","TYPEDO","COPY_","LEN_","LEN","CHECK","inflateStateCheck","inflate_1$2","inflate$2","dictid","gzheader","Inflate$1","inflate$1","last_avail_out","inflate_1$1","Deflate_1","deflate_1","deflateRaw_1","gzip_1","Inflate_1","inflate_1","inflateRaw_1","ungzip_1","constants_1","__webpack_module_cache__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","definition","enumerable","Symbol","toStringTag","aa","require","ca","encodeURIComponent","da","ea","ha","ja","ka","la","ma","acceptsBooleans","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","ra","sa","ta","qa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","ua","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","for","wa","ya","za","Aa","Da","Ea","Fa","Ha","Ia","Ja","iterator","Ka","Ma","Oa","prepareStackTrace","Reflect","construct","displayName","tag","Qa","$$typeof","_context","_payload","_init","Sa","nodeName","Va","_valueTracker","getOwnPropertyDescriptor","configurable","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","cb","db","eb","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","kb","lb","mb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","orphans","tabSize","widows","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","setProperty","charAt","menuitem","embed","hr","keygen","link","meta","param","track","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","onError","Ob","Qb","Vb","alternate","return","Wb","memoizedState","dehydrated","Xb","Zb","sibling","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","unstable_shouldYield","dc","unstable_requestPaint","unstable_now","ec","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","oc","clz32","qc","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","eventTimes","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Pc","Qc","Rc","pointerId","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","ed","transition","gd","hd","Uc","stopPropagation","jd","kd","ld","md","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","cancelBubble","persist","isPersistent","sd","eventPhase","bubbles","cancelable","timeStamp","isTrusted","td","ud","vd","Ad","altKey","metaKey","getModifierState","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Od","Alt","Control","Meta","Shift","Qd","location","locale","Rd","Td","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","Xd","Yd","wheelDeltaX","wheelDeltaY","deltaZ","deltaMode","Zd","$d","documentMode","ce","de","ee","fe","ge","he","ie","le","date","datetime","email","month","number","password","tel","week","ne","oe","pe","qe","re","se","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","attachEvent","De","Ee","Ie","Je","Ke","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","contentEditable","Oe","focusedElem","selectionRange","selectionStart","selectionEnd","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","scrollLeft","scrollTop","Pe","Qe","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Ye","Ze","animation","$e","cf","df","ef","ff","gf","hf","lf","mf","Ub","instance","of","pf","qf","rf","sf","capture","tf","uf","parentWindow","vf","wf","na","xa","$a","je","char","ke","xf","yf","zf","Af","Bf","Df","Ef","__html","Ff","Gf","Jf","queueMicrotask","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","childContextTypes","$f","ag","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","ug","vg","wg","Bg","elementType","deletions","Cg","pendingProps","treeContext","retryLane","Dg","Eg","Fg","Gg","memoizedProps","Ig","Jg","Kg","Lg","ref","_owner","_stringRef","refs","Ng","Og","Pg","Qg","Rg","implementation","Tg","Ug","Vg","Wg","Xg","Yg","Zg","$g","ah","_currentValue","bh","childLanes","dependencies","firstContext","lanes","dh","eh","memoizedValue","gh","hh","interleaved","ih","jh","kh","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","effects","lh","mh","eventTime","lane","payload","oh","ph","qh","rh","uh","vh","wh","xh","yh","tagName","zh","Ah","Ch","revealOrder","Dh","Eh","_workInProgressVersionPrimary","Fh","ReactCurrentDispatcher","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Sh","baseQueue","queue","Uh","Vh","Wh","lastRenderedReducer","action","hasEagerState","eagerState","lastRenderedState","dispatch","Xh","Yh","Zh","$h","getSnapshot","lastEffect","stores","ei","gi","destroy","deps","ji","ki","ni","oi","wi","yi","zi","Ai","readContext","useCallback","useContext","useEffect","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ci","defaultProps","Di","Ei","isMounted","_reactInternals","enqueueSetState","enqueueReplaceState","enqueueForceUpdate","Fi","shouldComponentUpdate","isPureReactComponent","Gi","contextType","updater","Hi","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","Ii","getDerivedStateFromProps","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","Ji","digest","Ki","Mi","WeakMap","Oi","Pi","Qi","getDerivedStateFromError","componentDidCatch","Ri","componentStack","pingCache","Ui","Vi","Wi","ReactCurrentOwner","Xi","Yi","Zi","$i","compare","bj","dj","baseLanes","cachePool","transitions","ej","fj","gj","hj","ij","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","pendingContext","lj","zj","Aj","Bj","Cj","nj","oj","fallback","pj","qj","dgst","uj","_reactRetry","rj","subtreeFlags","vj","wj","isBackwards","rendering","renderingStartTime","tailMode","xj","Dj","Ej","Fj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","createElementNS","autoFocus","createTextNode","Gj","Hj","Ij","Jj","Kj","WeakSet","Lj","Mj","Nj","Pj","Qj","Sj","Tj","Uj","Vj","insertBefore","_reactRootContainer","Wj","Xj","Yj","Zj","onCommitFiberUnmount","componentWillUnmount","ak","bk","ck","dk","ek","isHidden","fk","gk","hk","ik","jk","__reactInternalSnapshotBeforeUpdate","Vk","lk","nk","pk","qk","rk","uk","vk","wk","xk","yk","zk","Ak","Ck","Dk","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Ek","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","finishedWork","finishedLanes","Pk","timeoutHandle","Qk","Rk","Sk","Tk","Uk","mutableReadLanes","Bc","Oj","onCommitFiberRoot","mc","onRecoverableError","Wk","onPostCommitFiberRoot","Xk","Yk","$k","isReactComponent","pendingChildren","mutableSourceEagerHydrationData","bl","pendingSuspenseBoundaries","el","fl","hl","yj","Zk","reportError","_internalRoot","ml","nl","rl","ql","unmount","unstable_scheduleHydration","form","sl","usingClientEntryPoint","Events","findFiberByHostInstance","bundleType","rendererPackageName","ul","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","isDisabled","supportsFiber","inject","createPortal","cl","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","__self","__source","jsx","jsxs","setState","forceUpdate","escape","_status","_result","Children","only","Component","Fragment","Profiler","PureComponent","StrictMode","Suspense","act","cloneElement","createContext","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","lazy","memo","startTransition","unstable_act","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","scheduling","isInputPending","MessageChannel","port2","port1","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","unstable_wrapCallback","chunkId","reduce","miniCssF","inProgress","dataWebpackPrefix","script","needAttach","scripts","charset","timeout","nc","onScriptComplete","doneFns","installedChunks","installedChunkData","errorType","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","some","chunkLoadingGlobal","elementDict","convertAtomicNumbersToSymbols","parts","atomicNumber","symbol","XYZMoleculeViewer","xyzData","viewerRef","_jsx","className","Main","setXyzData","showViewer","setShowViewer","_jsxs","onSubmit","cleanedData","parts_lines","cleanXyzData","htmlFor","onChange","placeholder","required","handleReset","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById","React","App","reportWebVitals"],"sourceRoot":""}